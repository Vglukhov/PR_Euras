USE [master]
GO
/****** Object:  Database [PR_Euras]    Script Date: 08/10/2015 12:55:47 ******/
CREATE DATABASE [PR_Euras] ON  PRIMARY 
( NAME = N'Prodresurs_6_dat', FILENAME = N'J:\SQLData\PR_Euras_.mdf' , SIZE = 105220288KB , MAXSIZE = UNLIMITED, FILEGROWTH = 10%)
 LOG ON 
( NAME = N'Prodresurs_6_log', FILENAME = N'J:\SQLData\PR_Euras_.ldf' , SIZE = 71723840KB , MAXSIZE = UNLIMITED, FILEGROWTH = 25%)
GO
ALTER DATABASE [PR_Euras] ADD FILEGROUP [HISTORY]
GO
ALTER DATABASE [PR_Euras] SET COMPATIBILITY_LEVEL = 100
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [PR_Euras].[dbo].[sp_fulltext_database] @action = 'disable'
end
GO
ALTER DATABASE [PR_Euras] SET ANSI_NULL_DEFAULT OFF
GO
ALTER DATABASE [PR_Euras] SET ANSI_NULLS OFF
GO
ALTER DATABASE [PR_Euras] SET ANSI_PADDING OFF
GO
ALTER DATABASE [PR_Euras] SET ANSI_WARNINGS OFF
GO
ALTER DATABASE [PR_Euras] SET ARITHABORT OFF
GO
ALTER DATABASE [PR_Euras] SET AUTO_CLOSE OFF
GO
ALTER DATABASE [PR_Euras] SET AUTO_CREATE_STATISTICS ON
GO
ALTER DATABASE [PR_Euras] SET AUTO_SHRINK OFF
GO
ALTER DATABASE [PR_Euras] SET AUTO_UPDATE_STATISTICS ON
GO
ALTER DATABASE [PR_Euras] SET CURSOR_CLOSE_ON_COMMIT OFF
GO
ALTER DATABASE [PR_Euras] SET CURSOR_DEFAULT  GLOBAL
GO
ALTER DATABASE [PR_Euras] SET CONCAT_NULL_YIELDS_NULL OFF
GO
ALTER DATABASE [PR_Euras] SET NUMERIC_ROUNDABORT OFF
GO
ALTER DATABASE [PR_Euras] SET QUOTED_IDENTIFIER OFF
GO
ALTER DATABASE [PR_Euras] SET RECURSIVE_TRIGGERS OFF
GO
ALTER DATABASE [PR_Euras] SET  DISABLE_BROKER
GO
ALTER DATABASE [PR_Euras] SET AUTO_UPDATE_STATISTICS_ASYNC OFF
GO
ALTER DATABASE [PR_Euras] SET DATE_CORRELATION_OPTIMIZATION OFF
GO
ALTER DATABASE [PR_Euras] SET TRUSTWORTHY OFF
GO
ALTER DATABASE [PR_Euras] SET ALLOW_SNAPSHOT_ISOLATION OFF
GO
ALTER DATABASE [PR_Euras] SET PARAMETERIZATION SIMPLE
GO
ALTER DATABASE [PR_Euras] SET READ_COMMITTED_SNAPSHOT OFF
GO
ALTER DATABASE [PR_Euras] SET HONOR_BROKER_PRIORITY OFF
GO
ALTER DATABASE [PR_Euras] SET  READ_WRITE
GO
ALTER DATABASE [PR_Euras] SET RECOVERY SIMPLE
GO
ALTER DATABASE [PR_Euras] SET  MULTI_USER
GO
ALTER DATABASE [PR_Euras] SET PAGE_VERIFY TORN_PAGE_DETECTION
GO
ALTER DATABASE [PR_Euras] SET DB_CHAINING OFF
GO
EXEC sys.sp_db_vardecimal_storage_format N'PR_Euras', N'ON'
GO
USE [PR_Euras]
GO
/****** Object:  User [wms]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [wms] FOR LOGIN [wms] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [vt1]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [vt1] FOR LOGIN [vt] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [vt]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [vt] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[vt]
GO
/****** Object:  User [user_VBD]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [user_VBD] FOR LOGIN [user_VBD] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [TesterBonus]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [TesterBonus] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [test]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [test] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [stuser]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [stuser] FOR LOGIN [MAIN\stuser] WITH DEFAULT_SCHEMA=[stuser]
GO
/****** Object:  User [STMT\Гость]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [STMT\Гость] FOR LOGIN [STMT\Гость] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [STMT\Администратор]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [STMT\Администратор] FOR LOGIN [STMT\Администратор] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [STMT\Reports]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [STMT\Reports] FOR LOGIN [STMT\Reports]
GO
/****** Object:  User [sqlxml]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [sqlxml] FOR LOGIN [sqlxml] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [SQL PR_Pred1 users]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [SQL PR_Pred1 users] FOR LOGIN [MAIN\SQL PR_Pred1 users]
GO
/****** Object:  User [SQL PR_EurasSur users]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [SQL PR_EurasSur users] FOR LOGIN [MAIN\SQL PR_EurasSur users]
GO
/****** Object:  User [SQL PR_Euras users]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [SQL PR_Euras users] FOR LOGIN [MAIN\SQL PR_Euras users]
GO
/****** Object:  User [SERVSQL$]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [SERVSQL$] FOR LOGIN [MAIN\SERVSQL$] WITH DEFAULT_SCHEMA=[SERVSQL$]
GO
/****** Object:  User [rutest]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [rutest] FOR LOGIN [rutest] WITH DEFAULT_SCHEMA=[rutest]
GO
/****** Object:  User [robot]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [robot] FOR LOGIN [MAIN\robot] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [reports]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [reports] FOR LOGIN [reports] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [optima_user]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [optima_user] FOR LOGIN [optima_user] WITH DEFAULT_SCHEMA=[optima_user]
GO
/****** Object:  User [nefis]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [nefis] FOR LOGIN [nefis] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [MS Reports]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MS Reports] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [MAIN\tulkina]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\tulkina] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [MAIN\SQL Trusts]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\SQL Trusts] FOR LOGIN [MAIN\SQL Trusts]
GO
/****** Object:  User [MAIN\SQL TestNak users]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\SQL TestNak users] FOR LOGIN [MAIN\SQL TestNak users]
GO
/****** Object:  User [MAIN\selyanina]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\selyanina] FOR LOGIN [MAIN\selyanina] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [MAIN\pokos]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\pokos] FOR LOGIN [MAIN\pokos] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [MAIN\paseka]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\paseka] FOR LOGIN [MAIN\paseka] WITH DEFAULT_SCHEMA=[MAIN\paseka]
GO
/****** Object:  User [MAIN\market2]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\market2] FOR LOGIN [MAIN\market2] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [MAIN\luchvn]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\luchvn] FOR LOGIN [MAIN\luchvn] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [MAIN\fedyakov]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\fedyakov] FOR LOGIN [MAIN\fedyakov] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [MAIN\demina]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\demina] FOR LOGIN [MAIN\demina] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [MAIN\cheremnix]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\cheremnix] FOR LOGIN [MAIN\cheremnix] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [MAIN\atulkina]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [MAIN\atulkina] FOR LOGIN [MAIN\tulkina] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [linkedserver]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [linkedserver] FOR LOGIN [linkedserver] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [holmogorova]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [holmogorova] FOR LOGIN [MAIN\holmogorova] WITH DEFAULT_SCHEMA=[holmogorova]
GO
/****** Object:  User [fofonova]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [fofonova] FOR LOGIN [MAIN\fofonova] WITH DEFAULT_SCHEMA=[fofonova]
GO
/****** Object:  User [ExportSWE]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [ExportSWE] FOR LOGIN [ExportSWE] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [es]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [es] FOR LOGIN [es] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [Domain Admins]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [Domain Admins] FOR LOGIN [MAIN\Domain Admins]
GO
/****** Object:  User [bonus]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [bonus] FOR LOGIN [bonus] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [atest]    Script Date: 08/10/2015 12:55:47 ******/
CREATE USER [atest] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[atest]
GO
/****** Object:  Schema [xmt]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [xmt] AUTHORIZATION [dbo]
GO
/****** Object:  Schema [wms]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [wms] AUTHORIZATION [dbo]
GO
/****** Object:  Schema [WBD]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [WBD] AUTHORIZATION [dbo]
GO
/****** Object:  Schema [vt]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [vt] AUTHORIZATION [vt]
GO
/****** Object:  Schema [trend_sales]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [trend_sales] AUTHORIZATION [dbo]
GO
/****** Object:  Schema [stuser]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [stuser] AUTHORIZATION [stuser]
GO
/****** Object:  Schema [SQL PR_Pred1 users]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [SQL PR_Pred1 users] AUTHORIZATION [SQL PR_Pred1 users]
GO
/****** Object:  Schema [SQL PR_EurasSur users]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [SQL PR_EurasSur users] AUTHORIZATION [SQL PR_EurasSur users]
GO
/****** Object:  Schema [SQL PR_Euras users]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [SQL PR_Euras users] AUTHORIZATION [SQL PR_Euras users]
GO
/****** Object:  Schema [SERVSQL$]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [SERVSQL$] AUTHORIZATION [SERVSQL$]
GO
/****** Object:  Schema [rutest]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [rutest] AUTHORIZATION [rutest]
GO
/****** Object:  Schema [robot]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [robot] AUTHORIZATION [robot]
GO
/****** Object:  Schema [Plan]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [Plan] AUTHORIZATION [dbo]
GO
/****** Object:  Schema [optima_user]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [optima_user] AUTHORIZATION [optima_user]
GO
/****** Object:  Schema [MAIN\paseka]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [MAIN\paseka] AUTHORIZATION [MAIN\paseka]
GO
/****** Object:  Schema [MAIN\fedyakov]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [MAIN\fedyakov] AUTHORIZATION [MAIN\fedyakov]
GO
/****** Object:  Schema [holmogorova]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [holmogorova] AUTHORIZATION [holmogorova]
GO
/****** Object:  Schema [history]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [history] AUTHORIZATION [dbo]
GO
/****** Object:  Schema [fofonova]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [fofonova] AUTHORIZATION [fofonova]
GO
/****** Object:  Schema [ExtInt]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [ExtInt] AUTHORIZATION [dbo]
GO
/****** Object:  Schema [ef]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [ef] AUTHORIZATION [MAIN\fedyakov]
GO
/****** Object:  Schema [edi]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [edi] AUTHORIZATION [dbo]
GO
/****** Object:  Schema [Domain Admins]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [Domain Admins] AUTHORIZATION [Domain Admins]
GO
/****** Object:  Schema [cube]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [cube] AUTHORIZATION [dbo]
GO
/****** Object:  Schema [atest]    Script Date: 08/10/2015 12:55:47 ******/
CREATE SCHEMA [atest] AUTHORIZATION [atest]
GO
/****** Object:  Table [dbo].[CampinaCity]    Script Date: 08/10/2015 12:55:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CampinaCity](
	[City] [nvarchar](255) NULL,
	[Region] [nvarchar](255) NULL,
	[District] [nvarchar](255) NULL,
	[Comments ] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Campina_Sales2]    Script Date: 08/10/2015 12:55:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Campina_Sales2](
	[F1] [varchar](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Calculated_KGVT]    Script Date: 08/10/2015 12:55:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Calculated_KGVT](
	[dst] [int] NULL,
	[ТовКод] [int] NOT NULL,
	[КлнКод] [int] NOT NULL,
	[КодАдресаДоставки] [bigint] NULL
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [КлнАдрТов] ON [dbo].[Calculated_KGVT] 
(
	[КлнКод] ASC,
	[КодАдресаДоставки] ASC,
	[ТовКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [_dta_index_Calculated_KGVT_38_1491640507__K2_1_3_4] ON [dbo].[Calculated_KGVT] 
(
	[ТовКод] ASC
)
INCLUDE ( [dst],
[КлнКод],
[КодАдресаДоставки]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_Calculated_KGVT] ON [dbo].[Calculated_KGVT] 
(
	[dst] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_Calculated_KGVT_1] ON [dbo].[Calculated_KGVT] 
(
	[КлнКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_Calculated_KGVT_2] ON [dbo].[Calculated_KGVT] 
(
	[КодАдресаДоставки] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[CalcHexInChar2Int]    Script Date: 08/10/2015 12:55:52 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[CalcHexInChar2Int]
AS
declare @CurStr as char(8)
declare @CurDgtStr as char(1)
declare @CurDgt as int
declare @Res as bigint
declare @MultParam as bigint
declare @Pos as int

set @CurStr='2000c8a1'
set @Pos=8
set @MultParam=1
set @Res=0
while (@Pos>0)
  begin
    set @CurDgtStr=SubString(@CurStr,@Pos,1)
    set @CurDgt= case @CurDgtStr
      when '0' then 0
      when '1' then 1
      when '2' then 2
      when '3' then 3
      when '4' then 4
      when '5' then 5
      when '6' then 6
      when '7' then 7
      when '8' then 8
      when '9' then 9
      when ('a') then 10
      when ('b') then 11
      when ('c') then 12
      when ('d') then 13
      when ('e') then 14
      when ('f') then 15
      when ('A') then 10
      when ('B') then 11
      when ('C') then 12
      when ('D') then 13
      when ('E') then 14
      when ('F') then 15
    end
    set @Res=@Res+(@CurDgt*@MultParam)
    set @MultParam=@MultParam*16
    set @Pos=@Pos-1
  end
GO
/****** Object:  UserDefinedFunction [dbo].[CalcHex2Int]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE FUNCTION [dbo].[CalcHex2Int] (@CurStr char(8))
RETURNS bigint AS  
BEGIN 
--declare @CurStr as char(8)
declare @CurDgtStr as char(1)
declare @CurDgt as int
declare @Res as bigint
declare @MultParam as bigint
declare @Pos as int

--set @CurStr='2000c8a1'
set @Pos=8
set @MultParam=1
set @Res=0
while (@Pos>0)
  begin
    set @CurDgtStr=SubString(@CurStr,@Pos,1)
    set @CurDgt= case @CurDgtStr
      when '0' then 0
      when '1' then 1
      when '2' then 2
      when '3' then 3
      when '4' then 4
      when '5' then 5
      when '6' then 6
      when '7' then 7
      when '8' then 8
      when '9' then 9
      when ('a') then 10
      when ('b') then 11
      when ('c') then 12
      when ('d') then 13
      when ('e') then 14
      when ('f') then 15
      when ('A') then 10
      when ('B') then 11
      when ('C') then 12
      when ('D') then 13
      when ('E') then 14
      when ('F') then 15
    end
    set @Res=@Res+(@CurDgt*@MultParam)
    set @MultParam=@MultParam*16
    set @Pos=@Pos-1
  end
  return (@Res) 
END
GO
/****** Object:  Table [cube].[bonusInfo]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [cube].[bonusInfo](
	[naklKod] [bigint] NOT NULL,
	[tvrKod] [bigint] NULL,
	[bonId] [int] NULL,
	[bonType] [int] NULL,
	[bonus] [money] NULL,
	[naklDate] [datetime] NULL,
	[tvrGrp] [int] NULL,
	[tvrVid] [int] NULL,
	[stoim] [money] NULL,
	[klnKod] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DUP_KEYS]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DUP_KEYS](
	[TableName] [nvarchar](50) NULL,
	[KeyName] [nvarchar](50) NULL,
	[KeyValue] [nvarchar](500) NULL,
	[Comments] [nvarchar](max) NULL,
	[dupId] [int] IDENTITY(1,1) NOT NULL,
	[dup_Date] [smalldatetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DolgParam]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DolgParam](
	[FDate] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[zvk_dkm]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[zvk_dkm](
	[НомДок] [int] NULL,
	[АвтКодЗвкДост] [int] NULL,
	[Скл] [int] NULL,
	[Опер] [int] NULL,
	[ТипДок] [int] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [ЗвкДстТипДок] ON [dbo].[zvk_dkm] 
(
	[АвтКодЗвкДост] ASC,
	[ТипДок] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [izvk_dkm] ON [dbo].[zvk_dkm] 
(
	[ТипДок] ASC,
	[НомДок] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ZKZ_TVR]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ZKZ_TVR](
	[ПозТов] [int] NULL,
	[ПозСкл] [int] NULL,
	[ПозКодЗкз] [int] NULL,
	[ПозКол] [float] NULL,
	[ПозЦена] [float] NULL,
	[СкидкаКлн] [money] NULL,
	[СкидкаТвр] [money] NULL,
	[АкцияКод] [int] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [IX_ZKZ_TVR] ON [dbo].[ZKZ_TVR] 
(
	[ПозКодЗкз] ASC,
	[ПозТов] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_АкцияКод] ON [dbo].[ZKZ_TVR] 
(
	[АкцияКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ПозКодЗкз] ON [dbo].[ZKZ_TVR] 
(
	[ПозКодЗкз] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ПозСкл] ON [dbo].[ZKZ_TVR] 
(
	[ПозСкл] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ПозТов] ON [dbo].[ZKZ_TVR] 
(
	[ПозТов] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [iZKZ_TVR] ON [dbo].[ZKZ_TVR] 
(
	[ПозКодЗкз] ASC,
	[ПозТов] ASC
)
INCLUDE ( [АкцияКод],
[ПозКол],
[ПозЦена]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_NonPaidNakl_TAB]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[M_NonPaidNakl_TAB](
	[Customer_Code] [int] NOT NULL,
	[Delivery_Note] [int] NOT NULL,
	[Del_Note_Sum] [money] NOT NULL,
	[Balance_Del_Note] [money] NOT NULL,
	[Del_Note_Day] [datetime] NOT NULL,
	[Overdue_Day] [int] NOT NULL,
	[Custom_Key] [char](10) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KAT_VIDT]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_VIDT](
	[ВидКод] [int] NOT NULL,
	[ВидНаим] [char](1032) NULL,
	[ГрпКод] [int] NULL,
	[ПользКод] [varchar](10) NULL,
 CONSTRAINT [PK_KAT_VIDT] PRIMARY KEY NONCLUSTERED 
(
	[ВидКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[kat_vgr]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[kat_vgr](
	[ГрпНаим] [nvarchar](50) NULL,
	[ГрпКод] [int] NULL,
	[РодГрпКод] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[D_SOTRNAKL_old]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_SOTRNAKL_old](
	[СотрКод] [bigint] NOT NULL,
	[СотрФамилияИмя] [char](100) NULL,
	[СотрОтчество] [char](16) NULL,
	[ГрпСотрНаим] [char](30) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[D_SOTRNAKL_fromTest]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_SOTRNAKL_fromTest](
	[СотрКод] [bigint] NOT NULL,
	[СотрФамилияИмя] [char](100) NULL,
	[СотрОтчество] [char](16) NULL,
	[ГрпСотрНаим] [char](30) NULL,
	[ОпНаклКод] [bigint] NOT NULL,
	[КлнНаим] [char](44) NULL,
	[ГрпКлнНаим] [char](32) NULL,
	[ГородНаим] [char](50) NULL,
	[КлнКод] [int] NULL,
	[КодГлКлн] [int] NULL,
	[ГлКлнНаим] [char](44) NULL,
	[Повтор] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[D_SOTRNAKL_fresh]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_SOTRNAKL_fresh](
	[СотрКод] [bigint] NOT NULL,
	[СотрФамилияИмя] [char](100) NULL,
	[СотрОтчество] [char](16) NULL,
	[ГрпСотрНаим] [char](30) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[D_SOTRNAKL]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_SOTRNAKL](
	[СотрКод] [bigint] NOT NULL,
	[СотрФамилияИмя] [char](100) NULL,
	[СотрОтчество] [char](16) NULL,
	[ГрпСотрНаим] [char](30) NULL,
	[ОпНаклКод] [bigint] NOT NULL,
	[КлнНаим] [char](44) NULL,
	[ГрпКлнНаим] [char](32) NULL,
	[ГородНаим] [char](50) NULL,
	[КлнКод] [int] NULL,
	[КодГлКлн] [int] NULL,
	[ГлКлнНаим] [char](44) NULL,
	[Повтор] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[D_SKL]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_SKL](
	[СклКод] [int] NOT NULL,
	[СклНаим] [char](32) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[D_ORGadk]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_ORGadk](
	[КодКлн_КодАдрДоставки] [varchar](13) NOT NULL,
	[КлнКод] [int] NOT NULL,
	[КлнНаим] [char](44) NULL,
	[ГрпСотрНаим] [char](32) NULL,
	[КлнПользКод] [char](12) NULL,
	[СотрФамилияИмя] [char](100) NULL,
	[СотрОтчество] [char](16) NULL,
	[КодГлКлн] [int] NULL,
	[ГлКлнНаим] [char](44) NULL,
	[ГрпКлнНаим] [char](32) NULL,
	[ГородНаим] [char](50) NULL,
	[КодАдрДоставки] [int] NULL,
	[АдрДоставки] [varchar](150) NULL,
	[ТипКлиента] [varchar](255) NULL,
	[ПолныйАдрес] [varchar](512) NULL,
	[ПолнАдресХеш] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[D_ORG]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_ORG](
	[КлнКод] [int] NOT NULL,
	[КлнНаим] [char](44) NULL,
	[ГрпСотрНаим] [char](32) NULL,
	[КлнПользКод] [char](12) NULL,
	[СотрФамилияИмя] [char](30) NULL,
	[СотрОтчество] [char](16) NULL,
	[КодГлКлн] [int] NULL,
	[ГлКлнНаим] [char](44) NULL,
	[ГрпКлнНаим] [char](32) NULL,
	[ГородНаим] [char](50) NULL,
	[ТипКлиента] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Kat_kdk]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Kat_kdk](
	[НаимДопХар] [char](255) NULL,
	[КодДопХар] [int] NULL,
	[КодГрДопХар] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[skl_with_debt12]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[skl_with_debt12](
	[ОпНаклКод] [bigint] NOT NULL,
	[Сумма] [money] NULL,
	[НаклДЗ] [money] NULL,
	[НашаФирма] [int] NULL,
 CONSTRAINT [PK_skl_with_debt12] PRIMARY KEY CLUSTERED 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_skl_with_debt12] ON [dbo].[skl_with_debt12] 
(
	[НашаФирма] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[skl_with_debt_temp]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[skl_with_debt_temp](
	[ОпНаклКод] [bigint] NOT NULL,
	[Сумма] [float] NULL,
	[НаклДЗ] [float] NULL,
 CONSTRAINT [PK_skl_with_debt1] PRIMARY KEY CLUSTERED 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[KAT_GRPT]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_GRPT](
	[ГрпНаим] [char](32) NULL,
	[ГрпКод] [int] NOT NULL,
	[ПользКод] [varchar](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[kat_grps]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[kat_grps](
	[idGrpSkl] [int] NOT NULL,
	[NmGrpSkl] [varchar](50) NULL,
	[KodGrpSkl] [varchar](50) NULL,
PRIMARY KEY CLUSTERED 
(
	[idGrpSkl] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Справочник групп складов 20141128 Глухов' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'kat_grps'
GO
/****** Object:  Table [dbo].[KAT_GRPK]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_GRPK](
	[ГрпНаим] [char](32) NULL,
	[ГрпКод] [int] NOT NULL,
	[НомерПостав]  AS ((1)),
	[ОпТипПост]  AS ((1)),
 CONSTRAINT [PK_KAT_GRPK] PRIMARY KEY CLUSTERED 
(
	[ГрпКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KAT_CNT]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_CNT](
	[НаименованиеСтраны] [varchar](42) NULL,
	[КодСтраны] [int] NOT NULL,
	[КодСтраны35] [int] NULL,
	[КодЦифровой] [varchar](6) NULL,
	[КодБуквенный] [varchar](6) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[kat_avto]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[kat_avto](
	[АвтоКод] [int] NULL,
	[Авто] [nvarchar](50) NULL,
	[Грузоподъемность] [float] NULL,
	[Объем] [real] NULL,
	[ЦенаЗаЧас] [real] NULL,
	[ЦенаЗаКМ] [real] NULL,
	[ЦенаЗаТочку] [real] NULL,
	[ЦенаЗаКГ] [real] NULL
) ON [PRIMARY]
GO
/****** Object:  UserDefinedFunction [dbo].[IsInteger]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Function [dbo].[IsInteger](@Value VarChar(50))
Returns Bit
As 
Begin

DECLARE @is_int bit
SELECT @is_int = CASE
    WHEN @Value IS NULL  THEN 0
    WHEN @Value = ' ' THEN 0
    WHEN ISNUMERIC(@Value + '.0e0')  = 0     THEN 0
    WHEN @Value LIKE '%\[^-+ 0-9\]%' THEN 0
    WHEN @Value LIKE '%д.в.%' THEN 0
    WHEN CAST(@Value AS NUMERIC(38, 0))
      NOT BETWEEN -2147483648. AND 2147483647. THEN 0
    ELSE 1
  END 

return @is_int

End
GO
/****** Object:  Table [dbo].[InvoiceTestRigla2]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[InvoiceTestRigla2](
	[doc_no] [bigint] NOT NULL,
	[host_number] [varchar](6) NOT NULL,
	[tvr_id] [int] NOT NULL,
	[skucode] [char](14) NULL,
	[name] [char](52) NULL,
	[cnt] [decimal](18, 3) NULL,
	[price] [money] NULL,
	[created] [datetime] NULL,
	[kln_id] [int] NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DOLG1]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DOLG1](
	[ДолгКлн] [int] NULL,
	[ДолгНакл] [int] NULL,
	[ДолгДата] [datetime] NULL,
	[ДолгСальдо] [money] NULL,
	[ДолгНаклСумма] [money] NULL,
	[ДолгСрок] [int] NULL,
	[ДолгСумма] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DOLG_SELMGR]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DOLG_SELMGR](
	[ВбрСотрНаим] [char](30) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DOLG_NAKL]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DOLG_NAKL](
	[ДолгНакл] [int] NULL,
	[ДолгНаклНомер] [bigint] NULL,
	[ДолгКлн] [int] NULL,
	[СотрФИ] [char](30) NULL,
	[ГрпСотрНаим] [char](32) NULL,
	[ДолгДата] [datetime] NULL,
	[ДолгСумма] [money] NULL,
	[ДолгНаклСумма] [money] NULL,
	[ДолгСрок] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DOLG_MGR]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DOLG_MGR](
	[СотрКод] [int] NOT NULL,
	[СотрФамилияИмя] [char](30) NULL,
	[ГрпСотрНаим] [char](32) NULL,
	[МнджСумма] [money] NULL,
	[МнджСуммаПер] [money] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DOLG_DEPT]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DOLG_DEPT](
	[ПдрКод] [int] NOT NULL,
	[ГрпСотрНаим] [char](32) NULL,
	[ОтделСумма] [money] NULL,
	[ОтделСуммаПер] [money] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DOLG_COMMENT]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DOLG_COMMENT](
	[КмКод] [int] NOT NULL,
	[КмТекст] [nchar](512) NOT NULL,
	[КмТип] [char](3) NULL,
	[КмДата] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DOLG_CLN]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DOLG_CLN](
	[КлнКод] [int] NOT NULL,
	[КлнНаим] [char](44) NULL,
	[СотрФамилияИмя] [char](30) NULL,
	[ГрпСотрНаим] [char](32) NULL,
	[КлнСумма] [money] NULL,
	[КлнСуммаПер] [money] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[sld_firm]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[sld_firm](
	[КлнКод] [int] NOT NULL,
	[НашаФирма] [int] NOT NULL,
	[НачСальдо] [money] NULL,
	[Дата] [date] NULL,
	[source] [varchar](20) NULL,
 CONSTRAINT [PK_sld_firm] PRIMARY KEY CLUSTERED 
(
	[КлнКод] ASC,
	[НашаФирма] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SKU_DOP]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SKU_DOP](
	[ТовАрт] [varchar](50) NULL,
	[ДопНаим] [varchar](50) NULL,
	[ДатаСозд] [date] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [wms].[SKU_BARCODE]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[SKU_BARCODE](
	[Skuid] [nvarchar](64) NULL,
	[Skucode] [nvarchar](64) NULL,
	[upc] [nvarchar](64) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [history].[HIST_USL]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [history].[HIST_USL](
	[УслКод] [bigint] NULL,
	[УслКол] [float] NULL,
	[УслЦена] [float] NULL,
	[УслНомер] [int] NOT NULL,
	[УслСкл] [bigint] NOT NULL,
	[УслОпер] [smallint] NOT NULL,
	[НаклКод] [bigint] NULL,
	[ДатаКод] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [wms].[sku]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[sku](
	[host_id] [nvarchar](64) NULL,
	[shelf_life] [float] NULL,
	[veterinary_doc] [bit] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [isku] ON [wms].[sku] 
(
	[host_id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [_dta_index_sku_38_1408880236__K1] ON [wms].[sku] 
(
	[host_id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[list_sf]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[list_sf](
	[НомерСФ] [varchar](255) NULL,
	[АвтокодСФ] [int] NULL,
	[ДатаСФ] [varchar](50) NULL,
	[ДатаПолученияСФ] [varchar](50) NULL,
	[ФлгОпер] [int] NULL,
	[Контрагент] [int] NULL,
	[Фирма] [int] NULL,
	[Col008] [varchar](255) NULL,
	[Col009] [varchar](255) NULL,
	[Col010] [varchar](255) NULL,
	[Col011] [varchar](255) NULL,
	[Col012] [varchar](255) NULL,
	[Col013] [varchar](255) NULL,
	[Col014] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [АвтокодСФ] ON [dbo].[list_sf] 
(
	[АвтокодСФ] ASC
)
INCLUDE ( [НомерСФ]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [НомерСФ] ON [dbo].[list_sf] 
(
	[НомерСФ] ASC
)
INCLUDE ( [АвтокодСФ]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[list_pcn]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[list_pcn](
	[pc1_text] [char](50) NULL,
	[pc1_pcn] [bigint] NOT NULL,
	[pc1_dat] [bigint] NULL,
	[pc1_dfx] [bigint] NULL,
	[pc1_dat_normal] [datetime] NULL,
	[pc1_dfx_normal] [datetime] NULL,
	[pc1_dop] [char](50) NULL,
	[pc1_un1] [int] NULL,
	[pc1_ppl] [int] NULL,
	[pc1_prz] [int] NULL,
 CONSTRAINT [PK_list_pcn] PRIMARY KEY CLUSTERED 
(
	[pc1_pcn] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [ix_pc1_dat] ON [dbo].[list_pcn] 
(
	[pc1_dat] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc1_dat_normal] ON [dbo].[list_pcn] 
(
	[pc1_dat_normal] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc1_dfx] ON [dbo].[list_pcn] 
(
	[pc1_dfx] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc1_dfx_normal] ON [dbo].[list_pcn] 
(
	[pc1_dfx_normal] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc1_ppl] ON [dbo].[list_pcn] 
(
	[pc1_ppl] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc1_prz] ON [dbo].[list_pcn] 
(
	[pc1_prz] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc1_un1] ON [dbo].[list_pcn] 
(
	[pc1_un1] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[list_mlst_history_status]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[list_mlst_history_status](
	[АвтокодМЛ] [int] NULL,
	[СтатусМЛ] [int] NULL,
	[ДатаСтатуса] [date] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [Автокод] ON [dbo].[list_mlst_history_status] 
(
	[АвтокодМЛ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [Дата_Код_Статус] ON [dbo].[list_mlst_history_status] 
(
	[ДатаСтатуса] ASC,
	[АвтокодМЛ] ASC,
	[СтатусМЛ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[list_mlst]    Script Date: 08/10/2015 12:55:53 ******/
SET ARITHABORT ON
GO
SET CONCAT_NULL_YIELDS_NULL ON
GO
SET ANSI_NULLS ON
GO
SET ANSI_PADDING ON
GO
SET ANSI_WARNINGS ON
GO
SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
SET ARITHABORT ON
GO
CREATE TABLE [dbo].[list_mlst](
	[НомерМЛ] [int] NULL,
	[АвтокодМЛ] [int] NULL,
	[Дата] [int] NULL,
	[Перевозчик] [int] NULL,
	[Авто] [int] NULL,
	[Водитель] [int] NULL,
	[СтатусМЛ] [int] NULL,
	[Маршрут] [int] NULL,
	[Экспедитор] [int] NULL,
	[ДатаВыезда] [int] NULL,
	[ДатаРасч]  AS (dateadd(second,[Дата],CONVERT([datetime],'31.12.1969 19:00:00',(104)))) PERSISTED,
	[ДатаВыездаРасч]  AS (dateadd(second,[ДатаВыезда],CONVERT([datetime],'31.12.1969 19:00:00',(104)))) PERSISTED,
	[ЗатратыПлан] [money] NULL,
	[ЗатратыФакт] [money] NULL,
	[ЗатратаНазвание1] [int] NULL,
	[ЗатратаНазвание2] [int] NULL,
	[ЗатратаНазвание3] [int] NULL,
	[ЗатратаНазвание4] [int] NULL,
	[ЗатратаНазвание5] [int] NULL,
	[ЗатратаПлан1] [float] NULL,
	[ЗатратаПлан2] [float] NULL,
	[ЗатратаПлан3] [float] NULL,
	[ЗатратаПлан4] [float] NULL,
	[ЗатратаПлан5] [float] NULL,
	[ЗатратаФакт1] [float] NULL,
	[ЗатратаФакт2] [float] NULL,
	[ЗатратаФакт3] [float] NULL,
	[ЗатратаФакт4] [float] NULL,
	[ЗатратаФакт5] [float] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
CREATE NONCLUSTERED INDEX [IX_list_mlst_zatr1] ON [dbo].[list_mlst] 
(
	[ДатаРасч] ASC,
	[ЗатратаНазвание1] ASC
)
INCLUDE ( [НомерМЛ],
[АвтокодМЛ],
[Перевозчик],
[Авто],
[Водитель],
[Маршрут],
[Экспедитор],
[ЗатратаПлан1],
[ЗатратаФакт1]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
CREATE NONCLUSTERED INDEX [IX_list_mlst_zatr2] ON [dbo].[list_mlst] 
(
	[ДатаРасч] ASC,
	[ЗатратаНазвание2] ASC
)
INCLUDE ( [НомерМЛ],
[АвтокодМЛ],
[Перевозчик],
[Авто],
[Водитель],
[Маршрут],
[Экспедитор],
[ЗатратаПлан2],
[ЗатратаФакт2]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
CREATE NONCLUSTERED INDEX [IX_list_mlst_zatr3] ON [dbo].[list_mlst] 
(
	[ДатаРасч] ASC,
	[ЗатратаНазвание3] ASC
)
INCLUDE ( [НомерМЛ],
[АвтокодМЛ],
[Перевозчик],
[Авто],
[Водитель],
[Маршрут],
[Экспедитор],
[ЗатратаПлан3],
[ЗатратаФакт3]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
CREATE NONCLUSTERED INDEX [IX_list_mlst_zatr4] ON [dbo].[list_mlst] 
(
	[ДатаРасч] ASC,
	[ЗатратаНазвание4] ASC
)
INCLUDE ( [НомерМЛ],
[АвтокодМЛ],
[Перевозчик],
[Авто],
[Водитель],
[Маршрут],
[Экспедитор],
[ЗатратаПлан4],
[ЗатратаФакт4]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
CREATE NONCLUSTERED INDEX [IX_list_mlst_zatr5] ON [dbo].[list_mlst] 
(
	[ДатаРасч] ASC,
	[ЗатратаНазвание5] ASC
)
INCLUDE ( [НомерМЛ],
[АвтокодМЛ],
[Перевозчик],
[Авто],
[Водитель],
[Маршрут],
[Экспедитор],
[ЗатратаПлан5],
[ЗатратаФакт5]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
CREATE NONCLUSTERED INDEX [IX_LIST_MLST1] ON [dbo].[list_mlst] 
(
	[ДатаРасч] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_LIST_MLST2] ON [dbo].[list_mlst] 
(
	[АвтокодМЛ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_LIST_MLST3] ON [dbo].[list_mlst] 
(
	[Авто] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[KPK_Orders]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[KPK_Orders](
	[ClientId] [int] NOT NULL,
	[AddressId] [int] NULL,
	[UserId] [int] NULL,
	[Article] [nvarchar](50) NULL,
	[ProdId] [int] NULL,
	[Count] [decimal](18, 3) NULL,
	[ProdName] [nvarchar](50) NULL,
	[PsevdoId] [nvarchar](1) NULL,
	[OrderNum] [int] NULL,
	[OrderId] [nvarchar](50) NULL,
	[DateBegin] [nvarchar](50) NULL,
	[DateEnd] [nvarchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TYPE_EVENT_TAB]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TYPE_EVENT_TAB](
	[ID_Ev] [int] IDENTITY(1,1) NOT NULL,
	[TypeEv] [char](100) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TmpClean]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TmpClean](
	[КодТов] [bigint] NULL,
	[Дата] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[list_knt]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[list_knt](
	[Номер контракта] [nvarchar](255) NULL,
	[Код контракта] [int] NULL,
	[Col003] [nvarchar](255) NULL,
	[Col004] [nvarchar](255) NULL,
	[Col005] [nvarchar](255) NULL,
	[Клиент] [int] NULL,
	[Col007] [nvarchar](255) NULL,
	[Col008] [nvarchar](255) NULL,
	[Col009] [nvarchar](255) NULL,
	[Col010] [nvarchar](255) NULL,
	[Col011] [nvarchar](255) NULL,
	[Col012] [nvarchar](255) NULL,
	[Col013] [nvarchar](255) NULL,
	[Col014] [nvarchar](255) NULL,
	[Col015] [nvarchar](255) NULL,
	[Col016] [nvarchar](255) NULL,
	[Col017] [nvarchar](255) NULL,
	[Col018] [nvarchar](255) NULL,
	[Col019] [nvarchar](255) NULL,
	[Col020] [nvarchar](255) NULL,
	[Col021] [nvarchar](255) NULL,
	[Col022] [nvarchar](255) NULL,
	[Col023] [nvarchar](255) NULL,
	[Col024] [nvarchar](255) NULL,
	[Col025] [nvarchar](255) NULL,
	[Col026] [nvarchar](255) NULL,
	[Col027] [nvarchar](255) NULL,
	[Col028] [nvarchar](255) NULL,
	[Col029] [nvarchar](255) NULL,
	[Col030] [nvarchar](255) NULL,
	[Col031] [nvarchar](255) NULL,
	[Col032] [nvarchar](255) NULL,
	[Col033] [nvarchar](255) NULL,
	[Col034] [nvarchar](255) NULL,
	[Col035] [nvarchar](255) NULL,
	[Col036] [nvarchar](255) NULL,
	[Col037] [nvarchar](255) NULL,
	[Col038] [nvarchar](255) NULL,
	[Col039] [nvarchar](255) NULL,
	[Col040] [nvarchar](255) NULL,
	[Col041] [nvarchar](255) NULL,
	[Col042] [nvarchar](255) NULL,
	[Col043] [nvarchar](255) NULL,
	[Col044] [nvarchar](255) NULL,
	[Col045] [nvarchar](255) NULL,
	[Col046] [nvarchar](255) NULL,
	[Col047] [nvarchar](255) NULL,
	[Col048] [nvarchar](255) NULL,
	[Col049] [nvarchar](255) NULL,
	[Col050] [nvarchar](255) NULL,
	[Col051] [nvarchar](255) NULL,
	[Col052] [nvarchar](255) NULL,
	[Col053] [nvarchar](255) NULL,
	[Col054] [nvarchar](255) NULL,
	[Col055] [nvarchar](255) NULL,
	[Col056] [nvarchar](255) NULL,
	[Col057] [nvarchar](255) NULL,
	[Col058] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[List_kdk]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[List_kdk](
	[КодКлн] [int] NULL,
	[КодДопХар] [int] NULL,
	[КодГрпДопХар] [int] NULL,
	[mode] [tinyint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LimitDays]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LimitDays](
	[НашаФирма] [int] NOT NULL,
	[КлнКод] [int] NOT NULL,
	[ЛимитДней] [int] NULL,
 CONSTRAINT [PK_LimitDays] PRIMARY KEY CLUSTERED 
(
	[НашаФирма] ASC,
	[КлнКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[lim_kln]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[lim_kln](
	[ClientID] [int] NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[Overdraft] [money] NULL,
	[ManagerID] [int] NULL,
	[StartDateTimestamp] [bigint] NULL,
	[EndDateTimestamp] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[zkz_nkl]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[zkz_nkl](
	[ДокКод] [int] NULL,
	[Накл] [bigint] NULL,
	[Скл] [int] NULL,
	[ФлгОпер] [int] NULL,
	[Тип] [int] NULL,
	[КодТреб] [int] NULL,
	[Очередь] [int] NULL,
	[Сумма] [money] NULL,
	[ЗаказНаряд] [int] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [izkz_nkl1] ON [dbo].[zkz_nkl] 
(
	[Скл] ASC,
	[ФлгОпер] ASC,
	[Накл] ASC,
	[Тип] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [_dta_index_zkz_nkl_38_220683984__K5_K3_K4_K2_1] ON [dbo].[zkz_nkl] 
(
	[Тип] ASC,
	[Скл] ASC,
	[ФлгОпер] ASC,
	[Накл] ASC
)
INCLUDE ( [ДокКод]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ДокКод] ON [dbo].[zkz_nkl] 
(
	[ДокКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_Накл] ON [dbo].[zkz_nkl] 
(
	[Накл] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_Скл] ON [dbo].[zkz_nkl] 
(
	[Скл] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [izkz_nkl] ON [dbo].[zkz_nkl] 
(
	[Тип] ASC,
	[ДокКод] ASC
)
INCLUDE ( [Накл]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [накл] ON [dbo].[zkz_nkl] 
(
	[Накл] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[zkz_kodp]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[zkz_kodp](
	[ТовКод] [int] NULL,
	[КлнКод] [int] NULL,
	[Код] [nvarchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ZATR_T]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ZATR_T](
	[КодТов] [bigint] NULL,
	[КодЗатр] [int] NULL,
	[НомДок] [bigint] NULL,
	[КодСкл] [int] NULL,
	[ТипОпер] [int] NULL,
	[СуммЗатр] [money] NULL,
	[СуммЗатрНдс] [money] NULL,
	[Валюта] [int] NULL,
	[ДатаКурсаОриг] [int] NULL,
	[БитФлаги] [int] NULL,
	[НомТовСпец] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ZATR_F]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ZATR_F](
	[КодЗатрБывш] [int] NULL,
	[КодЗатр] [int] NULL,
	[НомДок] [bigint] NULL,
	[КодСкл] [int] NULL,
	[ТипОпер] [int] NULL,
	[СуммЗатр] [money] NULL,
	[СуммЗатрНдс] [money] NULL,
	[Валюта] [int] NULL,
	[ДатаКурсОриг] [int] NULL,
	[ДатаНачисл] [bigint] NULL,
	[КодКлн] [bigint] NULL,
	[БитФлаги] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ZATR]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ZATR](
	[ЗатрНаим] [char](50) NULL,
	[КодЗатр] [int] NULL,
	[КодГрп] [int] NULL,
	[ТипЗатр] [int] NULL,
	[ШифрЗатр] [char](12) NULL,
	[Резерв] [int] NULL,
	[ТипСхемы] [int] NULL,
	[КатВид] [int] NULL,
	[МетРаспред] [int] NULL,
	[ВидРаспр] [int] NULL,
	[ДопПризн] [int] NULL,
	[Вид] [int] NULL,
	[Принадл] [int] NULL,
	[Очеред] [int] NULL,
	[ПарамРасч1] [int] NULL,
	[ПарамРасч2] [int] NULL,
	[ПарамРасч3] [int] NULL,
	[ПарамРасч4] [int] NULL,
	[ПарамРасч5] [int] NULL,
	[ПарамРасч6] [int] NULL,
	[ПарамРасч7] [int] NULL,
	[ПарамРасч8] [int] NULL,
	[КоэфРасч] [float] NULL,
	[ПоказКалк] [int] NULL,
	[ТипОпер] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tov_razn1]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tov_razn1](
	[ТовКод] [bigint] NULL,
	[КолТек] [float] NULL,
	[ПрихДатаКод] [bigint] NULL,
	[КолРасх] [float] NULL,
	[РасхДатаКод] [bigint] NULL,
	[Период] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TOV_RAZN]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TOV_RAZN](
	[ТовКод] [bigint] NULL,
	[КолТек] [float] NULL,
	[ПрихДатаКод] [bigint] NULL,
	[КолРасх] [float] NULL,
	[РасхДатаКод] [bigint] NULL,
	[Период] [int] NULL,
	[СуммаВрем] [money] NULL,
	[Остаток] [tinyint] NULL,
	[ПриходДата] [datetime] NULL,
	[РасходДата] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TOV_OST_DOP]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TOV_OST_DOP](
	[ДатаОст] [datetime] NULL,
	[КодСкл] [int] NULL,
	[КодТов] [int] NULL,
	[ТовОст] [float] NULL,
	[РасхДень] [float] NULL,
	[ДнейОст] [float] NULL,
	[ABCGroup] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TOV_OST]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TOV_OST](
	[ДатаОст] [datetime] NULL,
	[КодСкл] [int] NULL,
	[КодТов] [int] NULL,
	[ТовОст] [float] NULL,
	[РасхДень] [float] NULL,
	[ДнейОст] [float] NULL,
	[ABCGroup] [varchar](50) NULL,
	[ДнейОстОжид] [float] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [xmt].[TOV_ABC]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [xmt].[TOV_ABC](
	[TovKod] [int] NULL,
	[TovArt] [varchar](255) NULL,
	[TovGrp] [int] NULL,
	[TovSum] [float] NULL,
	[TovSumGrp] [float] NULL,
	[TovSumTot] [float] NULL,
	[TovABCGrp]  AS (case when [TovSumGrp]=(0) then (0) else ([TovSum]*(100))/[TovSumGrp] end),
	[TovABCTot]  AS (case when [TovSumTot]=(0) then (0) else ([TovSum]*(100))/[TovSumTot] end),
	[RunSum] [float] NULL,
	[RunSumGrp] [float] NULL,
	[TovRankTot] [int] NULL,
	[TovRankGrp] [int] NULL,
	[AbcRank] [varchar](255) NULL,
	[MustStock] [varchar](255) NULL,
	[SkuType] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KRT_VAL]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KRT_VAL](
	[КЗНомКрт] [int] NULL,
	[КЗКодЗп] [int] NULL,
	[КЗКарта] [char](1800) NULL,
	[КЗОбъект] [int] NULL,
	[T1] [int] NULL,
	[T2] [int] NULL,
	[T3] [int] NULL,
	[T4] [int] NULL,
	[T5] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KRT_PNT]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KRT_PNT](
	[ПнтКод] [int] NULL,
	[ПнтНаим] [char](32) NULL,
	[ПнтКодКрт] [int] NULL,
	[ПнтТип] [int] NULL,
	[ПнтДлина] [int] NULL,
	[ПнтКодСпс] [int] NULL,
	[ПнтК1] [int] NULL,
	[ПнтК2] [int] NULL,
	[ПнтК3] [int] NULL,
	[ПнтК4] [int] NULL,
	[ПнтК5] [int] NULL,
	[ПнтК6] [int] NULL,
	[ПнтФлаг] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KRT_LSTV]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KRT_LSTV](
	[ЛЗКод] [int] NULL,
	[ЛЗЛистКод] [int] NULL,
	[ЛЗНаим] [char](32) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KRT_LST]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KRT_LST](
	[ЛстКод] [int] NULL,
	[ЛстНаим] [char](32) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KRT_KAT]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KRT_KAT](
	[КртКод] [int] NOT NULL,
	[КртНаим] [char](32) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KPK_Table]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[KPK_Table](
	[КлнКод] [int] NOT NULL,
	[КлнНаим] [nvarchar](50) NULL,
	[КодАдрДоставки] [int] NOT NULL,
	[АдрДоставки] [nvarchar](255) NULL,
	[КодМенеджера] [int] NOT NULL,
	[КатТТ] [nvarchar](3) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[f_platprihall]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[f_platprihall](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [int] NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[f_platrashall]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[f_platrashall](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [int] NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_USER_R]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_USER_R](
	[ПользКод] [int] NULL,
	[МнгКод] [int] NULL,
	[email] [nvarchar](100) NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [ПользКод] ON [dbo].[M_USER_R] 
(
	[ПользКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_USER]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[M_USER](
	[ПользКод] [int] IDENTITY(1,1) NOT NULL,
	[ФИО] [varchar](255) NULL,
	[Пароль] [varchar](50) NULL,
	[Админ] [int] NULL,
	[Email] [varchar](255) NULL,
	[LoginName] [varchar](255) NULL,
 CONSTRAINT [PK_M_USER] PRIMARY KEY CLUSTERED 
(
	[ПользКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_LoginName] ON [dbo].[M_USER] 
(
	[LoginName] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_Пароль] ON [dbo].[M_USER] 
(
	[Пароль] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[del_M_RealPrice1]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[del_M_RealPrice1](
	[КлнКод] [int] NOT NULL,
	[ТовКод] [int] NOT NULL,
	[ТовЦенаРСХ] [money] NULL,
	[ГрпЦен] [int] NULL,
	[ЦенаПоГруппеЦен] [money] NULL,
	[ЦенаПоАльтГруппеЦен] [money] NULL,
	[ТоварнаяСкидка] [float] NULL,
	[КлнНаТовар] [float] NULL,
	[КлнНаВид] [float] NULL,
	[КлнНаГруппу] [float] NULL,
	[РеальнаяЦена] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[del_kanal]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[del_kanal](
	[#] [float] NULL,
	[Товар] [nvarchar](255) NULL,
	[Производитель] [nvarchar](255) NULL,
	[Код товара] [nvarchar](255) NULL,
	[Т# партия] [nvarchar](255) NULL,
	[Владелец] [nvarchar](255) NULL,
	[Категория] [nvarchar](255) NULL,
	[Количество] [nvarchar](255) NULL,
	[MIN количество] [nvarchar](255) NULL,
	[MAX количество] [nvarchar](255) NULL,
	[Зарезервировано] [nvarchar](255) NULL,
	[Тип канала] [nvarchar](255) NULL,
	[Быстроуходимый] [nvarchar](255) NULL,
	[Ручное управление] [nvarchar](255) NULL,
	[Статус] [nvarchar](255) NULL,
	[Статус груза] [nvarchar](255) NULL,
	[Просроченные т#партии] [nvarchar](255) NULL,
	[Рут# кол-во] [nvarchar](255) NULL,
	[Пополнение] [nvarchar](255) NULL,
	[Упаковка] [nvarchar](255) NULL,
	[Родитель] [nvarchar](255) NULL,
	[#Родителя] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[del_d_sotrnakl1]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[del_d_sotrnakl1](
	[СотрКод] [bigint] NOT NULL,
	[СотрФамилияИмя] [char](40) NULL,
	[СотрОтчество] [char](16) NULL,
	[ГрпСотрНаим] [char](30) NULL,
	[Повтор] [int] NULL,
	[КлнКод] [int] NULL,
	[КлнНаим] [char](44) NULL,
	[КодГлКлн] [int] NULL,
	[ГрпКлнНаим] [char](32) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KAT_PDR]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_PDR](
	[ПдрКод] [int] NOT NULL,
	[ПдрНаим] [char](32) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DOLG]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DOLG](
	[ДолгКлн] [int] NULL,
	[ДолгНакл] [int] NULL,
	[ДолгДата] [datetime] NULL,
	[ДолгСальдо] [money] NULL,
	[ДолгНаклСумма] [money] NULL,
	[ДолгСрок] [int] NULL,
	[ДолгСумма] [money] NULL,
	[ДолгНаклНомер] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[Document]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[Document](
	[documentId] [nvarchar](255) NOT NULL,
	[docType] [nvarchar](255) NOT NULL,
	[retail] [nvarchar](255) NOT NULL,
	[documentSum] [float] NULL,
	[creator] [nvarchar](255) NOT NULL,
	[created] [datetime2](7) NOT NULL,
	[timestamp] [bigint] NOT NULL,
	[cancelled] [bit] NULL,
	[messageSended] [bit] NULL,
	[userOrderNumber] [int] NULL,
 CONSTRAINT [PK_Document] PRIMARY KEY CLUSTERED 
(
	[documentId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[dochod]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[dochod](
	[dchd_name_zat] [varchar](70) NULL,
	[dchd_kod] [int] NOT NULL,
	[dchd_kod_dchd] [nchar](10) NULL,
	[dchd_grp] [int] NULL,
	[dchd_ktlg] [int] NULL,
	[dchd_flag] [int] NULL,
 CONSTRAINT [PK_dochod2] PRIMARY KEY CLUSTERED 
(
	[dchd_kod] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[docfirst]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[docfirst](
	[GUID] [char](38) NULL,
	[BegNumDoc] [int] NULL,
	[Type] [int] NULL,
	[fk_Log] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DKM_STL]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DKM_STL](
	[ОпНакл] [bigint] NOT NULL,
	[Тип] [int] NULL,
	[ОпСкл] [int] NULL,
	[ОпТип] [int] NULL,
	[ОпСотр] [bigint] NULL,
	[ДатаИсх] [bigint] NULL,
	[ДатаРасч] [datetime] NULL,
	[Статус1] [int] NULL,
	[Статус2] [int] NULL,
	[Комментарий] [varchar](256) NULL,
	[НомерПостав]  AS ((1)),
	[ТипПостав]  AS ((1))
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [history].[DKM_BASI]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [history].[DKM_BASI](
	[ДОКод] [bigint] NOT NULL,
	[ДОНом] [char](16) NULL,
	[ДОКодПлат] [bigint] NULL,
	[ДОТип] [tinyint] NULL,
	[ДОНаим] [bigint] NULL,
	[ДОСумма] [money] NULL,
	[ДОДата] [bigint] NULL,
	[ДОДатаРасч] [datetime] NULL,
	[ДОКонтракт] [bigint] NULL,
	[ДОПризнак] [int] NULL,
	[ДОКлнСотр] [tinyint] NULL,
	[ДОКодКлн] [bigint] NULL,
	[ДОДатаОпл] [bigint] NULL,
	[ДОДатаОплРасч] [datetime] NULL,
	[ДОДатаКод] [bigint] NULL,
	[ДОТипПечати] [tinyint] NULL,
	[ДОКодПодр] [bigint] NULL,
	[НашаФирма] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[M_TRANS_temp]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[M_TRANS_temp](
	[Ид] [bigint] IDENTITY(1,1) NOT NULL,
	[ДатаРасч] [datetime] NULL,
	[Накл] [int] NULL,
	[Скл] [int] NULL,
	[ОпТип] [int] NULL,
	[Клн] [int] NULL,
	[КлнТип] [int] NULL,
	[Возврат] [int] NULL,
	[Сотрудник] [int] NULL,
	[ПлатКод] [bigint] NULL,
	[ПлатРежим] [int] NULL,
	[ПлатНом] [char](16) NULL,
	[ПлатТип] [int] NULL,
	[Сумма] [money] NULL,
	[Сальдо] [money] NULL,
	[ДатаИсх] [bigint] NULL,
	[НашаФирма] [int] NULL,
	[МенеджерНакладной] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[M_TRANS_20150519]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[M_TRANS_20150519](
	[Ид] [bigint] IDENTITY(1,1) NOT NULL,
	[ДатаРасч] [datetime] NULL,
	[Накл] [int] NULL,
	[Скл] [int] NULL,
	[ОпТип] [int] NULL,
	[Клн] [int] NULL,
	[КлнТип] [int] NULL,
	[Возврат] [int] NULL,
	[Сотрудник] [int] NULL,
	[ПлатКод] [bigint] NULL,
	[ПлатРежим] [int] NULL,
	[ПлатНом] [char](16) NULL,
	[ПлатТип] [int] NULL,
	[Сумма] [money] NULL,
	[Сальдо] [money] NULL,
	[ДатаИсх] [bigint] NULL,
	[НашаФирма] [int] NULL,
	[МенеджерНакладной] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[F_PRIHCLEAN]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_PRIHCLEAN](
	[ОпКодТов] [int] NULL,
	[СумКол] [decimal](18, 3) NULL,
	[СумСтоим] [money] NULL,
	[ОпДата] [bigint] NOT NULL,
	[Код] [bigint] IDENTITY(1,1) NOT NULL,
	[ЕстьСпис] [tinyint] NULL,
	[ОпДатаРасч] [datetime] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [iF_prihclean] ON [dbo].[F_PRIHCLEAN] 
(
	[ОпКодТов] ASC,
	[ОпДатаРасч] ASC,
	[Код] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [iF_prihclean2] ON [dbo].[F_PRIHCLEAN] 
(
	[ОпКодТов] ASC,
	[ОпДатаРасч] ASC
)
INCLUDE ( [СумКол]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[f_prihall]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[f_prihall](
	[ОпКодТов] [int] NULL,
	[ОпКол] [numeric](18, 3) NULL,
	[ОпСтоим] [money] NULL,
	[ОпКодКлн] [int] NULL,
	[ОпКод] [bigint] NOT NULL,
	[ОпВес] [numeric](18, 3) NULL,
	[ОпКолУпак] [numeric](18, 3) NULL,
	[ОпНакл] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[F_USL]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_USL](
	[УслКод] [int] NULL,
	[УслСкл] [int] NULL,
	[УслКол] [float] NULL,
	[УслЦена] [money] NULL,
	[УслОпер] [smallint] NULL,
	[УслНомер] [int] NULL,
	[УслНакл] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[F_PLAT_testSrok]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_PLAT_testSrok](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [int] NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[F_PLAT]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_PLAT](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [int] NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[F_OST]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_OST](
	[ОстТов] [bigint] NOT NULL,
	[ОстСкл] [int] NOT NULL,
	[ОстДата] [bigint] NOT NULL,
	[ОстКол] [numeric](18, 3) NULL,
	[ОстКолТек] [numeric](18, 3) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ROLES_USERS]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ROLES_USERS](
	[UserCode] [int] IDENTITY(1,1) NOT NULL,
	[UserName] [char](32) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ROLES_RIGHTS]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ROLES_RIGHTS](
	[RightsUser] [int] NULL,
	[RightsAllowed] [char](1400) NULL,
	[RightsDenied] [char](1400) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[rlz_vzv]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[rlz_vzv](
	[r1_tvr] [bigint] NULL,
	[r1_kln] [bigint] NULL,
	[r1_ndok] [bigint] NULL,
	[r1_fl_opr] [int] NULL,
	[r1_skl] [int] NULL,
	[r1_nmk] [int] NULL,
	[r1_dat] [bigint] NULL,
	[r1_v_ndok] [bigint] NULL,
	[r1_v_fl_opr] [int] NULL,
	[r1_v_skl] [int] NULL,
	[r1_v_nmk] [int] NULL,
	[r1_v_dat] [bigint] NULL,
	[r1_v_kol] [decimal](18, 3) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [wms].[Return1]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[Return1](
	[INVOICENUMBER] [int] NULL,
	[INVOICETYPE] [int] NULL,
	[INVOICESKL] [int] NULL,
	[SKUID] [int] NULL,
	[QTY] [real] NULL,
	[TYPE] [nvarchar](1) NULL,
	[RET_TYPE] [nvarchar](50) NULL,
	[ID_RESPONSE_NAME] [int] NULL,
	[RET_RESPONSE_NAME] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [wms].[Return]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[Return](
	[INVOICENUMBER] [int] NULL,
	[INVOICETYPE] [int] NULL,
	[INVOICESKL] [int] NULL,
	[SKUID] [int] NULL,
	[QTY] [real] NULL,
	[TYPE] [nvarchar](1) NULL,
	[RET_TYPE] [nvarchar](50) NULL,
	[ID_RESPONSE_NAME] [int] NULL,
	[RET_RESPONSE_NAME] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[RetailCategory]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[RetailCategory](
	[retailCategoryId] [nvarchar](255) NOT NULL,
	[name] [nvarchar](255) NOT NULL,
	[priceMultiplier] [float] NOT NULL,
 CONSTRAINT [PK_xmt.RetailCategory] PRIMARY KEY CLUSTERED 
(
	[retailCategoryId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ReportSkl]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ReportSkl](
	[ReportId] [int] NULL,
	[SklCode] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Reports]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Reports](
	[ReportID] [int] NOT NULL,
	[ReportName] [nvarchar](50) NULL,
 CONSTRAINT [PK_Reports] PRIMARY KEY CLUSTERED 
(
	[ReportID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ReportOurFirm]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ReportOurFirm](
	[ReportId] [int] NULL,
	[OurFirmCode] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[REMNANTS_DOP]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[REMNANTS_DOP](
	[ДатаРасч] [datetime] NULL,
	[Скл] [int] NULL,
	[ТовКод] [int] NULL,
	[Остаток] [float] NULL,
	[СпросДень] [float] NULL,
	[ПрцЗапаса] [float] NULL,
	[СрТренд] [float] NULL,
	[МаксТренд] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[REMNANTS]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[REMNANTS](
	[ДатаРасч] [datetime] NULL,
	[Скл] [int] NULL,
	[ТовКод] [int] NULL,
	[Остаток] [float] NULL,
	[СпросДень] [float] NULL,
	[ПрцЗапаса] [float] NULL,
	[СрТренд] [float] NULL,
	[МаксТренд] [float] NULL,
	[ОжидаемыйПриход] [float] NULL,
	[ПрцЗапасаОжидаемый] [float] NULL,
	[СОжидПрих] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[del_wremRealPrice]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[del_wremRealPrice](
	[КлнКод] [int] NOT NULL,
	[ТовКод] [int] NOT NULL,
	[ТовЦенаРСХ] [money] NULL,
	[ГрпЦен] [int] NULL,
	[ЦенаПоГруппеЦен] [money] NULL,
	[ЦенаПоАльтГруппеЦен] [money] NULL,
	[ТоварнаяСкидка] [float] NULL,
	[КлнНаТовар] [float] NULL,
	[КлнНаВид] [float] NULL,
	[КлнНаГруппу] [float] NULL,
	[РеальнаяЦена] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[del_wremKlnIndPrice]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[del_wremKlnIndPrice](
	[ТовКод] [int] NOT NULL,
	[ГруппаЦен] [int] NOT NULL,
	[Цена] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[del_Tov1]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[del_Tov1](
	[ДатыРасч] [datetime] NULL,
	[КолТек] [float] NULL,
	[КолРасх] [float] NULL,
	[РасхДатаКод] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[del_Table2]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[del_Table2](
	[Город] [char](10) NULL,
	[Область] [char](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[del_picks]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[del_picks](
	[1] [nvarchar](255) NULL,
	[30#04#2006 16:49:31] [nvarchar](255) NULL,
	[WMS] [nvarchar](255) NULL,
	[311] [nvarchar](255) NULL,
	[SKU311] [nvarchar](255) NULL,
	[1N21TT06 03-1] [nvarchar](255) NULL,
	[1069342488] [nvarchar](255) NULL,
	[0] [nvarchar](255) NULL,
	[Ni?aa neea-?anoeo"Eioeeineee"200aEioeee60 IAN10%] [nvarchar](255) NULL,
	[7] [nvarchar](255) NULL,
	[01] [nvarchar](255) NULL,
	[8] [nvarchar](255) NULL,
	[4926] [nvarchar](255) NULL,
	[3] [nvarchar](255) NULL,
	[f] [nvarchar](255) NULL,
	[4607047650364] [nvarchar](255) NULL,
	[F17] [nvarchar](255) NULL,
	[6,40208265553262] [nvarchar](255) NULL,
	[6,402082655532621] [nvarchar](255) NULL,
	[6,402082655532622] [nvarchar](255) NULL,
	[0,244666666666667] [nvarchar](255) NULL,
	[262,4] [nvarchar](255) NULL,
	[6,402082655532623] [nvarchar](255) NULL,
	[S] [nvarchar](255) NULL,
	[-1] [nvarchar](255) NULL,
	[F26] [nvarchar](255) NULL,
	[F27] [nvarchar](255) NULL,
	[N] [nvarchar](255) NULL,
	[f1] [nvarchar](255) NULL,
	[F30] [nvarchar](255) NULL,
	[F31] [nvarchar](255) NULL,
	[f2] [nvarchar](255) NULL,
	[11] [nvarchar](255) NULL,
	[9999] [nvarchar](255) NULL,
	[F35] [nvarchar](255) NULL,
	[F36] [nvarchar](255) NULL,
	[F37] [nvarchar](255) NULL,
	[F38] [nvarchar](255) NULL,
	[120] [nvarchar](255) NULL,
	[F40] [nvarchar](255) NULL,
	[F41] [nvarchar](255) NULL,
	[F42] [nvarchar](255) NULL,
	[F43] [nvarchar](255) NULL,
	[F44] [nvarchar](255) NULL,
	[4] [nvarchar](255) NULL,
	[f3] [nvarchar](255) NULL,
	[12] [nvarchar](255) NULL,
	[41] [nvarchar](255) NULL,
	[unit] [nvarchar](255) NULL,
	[13] [nvarchar](255) NULL,
	[15] [nvarchar](255) NULL,
	[R] [nvarchar](255) NULL,
	[F53] [nvarchar](255) NULL,
	[f4] [nvarchar](255) NULL,
	[t] [nvarchar](255) NULL,
	[f5] [nvarchar](255) NULL,
	[production_and_shelf_life] [nvarchar](255) NULL,
	[10] [nvarchar](255) NULL,
	[14] [nvarchar](255) NULL,
	[F60] [nvarchar](255) NULL,
	[F61] [nvarchar](255) NULL,
	[F62] [nvarchar](255) NULL,
	[F63] [nvarchar](255) NULL,
	[F64] [nvarchar](255) NULL,
	[F65] [nvarchar](255) NULL,
	[F66] [nvarchar](255) NULL,
	[664] [nvarchar](255) NULL,
	[820] [nvarchar](255) NULL,
	[F69] [nvarchar](255) NULL,
	[F70] [nvarchar](255) NULL,
	[F71] [nvarchar](255) NULL,
	[F72] [nvarchar](255) NULL,
	[F73] [nvarchar](255) NULL,
	[t1] [nvarchar](255) NULL,
	[t2] [nvarchar](255) NULL,
	[t3] [nvarchar](255) NULL,
	[F77] [nvarchar](255) NULL,
	[-99999999] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [ExtInt].[ExternalCodeIndetifications]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [ExtInt].[ExternalCodeIndetifications](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[OurTypeCode] [char](2) NULL,
	[ExternalID] [int] NULL,
	[OurCode] [int] NULL,
	[ExternalCode] [int] NULL,
 CONSTRAINT [PK_ExternalCodeIndetifications] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE NONCLUSTERED INDEX [unic] ON [ExtInt].[ExternalCodeIndetifications] 
(
	[OurTypeCode] ASC,
	[ExternalID] ASC,
	[ExternalCode] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[f_cube_buffer]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[f_cube_buffer](
	[ОпКод] [bigint] NOT NULL,
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [decimal](29, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод] [bigint] NOT NULL,
	[ОпТипКлн] [tinyint] NULL,
	[ОпТовНом] [int] NOT NULL,
	[ОпТипКлн_INT] [int] NULL,
	[ОпСтоим] [decimal](38, 7) NULL,
	[ПолнАдресДоставки] [bigint] NULL,
	[ОпКлн] [int] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[КодАдрДоставки] [int] NOT NULL,
	[ОпСотр] [int] NULL,
	[ОпТипSKL] [int] NOT NULL,
	[НашаФирма] [int] NULL,
	[ОпСтоимИтог] [decimal](38, 7) NULL,
	[ОпКолИтог] [decimal](18, 3) NULL,
	[dst] [int] NULL,
	[КодТКА] [varchar](92) NULL,
	[ВесБрутто] [float] NULL,
	[ВесНетто] [float] NULL,
	[СуммаЦенаУчет] [float] NULL,
	[КодТТН] [int] NULL,
	[АдресДоставки] [varchar](1) NOT NULL,
	[Отгрузка] [decimal](38, 7) NULL,
	[SippingGradientID] [int] NULL,
	[Объем] [float] NULL,
	[ЦенаТранспОтОбъема] [money] NULL,
	[ЦенаТранспОтВеса] [money] NULL,
	[ТТН_Адрес] [int] NULL,
	[ExistTTN] [int] NOT NULL,
	[ДоляТранРсхОбъем] [decimal](38, 16) NULL,
	[ДоляТранРсхВеса] [decimal](38, 16) NULL,
	[ГрадацияТранРсхОбъемИд] [int] NULL,
	[ГрадацияТранРсхВесаИд] [int] NULL,
	[ЗаводскаяУпаковка] [int] NOT NULL,
	[КолДней] [int] NULL,
	[СуммаОстатков] [int] NULL,
	[ОставшийсяСрокГодности] [int] NULL,
	[РасхНаВет] [numeric](13, 12) NULL,
	[КолВетТов] [bit] NULL,
	[zero] [float] NULL,
	[АкцияКод] [int] NULL,
	[Бонус_1] [money] NULL,
	[Бонус_2] [money] NULL,
	[Бонус_3] [money] NULL,
	[Возврат_ТР] [money] NULL,
	[Возврат_Эксп] [money] NULL,
	[Транс_Расх] [money] NULL,
	[СуммаПрогноз_Акции_НДС] [money] NULL,
	[СуммаПрогноз_НДС] [float] NULL,
	[СуммаПрогноз_Акции] [float] NULL,
	[СуммаПрогноз] [float] NULL,
	[СуммаПрогнозМлн] [float] NULL,
	[СуммаПрогнозМлн1] [float] NULL,
	[Прогноз_Кол] [decimal](18, 3) NULL,
	[Прогноз_ЦенаУчет] [float] NULL,
	[Прогноз_ЦенаУчет_безНДС] [decimal](38, 7) NULL,
	[Вычерк] [decimal](18, 3) NULL,
	[ВычеркСтоим] [decimal](38, 6) NULL,
	[АвтокодМЛ] [int] NULL,
 CONSTRAINT [PK_f_cube_buffer] PRIMARY KEY CLUSTERED 
(
	[ОпНаклКод] ASC,
	[ОпТовНом] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_f_cube_buffer] ON [dbo].[f_cube_buffer] 
(
	[ОпДатаРасч] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_f_cube_buffer_1] ON [dbo].[f_cube_buffer] 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [cube].[f_cube_buffer]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [cube].[f_cube_buffer](
	[ОпКод] [bigint] NOT NULL,
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [decimal](29, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод] [bigint] NOT NULL,
	[ОпТипКлн] [tinyint] NULL,
	[ОпТовНом] [int] NOT NULL,
	[ОпТипКлн_INT] [int] NULL,
	[ОпСтоим] [decimal](38, 7) NULL,
	[ПолнАдресДоставки] [bigint] NULL,
	[ОпКлн] [int] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[КодАдрДоставки] [int] NOT NULL,
	[ОпСотр] [int] NULL,
	[ОпТипSKL] [int] NOT NULL,
	[НашаФирма] [int] NULL,
	[ОпСтоимИтог] [decimal](38, 7) NULL,
	[ОпКолИтог] [decimal](18, 3) NULL,
	[dst] [int] NULL,
	[КодТКА] [varchar](92) NULL,
	[ВесБрутто] [float] NULL,
	[ВесНетто] [float] NULL,
	[СуммаЦенаУчет] [float] NULL,
	[КодТТН] [int] NULL,
	[АдресДоставки] [varchar](1) NOT NULL,
	[Отгрузка] [decimal](38, 7) NULL,
	[SippingGradientID] [int] NULL,
	[Объем] [float] NULL,
	[ЦенаТранспОтОбъема] [money] NULL,
	[ЦенаТранспОтВеса] [money] NULL,
	[ТТН_Адрес] [int] NULL,
	[ExistTTN] [int] NOT NULL,
	[ДоляТранРсхОбъем] [decimal](38, 16) NULL,
	[ДоляТранРсхВеса] [decimal](38, 16) NULL,
	[ГрадацияТранРсхОбъемИд] [int] NULL,
	[ГрадацияТранРсхВесаИд] [int] NULL,
	[ЗаводскаяУпаковка] [int] NOT NULL,
	[КолДней] [int] NULL,
	[СуммаОстатков] [int] NULL,
	[ОставшийсяСрокГодности] [int] NULL,
	[РасхНаВет] [numeric](13, 12) NULL,
	[КолВетТов] [bit] NULL,
	[zero] [float] NULL,
	[АкцияКод] [int] NULL,
	[Бонус_1] [money] NULL,
	[Бонус_2] [money] NULL,
	[Бонус_3] [money] NULL,
	[Возврат_ТР] [money] NULL,
	[Возврат_Эксп] [money] NULL,
	[Транс_Расх] [money] NULL,
	[СуммаПрогноз_Акции_НДС] [money] NULL,
	[СуммаПрогноз_НДС] [float] NULL,
	[СуммаПрогноз_Акции] [float] NULL,
	[СуммаПрогноз] [float] NULL,
	[СуммаПрогнозМлн] [float] NULL,
	[СуммаПрогнозМлн1] [float] NULL,
	[Прогноз_Кол] [decimal](18, 3) NULL,
	[Прогноз_ЦенаУчет] [float] NULL,
	[Прогноз_ЦенаУчет_безНДС] [decimal](38, 7) NULL,
	[Вычерк] [decimal](18, 3) NULL,
	[ВычеркСтоим] [decimal](38, 6) NULL,
	[АвтокодМЛ] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_f_cube_buffer_2] ON [cube].[f_cube_buffer] 
(
	[ОпДатаРасч] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_f_cube_buffer_3] ON [cube].[f_cube_buffer] 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_f_cube_buffer_4] ON [cube].[f_cube_buffer] 
(
	[ОпНаклКод] ASC,
	[ОпТовНом] ASC,
	[ОпКодТов] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_f_cube_buffer_5] ON [cube].[f_cube_buffer] 
(
	[ОпКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  UserDefinedFunction [dbo].[f_BeginPrevQuartal]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE FUNCTION [dbo].[f_BeginPrevQuartal]()  
RETURNS varchar(10) AS  
BEGIN 
declare @q varchar(10)
select @q = cast(case when month(GETDATE()) in (1,2,3) then year(GETDATE())-1
				      else year(GETDATE()) end as varchar) +
			cast(case when month(GETDATE()) in (1,2,3) then '10'
 					  when month(GETDATE()) in (4,5,6) then '01'
					  when month(GETDATE()) in (7,8,9) then '04'
					  else '07' end as varchar) +
			cast('01' as varchar)
return @q
END
GO
/****** Object:  Table [xmt].[SalesAgentIdAt]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[SalesAgentIdAt](
	[Id] [int] NOT NULL,
 CONSTRAINT [PK_xmt.SalesAgentIdAt] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[SalesAgentId]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[SalesAgentId](
	[Id] [int] NOT NULL,
 CONSTRAINT [PK_xmt.SalesAgentId] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[SalesAgent]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[SalesAgent](
	[salesAgentId] [nvarchar](255) NOT NULL,
	[name] [nvarchar](255) NULL,
	[email] [nvarchar](255) NULL,
	[phone] [nvarchar](255) NULL,
 CONSTRAINT [PK_xmt.SalesAgent] PRIMARY KEY CLUSTERED 
(
	[salesAgentId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[EhrmannKLNnew]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[EhrmannKLNnew](
	[КодКлн_КодАдрДоставки] [varchar](13) NOT NULL,
	[Клиент] [varchar](255) NULL,
	[Название] [varchar](255) NULL,
	[Формат магазина] [varchar](255) NULL,
	[Канал сбыта] [varchar](255) NULL,
	[Город] [varchar](255) NULL,
	[Адрес] [varchar](255) NULL,
 CONSTRAINT [PK_EhrmannKLNnew] PRIMARY KEY CLUSTERED 
(
	[КодКлн_КодАдрДоставки] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[F_DEBET]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_DEBET](
	[ДбтТовар] [money] NULL,
	[ДбтПлат] [money] NULL,
	[ДбтКлнКод] [bigint] NOT NULL,
	[ДбтДата] [bigint] NOT NULL,
	[ДбтСальдо] [money] NULL,
	[ДбтЗаполнение] [bit] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[T_ClientDebt]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[T_ClientDebt](
	[ClientID] [int] NULL,
	[OurFirmID] [int] NULL,
	[Debt] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[T_CreditInfo]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[T_CreditInfo](
	[КлнКод] [int] NULL,
	[Клиент] [nvarchar](250) NULL,
	[Отдел] [nvarchar](250) NULL,
	[МенеджерНакл] [nvarchar](250) NULL,
	[ПостЛимитКредита] [money] NULL,
	[ВремЛимитЗаПериод] [money] NULL,
	[Изменений] [int] NULL,
	[АктивныйВремЛимит] [money] NULL,
	[ПродажиЗаПериод] [money] NULL,
	[ПродажиЗаПериод Прошлый Месяц] [money] NULL,
	[ПродажиЗаПериод Позопрошлый Месяц] [money] NULL,
	[Долг] [money] NULL,
	[ОстатокКредита]  AS (([ПостЛимитКредита]+[АктивныйВремЛимит])-[Долг]),
	[ДопСведения] [nvarchar](100) NULL,
	[ManagerID] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[KAT_TVR_ABC]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_TVR_ABC](
	[ТовКод] [int] NOT NULL,
	[ABC] [char](1) NULL,
	[ГрпABC] [char](1) NULL,
	[ВидABC] [char](1) NULL,
 CONSTRAINT [PK_KAT_TVR_ABC] PRIMARY KEY CLUSTERED 
(
	[ТовКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[T_AllDebitByOurFirmWithManager]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[T_AllDebitByOurFirmWithManager](
	[КодКлиента] [int] NULL,
	[КодФирмы] [int] NULL,
	[Отгружено] [money] NULL,
	[Возвраты] [money] NULL,
	[ПлатежиОтКлиента] [money] NULL,
	[ПлатежиКлиенту] [money] NULL,
	[ОбщаяДЗ] [money] NULL,
	[Клиент] [nvarchar](255) NULL,
	[НашаФирма] [nvarchar](255) NULL,
	[Менеджер] [nvarchar](255) NULL,
	[Подразделение] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[KAT_UPK]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_UPK](
	[УпакКод] [int] NOT NULL,
	[УпакАббр] [char](6) NULL,
	[УпакКоэф] [decimal](18, 3) NULL,
 CONSTRAINT [PK_KAT_UPK] PRIMARY KEY CLUSTERED 
(
	[УпакКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KAT_TWN]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_TWN](
	[КодГород] [bigint] NOT NULL,
	[ГородНаим] [varchar](50) NULL,
	[КодГлГород] [bigint] NULL,
 CONSTRAINT [PK_KAT_TWN] PRIMARY KEY CLUSTERED 
(
	[КодГород] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[F_PRIHCLEAN1]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_PRIHCLEAN1](
	[ОпКодТов] [int] NULL,
	[СумКол] [decimal](18, 3) NULL,
	[СумСтоим] [money] NULL,
	[ОпДата] [bigint] NOT NULL,
	[Код] [bigint] IDENTITY(1,1) NOT NULL,
	[ЕстьСпис] [tinyint] NULL,
	[ОпДатаРасч] [datetime] NULL
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [qw] ON [dbo].[F_PRIHCLEAN1] 
(
	[ОпКодТов] ASC,
	[ОпДатаРасч] ASC,
	[Код] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[f_prihclean_test]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[f_prihclean_test](
	[ОпКодТов] [int] NULL,
	[СумКол] [decimal](18, 3) NULL,
	[СумСтоим] [money] NULL,
	[ОпДата] [bigint] NOT NULL,
	[Код] [bigint] IDENTITY(1,1) NOT NULL,
	[ЕстьСпис] [tinyint] NULL,
	[ОпДатаРасч] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[F_PRIHCLEAN_1]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_PRIHCLEAN_1](
	[ОпКодТов] [int] NULL,
	[СумКол] [decimal](18, 3) NULL,
	[СумСтоим] [money] NULL,
	[ОпДата] [bigint] NOT NULL,
	[Код] [bigint] NOT NULL,
	[ЕстьСпис] [tinyint] NULL,
	[ОпДатаРасч] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CLN_DKL]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CLN_DKL](
	[КлнКод] [int] NOT NULL,
	[МнджКод] [int] NULL,
	[КодГлКлн] [int] NULL,
	[КодГород] [varchar](500) NULL,
	[КлнНаим] [varchar](500) NULL,
	[КлнАдрес] [varchar](500) NULL,
	[КлнГрузАдрес] [varchar](500) NULL,
	[ДопСведения] [varchar](500) NULL,
	[ИНН] [varchar](500) NULL,
	[Индекс] [varchar](500) NULL,
	[ИндексГруз] [varchar](500) NULL,
	[КодГородГруз] [varchar](500) NULL,
	[Матрица] [int] NULL,
	[email] [varchar](100) NULL,
 CONSTRAINT [PK_CLN_DKL] PRIMARY KEY NONCLUSTERED 
(
	[КлнКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE CLUSTERED INDEX [КлнКод] ON [dbo].[CLN_DKL] 
(
	[КлнКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Tbl_KPK_Ostatki]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Tbl_KPK_Ostatki](
	[Код] [nvarchar](30) NULL,
	[Наименование] [nvarchar](150) NULL,
	[ед] [nvarchar](50) NULL,
	[Остаток на складе] [float] NULL,
	[Бронь] [float] NULL,
	[Резерв] [float] NULL,
	[Бронь клиентов] [float] NULL,
	[Резерв клиентов] [float] NULL,
	[Заказ поставщику] [float] NULL,
	[Дефицит] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Tbl_KPK_manager]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Tbl_KPK_manager](
	[Менеджер] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Tbl_KPK_Address_]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Tbl_KPK_Address_](
	[ФИО менеджера] [float] NULL,
	[Код адреса] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Tbl_KPK_Address]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Tbl_KPK_Address](
	[ФИО менеджера] [float] NULL,
	[Код адреса] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Tbl_Kdk_code]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Tbl_Kdk_code](
	[Description] [varchar](50) NULL,
	[Kdk_ID] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Tbl_inc_diff]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Tbl_inc_diff](
	[DATE] [varchar](30) NULL,
	[LOC_NAKL] [char](16) NULL
) ON [PRIMARY]
SET ANSI_PADDING OFF
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [LOC_DETAIL_ID] [varchar](8000) NULL
SET ANSI_PADDING ON
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [LOC_SKU_KOD] [char](14) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [LOC_SKU] [char](52) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [LOC_QTY] [numeric](38, 3) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [SOLVO_QTY] [float] NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [QTY_DIFF] [float] NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [SUM_DIFF] [float] NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [SOLVO_SKU] [varchar](256) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [SOLVO_DETAIL_ID] [nvarchar](75) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [SOLVO_NAKL] [int] NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [loc_skl_id] [int] NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [loc_skl] [char](32) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [loc_kln_id] [int] NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [loc_kln] [char](32) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [solvo_client] [varchar](128) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [solvo_client_id] [varchar](64) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [loc_date] [datetime] NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [solvo_date] [datetime] NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [solvo_units] [varchar](10) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [solvo_incoming_id] [numeric](38, 0) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [loc_sku_id] [int] NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [SOLVO_SKUCODE] [varchar](64) NULL
ALTER TABLE [dbo].[Tbl_inc_diff] ADD [DATE2] [datetime] NULL
GO
SET ANSI_PADDING OFF
GO
/****** Object:  UserDefinedFunction [dbo].[TableFieldsString]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[TableFieldsString] (@currentTable as varchar(255))  
RETURNS varchar(2000) AS  
BEGIN 
  declare @fieldsString as varchar(2000)
  set @fieldsString=''

  select @fieldsString=@fieldsString+ '['+name + '],'

  from syscolumns
  where id = object_id(@currentTable)

  set @fieldsString=LEFT(@fieldsString,len(@fieldsString)-1)

  return @fieldsString
END
GO
/****** Object:  Table [ef].[T2]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [ef].[T2](
	[id] [bigint] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[ОпКод] [bigint] NOT NULL,
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [decimal](18, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод] [bigint] NULL,
	[ОпТипКлн] [tinyint] NULL,
	[ОпТовНом] [int] NULL,
	[ОпНомерПост] [int] NOT NULL,
	[ОпТипПост] [int] NOT NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [_ix2] ON [ef].[T2] 
(
	[ОпСкл] ASC,
	[ОпКодТов] ASC,
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [ef].[T1]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [ef].[T1](
	[id] [bigint] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[ОпКод] [bigint] NOT NULL,
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [decimal](18, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод] [bigint] NULL,
	[ОпТипКлн] [tinyint] NULL,
	[ОпТовНом] [int] NULL,
	[ОпНомерПост] [int] NOT NULL,
	[ОпТипПост] [int] NOT NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [_ix1] ON [ef].[T1] 
(
	[ОпСкл] ASC,
	[ОпКодТов] ASC,
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[T_PRIH_TAB]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[T_PRIH_TAB](
	[idCln] [int] NOT NULL,
	[НашаФирма] [bigint] NOT NULL,
	[sumTime] [money] NULL,
	[dateBegin] [datetime] NULL,
	[razn] [money] NULL,
	[dateEnd] [datetime] NULL,
	[dateOper] [datetime] NULL,
	[period] [int] NULL,
	[to15] [money] NULL,
	[from16to30] [money] NULL,
	[from31to45] [money] NULL,
	[from46to60] [money] NULL,
	[more60] [money] NULL,
	[advance] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[hist_skl_dop]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[hist_skl_dop](
	[id] [bigint] IDENTITY(1,1) NOT NULL,
	[ОпНаклКод] [bigint] NOT NULL,
	[ОпТовНом] [int] NULL,
	[id_type_dop] [int] NOT NULL,
	[summa_dop] [money] NULL,
 CONSTRAINT [PK_hist_skl_dop] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_hist_skl_dop] ON [dbo].[hist_skl_dop] 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_hist_skl_dop_1] ON [dbo].[hist_skl_dop] 
(
	[ОпНаклКод] ASC,
	[ОпТовНом] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_hist_skl_dop_2] ON [dbo].[hist_skl_dop] 
(
	[id_type_dop] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Hist_skl_bon]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Hist_skl_bon](
	[id] [bigint] IDENTITY(1,1) NOT NULL,
	[idHist_skl] [bigint] NULL,
	[idBon] [int] NOT NULL,
	[idBonTvr] [int] NULL,
	[Stavka] [numeric](4, 2) NULL,
	[idBon_type] [int] NULL,
	[ОпНаклКод] [bigint] NULL,
	[ОпТовНом] [int] NULL,
 CONSTRAINT [PK_Hist_skl_bon_1] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [wms].[HIST_SKL]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[HIST_SKL](
	[INVOICENUMBER] [int] NULL,
	[INVOICETYPE] [int] NULL,
	[INVOICESKL] [int] NULL,
	[SKU] [int] NULL,
	[need_qty] [float] NULL,
	[NonPlanned] [float] NULL,
	[Status] [nchar](1) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [Plan].[Hist_skl]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [Plan].[Hist_skl](
	[ОпКол] [float] NOT NULL,
	[ОпСтоим] [money] NOT NULL,
	[ОпКодТов] [int] NOT NULL,
	[КодАдрДоставки] [int] NULL,
	[ОпКлн] [int] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[СотрНакл] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [history].[HIST_SKL]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [history].[HIST_SKL](
	[ОпКод] [bigint] IDENTITY(1,1) NOT NULL,
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [decimal](18, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод] [bigint] NULL,
	[ОпТипКлн] [tinyint] NULL,
	[ОпТовНом] [int] NULL,
	[ОпНомерПост] [int] NOT NULL,
	[ОпТипПост] [int] NOT NULL,
	[ДатаРеализацииДо] [date] NULL,
	[АкцияКод] [int] NULL,
	[Бонус_1] [money] NULL,
	[Бонус_2] [money] NULL,
	[Бонус_3] [money] NULL,
	[Возврат_ТР] [money] NULL,
	[Возврат_Эксп] [money] NULL,
	[Транс_Расх] [money] NULL,
	[ТекЦена] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_GRPCEN]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_GRPCEN](
	[ТврКод] [bigint] NULL,
	[ГрпЦен] [int] NULL,
	[Цена] [money] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [M_GRPCEN] ON [dbo].[M_GRPCEN] 
(
	[ГрпЦен] ASC,
	[ТврКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [index_m_grpcen] ON [dbo].[M_GRPCEN] 
(
	[ТврКод] ASC,
	[ГрпЦен] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_FICT_SKL_DOP]    Script Date: 08/10/2015 12:55:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_FICT_SKL_DOP](
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [decimal](18, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод] [bigint] NULL,
	[ОпТипКлн] [tinyint] NULL,
	[ОпТовНом] [int] NULL,
	[ОпКлн] [int] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[ОпОстаток] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_FICT_SKL]    Script Date: 08/10/2015 12:55:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_FICT_SKL](
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [decimal](18, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод] [bigint] NULL,
	[ОпТипКлн] [tinyint] NULL,
	[ОпТовНом] [int] NULL,
	[ОпКлн] [int] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[ОпОстаток] [float] NULL,
	[ОпКолОжид] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [edi].[Create_pereocen]    Script Date: 08/10/2015 12:55:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[Create_pereocen]	--119	

as

--/*общая матрица по переоценк товаров */  
--    SELECT [pc1_pcn]
--      ,[pc1_dat_normal]
--      ,[pc2_tvr]
--      ,[pc2_cenn1]
--  FROM [PR_Euras].[dbo].[list_pcn]
--  inner join [PR_Euras].[dbo].[hist_pcn] on [pc1_pcn]=[c2_pcn]
--  where [pc2_cenn1]>0
--  order by [pc2_tvr],[pc1_dat_normal]
  
--  /*проверка по включений в другие прайсы*/
--   SELECT [pc2_tvr], count([pc2_tvr])
--    --  ,count ([pc2_cenn1])
--  FROM [PR_Euras].[dbo].[list_pcn]
--  inner join [PR_Euras].[dbo].[hist_pcn] on [pc1_pcn]=[c2_pcn]
--  where [pc2_cenn1]>0
--  group by [pc2_tvr]
-- -- order by [pc2_tvr],[pc1_dat_normal]
  
--  /*запрос за один день*/
--   select nakl.[ОпНакл],[ОпДатаРасч],[HIST_SKL].[ОпКодТов],[pc2_cenn1]
--     ,lp1.[pc1_pcn]
--		,lp1.[pc1_dop]
--		,lp1.[pc1_dat_normal]
--    FROM [PR_Euras].[dbo].[LIST_SKL] nakl
--  INNER JOIN  [PR_Euras].[dbo].[HIST_SKL] on nakl.[ОпНаклКод]=[HIST_SKL].[ОпНаклКод] and  nakl.ОпТип=1 --фильтр по приходным
--  left JOIN [PR_Euras].[dbo].[hist_pcn] pr_cen on [HIST_SKL].[ОпКодТов]= pr_cen.[pc2_tvr]
--  left JOIN [PR_Euras].[dbo].[list_pcn] lp1 on lp1.[pc1_pcn]=pr_cen.[c2_pcn]
--  where [ОпДатаРасч] ='2014-07-08 00:00:00.000'
--  and [pc2_cenn1] is not null and [pc2_cenn1] >0
----  and [HIST_SKL].[ОпКодТов]=1069365613
--  order by [HIST_SKL].[ОпКодТов]
  
      /*запрос о условию*/
--   select nakl.[ОпНакл],[ОпДатаРасч],[HIST_SKL].[ОпКодТов],dbo.HIST_SKL.ОпЦена,[pc2_cenn1]
--     ,lp1.[pc1_pcn]
--		,lp1.[pc1_dop]
--		,lp1.[pc1_dat_normal]
--		,pr_cen.hist_pcnId
--    FROM [PR_Euras].[dbo].[LIST_SKL] nakl
--  INNER JOIN  [PR_Euras].[dbo].[HIST_SKL] on nakl.[ОпНаклКод]=[HIST_SKL].[ОпНаклКод] and  nakl.ОпТип=1 --фильтр по приходным
--  left JOIN [PR_Euras].[dbo].[hist_pcn] pr_cen on [HIST_SKL].[ОпКодТов]= pr_cen.[pc2_tvr]
--  left JOIN [PR_Euras].[dbo].[list_pcn] lp1 on lp1.[pc1_pcn]=pr_cen.[c2_pcn]
--  where [ОпДатаРасч] >='2013-01-01 00:00:00.000'
--  and [pc2_cenn1] is not null and [pc2_cenn1] >0
--  and [ОпДатаРасч]>=lp1.[pc1_dat_normal]
----  and [HIST_SKL].[ОпКодТов]=1069365613
--  order by nakl.[ОпНакл],[HIST_SKL].[ОпКодТов]
  
  

  
  /*update*/
/* 
update hs
set hs.ОпЦенаБаза=[pc2_cenn2]*(1+pc2_nds/100),hs.pcnId=pr_cen.hist_pcnId
--select nakl.[ОпНакл],[ОпДатаРасч],hs.[ОпКодТов],[pc2_cenn1]
--     ,lp1.[pc1_pcn]
--		,lp1.[pc1_dop]
--		,lp1.[pc1_dat_normal]
--		,hs.ОпЦенаБаза
FROM [PR_Euras].[dbo].[LIST_SKL] nakl
  INNER JOIN  [PR_Euras].[dbo].[HIST_SKL] hs on nakl.[ОпНаклКод]=hs.[ОпНаклКод] and  nakl.ОпТип=1 --фильтр по приходным
  left JOIN [PR_Euras].[dbo].[hist_pcn] pr_cen on hs.[ОпКодТов]= pr_cen.[pc2_tvr]
  left JOIN [PR_Euras].[dbo].[list_pcn] lp1 on lp1.[pc1_pcn]=pr_cen.[c2_pcn]
  where [ОпДатаРасч] >='2014-01-01 00:00:00.000'
  and [pc2_cenn2] is not null and [pc2_cenn2] >0
  and [ОпДатаРасч]>=lp1.[pc1_dat_normal]
  */
  
  
 /* 
  update nakl
set nakl.[Zachet]=dop.[Zachet]
FROM [PR_Euras].[dbo].[LIST_SKL] nakl
 INNER JOIN  [LIST_SKL_dop] dop on nakl.[ОпНаклКод]=dop.[ОпНаклКод]
*/


    
   
    
    /*обход через курсор - тест*/
    
    
    --------------------------------------------------
/*  закрываем временно до выяснения обстоятельств 20150703
declare @numnakl int;

declare nakl_cursor CURSOR FOR 
select distinct 
--top 2 
nakl.[ОпНаклКод]   
--,[pc2_cenn1]
--     ,lp1.[pc1_pcn]
--		,lp1.[pc1_dop]
--		,lp1.[pc1_dat_normal]
	--	,hs.ОпЦенаБаза
FROM [PR_Euras].[dbo].[LIST_SKL] nakl
  INNER JOIN  [PR_Euras].[dbo].[HIST_SKL] hs on nakl.[ОпНаклКод]=hs.[ОпНаклКод] and  nakl.ОпТип=1 --фильтр по приходным
  where [ОпДатаРасч] >='2015-03-01 00:00:00.000' -- and nakl.ОпНаклКод=1017787 
 -- and [pc2_cenn2] is not null and [pc2_cenn2] >0
  --and [ОпДатаРасч]>=lp1.[pc1_dat_normal]
 -- order by  nakl.[ОпНакл]
  open nakl_cursor;

FETCH NEXT FROM nakl_cursor 
INTO @numnakl

WHILE @@FETCH_STATUS = 0
BEGIN  
	--проверка выбранного заказа
   -- PRINT @numnakl 	
    declare @dateparam datetime  ;
    
    select @dateparam= [ОпДатаРасч] FROM [PR_Euras].[dbo].[LIST_SKL] nakl where  nakl.[ОпНаклКод]=@numnakl;
 
   -- select @dateparam,@numnakl;
    
			WITH maxDate AS
			(
			
				 select  pr_cen.[pc2_tvr]
				--,lp1.[pc1_dop]
				  , max (lp1.[pc1_dat_normal]) maxdateP
				  FROM [PR_Euras].[dbo].[hist_pcn] pr_cen 
				  left JOIN [PR_Euras].[dbo].[list_pcn] lp1 on lp1.[pc1_pcn]=pr_cen.[c2_pcn]
				  where [pc1_dat_normal]<=@dateparam AND pr_cen.[cenn2] is not null and pr_cen.[cenn2] >0
				  group by  pr_cen.[pc2_tvr])
				  
				  ,sopDatePr as (  select pr_cen.[pc2_tvr],lp1.[pc1_pcn],pr_cen.cenn2
						,lp1.[pc1_dop],lp1.[pc1_dat_normal],[pc2_cenn2],pr_cen.hist_pcnId
						FROM [PR_Euras].[dbo].[hist_pcn] pr_cen 
				  left JOIN [PR_Euras].[dbo].[list_pcn] lp1 on lp1.[pc1_pcn]=pr_cen.[c2_pcn]
				  inner join maxDate on maxDate.[pc2_tvr]=pr_cen.[pc2_tvr] and maxDate.maxdateP=lp1.[pc1_dat_normal]
		  
		  )


update hs set hs.ОпЦенаБаза=sopDatePr.cenn2,hs.pcnId=sopDatePr.hist_pcnId
-- select nakl.[ОпНакл],[ОпДатаРасч],hs.[ОпКодТов] ,hs.ОпЦенаБаза
FROM [PR_Euras].[dbo].[LIST_SKL] nakl
  INNER JOIN  [PR_Euras].[dbo].[HIST_SKL] hs on nakl.[ОпНаклКод]=hs.[ОпНаклКод] and  nakl.ОпТип=1 --фильтр по приходным
   INNER JOIN sopDatePr on hs.[ОпКодТов]= sopDatePr.[pc2_tvr]
  where [ОпДатаРасч] >='2015-05-01 00:00:00.000'
  and [pc2_cenn2] is not null and [pc2_cenn2] >0
  and nakl.[ОпНаклКод]=@numnakl -- AND hs.ОпКодТов = 1069361076
    
     FETCH NEXT FROM nakl_cursor 
INTO @numnakl
END 
CLOSE nakl_cursor;
DEALLOCATE nakl_cursor;


 delete  from [PR_Euras].[dbo].[LIST_SKL_dop]
INSERT INTO [PR_Euras].[dbo].[LIST_SKL_dop]
           ([ОпНаклКод]
           ,[SumBaze]
           ,[SumSale]
           )
SELECT [ОпНаклКод]
      ,sum ([ПродажиБаза])
      ,sum ([Продажи])
  FROM [PR_Euras].[dbo].[HIST_SKL]
    where [ОпНаклКод] is not null -- and [ПродажиБаза]  is not null
   -- and [ОпНаклКод]=536800
  group by [ОпНаклКод]



 закрываем временно до выяснения обстоятельств 20150703 */
GO
/****** Object:  Table [dbo].[M_DEBIT]    Script Date: 08/10/2015 12:55:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[M_DEBIT](
	[НаклКод] [bigint] NULL,
	[НаклНом] [bigint] NULL,
	[НаклСклКод] [int] NULL,
	[НаклКлн] [int] NULL,
	[НаклСотр] [int] NULL,
	[НаклДата] [int] NULL,
	[НаклДатаРасч] [datetime] NULL,
	[НаклТип] [int] NULL,
	[НаклВозвр] [int] NULL,
	[НаклКол] [float] NULL,
	[НаклСтоим] [money] NULL,
	[НаклКодТов] [int] NULL,
	[ЦенаАльтГрп] [money] NULL,
	[ЦенаГрп] [money] NULL,
	[ЦенаКат] [money] NULL,
	[ТовСкидка] [float] NULL,
	[КлнНаТов] [float] NULL,
	[КлнНаВид] [float] NULL,
	[КлнНаГрп] [float] NULL,
	[ТекЦена] [money] NULL,
	[СуммаПродажа]  AS ([НаклСтоим]),
	[СуммаПрогноз]  AS ([НаклКол] * [ТекЦена]),
	[НДС] [float] NULL,
	[ЦенаКатУчет] [money] NULL,
	[СуммаУчет]  AS ([ЦенаКатУчет] * [НаклКол]),
	[КодКлн_КодАдрДоставки] [varchar](13) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[M_COSTS]    Script Date: 08/10/2015 12:55:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_COSTS](
	[НаклКод] [bigint] NULL,
	[НаклСум] [money] NULL,
	[Себестоим] [money] NULL,
	[ТрансВх] [money] NULL,
	[БонусВх] [money] NULL,
	[ТрансИсх] [money] NULL,
	[БонусИсх] [money] NULL,
	[КодЗатр] [bigint] NULL,
	[СуммЗатр] [money] NULL,
	[ОпНакл] [bigint] NULL,
	[ОпСкл] [int] NULL,
	[ОпТип] [int] NULL,
	[ОпКодТов] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LIST_SKL_dop]    Script Date: 08/10/2015 12:55:54 ******/
SET ARITHABORT ON
GO
SET CONCAT_NULL_YIELDS_NULL ON
GO
SET ANSI_NULLS ON
GO
SET ANSI_PADDING ON
GO
SET ANSI_WARNINGS ON
GO
SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ARITHABORT ON
GO
CREATE TABLE [dbo].[LIST_SKL_dop](
	[ОпНаклКод] [bigint] NOT NULL,
	[SumBaze] [money] NULL,
	[SumSale] [money] NULL,
	[Zachet]  AS ([SumBaze]-[SumSale])
) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
CREATE NONCLUSTERED INDEX [IX_LIST_SKL_dop] ON [dbo].[LIST_SKL_dop] 
(
	[Zachet] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_LIST_SKL_dop_1] ON [dbo].[LIST_SKL_dop] 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [history].[LIST_SKL]    Script Date: 08/10/2015 12:55:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [history].[LIST_SKL](
	[ОпНакл] [bigint] NOT NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпТип] [int] NOT NULL,
	[ОпДатаИсх] [bigint] NULL,
	[ОпКлнТип] [int] NULL,
	[ОпКлн] [int] NULL,
	[ОпВозврат] [int] NULL,
	[ОпСотр] [bigint] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[ОпНаклКод] [bigint] IDENTITY(1,1) NOT NULL,
	[ЕстьТовар] [tinyint] NULL,
	[КодАдрДоставки] [int] NULL,
	[Основание] [varchar](255) NULL,
	[ДопПрз] [int] NULL,
	[НашаФирма] [int] NULL,
	[КодКонтракта] [int] NULL,
	[НомерПостав] [int] NOT NULL,
	[ОпТипПост] [int] NOT NULL,
	[АвтокодСФ] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Hist_Skl_GenPost]    Script Date: 08/10/2015 12:55:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Hist_Skl_GenPost](
	[ОпНакл] [bigint] NULL,
	[ОпСкл] [int] NULL,
	[ОпТип] [int] NULL,
	[ОпНаклГП] [bigint] NULL,
	[ОпСклГП] [int] NULL,
	[ОпТипГП] [int] NULL,
	[ОпНомерПост] [bigint] NULL,
	[Процент] [decimal](18, 3) NULL,
	[Цена] [money] NULL,
	[КодПоставщика] [int] NULL,
	[ТовАрт] [nchar](14) NULL,
	[ТовНаим] [nchar](52) NULL,
	[НаимПост] [nchar](32) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[lst_mrsh]    Script Date: 08/10/2015 12:55:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lst_mrsh](
	[Маршрут] [varchar](52) NULL,
	[МаршрутКод] [int] NULL,
	[МаршрутГрпКод] [int] NULL,
	[Протяженность] [real] NULL,
	[КолЧасов] [real] NULL,
	[КолТочек] [int] NULL,
	[ПользКодМаршрута] [nchar](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Log]    Script Date: 08/10/2015 12:55:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Log](
	[id] [int] NULL,
	[idDDR] [int] NULL,
	[Upd_Time] [datetime] NULL,
	[FromSTDB] [tinyint] NULL,
	[Deleted] [tinyint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[HIST_SKL_Fifo]    Script Date: 08/10/2015 12:55:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[HIST_SKL_Fifo](
	[ОпКод] [bigint] NOT NULL,
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [decimal](19, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод] [bigint] NULL,
	[ОпТипКлн] [int] NULL,
	[ОпТовНом] [int] NULL,
	[ОпНомерПост] [bigint] NULL,
	[ОпТипПост] [int] NULL,
	[ЦенаПрихода] [money] NULL,
	[ВтораяЦена] [money] NULL,
	[ПредЦена] [money] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[ОпКлн] [bigint] NULL,
	[КодПост] [bigint] NULL,
	[НаклПост] [bigint] NULL,
	[СклПост] [int] NULL,
	[ОпФлПост] [int] NULL,
	[КодГенПост] [bigint] NULL,
	[НаклГенПост] [bigint] NULL,
	[СклГенПост] [int] NULL,
	[ОпФлГенПост] [int] NULL,
	[Инфо] [varchar](255) NULL,
	[Остаток] [decimal](18, 0) NULL,
	[Глубина] [int] NULL,
	[НаимТовара] [varchar](250) NULL,
	[НаимКлн] [varchar](250) NULL,
	[НаимПост] [varchar](250) NULL,
	[ЦенаПост] [money] NULL,
	[ДатаПост] [datetime] NULL,
	[НаимГенПост] [varchar](250) NULL,
	[ЦенаГенПост] [money] NULL,
	[ДатаГенПост] [datetime] NULL,
	[ТовАрт] [varchar](50) NULL,
	[УчетЦена] [money] NULL,
	[ПоставщикНаСоюз] [varchar](100) NULL,
	[ПоставщикНаГенПоставщика] [varchar](100) NULL,
	[ТипПоставщика] [varchar](100) NULL,
	[ГенПоставщик] [varchar](100) NULL,
	[ПроцентНаценки] [varchar](100) NULL,
	[КСУ] [int] NULL,
	[Разноска] [decimal](18, 0) NULL,
	[ИнфоРазноска] [varchar](50) NULL,
	[КодАдрДоставки] [int] NULL,
	[ИмяСклад] [varchar](50) NULL,
	[Основание] [varchar](255) NULL,
	[ОпСотр] [bigint] NULL,
	[ИмяСотруд] [varchar](100) NULL,
	[Комментарий] [varchar](100) NULL,
	[КодПризнака] [int] NULL,
	[Признак] [varchar](100) NULL,
	[ПрдНаим] [char](32) NULL,
	[ЦенаНДС] [float] NULL,
	[ТипКлн] [bigint] NULL,
	[ОснПост] [varchar](255) NULL,
	[КомПост] [varchar](256) NULL,
	[ОснГенПост] [varchar](255) NULL,
	[КомГенПост] [varchar](256) NULL,
	[ИндСебест] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[M_KLNSKD]    Script Date: 08/10/2015 12:55:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_KLNSKD](
	[КлнКод] [bigint] NULL,
	[ТврКод] [bigint] NULL,
	[ОтпКат] [money] NULL,
	[ГрпЦен] [int] NULL,
	[ЦенаГрп] [money] NULL,
	[АльтГрпЦен] [int] NULL,
	[ЦенаАльтГрп] [money] NULL,
	[СкдТвр] [float] NULL,
	[СкдКлнТвр] [float] NULL,
	[СкдКлнВид] [float] NULL,
	[СкдКлнГрп] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ТемпОплаты]    Script Date: 08/10/2015 12:55:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ТемпОплаты](
	[ОпНаклКод] [numeric](19, 0) NOT NULL,
	[ДатаРасч] [datetime] NULL,
	[Разнесено] [float] NULL,
	[СуммПериод] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[Инвентаризация]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Инвентаризация]
AS
SELECT     TOP 100 PERCENT SKU_ID, SKU_NAME, SKU_CODE, UOM_NAME, HOST_SKU_GROUP_ID, HOST_SKU_TYPE_ID, HOST_SKU_GROUP, 
                      HOST_SKU_TYPE, SUM(QTY) AS QTY, SUM(WEIGHT) AS WEIGHT
FROM         dbo.['Текущие свободные остатки$']
GROUP BY SKU_ID, SKU_NAME, SKU_CODE, UOM_NAME, HOST_SKU_GROUP_ID, HOST_SKU_TYPE_ID, HOST_SKU_GROUP, HOST_SKU_TYPE
ORDER BY HOST_SKU_GROUP, HOST_SKU_TYPE
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "''Текущие свободные остатки$''"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 151
               Right = 431
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 11
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 2355
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Инвентаризация'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Инвентаризация'
GO
/****** Object:  Table [dbo].[kln_firm]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[kln_firm](
	[Col001] [int] NULL,
	[Col002] [int] NULL,
	[Col003] [int] NULL,
	[Col004] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[kln_dkl]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[kln_dkl](
	[КодКлиента] [int] NULL,
	[КодМенеджера] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[kgvt_tab]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[kgvt_tab](
	[kt_tip] [tinyint] NULL,
	[kt_kln] [int] NULL,
	[kt_gvt] [int] NULL,
	[kt_dst] [tinyint] NULL,
	[kt_tipkln] [tinyint] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [tip_dst] ON [dbo].[kgvt_tab] 
(
	[kt_tip] ASC,
	[kt_tipkln] ASC,
	[kt_gvt] ASC,
	[kt_kln] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[KLN_ADK]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KLN_ADK](
	[КодАдресаДоставки] [int] NOT NULL,
	[АдресДоставки] [nvarchar](255) NULL,
	[КодКлиента] [int] NULL,
	[КодГорода] [int] NULL,
	[АдресАрхив] [int] NULL,
	[МнджКод] [int] NULL,
	[GLN] [char](13) NULL,
	[Индекс] [char](8) NULL,
	[Наим] [nchar](50) NULL,
	[Матрица] [int] NULL,
	[ExtFile] [varchar](150) NULL,
 CONSTRAINT [PK_KLN_ADK] PRIMARY KEY CLUSTERED 
(
	[КодАдресаДоставки] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [ikln_adk1] ON [dbo].[KLN_ADK] 
(
	[КодКлиента] ASC,
	[КодАдресаДоставки] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [KLN_ADK_idx] ON [dbo].[KLN_ADK] 
(
	[КодКлиента] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [KLN_ADK_idx2] ON [dbo].[KLN_ADK] 
(
	[GLN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 - обычный; -1 - архив' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'KLN_ADK', @level2type=N'COLUMN',@level2name=N'АдресАрхив'
GO
/****** Object:  Table [edi].[Kontur_error]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [edi].[Kontur_error](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[class] [nchar](10) NOT NULL,
	[errorMessage] [varchar](60) NOT NULL,
	[zn1] [nvarchar](20) NULL,
	[zn2] [numeric](13, 0) NULL,
	[data] [smalldatetime] NULL,
	[order] [int] NULL,
	[data_ispv] [smalldatetime] NULL,
	[comment] [nvarchar](50) NULL,
	[prov] [bit] NULL,
	[difference] [decimal](12, 2) NULL,
 CONSTRAINT [PK_Kontur_error] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [edi].[Kontur]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [edi].[Kontur](
	[id] [int] IDENTITY(400000,1) NOT NULL,
	[id_massge] [nvarchar](70) NOT NULL,
	[id_event] [nvarchar](50) NULL,
	[id_Invoice] [nvarchar](50) NULL,
	[body] [xml] NULL,
	[status] [nchar](50) NULL,
	[DocumentNumber] [varchar](20) NULL,
	[DocumentDate] [smalldatetime] NULL,
	[DocumentType] [varchar](25) NULL,
	[id_event_parent] [nvarchar](50) NULL,
	[stamp] [smalldatetime] NULL,
	[ordsp] [bit] NULL,
	[DELNOT] [bit] NULL,
	[Desadv] [xml] NULL,
	[Response] [xml] NULL,
	[Box] [nchar](4) NULL,
	[ordsp_time] [smalldatetime] NULL,
	[desadv_time] [smalldatetime] NULL,
	[desadv_out] [bit] NULL,
	[povt_export] [bit] NULL,
	[INVOIC] [xml] NULL,
	[INVOIC_out] [bit] NULL,
	[INVOIC_time] [smalldatetime] NULL,
	[RECADV] [xml] NULL,
	[RECADV_id] [int] NULL,
	[povt_desadv] [bit] NULL,
	[povt_invoic] [bit] NULL,
 CONSTRAINT [PK_Kontur] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ClnTmp]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ClnTmp](
	[Клн] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [edi].[Kln_GLN]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [edi].[Kln_GLN](
	[idKlnGln] [int] IDENTITY(1,1) NOT NULL,
	[КлнКод] [int] NULL,
	[GLN] [char](13) NULL,
	[Stamp_] [smalldatetime] NULL,
 CONSTRAINT [PK_Kln_GLN] PRIMARY KEY NONCLUSTERED 
(
	[idKlnGln] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE CLUSTERED INDEX [GLN] ON [edi].[Kln_GLN] 
(
	[GLN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Назначение "OLE DB"]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Назначение "OLE DB"](
	[ТовКод] [int] NULL,
	[ТовНаим] [varchar](52) NULL,
	[ТовГрп] [int] NULL,
	[ТовВид] [int] NULL,
	[ТовАрт] [varchar](14) NULL,
	[ТовЕИ] [varchar](6) NULL,
	[ТовУпак] [int] NULL,
	[ТовЦенаРСХ] [money] NULL,
	[НДС] [float] NULL,
	[ТовЦенаУчет] [money] NULL,
	[ABC] [varchar](1) NULL,
	[ШтрихКод] [varchar](14) NULL,
	[БФ] [bigint] NULL,
	[ТовЦенаПРХ] [money] NULL,
	[1] [varchar](52) NULL,
	[2] [int] NULL,
	[3] [int] NULL,
	[4] [varchar](6) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  UserDefinedFunction [dbo].[fFilterNumeric]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[fFilterNumeric]
 (
 @Src nvarchar(255)
 )
 RETURNS nvarchar(255)
 AS 
 BEGIN
 declare @Res nvarchar(255)
 declare @i int, @l int, @c char
 select @i=1, @l=len(@Src)
 SET @Res = ''
 while @i<=@l
 begin
    set @c=upper(substring(@Src,@i,1))
     IF  isnumeric(@c)=1 --and @c != '.'
         SET @Res = @Res + @c
    set @i=@i+1
 end

return(@res)
 END
GO
/****** Object:  Table [dbo].[DKM_BASI]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DKM_BASI](
	[ДОКод] [bigint] NOT NULL,
	[ДОНом] [char](16) NULL,
	[ДОКодПлат] [bigint] NULL,
	[ДОТип] [tinyint] NULL,
	[ДОНаим] [bigint] NULL,
	[ДОСумма] [money] NULL,
	[ДОДата] [bigint] NULL,
	[ДОДатаРасч] [datetime] NULL,
	[ДОКонтракт] [bigint] NULL,
	[ДОПризнак] [int] NULL,
	[ДОКлнСотр] [tinyint] NULL,
	[ДОКодКлн] [bigint] NULL,
	[ДОДатаОпл] [bigint] NULL,
	[ДОДатаОплРасч] [datetime] NULL,
	[ДОДатаКод] [bigint] NULL,
	[ДОТипПечати] [tinyint] NULL,
	[ДОКодПодр] [bigint] NULL,
	[НашаФирма] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DKM_BASE_testSrok]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DKM_BASE_testSrok](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [char](16) NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатДатаРасч] [datetime] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL,
	[ПлатКодНалог] [bigint] NULL,
	[ПлатДатаОпл] [bigint] NULL,
	[ПлатДатаОплРасч] [datetime] NULL,
	[ПлатКлнСотр] [tinyint] NULL,
	[ПлатСчет] [bigint] NULL,
	[ПлатРеквизит] [bigint] NULL,
	[ПлатАвзНом] [bigint] NULL,
	[ПлатНазначение] [bigint] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DKM_BASE_old]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DKM_BASE_old](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [char](16) NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатДатаРасч] [datetime] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL,
	[ПлатКодНалог] [bigint] NULL,
	[ПлатДатаОпл] [bigint] NULL,
	[ПлатДатаОплРасч] [datetime] NULL,
	[ПлатКлнСотр] [tinyint] NULL,
	[ПлатСчет] [bigint] NULL,
	[ПлатРеквизит] [bigint] NULL,
	[ПлатАвзНом] [bigint] NULL,
	[ПлатНазначение] [bigint] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE CLUSTERED INDEX [ПлатКод] ON [dbo].[DKM_BASE_old] 
(
	[ПлатКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [Клн_Фирма] ON [dbo].[DKM_BASE_old] 
(
	[ПлатКлнКод] ASC
)
WHERE ([ПлатТип]<(40) AND [ПлатКлнСотр]=(1))
WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [history].[DKM_BASE]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [history].[DKM_BASE](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [char](16) NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатДатаРасч] [datetime] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL,
	[ПлатКодНалог] [bigint] NULL,
	[ПлатДатаОпл] [bigint] NULL,
	[ПлатДатаОплРасч] [datetime] NULL,
	[ПлатКлнСотр] [tinyint] NULL,
	[ПлатСчет] [bigint] NULL,
	[ПлатРеквизит] [bigint] NULL,
	[ПлатАвзНом] [bigint] NULL,
	[ПлатНазначение] [bigint] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DKM_BASE]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DKM_BASE](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [char](16) NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатДатаРасч] [datetime] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL,
	[ПлатКодНалог] [bigint] NULL,
	[ПлатДатаОпл] [bigint] NULL,
	[ПлатДатаОплРасч] [datetime] NULL,
	[ПлатКлнСотр] [tinyint] NULL,
	[ПлатСчет] [bigint] NULL,
	[ПлатРеквизит] [bigint] NULL,
	[ПлатАвзНом] [bigint] NULL,
	[ПлатНазначение] [bigint] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[DisconnectAllProcess]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[DisconnectAllProcess] @Base_Name as varchar(50)
AS

--Отключение всех процессов от базы------------------
----------------------------------------------------------------------------------

--переменная для идентификатора отключаемого процесса
declare @dspid as smallint
--переменная для строкового представления команды kill
declare @str_dspid as varchar(30)

--создаем курсор на набор записей со spid процессов занимающих базу,
--кроме текущего процесса
DECLARE disc_spid CURSOR
FORWARD_ONLY 
FOR
select req_spid from master.dbo.syslockinfo
where Upper(Ltrim(Rtrim(DB_NAME(rsc_dbid))))=Upper(Ltrim(Rtrim(@Base_Name))) and req_spid<>@@spid
       and (req_ownertype=3 or req_ownertype=4)
FOR READ ONLY

--открываем курсор
OPEN disc_spid

--записываем в @dspid spid первого процесса
FETCH NEXT FROM disc_spid
INTO @dspid
--перебираем все процессы и удаляем их
WHILE @@FETCH_STATUS=0
 BEGIN
  set @str_dspid='kill ' + Ltrim(str(@dspid))
  exec dbo.sp_sqlexec @str_dspid
  FETCH NEXT FROM disc_spid
  INTO @dspid
 END

--закрываем курсор
CLOSE disc_spid
DEALLOCATE disc_spid
GO
/****** Object:  StoredProcedure [edi].[vetSpravka]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [edi].[vetSpravka]	--119	
	@startdate date = NULL,
	@enddate date = NULL
as
	 declare @curdate date

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-14,@enddate)
	end
	
	set @curdate = @startdate
	WHILE @curdate <= @enddate
	BEGIN
		print @curdate
	set @curdate = DATEADD(DAY, 1, @curdate)
	END
GO
/****** Object:  View [wms].[V_WORK_INFO_FOR_ANALYZE_VIEW]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [wms].[V_WORK_INFO_FOR_ANALYZE_VIEW]
as 
SELECT V_WORK_INFO_FOR_ANALYZE_VIEW.WORK_TYPE, V_WORK_INFO_FOR_ANALYZE_VIEW.PICK_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.NORM_TIME, V_WORK_INFO_FOR_ANALYZE_VIEW.WORK_TIME, V_WORK_INFO_FOR_ANALYZE_VIEW.START_DATE, V_WORK_INFO_FOR_ANALYZE_VIEW.FINISH_DATE, V_WORK_INFO_FOR_ANALYZE_VIEW.LOAD_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.SKU_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.SKU_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.HOST_SKU_TYPE, V_WORK_INFO_FOR_ANALYZE_VIEW.HOST_SKU_GROUP, V_WORK_INFO_FOR_ANALYZE_VIEW.STORECND, V_WORK_INFO_FOR_ANALYZE_VIEW.PICK_LINE, V_WORK_INFO_FOR_ANALYZE_VIEW.QTY, V_WORK_INFO_FOR_ANALYZE_VIEW.PICKED_QTY, V_WORK_INFO_FOR_ANALYZE_VIEW.PICKED_WEIGHT, V_WORK_INFO_FOR_ANALYZE_VIEW.PICKED_VOLUME, V_WORK_INFO_FOR_ANALYZE_VIEW.WORKER_ERRORS, V_WORK_INFO_FOR_ANALYZE_VIEW.PACK_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.DIRECTION_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.ORDER_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.DIRECTION_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.CLIENT_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.LOCATION_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.LOCATION_TIER, V_WORK_INFO_FOR_ANALYZE_VIEW.LOCATION_PREFIX, V_WORK_INFO_FOR_ANALYZE_VIEW.TO_LOC_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.TO_LOC_TIER, V_WORK_INFO_FOR_ANALYZE_VIEW.TO_LOC_PREFIX, V_WORK_INFO_FOR_ANALYZE_VIEW.WORKER_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.WORKER_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.WORKER_SHIFT, V_WORK_INFO_FOR_ANALYZE_VIEW.PICK_REASON, V_WORK_INFO_FOR_ANALYZE_VIEW.WEEK_NUMBER, V_WORK_INFO_FOR_ANALYZE_VIEW.DAY_NUMBER, V_WORK_INFO_FOR_ANALYZE_VIEW.COMPLETE, V_WORK_INFO_FOR_ANALYZE_VIEW.COMPLETE_TYPE, V_WORK_INFO_FOR_ANALYZE_VIEW.SHIFT_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.START_SHIFT_DATE, V_WORK_INFO_FOR_ANALYZE_VIEW.DELIVERY_TYPE, V_WORK_INFO_FOR_ANALYZE_VIEW.MANUAL, V_WORK_INFO_FOR_ANALYZE_VIEW.THIS_PICK_LIST  
,WAREHOUSE_ID 

FROM 
OPENQUERY(WMS, 'SELECT * FROM WMS.V_WORK_INFO_FOR_ANALYZE   WHERE START_DATE >=to_date(''20120101'',''yyyymmdd'')') 
V_WORK_INFO_FOR_ANALYZE_VIEW
GO
/****** Object:  View [wms].[V_WORK_INFO_FOR_ANALYZE_VIEW1]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [wms].[V_WORK_INFO_FOR_ANALYZE_VIEW1]
as 
SELECT top 100 V_WORK_INFO_FOR_ANALYZE_VIEW.WORK_TYPE, V_WORK_INFO_FOR_ANALYZE_VIEW.PICK_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.NORM_TIME, V_WORK_INFO_FOR_ANALYZE_VIEW.WORK_TIME, V_WORK_INFO_FOR_ANALYZE_VIEW.START_DATE, V_WORK_INFO_FOR_ANALYZE_VIEW.FINISH_DATE, V_WORK_INFO_FOR_ANALYZE_VIEW.LOAD_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.SKU_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.SKU_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.HOST_SKU_TYPE, V_WORK_INFO_FOR_ANALYZE_VIEW.HOST_SKU_GROUP, V_WORK_INFO_FOR_ANALYZE_VIEW.STORECND, V_WORK_INFO_FOR_ANALYZE_VIEW.PICK_LINE, V_WORK_INFO_FOR_ANALYZE_VIEW.QTY, V_WORK_INFO_FOR_ANALYZE_VIEW.PICKED_QTY, V_WORK_INFO_FOR_ANALYZE_VIEW.PICKED_WEIGHT, V_WORK_INFO_FOR_ANALYZE_VIEW.PICKED_VOLUME, V_WORK_INFO_FOR_ANALYZE_VIEW.WORKER_ERRORS, V_WORK_INFO_FOR_ANALYZE_VIEW.PACK_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.DIRECTION_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.ORDER_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.DIRECTION_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.CLIENT_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.LOCATION_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.LOCATION_TIER, V_WORK_INFO_FOR_ANALYZE_VIEW.LOCATION_PREFIX, V_WORK_INFO_FOR_ANALYZE_VIEW.TO_LOC_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.TO_LOC_TIER, V_WORK_INFO_FOR_ANALYZE_VIEW.TO_LOC_PREFIX, V_WORK_INFO_FOR_ANALYZE_VIEW.WORKER_ID, V_WORK_INFO_FOR_ANALYZE_VIEW.WORKER_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.WORKER_SHIFT, V_WORK_INFO_FOR_ANALYZE_VIEW.PICK_REASON, V_WORK_INFO_FOR_ANALYZE_VIEW.WEEK_NUMBER, V_WORK_INFO_FOR_ANALYZE_VIEW.DAY_NUMBER, V_WORK_INFO_FOR_ANALYZE_VIEW.COMPLETE, V_WORK_INFO_FOR_ANALYZE_VIEW.COMPLETE_TYPE, V_WORK_INFO_FOR_ANALYZE_VIEW.SHIFT_NAME, V_WORK_INFO_FOR_ANALYZE_VIEW.START_SHIFT_DATE, V_WORK_INFO_FOR_ANALYZE_VIEW.DELIVERY_TYPE, V_WORK_INFO_FOR_ANALYZE_VIEW.MANUAL, V_WORK_INFO_FOR_ANALYZE_VIEW.THIS_PICK_LIST  
,WAREHOUSE_ID 

FROM WMS..WMS.V_WORK_INFO_FOR_ANALYZE V_WORK_INFO_FOR_ANALYZE_VIEW
GO
/****** Object:  Table [dbo].[Valio_Report]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Valio_Report](
	[Дата Продажи] [datetime] NULL,
	[ФИО супервайзера] [varchar](200) NULL,
	[ФИО торг. представителя] [varchar](200) NULL,
	[Код Клиента] [int] NULL,
	[Название торговой точки] [varchar](200) NULL,
	[Название клиента] [varchar](255) NULL,
	[Территория (Город)] [varchar](200) NULL,
	[Область] [varchar](200) NULL,
	[Адрес доставки] [varchar](255) NULL,
	[Тип Клиента] [varchar](200) NULL,
	[Формат ТТ] [varchar](200) NULL,
	[Код товара] [varchar](200) NULL,
	[Наименование товара] [varchar](200) NULL,
	[Вес Нетто] [numeric](18, 3) NULL,
	[Продажи (рубли с НДС)] [money] NULL,
	[Брэнд] [varchar](200) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[F_KRT]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_KRT](
	[КртКлн] [int] NULL,
	[КртКод] [int] NULL,
	[КртШаблон] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[F_OPER]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_OPER](
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [numeric](18, 3) NOT NULL,
	[ОпСтоим] [money] NOT NULL,
	[ОпКод] [bigint] NOT NULL,
	[ОпВесБрутто] [float] NULL,
	[ОпКолУпак] [numeric](18, 3) NULL,
	[ОпНаклКод] [bigint] NOT NULL,
	[ОпВесНетто] [float] NULL,
	[ОпВозвр] [tinyint] NULL,
	[ОпТип] [tinyint] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [IX_F_OPER_ОпТип] ON [dbo].[F_OPER] 
(
	[ОпТип] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[F_DEBET_SROK_SUPP]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_DEBET_SROK_SUPP](
	[ЧастьСальдо] [money] NULL,
	[ДатаЧастиСальдо] [datetime] NULL,
	[СрокДоИзмСальдо] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[FN_SP]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[FN_SP](
	[Distrib_code] [varchar](50) NOT NULL,
	[Customer_SP_code] [varchar](50) NOT NULL,
	[Customer_SP_name] [varchar](200) NOT NULL,
	[Customer_SP_head_code] [varchar](50) NULL,
	[Customer_SP_head_name] [varchar](200) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[FN_Sales]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[FN_Sales](
	[Distrib_code] [varchar](50) NOT NULL,
	[Sales_date] [varchar](50) NULL,
	[Sales_operation] [varchar](7) NOT NULL,
	[Sales_return_reason] [varchar](100) NOT NULL,
	[Product_code] [varchar](50) NOT NULL,
	[Customer_code] [varchar](50) NOT NULL,
	[Customer_AP_method] [varchar](13) NOT NULL,
	[Customer_AP_code] [varchar](50) NOT NULL,
	[Customer_AP_name] [varchar](200) NOT NULL,
	[Customer_SP_code] [varchar](50) NULL,
	[Sales_quantity] [int] NOT NULL,
	[Sales_ammount_rub] [varchar](50) NOT NULL,
	[Warehouse_code] [varchar](50) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[FN_Rest]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[FN_Rest](
	[Distrib_code] [varchar](50) NOT NULL,
	[Rest_calculation_date] [varchar](50) NULL,
	[Warehouse_code] [varchar](50) NOT NULL,
	[Product_code] [varchar](50) NOT NULL,
	[Rest_quantity] [int] NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[FN_Product]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[FN_Product](
	[Distrib_code] [varchar](50) NOT NULL,
	[Product_code] [varchar](50) NOT NULL,
	[Product_name] [varchar](200) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[FN_Price]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[FN_Price](
	[Distrib_code] [varchar](50) NOT NULL,
	[Price_list_code] [varchar](50) NOT NULL,
	[Product_code] [varchar](50) NOT NULL,
	[Price_start_date] [varchar](50) NULL,
	[Price_end_date] [varchar](50) NULL,
	[Price_rub_wo_nds] [varchar](50) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[FN_ItemMove]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[FN_ItemMove](
	[Distrib_code] [varchar](50) NOT NULL,
	[ItemMove_date] [varchar](50) NULL,
	[Warehouse_code] [varchar](50) NOT NULL,
	[ItemMove_operation] [varchar](10) NOT NULL,
	[ItemMove_reason] [varchar](100) NOT NULL,
	[Product_code] [varchar](50) NOT NULL,
	[Rest_quantity] [int] NOT NULL,
	[ItemMove_doc_numbers] [varchar](200) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[FN_DailyRest]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[FN_DailyRest](
	[Distrib_code] [varchar](50) NOT NULL,
	[Rest_calculation_date] [varchar](50) NULL,
	[Warehouse_code] [varchar](50) NOT NULL,
	[Product_code] [varchar](50) NOT NULL,
	[Rest_quantity] [int] NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[FN_Customer]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[FN_Customer](
	[Distrib_code] [varchar](50) NOT NULL,
	[Customer_code] [varchar](50) NOT NULL,
	[Customer_name] [varchar](200) NOT NULL,
	[Customer_SP_code] [varchar](50) NULL,
	[Customer_AP_method] [varchar](13) NOT NULL,
	[Customer_AP_code] [varchar](50) NOT NULL,
	[Customer_AP_name] [varchar](200) NOT NULL,
	[Customer_AP_kladr_code] [varchar](17) NULL,
	[Customer_AP_dom] [varchar](50) NULL,
	[Customer_legal_address] [varchar](200) NULL,
	[Customer_phone_number] [varchar](50) NULL,
	[Customer_email] [varchar](50) NULL,
	[Customer_contacts] [varchar](250) NULL,
	[Customer_open_date] [varchar](50) NULL,
	[Customer_close_date] [varchar](50) NULL,
	[Price_list_code] [varchar](50) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [edi].[FIRM_GLN]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [edi].[FIRM_GLN](
	[ФирмаКод] [int] NULL,
	[GLN] [char](13) NULL,
	[KorusLogin] [nvarchar](50) NULL,
	[KorusPassword] [nvarchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE CLUSTERED INDEX [GLN] ON [edi].[FIRM_GLN] 
(
	[GLN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SROK_SALDO]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SROK_SALDO](
	[Дата] [datetime] NULL,
	[Приход] [money] NULL,
	[Расход] [money] NULL,
	[Сумма] [money] NULL,
	[Сальдо] [money] NULL,
	[СредПериод] [decimal](18, 4) NULL,
	[КлнКод] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[Stock]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[Stock](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[StockDate] [date] NULL,
	[WareCode] [int] NULL,
	[WareRest] [float] NULL,
	[StoreCode] [int] NULL,
 CONSTRAINT [PK_Stock] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Diadock]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Diadock](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[id_massge] [nvarchar](50) NULL,
	[id_ivent] [nvarchar](50) NOT NULL,
	[id_Invoice] [nvarchar](50) NULL,
	[body] [xml] NULL,
	[status] [nchar](50) NULL,
	[date] [smalldatetime] NULL,
	[DocumentNumber] [nchar](15) NULL,
	[DocumentDate] [nchar](15) NULL,
 CONSTRAINT [PK_Diadock] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_Diadock] ON [dbo].[Diadock] 
(
	[id_ivent] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[bonus_table]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[bonus_table](
	[idbon] [int] NULL,
	[idTVR] [int] NULL,
	[idTVRGRP] [int] NULL,
	[idTVRVID] [int] NULL,
	[iskl] [bit] NULL,
	[StavkaBon] [numeric](20, 2) NULL,
	[idKLN] [int] NULL,
	[tt_iskl] [bit] NULL,
	[Date_beg] [smalldatetime] NULL,
	[Date_end] [smalldatetime] NULL,
	[StavkaBonDef] [numeric](15, 2) NULL,
	[idBon_type] [int] NULL
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_bt] ON [dbo].[bonus_table] 
(
	[idKLN] ASC,
	[Date_beg] ASC,
	[Date_end] ASC,
	[idTVR] ASC,
	[idBon_type] ASC
)
INCLUDE ( [StavkaBon],
[StavkaBonDef]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  UserDefinedFunction [dbo].[BitTest]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[BitTest](@BinaryExpression int, @BitNumber int)
RETURNS bit AS  
BEGIN 
RETURN CASE WHEN (@BinaryExpression & POWER(2,@BitNumber)) != 0 THEN 1 ELSE 0 END
END
GO
/****** Object:  UserDefinedFunction [dbo].[BitSet]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[BitSet](@BinaryExpression int, @BitNumber int)
RETURNS int AS  
BEGIN 
RETURN @BinaryExpression | POWER(2,@BitNumber)
END
GO
/****** Object:  Table [dbo].[BAD_DATES]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[BAD_DATES](
	[BADTABLE] [char](10) NULL,
	[BADNMB] [char](16) NULL,
	[BADDATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[backup_list_skl]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[backup_list_skl](
	[ОпНакл] [bigint] NOT NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпТип] [int] NOT NULL,
	[ОпДатаИсх] [bigint] NULL,
	[ОпКлнТип] [int] NULL,
	[ОпКлн] [int] NULL,
	[ОпВозврат] [int] NULL,
	[ОпСотр] [bigint] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[ОпНаклКод] [bigint] IDENTITY(1,1) NOT NULL,
	[ЕстьТовар] [tinyint] NULL,
	[КодАдрДоставки] [int] NULL,
	[Основание] [varchar](255) NULL,
	[ДопПрз] [int] NULL,
	[НашаФирма] [int] NULL,
	[КодКонтракта] [int] NULL,
	[НомерПостав] [int] NOT NULL,
	[ОпТипПост] [int] NOT NULL,
	[АвтокодСФ] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[AvgSaldoByFirm_testBit]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AvgSaldoByFirm_testBit](
	[Client] [bigint] NOT NULL,
	[Firm] [int] NULL,
	[Credit] [money] NULL,
	[Debit] [money] NULL,
	[Saldo] [money] NULL,
	[Date] [datetime] NULL,
	[AvgSaldo] [money] NULL,
	[DateCode] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AvgSaldoByFirm_test1]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AvgSaldoByFirm_test1](
	[Client] [bigint] NOT NULL,
	[Firm] [int] NULL,
	[Credit] [money] NULL,
	[Debit] [money] NULL,
	[Saldo] [money] NULL,
	[Date] [datetime] NULL,
	[AvgSaldo] [money] NULL,
	[DateCode] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[SoftMatrix]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[SoftMatrix](
	[SoftMatrixId] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](150) NULL,
	[Priority] [int] NULL,
	[Color] [nvarchar](50) NULL,
	[WareListFilter] [nvarchar](50) NULL,
	[RetailListFilter] [nvarchar](50) NULL,
 CONSTRAINT [PK_xmt.SoftMatrix] PRIMARY KEY CLUSTERED 
(
	[SoftMatrixId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SLD_KLN]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SLD_KLN](
	[КлнКод] [bigint] NOT NULL,
	[НачСальдо11] [money] NULL,
	[НачСальдо12] [money] NULL,
	[НачСальдо21] [money] NULL,
	[НачСальдо22] [money] NULL,
	[ДатаСальдоИсх1] [int] NULL,
	[ДатаСальдоИсх2] [int] NULL,
	[ВлтКод] [int] NULL,
	[ЛимитКредита] [money] NULL,
	[ДнейКредита] [int] NULL,
	[ПроцКредита] [float] NULL,
	[ВлтКрдтКод] [int] NULL,
	[ГрпЦен] [int] NULL,
	[СотрПерерасч] [int] NULL,
	[ДатаСальдо1] [datetime] NULL,
	[ДатаСальдо2] [datetime] NULL,
 CONSTRAINT [PK_SLD_KLN] PRIMARY KEY CLUSTERED 
(
	[КлнКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [sld_kln_grpcen] ON [dbo].[SLD_KLN] 
(
	[ГрпЦен] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[list_zvk]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[list_zvk](
	[НомЗвк] [int] NULL,
	[АвтКодЗвк] [int] NOT NULL,
	[ДатаЗвк] [int] NULL,
	[ТипЗвк] [int] NULL,
	[Статус] [int] NULL,
	[АвтКодМЛ] [int] NULL,
	[КодАдк] [int] NULL,
	[Вес] [float] NULL,
	[Объем] [float] NULL,
	[КодКлн] [int] NULL,
	[ДатаЗаявкиРасч]  AS (dateadd(second,[ДатаЗвк],CONVERT([datetime],'31.12.1969 19:00:00',(104))))
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [АвтКодЗвк] ON [dbo].[list_zvk] 
(
	[АвтКодЗвк] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ilist_zvk] ON [dbo].[list_zvk] 
(
	[АвтКодЗвк] ASC
)
INCLUDE ( [АвтКодМЛ]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [АвтКодМЛ] ON [dbo].[list_zvk] 
(
	[АвтКодМЛ] ASC
)
INCLUDE ( [АвтКодЗвк]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LIST_TDK]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[LIST_TDK](
	[Номер] [varchar](32) NULL,
	[Код] [bigint] NOT NULL,
	[Дата] [bigint] NULL,
	[КодСтраны] [int] NULL,
	[Доп] [varchar](32) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[list_sv]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[list_sv](
	[ГрпКод] [int] NULL,
	[КлнКод] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [MAIN\paseka].[Solvo_incomings]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [MAIN\paseka].[Solvo_incomings](
	[INCOMING_ID] [numeric](38, 0) NULL,
	[LOC_ID] [varchar](64) NULL,
	[DOC_NUMBER] [varchar](64) NULL,
	[INCOMING_CLOSE_DATE] [datetime] NULL,
	[SKU_ID] [varchar](64) NULL,
	[NAME] [varchar](256) NULL,
	[QTY] [float] NULL,
	[UNITS] [varchar](10) NULL,
	[CLIENT_ID] [varchar](64) NULL,
	[CLIENT] [varchar](128) NULL,
	[OWNER_ID] [varchar](64) NULL,
	[OWNER] [varchar](128) NULL,
	[SOLVO_SKUCODE] [varchar](64) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [history].[cube.Hist_skl]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [history].[cube.Hist_skl](
	[ОпКод] [bigint] NOT NULL,
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [decimal](18, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод] [bigint] NULL,
	[ОпТипКлн] [tinyint] NULL,
	[ОпТовНом] [int] NULL,
	[ОпСтоим] [decimal](38, 7) NULL,
	[ОпКлн] [int] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[КодАдрДоставки] [int] NOT NULL,
	[ОпСотр] [int] NULL,
	[ОпТипSKL] [int] NOT NULL,
	[НашаФирма] [int] NULL,
	[ВесБрутто] [float] NULL,
	[ВесНетто] [float] NULL,
	[КодТТН] [int] NULL,
	[АдресДоставки] [nvarchar](255) NULL,
	[Отгрузка] [decimal](38, 7) NULL,
	[SippingGradientID] [int] NULL,
	[Объем] [float] NULL,
	[ЦенаТранспОтОбъема] [float] NULL,
	[ЦенаТранспОтВеса] [float] NULL,
	[ОставшийсяСрокГодности] [float] NULL,
	[РасхНаВет] [float] NULL,
	[КолВетТов] [float] NULL,
	[АкцияКод] [int] NULL,
	[DST] [int] NULL,
	[ОпБонус] [money] NULL,
	[Бонус_1] [money] NULL,
	[Бонус_2] [money] NULL,
	[Бонус_3] [money] NULL,
	[Возврат_ТР] [money] NULL,
	[Возврат_Эксп] [money] NULL,
	[Транс_Расх] [money] NULL,
	[СуммаПрогноз_Акции_НДС] [money] NULL,
	[СуммаПрогноз_НДС] [money] NULL,
	[СуммаПрогноз_Акции] [money] NULL,
	[СуммаПрогноз] [money] NULL,
	[Прогноз_Кол] [decimal](18, 3) NULL,
	[Прогноз_ЦенаУчет] [money] NULL,
	[Прогноз_ЦенаУчет_безНДС] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ctlg_tas]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ctlg_tas](
	[ПлатНазначение] [nvarchar](250) NULL,
	[ПлатНазначениеКод] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[list_skl_type_dop]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[list_skl_type_dop](
	[id_type_dop] [int] IDENTITY(1,1) NOT NULL,
	[name] [varchar](100) NULL,
 CONSTRAINT [PK_list_skl_type_dop] PRIMARY KEY CLUSTERED 
(
	[id_type_dop] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[D_DATE]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_DATE](
	[ОпГод] [int] NOT NULL,
	[ОпКвартал] [int] NOT NULL,
	[ОпМесяц] [int] NOT NULL,
	[ОпДекада] [varchar](16) NULL,
	[ОпНеделя] [varchar](16) NULL,
	[ОпДень] [int] NOT NULL,
	[ОпКод] [bigint] NOT NULL,
	[ОпНеделяДрб] [varchar](16) NULL,
	[ОпКодНеделя] [int] NULL,
	[ОпКодНеделяДрб] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CustSaldo]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CustSaldo](
	[idBuyer] [int] NULL,
	[Saldo] [float] NULL,
	[BalDate] [datetime] NULL,
	[fk_Log] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [WBD].[Customers]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [WBD].[Customers](
	[Код клиента] [varchar](50) NULL,
	[Наименование клиента] [varchar](50) NULL,
	[Код точки доставки] [varchar](50) NULL,
	[Код альтернативного адреса] [varchar](50) NULL,
	[Адрес доставки] [varchar](50) NULL,
	[Адрес клиента] [varchar](50) NULL,
	[ИНН] [varchar](50) NULL,
	[№ заказа] [varchar](50) NULL,
	[Временные ограничения разгрузки с] [varchar](50) NULL,
	[Временные ограничения разгрузки по] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE CLUSTERED INDEX [[Код точки доставки]]] ON [WBD].[Customers] 
(
	[Код точки доставки] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[customer_real_price]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[customer_real_price](
	[КлнКод] [int] NOT NULL,
	[ТовКод] [int] NOT NULL,
	[РеальнаяЦена] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LIST_ZKZ]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[LIST_ZKZ](
	[ЗкзКод] [int] NOT NULL,
	[ЗкзНом] [char](12) NULL,
	[ЗкзДатаРасч] [datetime] NULL,
	[ЗкзГрп] [int] NULL,
	[ЗкзКлн] [int] NULL,
	[ЗкзФио] [char](22) NULL,
	[ЗкзСумма] [float] NULL,
	[ЗкзСкл] [int] NULL,
	[ЗкзПризн] [int] NULL,
	[ЗкзСотр] [int] NULL,
	[ЗкзМндж] [int] NULL,
	[ЗкзДатаОриг] [int] NULL,
	[ЗкзБитФл] [int] NULL,
	[ЗкзДопПрз] [int] NULL,
	[ЗкзДатаЗавершИсх] [int] NULL,
	[ЗкзДатаЗавершРасч] [datetime] NULL,
	[ЗкзАдр] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE CLUSTERED INDEX [ЗкзКод] ON [dbo].[LIST_ZKZ] 
(
	[ЗкзКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ЗкзАдр] ON [dbo].[LIST_ZKZ] 
(
	[ЗкзАдр] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ЗкзГрп] ON [dbo].[LIST_ZKZ] 
(
	[ЗкзГрп] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ЗкзДатаЗавершРасч] ON [dbo].[LIST_ZKZ] 
(
	[ЗкзДатаЗавершРасч] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ЗкзДатаРасч] ON [dbo].[LIST_ZKZ] 
(
	[ЗкзДатаРасч] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ЗкзКлн] ON [dbo].[LIST_ZKZ] 
(
	[ЗкзКлн] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ЗкзНом] ON [dbo].[LIST_ZKZ] 
(
	[ЗкзНом] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ЗкзСкл] ON [dbo].[LIST_ZKZ] 
(
	[ЗкзСкл] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[WriteTable_HIST SKL  Plan]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[WriteTable_HIST SKL  Plan](
	[ОпСтоим_0] [float] NULL,
	[ДатыРасч_1] [datetime] NULL,
	[ТовКод_2] [int] NULL,
	[КлнКод_3] [int] NULL,
	[КодАдресаДоставки_4] [int] NULL,
	[СотрКод_5] [int] NULL,
	[MS_AUDIT_TIME_6] [datetime] NULL,
	[MS_AUDIT_USER_7] [nvarchar](255) NULL,
	[КлнКод_6] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[wremVkusman]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[wremVkusman](
	[Код дистрибутора] [varchar](10) NOT NULL,
	[Дата] [datetime] NULL,
	[Код товара] [int] NOT NULL,
	[Артикул] [char](52) NULL,
	[КлнНаим] [char](32) NULL,
	[Продажи (рубли с НДС)] [money] NOT NULL,
	[Продажи (штуки)] [decimal](18, 3) NULL,
	[ТовВидНаим] [char](32) NULL,
	[КлнКод] [int] NOT NULL,
	[Город] [char](22) NULL,
	[КодКлн_КодАдрДоставки] [varchar](13) NOT NULL,
	[КодАдрДоставки] [int] NULL,
	[КаналСбыта] [varchar](40) NULL,
	[ФорматМагазина] [varchar](40) NULL,
	[Склад] [varchar](100) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[wremEhrmann]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[wremEhrmann](
	[Код дистрибутора] [varchar](10) NOT NULL,
	[Дата] [datetime] NULL,
	[Код товара] [int] NOT NULL,
	[Артикул] [char](52) NULL,
	[КлнНаим] [char](32) NULL,
	[Продажи (рубли с НДС)] [money] NOT NULL,
	[Продажи (штуки)] [decimal](18, 3) NULL,
	[ТовВидНаим] [char](32) NULL,
	[КлнКод] [int] NOT NULL,
	[Город] [char](22) NULL,
	[КодКлн_КодАдрДоставки] [varchar](13) NOT NULL,
	[КодАдрДоставки] [int] NULL,
	[КаналСбыта] [varchar](40) NULL,
	[ФорматМагазина] [varchar](40) NULL,
	[Склад] [varchar](100) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[wremAllTovar]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[wremAllTovar](
	[Код дистрибутора] [varchar](10) NOT NULL,
	[Дата] [datetime] NULL,
	[Код товара] [int] NOT NULL,
	[Артикул] [char](52) NULL,
	[КлнНаим] [char](32) NULL,
	[Продажи (рубли с НДС)] [money] NOT NULL,
	[Продажи (штуки)] [decimal](18, 3) NULL,
	[ТовВидНаим] [char](32) NULL,
	[КлнКод] [int] NOT NULL,
	[Город] [char](22) NULL,
	[КодКлн_КодАдрДоставки] [varchar](13) NOT NULL,
	[КодАдрДоставки] [int] NULL,
	[КаналСбыта] [varchar](40) NULL,
	[ФорматМагазина] [varchar](40) NULL,
	[Склад] [varchar](100) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [wms].[wrapping]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[wrapping](
	[komb_prod] [nvarchar](120) NULL,
	[komb_wrapping] [nvarchar](64) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TovTmp]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TovTmp](
	[КодТов] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Tbl_KPK_SBR_Price]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Tbl_KPK_SBR_Price](
	[Код] [char](30) NOT NULL,
	[Наименование] [char](150) NULL,
	[Цена] [money] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Tbl_KPK_Ostatki_SBR]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Tbl_KPK_Ostatki_SBR](
	[Код] [nvarchar](30) NULL,
	[Наименование] [nvarchar](150) NULL,
	[ед] [nvarchar](50) NULL,
	[Остаток на складе] [float] NULL,
	[Цена отпускная] [float] NULL,
	[Стоимость] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [cube].[Hist_skl]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [cube].[Hist_skl](
	[ОпКод] [bigint] NOT NULL,
	[ОпКодТов] [int] NOT NULL,
	[ОпКодТовГрп] [int] NULL,
	[ОпКодТовВид] [int] NULL,
	[ОпКол] [decimal](18, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод] [bigint] NULL,
	[ОпТипКлн] [tinyint] NULL,
	[ОпТовНом] [int] NULL,
	[ОпСтоим] [decimal](38, 7) NULL,
	[ОпКлн] [int] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[КодАдрДоставки] [int] NOT NULL,
	[ОпСотр] [int] NULL,
	[ОпТипSKL] [int] NOT NULL,
	[НашаФирма] [int] NULL,
	[ВесБрутто] [float] NULL,
	[ВесНетто] [float] NULL,
	[КодТТН] [int] NULL,
	[АдресДоставки] [nvarchar](255) NULL,
	[Отгрузка] [decimal](38, 7) NULL,
	[SippingGradientID] [int] NULL,
	[Объем] [float] NULL,
	[ЦенаТранспОтОбъема] [float] NULL,
	[ЦенаТранспОтВеса] [float] NULL,
	[ОставшийсяСрокГодности] [float] NULL,
	[РасхНаВет] [float] NULL,
	[КолВетТов] [float] NULL,
	[АкцияКод] [int] NULL,
	[DST] [int] NULL,
	[Бонус_1] [money] NULL,
	[Бонус_2] [money] NULL,
	[Бонус_3] [money] NULL,
	[Возврат_ТР] [money] NULL,
	[Возврат_Эксп] [money] NULL,
	[Транс_Расх] [money] NULL,
	[СуммаПрогноз_Акции_НДС] [money] NULL,
	[СуммаПрогноз_НДС] [money] NULL,
	[СуммаПрогноз_Акции] [money] NULL,
	[СуммаПрогноз] [money] NULL,
	[Прогноз_Кол] [decimal](18, 3) NULL,
	[Прогноз_ЦенаУчет] [money] NULL,
	[Прогноз_ЦенаУчет_безНДС] [money] NULL,
	[Вычерк] [decimal](18, 3) NULL,
	[ВычеркСтоим] [money] NULL
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [index_cube_HIST_SKL_ОпНаклКод] ON [cube].[Hist_skl] 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [WBD].[goods]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [WBD].[goods](
	[Код товара] [varchar](50) NULL,
	[Артикул товара] [varchar](50) NULL,
	[Описание товара] [varchar](50) NULL,
	[Основная ЕИ] [varchar](50) NULL,
	[Штук в месте] [varchar](50) NULL,
	[Вес места кг] [varchar](50) NULL,
	[Вес штуки кг] [varchar](50) NULL,
	[Срок хранения] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE CLUSTERED INDEX [[Код товара]]] ON [WBD].[goods] 
(
	[Код товара] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[GOODS]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[GOODS](
	[idGroup] [int] NULL,
	[idGoods] [int] NULL,
	[CurrencyType] [tinyint] NULL,
	[Name] [char](15) NULL,
	[idCountry] [int] NULL,
	[idDeclar] [int] NULL,
	[MerchType] [tinyint] NULL,
	[AdvertType] [tinyint] NULL,
	[BaseType] [tinyint] NULL,
	[SavePrice] [tinyint] NULL,
	[Stake] [float] NULL,
	[TFS] [float] NULL,
	[fk_Log] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  View [dbo].[VIEW17]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW17]
AS
SELECT     dbo.del_kat_kln1_.Col002 AS Expr2
FROM         dbo.del_klnGrp1 LEFT OUTER JOIN
                      dbo.del_kat_kln1_ ON dbo.del_klnGrp1.name = dbo.del_kat_kln1_.Col001
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[4] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "del_klnGrp1"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 84
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "del_kat_kln1_"
            Begin Extent = 
               Top = 22
               Left = 453
               Bottom = 153
               Right = 604
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 2
         Width = 284
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW17'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW17'
GO
/****** Object:  View [dbo].[VIEW16]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW16]
AS
SELECT     dbo.del_klnGrp.name AS Expr1, dbo.del_klnGrp.FS, dbo.del_kat_kln1_.*
FROM         dbo.del_klnGrp INNER JOIN
                      dbo.del_kat_kln1_ ON dbo.del_klnGrp.name = dbo.del_kat_kln1_.Col001
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "del_klnGrp"
            Begin Extent = 
               Top = 26
               Left = 293
               Bottom = 104
               Right = 444
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "del_kat_kln1_"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW16'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW16'
GO
/****** Object:  Table [dbo].[TEST_TABLE]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TEST_TABLE](
	[SPC] [int] NOT NULL,
	[PR] [money] NOT NULL,
 CONSTRAINT [PK_TEST_TABLE] PRIMARY KEY CLUSTERED 
(
	[SPC] ASC,
	[PR] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TEST_KPK_SALDO]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TEST_KPK_SALDO](
	[Customer_Code] [int] NOT NULL,
	[Balance] [money] NOT NULL,
	[Balance_Date] [datetime] NOT NULL,
 CONSTRAINT [PK_TEST_KPK_SALDO] PRIMARY KEY CLUSTERED 
(
	[Customer_Code] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TEST_KPK_OVERDUE_DEL_NOTE]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TEST_KPK_OVERDUE_DEL_NOTE](
	[Customer_Code] [int] NOT NULL,
	[Delivery_Note] [int] NOT NULL,
	[Del_Note_Sum] [money] NOT NULL,
	[Balance_Del_Note] [money] NOT NULL,
	[Del_Note_Day] [datetime] NOT NULL,
	[Del_Note_Pay_Day] [datetime] NOT NULL,
	[Overdue_Day] [int] NOT NULL,
 CONSTRAINT [PK_TEST_KPK_OVERDUE_DEL_NOTE] PRIMARY KEY CLUSTERED 
(
	[Customer_Code] ASC,
	[Delivery_Note] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TEST_KPK_DEL_NOTE_ROWS]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TEST_KPK_DEL_NOTE_ROWS](
	[Delivery_Note] [int] NOT NULL,
	[Sale_Part_Code] [int] NOT NULL,
	[Sale_Part_Quantity] [float] NOT NULL,
	[Unit_Name] [nvarchar](50) NOT NULL,
	[Warehouse_Name] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_TEST_KPK_DEL_NOTE_ROWS] PRIMARY KEY CLUSTERED 
(
	[Delivery_Note] ASC,
	[Sale_Part_Code] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TEST_KPK_DEL_NOTE_HEAD]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TEST_KPK_DEL_NOTE_HEAD](
	[Customer_Code] [int] NOT NULL,
	[Trade_Point_Code] [int] NOT NULL,
	[Delivery_Note] [int] NOT NULL,
	[Del_Note_Day] [datetime] NOT NULL,
	[Del_Note_Ship_Day] [datetime] NOT NULL,
	[Past_Ship_Day] [int] NOT NULL,
 CONSTRAINT [PK_TEST_KPK_DEL_NOTE] PRIMARY KEY CLUSTERED 
(
	[Customer_Code] ASC,
	[Trade_Point_Code] ASC,
	[Delivery_Note] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TEST_kat_kln1]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TEST_kat_kln1](
	[Col001] [nvarchar](255) NULL,
	[Col002] [nvarchar](255) NULL,
	[Col003] [nvarchar](255) NULL,
	[Col004] [nvarchar](255) NULL,
	[Col005] [nvarchar](255) NULL,
	[Col006] [nvarchar](255) NULL,
	[Col007] [nvarchar](255) NULL,
	[Col008] [nvarchar](255) NULL,
	[Col009] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TEST_CLIENT_SALE_PART_TAB]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TEST_CLIENT_SALE_PART_TAB](
	[КлнНаим] [char](32) NULL,
	[КлнКод] [int] NOT NULL,
	[ТовКод] [int] NOT NULL,
	[ТовЦенаРСХ] [money] NULL,
	[ГрпЦен] [int] NULL,
	[ЦенаПоГруппеЦен] [money] NULL,
	[ЦенаПоАльтГруппеЦен] [money] NULL,
	[ТоварнаяСкидка] [float] NULL,
	[КлнНаТовар] [float] NULL,
	[КлнНаВид] [float] NULL,
	[КлнНаГруппу] [float] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [wms].[tempORDERS]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[tempORDERS](
	[CREATED] [datetime] NULL,
	[CREATED_BY] [nvarchar](256) NULL,
	[CHANGED_BY] [numeric](38, 0) NULL,
	[STATUS] [nvarchar](1) NULL,
	[OLD_STATUS] [nvarchar](1) NULL,
	[ID] [numeric](38, 0) NOT NULL,
	[HOST_ID] [nvarchar](64) NULL,
	[TYPE] [nvarchar](1) NULL,
	[CLIENT_ID] [numeric](38, 0) NULL,
	[CLIENT_ADDR_ID] [numeric](38, 0) NULL,
	[BUYERID] [numeric](38, 0) NULL,
	[DOC_NO] [nvarchar](32) NULL,
	[DATE_TO_PICK] [datetime] NULL,
	[DATE_TO_SHIP] [datetime] NULL,
	[DATE_TO_DELIVERY] [datetime] NULL,
	[CARRIER_ID] [numeric](38, 0) NULL,
	[DATE_PICKED] [datetime] NULL,
	[DATE_SHIPPED] [datetime] NULL,
	[DATE_DELIVERED] [datetime] NULL,
	[PLAN_TIME] [datetime] NULL,
	[SHIP_METHOD] [numeric](38, 0) NULL,
	[SHIP_DIVIDE] [numeric](38, 0) NULL,
	[DOC_PASS_ID] [numeric](38, 0) NULL,
	[WHO_RESPONSE] [nvarchar](60) NULL,
	[CUBE] [float] NULL,
	[WEIGHT] [float] NULL,
	[WEIGHT_NETTO] [float] NULL,
	[CARTONS] [numeric](38, 0) NULL,
	[STAGE_LOC] [numeric](38, 0) NULL,
	[DOCK] [numeric](38, 0) NULL,
	[PRIORITY] [numeric](38, 0) NULL,
	[CUSTOMER_ID] [numeric](38, 0) NULL,
	[PLANNED_COMPLETE] [numeric](38, 0) NULL,
	[COMPLETE] [numeric](38, 0) NULL,
	[COMMENTS] [nvarchar](2048) NULL,
	[DELIVERY_DIR_ID] [numeric](38, 0) NULL,
	[AUTO_ACTIVATE] [nvarchar](1) NULL,
	[AUTO_WAVE] [nvarchar](1) NULL,
	[PALET_TRANSFER] [nvarchar](1) NULL,
	[HOT_ORDER] [nvarchar](1) NULL,
	[DATE_CREATED] [datetime] NULL,
	[DATE_ACTIVATED] [datetime] NULL,
	[ACTIVATED_BY] [numeric](38, 0) NULL,
	[DOWNLOAD_PARAMS] [numeric](38, 0) NULL,
	[DELIVERY_SEQ] [numeric](38, 0) NULL,
	[LAST_EXPED_LOC_ID] [numeric](38, 0) NULL,
	[INFO] [nvarchar](128) NULL,
	[TOTAL_PICKS] [numeric](38, 0) NULL,
	[PRINTED_PICKS] [numeric](38, 0) NULL,
	[SA_USE] [nvarchar](1) NULL,
	[SA_REPLAN] [nvarchar](1) NULL,
	[DOC_USE] [nvarchar](1) NULL,
	[DOC_FILL] [nvarchar](1) NULL,
	[WAVE_ID] [numeric](38, 0) NULL,
	[WAVE_ORDERS] [numeric](38, 0) NULL,
	[CONTROL_TYPE] [nvarchar](32) NULL,
	[LOCKED_PICK] [numeric](38, 0) NULL,
	[YARD_USE] [nvarchar](1) NULL,
	[FROM_ORDER_ID] [numeric](38, 0) NULL,
	[SPLIT_NUMBER] [numeric](38, 0) NULL,
	[PACK_NUMBER] [numeric](38, 0) NULL,
	[CANCEL_ORDER_ID] [numeric](38, 0) NULL,
	[PROGNOSIS_NUM_PICKS] [numeric](38, 0) NULL,
	[PROGNOSIS_AVG_WEIGHT_NETTO] [float] NULL,
	[PROGNOSIS_NUM_SKUS] [numeric](38, 0) NULL,
	[CONS_ORDER_ID] [numeric](38, 0) NULL,
	[GROUP_ID] [numeric](38, 0) NULL,
	[NEED_CUBE] [float] NULL,
	[PLANNED_CUBE] [float] NULL,
	[PICKED_CUBE] [float] NULL,
	[PACKED_CUBE] [float] NULL,
	[DOCUMENT_LOC] [nvarchar](128) NULL,
	[TRANSPORT] [nvarchar](128) NULL,
	[DRIVER] [nvarchar](128) NULL,
	[FORWARDER] [nvarchar](128) NULL,
	[NUM_LINES] [numeric](38, 0) NULL,
	[BILLING_REQUEST_ID] [numeric](38, 0) NULL,
	[OWNER_ID] [numeric](38, 0) NULL,
	[WAREHOUSE_ID] [numeric](38, 0) NULL,
	[CHANGED] [datetime] NULL,
	[HOST_NAME] [nvarchar](128) NULL,
	[COMPANY] [nvarchar](512) NULL,
	[PARAM_BM] [numeric](38, 0) NULL,
	[OLD_WAVE_ID] [numeric](38, 0) NULL,
	[DATE_TO_LOAD] [datetime] NULL,
	[PRINT_GROUP_ID] [numeric](38, 0) NULL,
	[HOST_NUMBER] [nvarchar](128) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[temp2]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[temp2](
	[ПутЛист] [varchar](22) NULL,
	[КодТТН] [int] NOT NULL,
	[ДатаИсх] [bigint] NULL,
	[Сопр] [varchar](22) NULL,
	[Автомоб] [varchar](22) NULL,
	[РегНом] [varchar](22) NULL,
	[Водит] [varchar](22) NULL,
	[НомерТТН] [bigint] NULL,
	[ПрОтпр] [int] NULL,
	[ДатаФактОриг] [bigint] NULL,
	[ДатаПланОриг] [bigint] NULL,
	[ДопСвед] [varchar](40) NULL,
	[КодГрузоотпр] [bigint] NULL,
	[КодСотр] [bigint] NULL,
	[КодВодит] [int] NULL,
	[КодСопр] [int] NULL,
	[КодАвто] [int] NULL,
	[КодЗапПоездки] [int] NULL,
	[РегистрНом] [varchar](22) NULL,
	[ПользЗанявший] [varchar](4) NULL,
	[НашаФирма] [int] NULL,
	[БитФлаги] [int] NULL,
	[КодЗатр] [bigint] NULL,
	[СуммЗатр] [money] NULL,
	[СуммЗатрНдс] [money] NULL,
	[Валюта] [int] NULL,
	[ДатаКурсаОриг] [bigint] NULL,
	[ТипОпер] [int] NULL,
	[ДатаРасч] [datetime] NULL,
	[Перевозчик] [int] NULL,
	[ShippingGradient] [varchar](1) NOT NULL,
	[Самовывоз] [int] NOT NULL,
	[Нулевые транспортные затраты] [int] NOT NULL,
	[ПеревозчикName] [char](32) NULL,
	[ТипОперНазв] [varchar](7) NULL,
	[Есть ТТН] [varchar](8) NOT NULL,
	[Есть накладные по ТТН] [int] NOT NULL,
	[Расходы ТТН разнесены по товарам] [int] NOT NULL,
	[ПризнакМЛ] [varchar](21) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [ef].[temp]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [ef].[temp](
	[idClient] [int] NOT NULL,
	[credit] [money] NULL,
	[debit] [money] NULL,
	[saldo] [money] NULL,
	[dateSaldo] [datetime] NULL,
	[sumperiod] [money] NULL,
	[AvgSaldo] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [ef].[te]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [ef].[te](
	[Скл] [int] NULL,
	[Дата] [date] NULL,
	[ТовКод] [int] NULL,
	[Остаток] [real] NULL,
	[ВесБруттоОстатка] [float] NULL,
	[СуммаЦенаУчетОстатка] [float] NULL,
	[ОбъемОстатка] [float] NULL,
	[дефицит] [float] NULL,
	[ТрехДневныйДефицит] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[GRPT_ABC]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[GRPT_ABC](
	[GrptKod] [int] NULL,
	[GrptUse] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[GRP_ZATR]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[GRP_ZATR](
	[ЗатрНаим] [char](32) NULL,
	[ЗатрГрп] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[GROUPGOODS]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[GROUPGOODS](
	[idGroup] [int] NULL,
	[Name] [char](15) NULL,
	[idParent] [int] NULL,
	[fk_Log] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TVR_STV]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TVR_STV](
	[ТовКод] [bigint] NULL,
	[АкТиЛс] [int] NULL,
	[Акциз] [float] NULL,
	[Акциз1] [float] NULL,
	[Акциз2] [float] NULL,
	[Акциз3] [float] NULL,
	[ПризнакТары] [bigint] NULL,
	[СчетБух] [bigint] NULL,
	[Влюта] [int] NULL,
	[Убл1] [float] NULL,
	[Убл2] [float] NULL,
	[Убл3] [float] NULL,
	[Убл4] [float] NULL,
	[Убл5] [float] NULL,
	[КодОКЕЙ] [bigint] NULL,
	[Грп1] [money] NULL,
	[Грп2] [money] NULL,
	[Грп3] [money] NULL,
	[Грп4] [money] NULL,
	[Грп5] [money] NULL,
	[Грп6] [money] NULL,
	[Грп7] [money] NULL,
	[Грп8] [money] NULL,
	[Грп9] [money] NULL,
	[Грп10] [money] NULL,
	[Грп11] [money] NULL,
	[Грп12] [money] NULL,
	[Грп13] [money] NULL,
	[Грп14] [money] NULL,
	[Грп15] [money] NULL,
	[Грп16] [money] NULL,
	[Грп17] [money] NULL,
	[Грп18] [money] NULL,
	[Грп19] [money] NULL,
	[Грп20] [money] NULL,
	[Грп21] [money] NULL,
	[Грп22] [money] NULL,
	[Грп23] [money] NULL,
	[Грп24] [money] NULL,
	[Грп25] [money] NULL,
	[Грп26] [money] NULL,
	[Грп27] [money] NULL,
	[Грп28] [money] NULL,
	[Грп29] [money] NULL,
	[Грп30] [money] NULL,
	[Грп31] [money] NULL,
	[Грп32] [money] NULL,
	[ТврОпис] [varchar](152) NULL,
	[Грп33] [money] NULL,
	[Грп34] [money] NULL,
	[Грп35] [money] NULL,
	[Грп36] [money] NULL,
	[Грп37] [money] NULL,
	[Грп38] [money] NULL,
	[Грп39] [money] NULL,
	[Грп40] [money] NULL,
	[Грп41] [money] NULL,
	[Грп42] [money] NULL,
	[Грп43] [money] NULL,
	[Грп44] [money] NULL,
	[Грп45] [money] NULL,
	[Грп46] [money] NULL,
	[Грп47] [money] NULL,
	[Грп48] [money] NULL,
	[Грп49] [money] NULL,
	[Грп50] [money] NULL,
	[Грп51] [money] NULL,
	[Грп52] [money] NULL,
	[Грп53] [money] NULL,
	[Грп54] [money] NULL,
	[Грп55] [money] NULL,
	[Грп56] [money] NULL,
	[Грп57] [money] NULL,
	[Грп58] [money] NULL,
	[Грп59] [money] NULL,
	[Грп60] [money] NULL,
	[Грп61] [money] NULL,
	[Грп62] [money] NULL,
	[Грп63] [money] NULL,
	[Грп64] [money] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tvr_ost]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tvr_ost](
	[КодТов] [int] NOT NULL,
	[АртТов] [char](10) NULL,
	[Кол] [decimal](18, 0) NULL,
	[Дата] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tvr_ksh]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tvr_ksh](
	[ТовКод] [int] NULL,
	[Упаковка] [int] NULL,
	[ШК] [nvarchar](50) NULL,
	[Цена] [money] NULL,
	[Доп] [nvarchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LIST_SKL]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[LIST_SKL](
	[ОпНакл] [bigint] NOT NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпТип] [int] NOT NULL,
	[ОпДатаИсх] [bigint] NULL,
	[ОпКлнТип] [int] NULL,
	[ОпКлн] [int] NULL,
	[ОпВозврат] [int] NULL,
	[ОпСотр] [bigint] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[ЕстьТовар] [tinyint] NULL,
	[КодАдрДоставки] [int] NULL,
	[Основание] [varchar](255) NULL,
	[ДопПрз] [int] NULL,
	[НашаФирма] [int] NULL,
	[КодКонтракта] [int] NULL,
	[НомерПостав]  AS ((1)),
	[ОпТипПост]  AS ((1)),
	[АвтокодСФ] [int] NULL,
	[НомНаклНашФ] [varchar](30) NULL,
	[НомНаклКонтр] [varchar](20) NULL,
	[Бонус] [int] NULL,
	[ОпБит] [bigint] NULL,
	[ОпНаклКод] [bigint] NOT NULL,
	[КодАдрВозвр] [int] NULL,
 CONSTRAINT [PK_LIST_SKL] PRIMARY KEY CLUSTERED 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [ixlist_skl] ON [dbo].[LIST_SKL] 
(
	[ОпНаклКод] ASC
)
INCLUDE ( [ОпСкл],
[ОпВозврат],
[ОпКлнТип],
[ОпКлн],
[ОпДатаРасч],
[КодАдрДоставки],
[ОпСотр]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixlist_skl_Бонус] ON [dbo].[LIST_SKL] 
(
	[Бонус] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixlist_skl_КодАдрДоставки] ON [dbo].[LIST_SKL] 
(
	[КодАдрДоставки] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixlist_skl_НашаФирма] ON [dbo].[LIST_SKL] 
(
	[НашаФирма] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixlist_skl_ОпВозврат] ON [dbo].[LIST_SKL] 
(
	[ОпВозврат] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixlist_skl_ОпДатаРасч] ON [dbo].[LIST_SKL] 
(
	[ОпДатаРасч] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixlist_skl_ОпКлн] ON [dbo].[LIST_SKL] 
(
	[ОпКлн] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixlist_skl_ОпНакл] ON [dbo].[LIST_SKL] 
(
	[ОпНакл] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixlist_skl_ОпСкл] ON [dbo].[LIST_SKL] 
(
	[ОпСкл] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixlist_skl_ОпТип] ON [dbo].[LIST_SKL] 
(
	[ОпТип] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[HIST_SKL]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[HIST_SKL](
	[ОпКод] [bigint] IDENTITY(1,1) NOT NULL,
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [decimal](18, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод_old] [bigint] NULL,
	[ОпТипКлн] [tinyint] NULL,
	[ОпТовНом] [int] NULL,
	[ОпНомерПост]  AS ((1)),
	[ОпТипПост]  AS ((1)),
	[ДатаРеализацииДо] [date] NULL,
	[АкцияКод] [int] NULL,
	[ОпЦенаБаза] [money] NULL,
	[Дельта]  AS ([ОпЦенаБаза]-[ОпЦена]),
	[Продажи]  AS ([ОпЦена]*[ОпКол]),
	[ПродажиБаза]  AS ([ОпЦенаБаза]*[ОпКол]),
	[ПродажиДельта]  AS (([ОпЦенаБаза]-[ОпЦена])*[ОпКол]),
	[pcnId] [int] NULL,
	[ОпНаклКод] [bigint] NULL,
	[ОпКолВозвр] [decimal](18, 3) NULL,
	[ТранспНац] [money] NULL,
 CONSTRAINT [PK_HIST_SKL] PRIMARY KEY CLUSTERED 
(
	[ОпКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixhist_skl] ON [dbo].[HIST_SKL] 
(
	[ОпКодТов] ASC
)
INCLUDE ( [ОпКол],
[ОпТип],
[ОпЦена],
[ОпКодУпак],
[ОпНакл],
[ОпНаклКод]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixhist_skl_ОпНакл] ON [dbo].[HIST_SKL] 
(
	[ОпНакл] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixhist_skl_ОпНаклКод] ON [dbo].[HIST_SKL] 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixhist_skl_ОпСкл] ON [dbo].[HIST_SKL] 
(
	[ОпСкл] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixhist_skl_ОпТип] ON [dbo].[HIST_SKL] 
(
	[ОпТип] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Транспортная наценка' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'HIST_SKL', @level2type=N'COLUMN',@level2name=N'ТранспНац'
GO
/****** Object:  Table [dbo].[D_NAKL]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_NAKL](
	[НаклКод] [bigint] IDENTITY(1,1) NOT NULL,
	[НаклНомер] [char](16) NOT NULL,
	[НаклСклКод] [int] NOT NULL,
	[НаклСклНаим] [char](32) NOT NULL,
	[НаклТип] [int] NOT NULL,
	[НаклВозвр] [int] NOT NULL,
	[НаклСотр] [bigint] NULL,
	[НаклКлн] [int] NULL,
	[ОпНаклКод] [bigint] NULL,
	[НаклДатаРасч] [datetime] NULL,
	[НаклДата] [bigint] NULL,
	[НаклАВЗ] [tinyint] NULL,
	[КодАдрДоставки] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[D_KRT]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_KRT](
	[ЛстКод] [int] NULL,
	[ЛстНаим] [char](32) NULL,
	[ЛЗКод] [money] NULL,
	[ЛЗНаим] [char](32) NULL,
	[КртКод] [int] IDENTITY(1,1) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[D_DATES]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_DATES](
	[ДатыКод] [bigint] IDENTITY(1,1) NOT NULL,
	[ДатыРасч] [datetime] NULL,
	[ДатыГод] [int] NULL,
	[ДатыКвартал] [int] NULL,
	[ДатыМесяц] [int] NULL,
	[ДатыДень] [int] NULL,
	[ДатыНеделя] [char](16) NULL,
	[ДатыНеделяДрб] [char](16) NULL,
	[ДатыКодНеделя] [bigint] NULL,
	[ДатыКодНеделяДрб] [bigint] NULL,
	[ЕстьОст] [tinyint] NULL,
	[Thursday]  AS (dateadd(day,case (datepart(weekday,[ДатыРасч])+@@datefirst)%(7) when (2) then (3) when (3) then (2) when (4) then (1) when (5) then (0) when (6) then (-1) when (0) then (-2) when (1) then (-3)  end,[ДатыРасч])),
 CONSTRAINT [PK_D_DATES] PRIMARY KEY CLUSTERED 
(
	[ДатыКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_D_DATES] ON [dbo].[D_DATES] 
(
	[ДатыРасч] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[KAT_KLN]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_KLN](
	[КлнНаим] [char](32) NULL,
	[КлнКод] [int] NOT NULL,
	[КлнГрпКод] [int] NULL,
	[КлнАрхив] [int] NULL,
	[КлнТип] [char](8) NULL,
	[КлнФс] [char](8) NULL,
	[Архивный] [tinyint] NULL,
	[НомерПостав]  AS ((1)),
	[ОпТипПост]  AS ((1)),
	[ПолКлнКод] [nchar](12) NULL,
 CONSTRAINT [PK_KAT_KLN2] PRIMARY KEY CLUSTERED 
(
	[КлнКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KAT_PRZ]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_PRZ](
	[НаимПрз] [varchar](50) NULL,
	[КодПрз] [int] NOT NULL,
	[Флаг] [int] NULL,
	[Инвентаризация] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  UserDefinedFunction [dbo].[TransHex2Int]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE FUNCTION [dbo].[TransHex2Int] (@CurStr char(8))
RETURNS bigint AS  
BEGIN 
--declare @CurStr as char(8)
declare @CurDgtStr as char(1)
declare @CurDgt as int
declare @Res as bigint
declare @MultParam as bigint
declare @Pos as int

--set @CurStr='2000c8a1'
set @Pos=8
set @MultParam=1
set @Res=0
while (@Pos>0)
  begin
    set @CurDgtStr=SubString(@CurStr,@Pos,1)
    set @CurDgt= case @CurDgtStr
      when '0' then 0
      when '1' then 1
      when '2' then 2
      when '3' then 3
      when '4' then 4
      when '5' then 5
      when '6' then 6
      when '7' then 7
      when '8' then 8
      when '9' then 9
      when ('a') then 10
      when ('b') then 11
      when ('c') then 12
      when ('d') then 13
      when ('e') then 14
      when ('f') then 15
      when ('A') then 10
      when ('B') then 11
      when ('C') then 12
      when ('D') then 13
      when ('E') then 14
      when ('F') then 15
      else 999
    end
    if @CurDgt<16
      begin
        set @Res=@Res+(@CurDgt*@MultParam)
        set @MultParam=@MultParam*16
      end
    set @Pos=@Pos-1
  end
  return (@Res) 
END
GO
/****** Object:  Table [dbo].[tracce230114]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tracce230114](
	[RowNumber] [int] IDENTITY(0,1) NOT NULL,
	[EventClass] [int] NULL,
	[TextData] [ntext] NULL,
	[ApplicationName] [nvarchar](128) NULL,
	[NTUserName] [nvarchar](128) NULL,
	[LoginName] [nvarchar](128) NULL,
	[CPU] [int] NULL,
	[Reads] [bigint] NULL,
	[Writes] [bigint] NULL,
	[Duration] [bigint] NULL,
	[ClientProcessID] [int] NULL,
	[SPID] [int] NULL,
	[StartTime] [datetime] NULL,
	[EndTime] [datetime] NULL,
	[BinaryData] [image] NULL,
PRIMARY KEY CLUSTERED 
(
	[RowNumber] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  View [dbo].[VIEW22_indPrice]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW22_indPrice]
AS
SELECT     tov AS ТовКод, grc AS ГруппаЦен, c AS Цена
FROM         dbo.Table1
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Table1"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 99
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 4
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1695
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW22_indPrice'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW22_indPrice'
GO
/****** Object:  Table [dbo].[VozvratPrihod]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[VozvratPrihod](
	[ID] [tinyint] NULL,
	[Type] [varchar](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Vozvrat_Type]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Vozvrat_Type](
	[Тип] [tinyint] NULL,
	[Возврат] [char](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[VIST_SKL]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[VIST_SKL](
	[ДопТврКод] [bigint] NOT NULL,
	[ДопТврСпец] [int] NULL,
	[ДопНаклНом] [bigint] NULL,
	[ДопОпер] [tinyint] NULL,
	[ДопСклад] [bigint] NULL,
	[ДопВес] [numeric](18, 0) NULL,
	[ДопТараКол] [numeric](18, 0) NULL,
	[ДопТараВес] [numeric](18, 0) NULL
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[SelectDetAkc]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Ефремов
-- Create date: 02/04/2014
-- Description:	/*детализация текущих акций по витрине*/
-- =============================================
CREATE PROCEDURE [dbo].[SelectDetAkc] 
	-- Add the parameters for the stored procedure here
 @Orderpr NVARCHAR(1),
 @StartDay NVARCHAR(14),
 @EndDay NVARCHAR(14),
 @Depart NVARCHAR(200) 
AS
BEGIN
--v1
/*
with a as (  SELECT 
    CASE 
      WHEN pk.КлнНаим  is null THEN kakl.КлнНаим
      WHEN pk.КлнНаим  is not  null THEN pk.КлнНаим
   END  клиент 
  -- , ak.КлнТТ,pk.КлнНаим , kakl.КлнНаим
   , al.Наименование AS Акция, CAST(al.РДатаНачала AS date) AS РДатаНачала, CAST(al.РДатаКонца AS date) AS РДатаКонца 
,pdr.ПдрНаим,al.АкцияКод, pdr.ПдрКод --  , c.*,kp.* ,pdr.*
FROM            PR_Euras.dbo.akc_list AS al 
					INNER JOIN
                         PR_Euras.dbo.Akc_kln AS ak ON al.АкцияКод = ak.АкцияКод INNER JOIN
                         PR_Euras.dbo.KLN_ADK AS kad ON ak.КлнТТ = kad.КодКлиента INNER JOIN
                         PR_Euras.dbo.KAT_KLN AS kakl ON kakl.КлнКод = kad.КодКлиента
					 LEFT OUTER JOIN PR_Euras.dbo.CLN_DKL AS c ON c.КлнКод = kakl.КлнКод
					 LEFT OUTER JOIN
                      PR_Euras.dbo.KAT_PPL AS kp ON kp.СотрКод = c.МнджКод 
                     LEFT OUTER JOIN
                      PR_Euras.dbo.KAT_PDR AS pdr ON pdr.ПдрКод = kp.СотрПодр  
                      LEFT OUTER JOIN
                      PR_Euras.dbo.KAT_KLN AS pk ON pk.КлнКод = c.КодГлКлн
WHERE   ((    (@Orderpr)=0 and  al.РДатаНачала BETWEEN @StartDay AND @EndDay )
or ((@Orderpr)=1 and al.РДатаКонца BETWEEN @StartDay AND @EndDay)
  )
  and pdr.ПдрКод in (@Depart)
  )
 ,prep AS ( 
  select клиент,Акция,РДатаНачала,РДатаКонца,ПдрНаим,АкцияКод,ПдрКод from a
  GROUP BY клиент,Акция,РДатаНачала,РДатаКонца,ПдрНаим,АкцияКод,ПдрКод)
  select клиент,Акция,РДатаНачала,РДатаКонца,ПдрНаим,prep.АкцияКод,akct.Товар,sprvt.ТовНаим,sprvt.ТовАрт,ПдрКод from prep
  LEFT OUTER JOIN [PR_Euras].[dbo].[akc_tvr] akct on prep.АкцияКод=akct.АкцияКод
  LEFT OUTER JOIN [PR_Euras].[dbo].[KAT_TVR] sprvt on akct.Товар=sprvt.ТовКод*/
  
  
declare @sqlcmd NVARCHAR(max);

set @sqlcmd ='

with a as (  SELECT 
    CASE 
      WHEN pk.КлнНаим  is null THEN kakl.КлнНаим
      WHEN pk.КлнНаим  is not  null THEN pk.КлнНаим
   END  клиент 
   , al.Наименование AS Акция, CAST(al.РДатаНачала AS date) AS РДатаНачала, CAST(al.РДатаКонца AS date) AS РДатаКонца 
,pdr.ПдрНаим,al.АкцияКод, pdr.ПдрКод 
FROM            PR_Euras.dbo.akc_list AS al 
					INNER JOIN
                         PR_Euras.dbo.Akc_kln AS ak ON al.АкцияКод = ak.АкцияКод INNER JOIN
                         PR_Euras.dbo.KLN_ADK AS kad ON ak.КлнТТ = kad.КодКлиента INNER JOIN
                         PR_Euras.dbo.KAT_KLN AS kakl ON kakl.КлнКод = kad.КодКлиента
					 LEFT OUTER JOIN PR_Euras.dbo.CLN_DKL AS c ON c.КлнКод = kakl.КлнКод
					 LEFT OUTER JOIN
                      PR_Euras.dbo.KAT_PPL AS kp ON kp.СотрКод = c.МнджКод 
                     LEFT OUTER JOIN
                      PR_Euras.dbo.KAT_PDR AS pdr ON pdr.ПдрКод = kp.СотрПодр  
                      LEFT OUTER JOIN
                      PR_Euras.dbo.KAT_KLN AS pk ON pk.КлнКод = c.КодГлКлн
WHERE   ((    ('+@Orderpr+')=0 and  al.РДатаНачала BETWEEN CONVERT(datetime, '''+@StartDay+''' , 104) AND  CONVERT(datetime, '''+@EndDay+''' , 104) )
or (('+@Orderpr+')=1 and al.РДатаКонца BETWEEN CONVERT(datetime, '''+@StartDay+''' , 104) AND  CONVERT(datetime, '''+@EndDay+''', 104))
  )
  and pdr.ПдрКод in ('+@Depart+')
  )
 ,prep AS ( 
  select клиент,Акция,РДатаНачала,РДатаКонца,ПдрНаим,АкцияКод,ПдрКод from a
  GROUP BY клиент,Акция,РДатаНачала,РДатаКонца,ПдрНаим,АкцияКод,ПдрКод)
  select клиент,Акция,РДатаНачала,РДатаКонца,ПдрНаим,prep.АкцияКод,akct.Товар,sprvt.ТовНаим,sprvt.ТовАрт,ПдрКод
  ,kg.ГрпНаим from prep
  LEFT OUTER JOIN [PR_Euras].[dbo].[akc_tvr] akct on prep.АкцияКод=akct.АкцияКод
  LEFT OUTER JOIN [PR_Euras].[dbo].[KAT_TVR] sprvt on akct.Товар=sprvt.ТовКод
  left join [PR_Euras].[dbo].[KAT_GRPT] kg on  sprvt.[ТовГрп]=kg.ГрпКод';
  
--print @sqlcmd
  
  exec sp_executesql @sqlcmd  
  
END
GO
/****** Object:  Table [dbo].[Price_List_Original_Tab]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Price_List_Original_Tab](
	[F1] [nvarchar](255) NOT NULL,
	[ind] [int] IDENTITY(1,1) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Price_List_order_Tab]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Price_List_order_Tab](
	[F1] [nvarchar](255) NOT NULL,
	[ind] [int] IDENTITY(1,1) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[Vw_KPK_ClientIndPrice_Test]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_ClientIndPrice_Test]
AS
SELECT     dbo.Price_For_Manager_39_TAB.ТовКод, dbo.Price_For_Manager_39_TAB.КлнКод AS КодКлн, 
                      dbo.Price_For_Manager_39_AutoPrice_Tab.ind AS ГрпЦен
FROM         dbo.Price_For_Manager_39_TAB INNER JOIN
                      dbo.Price_For_Manager_39_AutoPrice_Tab ON dbo.Price_For_Manager_39_TAB.ТовКод = dbo.Price_For_Manager_39_AutoPrice_Tab.товкод AND 
                      CAST(ROUND(dbo.Price_For_Manager_39_TAB.РеальнаяЦена, 2) AS money) = dbo.Price_For_Manager_39_AutoPrice_Tab.Price
GO
/****** Object:  Table [dbo].[pricelist]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[pricelist](
	[idZone] [int] NULL,
	[idGoods] [int] NULL,
	[StakeSobstv] [float] NULL,
	[StakeComiss] [float] NULL,
	[PriceR] [float] NULL,
	[PriceD] [float] NULL,
	[fk_Log] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[skl_with_debt]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[skl_with_debt](
	[ОпНаклКод] [bigint] NOT NULL,
	[Сумма] [float] NULL,
	[НаклДЗ] [float] NULL,
 CONSTRAINT [PK_skl_with_debt] PRIMARY KEY CLUSTERED 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[skl_with_all_firms_debt]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[skl_with_all_firms_debt](
	[ОпНаклКод] [bigint] NOT NULL,
	[Сумма] [float] NULL,
	[НаклДЗ] [float] NULL,
 CONSTRAINT [PK_skl_with_all_firms_debt] PRIMARY KEY CLUSTERED 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SKL_OST]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SKL_OST](
	[Автокод] [int] NULL,
	[Остаток] [nvarchar](50) NULL,
	[КодСклада] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [cube].[skl_ost]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [cube].[skl_ost](
	[Скл] [int] NULL,
	[Дата] [date] NULL,
	[ТовКод] [int] NULL,
	[Остаток] [real] NULL,
	[ВесБруттоОстатка] [float] NULL,
	[СуммаЦенаУчетОстатка] [float] NULL,
	[ОбъемОстатка] [float] NULL,
	[дефицит] [float] NULL,
	[ТрехДневныйДефицит] [float] NULL
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [index_skl_ost_Дата] ON [cube].[skl_ost] 
(
	[Дата] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [index_skl_ost_Скл] ON [cube].[skl_ost] 
(
	[Скл] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [index_skl_ost_ТовКод] ON [cube].[skl_ost] 
(
	[ТовКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [cube].[skl_month_remnant]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [cube].[skl_month_remnant](
	[Скл] [int] NULL,
	[ТовКод] [int] NULL,
	[Остаток] [real] NULL,
	[ДатаОстатка] [date] NULL
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [index_skl_month_remnant_ДатаОстатка] ON [cube].[skl_month_remnant] 
(
	[ДатаОстатка] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [index_skl_month_remnant_Скл] ON [cube].[skl_month_remnant] 
(
	[Скл] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [index_skl_month_remnant_ТовКод] ON [cube].[skl_month_remnant] 
(
	[ТовКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SKD_TAB]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SKD_TAB](
	[СкдТип] [int] NULL,
	[СкдКод] [bigint] NULL,
	[СкдДоп] [bigint] NULL,
	[СкдПрц1] [float] NULL,
	[СкдПрц2] [float] NULL,
	[СкдПрц3] [float] NULL,
	[СкдПрц4] [float] NULL,
	[СкдПрц5] [float] NULL,
	[СкдПрц6] [float] NULL,
	[СкдПрц7] [float] NULL,
	[СкдПрц8] [float] NULL,
	[СкдПрц9] [float] NULL,
	[СкдПрц10] [float] NULL,
	[СкдВал] [int] NOT NULL
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [index_SKD_TAB] ON [dbo].[SKD_TAB] 
(
	[СкдКод] ASC,
	[СкдТип] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_SKD_TAB] ON [dbo].[SKD_TAB] 
(
	[СкдТип] ASC,
	[СкдКод] ASC,
	[СкдДоп] ASC
)
INCLUDE ( [СкдПрц1]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  View [wms].[shelf_life]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [wms].[shelf_life]
AS
SELECT     host_id, skucode, name, CAST(ROUND(shelf_life * 0.35, 0) AS int) AS shelf_life
FROM         WMS..WMS.SKU AS SKU_1
WHERE     (shelf_life <> 0)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "SKU_1"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 54
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'wms', @level1type=N'VIEW',@level1name=N'shelf_life'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'wms', @level1type=N'VIEW',@level1name=N'shelf_life'
GO
/****** Object:  View [dbo].[VIEW20]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW20]
AS
SELECT     TOP 100 PERCENT dbo.del_KATTVR.ТовКод
FROM         dbo.del_sht1 LEFT OUTER JOIN
                      dbo.del_KATTVR ON dbo.del_sht1.f1 LIKE dbo.del_KATTVR.ТовАрт + '%'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "del_KATTVR"
            Begin Extent = 
               Top = 6
               Left = 603
               Bottom = 175
               Right = 754
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "del_sht1"
            Begin Extent = 
               Top = 128
               Left = 222
               Bottom = 191
               Right = 373
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 2
         Width = 284
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW20'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW20'
GO
/****** Object:  Table [dbo].[TVR_DEF]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TVR_DEF](
	[ТовКод] [int] NOT NULL,
	[ТовВесБрутто] [float] NULL,
	[ТовВесНетто] [float] NULL,
	[ТовЗонаХран] [int] NULL,
	[ДопХар1] [int] NULL,
	[ДопХар2] [int] NULL,
	[ДопХар3] [int] NULL,
	[ДопХар4] [int] NULL,
	[ДопХар5] [int] NULL,
	[ДопХар6] [int] NULL,
	[ДопУпак1] [int] NULL,
	[ДопУпак2] [int] NULL,
	[ДопУпак3] [int] NULL,
	[ДопУпак4] [int] NULL,
	[ДопУпак5] [int] NULL,
	[ДопУпак6] [int] NULL,
	[ДопУпак7] [int] NULL,
	[ДопУпак8] [int] NULL,
	[ДопУпак9] [int] NULL,
	[ДопУпак10] [int] NULL,
	[Объем] [float] NULL,
	[МинОст] [float] NULL,
	[КодПоставщика] [nvarchar](50) NULL,
	[Доп] [nvarchar](50) NULL,
	[Производ] [int] NULL,
	[Страна] [int] NULL,
	[ГТД] [bigint] NULL,
	[Сертиф] [bigint] NULL,
	[Закуп] [int] NULL,
	[СрокЖ] [varchar](50) NULL,
 CONSTRAINT [PK_TVR_DEF] PRIMARY KEY CLUSTERED 
(
	[ТовКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TTN_NKL]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TTN_NKL](
	[КодТТН] [bigint] NULL,
	[НомДок] [bigint] NULL,
	[КодСкл] [int] NULL,
	[Очеред] [int] NULL,
	[ДатаФактДостОриг] [bigint] NULL,
	[ДатаПланДостОриг] [bigint] NULL,
	[СуммЗатрДост] [money] NULL,
	[ВидЗатр] [int] NULL,
	[ТипОпер] [int] NULL,
	[ДатаФакт] [datetime] NULL,
	[ДатаПлан] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TTN_DKM_tmp]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TTN_DKM_tmp](
	[ПутЛист] [varchar](22) NULL,
	[КодТТН] [int] NOT NULL,
	[ДатаИсх] [bigint] NULL,
	[Сопр] [varchar](22) NULL,
	[Автомоб] [varchar](22) NULL,
	[РегНом] [varchar](22) NULL,
	[Водит] [varchar](22) NULL,
	[НомерТТН] [bigint] NULL,
	[ПрОтпр] [int] NULL,
	[ДатаФактОриг] [bigint] NULL,
	[ДатаПланОриг] [bigint] NULL,
	[ДопСвед] [varchar](40) NULL,
	[КодГрузоотпр] [bigint] NULL,
	[КодСотр] [bigint] NULL,
	[КодВодит] [int] NULL,
	[КодСопр] [int] NULL,
	[КодАвто] [int] NULL,
	[КодЗапПоездки] [int] NULL,
	[РегистрНом] [varchar](22) NULL,
	[ПользЗанявший] [varchar](4) NULL,
	[НашаФирма] [bigint] NULL,
	[БитФлаги] [int] NULL,
	[КодЗатр] [bigint] NULL,
	[СуммЗатр] [money] NULL,
	[СуммЗатрНдс] [money] NULL,
	[Валюта] [int] NULL,
	[ДатаКурсаОриг] [bigint] NULL,
	[ТипОпер] [int] NULL,
	[ДатаРасч] [datetime] NULL,
	[Перевозчик] [int] NULL,
	[ShippingGradient] [varchar](4) NULL,
	[Самовывоз] [varchar](15) NULL,
	[Нулевые транспортные затраты] [int] NULL,
	[ПеревозчикName] [varchar](50) NULL,
	[ТипОперНазв] [varchar](15) NULL,
	[Есть ТТН] [varchar](15) NULL,
	[Есть накладные по ТТН] [varchar](30) NULL,
	[Расходы ТТН разнесены по товарам] [int] NULL,
	[ПризнакМЛ] [varchar](30) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TTN_DKM_ext]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TTN_DKM_ext](
	[ПутЛист] [varchar](22) NULL,
	[КодТТН] [int] NOT NULL,
	[ДатаИсх] [bigint] NULL,
	[Сопр] [varchar](22) NULL,
	[Автомоб] [varchar](22) NULL,
	[РегНом] [varchar](22) NULL,
	[Водит] [varchar](22) NULL,
	[НомерТТН] [bigint] NULL,
	[ПрОтпр] [int] NULL,
	[ДатаФактОриг] [bigint] NULL,
	[ДатаПланОриг] [bigint] NULL,
	[ДопСвед] [varchar](40) NULL,
	[КодГрузоотпр] [bigint] NULL,
	[КодСотр] [bigint] NULL,
	[КодВодит] [int] NULL,
	[КодСопр] [int] NULL,
	[КодАвто] [int] NULL,
	[КодЗапПоездки] [int] NULL,
	[РегистрНом] [varchar](22) NULL,
	[ПользЗанявший] [varchar](4) NULL,
	[НашаФирма] [bigint] NULL,
	[БитФлаги] [int] NULL,
	[КодЗатр] [bigint] NULL,
	[СуммЗатр] [money] NULL,
	[СуммЗатрНдс] [money] NULL,
	[Валюта] [int] NULL,
	[ДатаКурсаОриг] [bigint] NULL,
	[ТипОпер] [int] NULL,
	[ДатаРасч] [datetime] NULL,
	[Перевозчик] [int] NULL,
	[ShippingGradient] [varchar](5) NULL,
	[Самовывоз] [int] NULL,
	[Нулевые транспортные затраты] [int] NULL,
	[ПеревозчикName] [varchar](100) NULL,
	[ТипОперНазв] [varchar](50) NULL,
	[Есть ТТН] [varchar](50) NULL,
	[Есть накладные по ТТН] [int] NULL,
	[Расходы ТТН разнесены по товарам] [int] NULL,
	[ПризнакМЛ] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TTN_DKM]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TTN_DKM](
	[ПутЛист] [varchar](22) NULL,
	[КодТТН] [int] NOT NULL,
	[ДатаИсх] [bigint] NULL,
	[Сопр] [varchar](22) NULL,
	[Автомоб] [varchar](22) NULL,
	[РегНом] [varchar](22) NULL,
	[Водит] [varchar](22) NULL,
	[НомерТТН] [bigint] NULL,
	[ПрОтпр] [int] NULL,
	[ДатаФактОриг] [bigint] NULL,
	[ДатаПланОриг] [bigint] NULL,
	[ДопСвед] [varchar](40) NULL,
	[КодГрузоотпр] [bigint] NULL,
	[КодСотр] [bigint] NULL,
	[КодВодит] [int] NULL,
	[КодСопр] [int] NULL,
	[КодАвто] [int] NULL,
	[КодЗапПоездки] [int] NULL,
	[РегистрНом] [varchar](22) NULL,
	[ПользЗанявший] [varchar](4) NULL,
	[НашаФирма] [bigint] NULL,
	[БитФлаги] [int] NULL,
	[КодЗатр] [bigint] NULL,
	[СуммЗатр] [money] NULL,
	[СуммЗатрНдс] [money] NULL,
	[Валюта] [int] NULL,
	[ДатаКурсаОриг] [bigint] NULL,
	[ТипОпер] [int] NULL,
	[ДатаРасч] [datetime] NULL,
	[Перевозчик] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE CLUSTERED INDEX [ittn_dkm] ON [dbo].[TTN_DKM] 
(
	[КодТТН] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [_dta_index_TTN_DKM_38_9207233__K2] ON [dbo].[TTN_DKM] 
(
	[КодТТН] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[oldplatrash]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[oldplatrash](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [int] NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[oldplatprih]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[oldplatprih](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [int] NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[olddebet]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[olddebet](
	[ДбтТовар] [money] NULL,
	[ДбтПлат] [money] NULL,
	[ДбтКлнКод] [bigint] NOT NULL,
	[ДбтДата] [bigint] NOT NULL,
	[ДбтСальдо] [money] NULL,
	[Тест] [tinyint] NULL,
	[Тест1] [bigint] IDENTITY(1,1) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[obj_def]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[obj_def](
	[id] [bigint] IDENTITY(1,1) NOT NULL,
	[od_obj] [bigint] NOT NULL,
	[od_tip] [int] NULL,
	[od_def_Note] [varchar](200) NULL,
	[od_nom] [int] NULL,
 CONSTRAINT [PK_obj_def] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_obj_def] ON [dbo].[obj_def] 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_obj_def_1] ON [dbo].[obj_def] 
(
	[od_tip] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_obj_def_2] ON [dbo].[obj_def] 
(
	[od_nom] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [wms].[NONPLANNED_mustdel20120507]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[NONPLANNED_mustdel20120507](
	[INVOICENUMBER] [int] NULL,
	[INVOICETYPE] [int] NULL,
	[INVOICESKL] [int] NULL,
	[SKU] [int] NULL,
	[NONPLANNED] [real] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[NaklTypes]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[NaklTypes](
	[ID] [tinyint] NULL,
	[Type] [varchar](20) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MyCustomers]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MyCustomers](
	[CustID] [int] IDENTITY(100,1) NOT NULL,
	[CompanyName] [nvarchar](50) NULL,
PRIMARY KEY CLUSTERED 
(
	[CustID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[nkl_link]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[nkl_link](
	[nl_ndok1] [bigint] NULL,
	[nl_fl_opr1] [int] NULL,
	[nl_skl1] [int] NULL,
	[ОпНаклКод1] [bigint] NULL,
	[nl_ndok2] [bigint] NULL,
	[nl_fl_opr2] [int] NULL,
	[nl_skl2] [int] NULL,
	[ОпНаклКод2] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[newplatuslrash]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[newplatuslrash](
	[ПлатДата] [bigint] NULL,
	[ПлатУслСумма] [float] NULL,
	[КлнКод] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[newdebet]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[newdebet](
	[ДбтТовар] [money] NULL,
	[ДбтПлат] [money] NULL,
	[ДбтКлнКод] [bigint] NOT NULL,
	[ДбтДата] [bigint] NOT NULL,
	[ДбтСальдо] [money] NULL,
	[Тест] [tinyint] NULL,
	[Тест1] [bigint] IDENTITY(1,1) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[Vw_KPKDopList]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPKDopList]
AS
SELECT     0 AS Kod, 'txt' AS Name
GO
/****** Object:  Table [dbo].[watch2]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[watch2](
	[cur_1] [bigint] NULL,
	[cur_1_date] [datetime] NULL,
	[cur_2] [bigint] NULL,
	[cur_2_date] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[watch1]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[watch1](
	[cur_1] [bigint] NULL,
	[cur_1_date] [datetime] NULL,
	[cur_2] [bigint] NULL,
	[cur_2_date] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[watch_test]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[watch_test](
	[cur_1] [bigint] NULL,
	[cur_1_date] [datetime] NULL,
	[cur_2] [bigint] NULL,
	[cur_2_date] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[watch]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[watch](
	[cur_1] [bigint] NULL,
	[cur_1_date] [datetime] NULL,
	[cur_2] [bigint] NULL,
	[cur_2_date] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[WarehouseId]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[WarehouseId](
	[warehouseId] [int] NOT NULL,
 CONSTRAINT [PK_xmt.WarehouseId] PRIMARY KEY CLUSTERED 
(
	[warehouseId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[Ware]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[Ware](
	[wareId] [nvarchar](255) NOT NULL,
	[barCode] [nvarchar](255) NULL,
	[name] [nvarchar](255) NOT NULL,
	[description] [nvarchar](1000) NULL,
	[group1] [nvarchar](255) NULL,
	[group2] [nvarchar](255) NULL,
	[group3] [nvarchar](255) NULL,
	[group4] [nvarchar](255) NULL,
	[group5] [nvarchar](255) NULL,
	[uom] [nvarchar](255) NULL,
	[pack1] [nvarchar](255) NULL,
	[pack2] [nvarchar](255) NULL,
	[pack3] [nvarchar](255) NULL,
	[pack4] [nvarchar](255) NULL,
	[pack5] [nvarchar](255) NULL,
	[basePrice] [float] NOT NULL,
	[weight] [float] NULL,
	[termOfSale] [int] NULL,
	[image] [nvarchar](255) NULL,
 CONSTRAINT [PK_xmt.Ware] PRIMARY KEY CLUSTERED 
(
	[wareId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[VozvratSale]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[VozvratSale](
	[ID] [tinyint] NULL,
	[Type] [varchar](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RAZN_ERR]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RAZN_ERR](
	[ТовКод] [bigint] NOT NULL,
	[Ошибка] [char](24) NOT NULL,
	[ПрихДатаКод] [bigint] NULL,
	[РасхДатаКод] [bigint] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RASHTMP]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RASHTMP](
	[TmpTov] [int] NULL,
	[TmpKol] [float] NULL,
	[TmpDate] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[KAT_SER]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_SER](
	[РегНомерСерт] [varchar](32) NULL,
	[КодСерт] [bigint] NOT NULL,
	[Тип] [int] NULL,
	[ОргВыд] [bigint] NULL,
	[НомерБланка] [varchar](16) NULL,
	[КодТНВЭД] [varchar](22) NULL,
	[ДатаВыдачи] [bigint] NULL,
	[ДатаОкончанияДействия] [bigint] NULL,
	[ОргПрин] [bigint] NULL,
	[Изготовитель] [bigint] NULL,
	[ДатаРегистрации] [bigint] NULL,
	[ДопСвед] [varchar](52) NULL,
	[Сотр] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[rec_ok2n]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[rec_ok2n](
	[ManagerID] [int] NULL,
	[Col002] [nvarchar](255) NULL,
	[Col003] [nvarchar](255) NULL,
	[Col004] [nvarchar](255) NULL,
	[Col005] [nvarchar](255) NULL,
	[WorkPhone] [nvarchar](15) NULL,
	[Col007] [nvarchar](255) NULL,
	[Col008] [nvarchar](255) NULL,
	[Col009] [nvarchar](255) NULL,
	[Col010] [nvarchar](255) NULL,
	[Col011] [nvarchar](255) NULL,
	[Col012] [nvarchar](255) NULL,
	[Col013] [nvarchar](255) NULL,
	[Col014] [nvarchar](255) NULL,
	[Col015] [nvarchar](255) NULL,
	[Col016] [nvarchar](255) NULL,
	[Col017] [nvarchar](255) NULL,
	[Col018] [nvarchar](255) NULL,
	[Col019] [nvarchar](255) NULL,
	[Col020] [nvarchar](255) NULL,
	[Col021] [nvarchar](255) NULL,
	[Col022] [nvarchar](255) NULL,
	[Col023] [nvarchar](255) NULL,
	[Col024] [nvarchar](255) NULL,
	[Col025] [nvarchar](255) NULL,
	[Col026] [nvarchar](255) NULL,
	[Col027] [nvarchar](255) NULL,
	[Col028] [nvarchar](255) NULL,
	[Col029] [nvarchar](255) NULL,
	[Col030] [nvarchar](255) NULL,
	[Col031] [nvarchar](255) NULL,
	[Col032] [nvarchar](255) NULL,
	[Col033] [nvarchar](255) NULL,
	[Col034] [nvarchar](255) NULL,
	[Col035] [nvarchar](255) NULL,
	[Col036] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Real_Price_TAB]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Real_Price_TAB](
	[КлнКод] [int] NOT NULL,
	[ТовКод] [int] NOT NULL,
	[ЦенаНДС] [money] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Real_price_ind_tab]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Real_price_ind_tab](
	[Cit] [int] NULL,
	[ТовКод] [int] NOT NULL,
	[ЦенаНДС] [money] NOT NULL,
	[ind] [int] IDENTITY(1,1) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[KAT_TVR]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_TVR](
	[ТовКод] [int] NOT NULL,
	[ТовНаим] [char](52) NULL,
	[ТовГрп] [int] NULL,
	[ТовВид] [int] NULL,
	[ТовАрт] [char](14) NULL,
	[ТовЕИ] [char](6) NULL,
	[ТовУпак] [int] NULL,
	[ТовЦенаРСХ] [money] NULL,
	[НДС] [float] NULL,
	[ТовЦенаУчет] [money] NULL,
	[ABC] [char](1) NULL,
	[ШтрихКод] [char](14) NULL,
	[БФ] [bigint] NULL,
	[ТовЦенаПРХ] [money] NULL,
 CONSTRAINT [PK_KAT_TVR] PRIMARY KEY NONCLUSTERED 
(
	[ТовКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE CLUSTERED INDEX [ikat_tvr1] ON [dbo].[KAT_TVR] 
(
	[ТовКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ixkat_tvr] ON [dbo].[KAT_TVR] 
(
	[ТовКод] ASC
)
INCLUDE ( [ТовАрт]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ТовВид] ON [dbo].[KAT_TVR] 
(
	[ТовВид] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ТовГрп] ON [dbo].[KAT_TVR] 
(
	[ТовГрп] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[KAT_TPZ]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_TPZ](
	[ХарактНаим] [varchar](22) NULL,
	[КодХаракт] [int] NULL,
	[Тип] [int] NULL,
	[Код] [char](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KAT_SKL__]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_SKL__](
	[СклНаим] [char](32) NULL,
	[СклКод] [int] NOT NULL,
	[КлнКод] [int] NULL,
	[НомерПостав]  AS ((1)),
	[ОпТипПост]  AS ((1)),
	[Арх]  AS ([БитФЛ]&(1)),
	[БитФЛ] [bigint] NULL,
	[СклТип] [int] NULL,
	[СклГрп] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KAT_SKL]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_SKL](
	[СклНаим] [char](32) NULL,
	[СклКод] [int] NOT NULL,
	[КлнКод] [int] NULL,
	[НомерПостав]  AS ((1)),
	[ОпТипПост]  AS ((1)),
	[Арх]  AS ([БитФЛ]&(1)),
	[БитФЛ] [bigint] NULL,
	[СклТип] [int] NULL,
	[СклГрп] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_KAT_SKL] ON [dbo].[KAT_SKL] 
(
	[СклНаим] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_KAT_SKL_1] ON [dbo].[KAT_SKL] 
(
	[СклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_KAT_SKL_2] ON [dbo].[KAT_SKL] 
(
	[СклТип] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_KAT_SKL_3] ON [dbo].[KAT_SKL] 
(
	[СклГрп] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_KAT_SKL_4] ON [dbo].[KAT_SKL] 
(
	[КлнКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Группа склада (поле 15)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'KAT_SKL', @level2type=N'COLUMN',@level2name=N'СклГрп'
GO
/****** Object:  Table [dbo].[AvgSaldoByFirm_temp]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AvgSaldoByFirm_temp](
	[Client] [bigint] NOT NULL,
	[Firm] [int] NULL,
	[Credit] [money] NULL,
	[Debit] [money] NULL,
	[Saldo] [money] NULL,
	[Date] [datetime] NULL,
	[AvgSaldo] [money] NULL,
	[DateCode] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AvgSaldoByFirm]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AvgSaldoByFirm](
	[Client] [bigint] NOT NULL,
	[Firm] [int] NULL,
	[Credit] [money] NULL,
	[Debit] [money] NULL,
	[Saldo] [money] NULL,
	[Date] [datetime] NULL,
	[AvgSaldo] [money] NULL,
	[DateCode] [bigint] NULL
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [_dta_index_AvgSaldoByFirm_38_429400749__K1_2_5_6_7] ON [dbo].[AvgSaldoByFirm] 
(
	[Client] ASC
)
INCLUDE ( [Firm],
[Saldo],
[Date],
[AvgSaldo]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AvgSaldo_Stat]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[AvgSaldo_Stat](
	[NaviDate] [datetime] NULL,
	[AvgSaldo] [varchar](50) NULL,
	[AvgSaldo_PartCalc] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[AvgSaldo_PartCalc]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AvgSaldo_PartCalc](
	[Client] [bigint] NOT NULL,
	[Credit] [money] NULL,
	[Debit] [money] NULL,
	[Saldo] [money] NULL,
	[Date] [datetime] NULL,
	[AvgSaldo] [money] NULL,
	[DateCode] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AvgSaldo_part1]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AvgSaldo_part1](
	[Client] [bigint] NOT NULL,
	[Credit] [money] NULL,
	[Debit] [money] NULL,
	[Saldo] [money] NULL,
	[Date] [datetime] NULL,
	[AvgSaldo] [money] NULL,
	[DateCode] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AvgSaldo_original]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AvgSaldo_original](
	[Client] [bigint] NOT NULL,
	[Credit] [money] NULL,
	[Debit] [money] NULL,
	[Saldo] [money] NULL,
	[Date] [datetime] NULL,
	[AvgSaldo] [money] NULL,
	[DateCode] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AvgSaldo]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AvgSaldo](
	[Client] [bigint] NOT NULL,
	[Credit] [money] NULL,
	[Debit] [money] NULL,
	[Saldo] [money] NULL,
	[Date] [datetime] NULL,
	[AvgSaldo] [money] NULL,
	[DateCode] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AutoLoadReportTxtLog]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[AutoLoadReportTxtLog](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Столбец 0] [varchar](250) NULL,
	[Столбец 1] [varchar](250) NULL,
	[Столбец 2] [varchar](250) NULL,
	[Столбец 3] [varchar](250) NULL,
	[Столбец 4] [varchar](250) NULL,
	[Столбец 5] [varchar](250) NULL,
	[Столбец 6] [varchar](250) NULL,
	[Столбец 7] [varchar](250) NULL,
	[Столбец 8] [varchar](250) NULL,
	[Столбец 9] [varchar](250) NULL,
	[Столбец 10] [varchar](250) NULL,
	[Обработана строка] [bit] NULL,
	[Столбец 11] [varchar](250) NULL,
	[dt] [datetime] NULL,
 CONSTRAINT [PK_AutoLoadReportTxtLog] PRIMARY KEY NONCLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [File_Number] ON [dbo].[AutoLoadReportTxtLog] 
(
	[Столбец 0] ASC,
	[Столбец 2] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [Id_Обработанастрока0] ON [dbo].[AutoLoadReportTxtLog] 
(
	[ID] ASC
)
WHERE ([Обработана строка]=(0))
WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[actual_skl_sur]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[actual_skl_sur](
	[Скл] [int] NULL,
	[СклНаим] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[actual_skl_ekb]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[actual_skl_ekb](
	[Скл] [int] NULL,
	[СклНаим] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[action]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[action](
	[КлнКод] [varchar](50) NULL,
	[ПользКод] [int] NULL,
	[Дата] [datetime] NULL,
	[Текст] [varchar](255) NULL,
	[Код] [int] IDENTITY(1,1) NOT NULL,
	[ДатаСрока] [datetime] NULL,
	[ФлагЗадан] [bit] NULL,
	[ДатаГотов] [datetime] NULL,
	[КодСооб] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE CLUSTERED INDEX [Дата] ON [dbo].[action] 
(
	[Дата] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[A_Daily_Src_t]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[A_Daily_Src_t](
	[ОпКод] [bigint] NOT NULL,
	[ОпКодТов] [int] NOT NULL,
	[ОпКол] [decimal](18, 3) NULL,
	[ОпТип] [int] NOT NULL,
	[ОпЦена] [money] NULL,
	[ОпКодУпак] [int] NULL,
	[ОпСкл] [int] NOT NULL,
	[ОпВозвр] [int] NULL,
	[ОпНакл] [bigint] NOT NULL,
	[ОпНаклКод] [bigint] NULL,
	[ОпТипКлн] [tinyint] NULL,
	[ОпТовНом] [int] NULL,
	[ОпТипКлн_INT] [int] NULL,
	[ОпСтоим] [decimal](38, 7) NULL,
	[ПолнАдресДоставки] [bigint] NULL,
	[ОпКлн] [int] NULL,
	[ОпДатаРасч] [datetime] NULL,
	[КодАдрДоставки] [int] NOT NULL,
	[ОпСотр] [int] NULL,
	[ОпТипSKL] [int] NOT NULL,
	[НашаФирма] [int] NULL,
	[ОпСтоимИтог] [decimal](38, 7) NULL,
	[ОпКолИтог] [decimal](18, 3) NULL,
	[dst] [int] NULL,
	[КодТКА] [varchar](92) NULL,
	[ВесБрутто] [float] NULL,
	[ВесНетто] [float] NULL,
	[СуммаЦенаУчет] [float] NULL,
	[КодТТН] [int] NULL,
	[АдресДоставки] [varchar](1) NOT NULL,
	[Отгрузка] [decimal](38, 7) NULL,
	[SippingGradientID] [int] NULL,
	[Объем] [float] NULL,
	[ЦенаТранспОтОбъема] [money] NULL,
	[ЦенаТранспОтВеса] [money] NULL,
	[ТТН_Адрес] [int] NULL,
	[ExistTTN] [int] NOT NULL,
	[ДоляТранРсхОбъем] [decimal](38, 16) NULL,
	[ДоляТранРсхВеса] [decimal](38, 16) NULL,
	[ГрадацияТранРсхОбъемИд] [int] NULL,
	[ГрадацияТранРсхВесаИд] [int] NULL,
	[ЗаводскаяУпаковка] [int] NOT NULL,
	[КолДней] [int] NULL,
	[СуммаОстатков] [int] NULL,
	[ОставшийсяСрокГодности] [int] NULL,
	[РасхНаВет] [numeric](13, 12) NULL,
	[КолВетТов] [bit] NULL,
	[zero] [float] NULL,
	[АкцияКод] [int] NULL,
	[Бонус_1] [money] NULL,
	[Бонус_2] [money] NULL,
	[Бонус_3] [money] NULL,
	[Возврат_ТР] [money] NULL,
	[Возврат_Эксп] [money] NULL,
	[Транс_Расх] [money] NULL,
	[СуммаПрогноз_Акции_НДС] [money] NULL,
	[СуммаПрогноз_НДС] [float] NULL,
	[СуммаПрогноз_Акции] [float] NULL,
	[СуммаПрогноз] [float] NULL,
	[СуммаПрогнозМлн] [float] NULL,
	[СуммаПрогнозМлн1] [float] NULL,
	[Прогноз_Кол] [decimal](18, 3) NULL,
	[Прогноз_ЦенаУчет] [float] NULL,
	[Прогноз_ЦенаУчет_безНДС] [decimal](38, 7) NULL,
	[Вычерк] [decimal](18, 3) NULL,
	[ВычеркСтоим] [decimal](38, 6) NULL,
	[АвтокодМЛ] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_f_cube_buffer_4] ON [dbo].[A_Daily_Src_t] 
(
	[ОпНаклКод] ASC,
	[ОпТовНом] ASC,
	[ОпКодТов] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[0_Unique_tables]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[0_Unique_tables](
	[Table] [varchar](50) NOT NULL,
	[Description] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[0_Store_tables]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[0_Store_tables](
	[Table] [varchar](50) NOT NULL,
	[Description] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[_WriteTable_HIST SKL  Plan]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[_WriteTable_HIST SKL  Plan](
	[ОпСтоим_0] [float] NULL,
	[ОпКол_1] [float] NULL,
	[ДатыРасч_2] [datetime] NULL,
	[ТовКод_3] [int] NULL,
	[КлнКод_4] [int] NULL,
	[КодАдресаДоставки_5] [int] NULL,
	[СотрКод_6] [int] NULL,
	[MS_AUDIT_TIME_7] [datetime] NULL,
	[MS_AUDIT_USER_8] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[akc_list]    Script Date: 08/10/2015 12:55:56 ******/
SET ARITHABORT ON
GO
SET CONCAT_NULL_YIELDS_NULL ON
GO
SET ANSI_NULLS ON
GO
SET ANSI_PADDING ON
GO
SET ANSI_WARNINGS ON
GO
SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
SET ARITHABORT ON
GO
CREATE TABLE [dbo].[akc_list](
	[Наименование] [nvarchar](52) NULL,
	[АкцияКод] [int] NOT NULL,
	[Статус] [int] NULL,
	[Номер] [nchar](12) NULL,
	[ДатаНачала] [bigint] NULL,
	[ДатаКонца] [bigint] NULL,
	[ДатаПланируемого] [bigint] NULL,
	[БитовыеФлаги] [bigint] NULL,
	[Сотр] [int] NULL,
	[ДатаСоздания] [bigint] NULL,
	[Валюта] [smallint] NULL,
	[Аналитика] [smallint] NULL,
	[НашаФирма] [int] NULL,
	[РДатаНачала]  AS (dateadd(second,[ДатаНачала],CONVERT([datetime],'31.12.1969 19:00:00',(104)))) PERSISTED,
	[РДатаКонца]  AS (dateadd(second,[ДатаКонца],CONVERT([datetime],'31.12.1969 19:00:00',(104)))) PERSISTED,
	[РДатаПланируемого]  AS (dateadd(second,[ДатаПланируемого],CONVERT([datetime],'31.12.1969 19:00:00',(104)))) PERSISTED,
	[РДатаСоздания]  AS (dateadd(second,[ДатаСоздания],CONVERT([datetime],'31.12.1969 19:00:00',(104)))) PERSISTED,
 CONSTRAINT [PK_AKC_LIST] PRIMARY KEY CLUSTERED 
(
	[АкцияКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
CREATE NONCLUSTERED INDEX [ix_Mix1] ON [dbo].[akc_list] 
(
	[РДатаСоздания] DESC,
	[Наименование] ASC,
	[АкцияКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
CREATE NONCLUSTERED INDEX [ix_РДатаКонца] ON [dbo].[akc_list] 
(
	[РДатаКонца] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
CREATE NONCLUSTERED INDEX [ix_РДатаНачала] ON [dbo].[akc_list] 
(
	[РДатаНачала] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_Статус] ON [dbo].[akc_list] 
(
	[Статус] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET ARITHABORT ON
SET CONCAT_NULL_YIELDS_NULL ON
SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET NUMERIC_ROUNDABORT OFF
CREATE NONCLUSTERED INDEX [ix_Тип] ON [dbo].[akc_list] 
(
	[РДатаСоздания] DESC,
	[Наименование] ASC,
	[АкцияКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0-гот.,1-действ.,2-заверш.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'akc_list', @level2type=N'COLUMN',@level2name=N'Статус'
GO
/****** Object:  Table [dbo].[Akc_kln]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Akc_kln](
	[АкцияКод] [int] NOT NULL,
	[КлнТТ] [int] NULL,
	[Тип] [smallint] NULL,
 CONSTRAINT [PK_AKC_KLN] PRIMARY KEY CLUSTERED 
(
	[АкцияКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_КлнТТ] ON [dbo].[Akc_kln] 
(
	[КлнТТ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_Тип] ON [dbo].[Akc_kln] 
(
	[Тип] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CENP_TAB]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CENP_TAB](
	[КлнКод] [int] NOT NULL,
	[ТовКод] [int] NOT NULL,
	[ЦенГрп] [int] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [IX_CENP_TAB] ON [dbo].[CENP_TAB] 
(
	[КлнКод] ASC,
	[ТовКод] ASC,
	[ЦенГрп] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [index_cenp_tab] ON [dbo].[CENP_TAB] 
(
	[КлнКод] ASC,
	[ТовКод] ASC,
	[ЦенГрп] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[adk_grpt]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[adk_grpt](
	[КодАдресаДоставки] [int] NOT NULL,
	[СотрКод] [int] NOT NULL,
	[ТовГрп1] [int] NULL,
	[ТовГрп2] [int] NULL,
	[ТовГрп3] [int] NULL,
	[ТовГрп4] [int] NULL,
	[ТовГрп5] [int] NULL,
 CONSTRAINT [PK_adk_grpt] PRIMARY KEY CLUSTERED 
(
	[КодАдресаДоставки] ASC,
	[СотрКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [edi].[ADK_GLN]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [edi].[ADK_GLN](
	[КодАдресаДоставки] [bigint] NULL,
	[GLN] [char](13) NULL,
	[Stamp_] [smalldatetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[akc_tvr]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[akc_tvr](
	[id] [bigint] IDENTITY(1,1) NOT NULL,
	[АкцияКод] [int] NOT NULL,
	[Товар] [int] NULL,
	[Тип] [smallint] NULL,
	[ПроцентЦена] [real] NULL,
 CONSTRAINT [PK_AKC_ID] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ПроцентЦена] ON [dbo].[akc_tvr] 
(
	[ПроцентЦена] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_ПроцентЦенаАкцияКодТип] ON [dbo].[akc_tvr] 
(
	[АкцияКод] ASC,
	[ПроцентЦена] ASC,
	[Тип] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_Тип] ON [dbo].[akc_tvr] 
(
	[Тип] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[CheckList]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[CheckList](
	[id] [int] NOT NULL,
	[title] [nvarchar](255) NULL,
	[measure] [nvarchar](255) NULL,
	[inputType] [nvarchar](255) NULL,
	[forAllRetails] [bit] NULL,
 CONSTRAINT [PK_CheckList] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [wms].[ClientGroups]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[ClientGroups](
	[HOST_ID] [nvarchar](64) NULL,
	[ID] [decimal](38, 0) NOT NULL,
	[NAME] [nvarchar](128) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CD_DolgEvent]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CD_DolgEvent](
	[IDEvent] [int] IDENTITY(1,1) NOT NULL,
	[ClientID] [int] NULL,
	[DateTime] [datetime] NULL,
	[Login] [nvarchar](250) NULL,
	[Text] [nvarchar](max) NULL,
	[FinishWork] [bit] NULL,
	[Debt] [money] NULL,
	[DebtOver] [money] NULL,
 CONSTRAINT [PK_CD_DolgEvent] PRIMARY KEY NONCLUSTERED 
(
	[IDEvent] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [IX_ClientID] ON [dbo].[CD_DolgEvent] 
(
	[ClientID] ASC,
	[DateTime] DESC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [cube].[Dates_original]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [cube].[Dates_original](
	[ДатыКод] [bigint] NOT NULL,
	[ДатыРасч] [date] NULL,
	[Год] [int] NULL,
	[МесяцНомер] [int] NULL,
	[День] [int] NULL,
	[Месяц] [nvarchar](30) NULL,
	[НеделяНомер] [int] NULL,
	[Неделя] [nvarchar](61) NULL,
	[ФинГод] [int] NULL,
	[ФинМесяцНомер] [int] NULL,
	[ФинМесяц]  AS (datename(month,dateadd(month,[ФинМесяцНомер]-(1),(0)))),
	[ФинНеделяНомер] [int] NULL,
	[ФинНеделя]  AS ((CONVERT([varchar](50),datename(month,dateadd(month,[ФинМесяцНомер]-(1),(0))),(0))+' ')+CONVERT([varchar](50),[ФинНеделяНомер],(0)))
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [cube].[Dates_old]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [cube].[Dates_old](
	[ДатыКод_old] [bigint] NOT NULL,
	[ДатыРасч] [date] NULL,
	[Год] [int] NULL,
	[МесяцНомер] [int] NULL,
	[День] [int] NULL,
	[Месяц] [nvarchar](30) NULL,
	[НеделяНомер] [int] NULL,
	[Неделя] [nvarchar](61) NULL,
	[ФинГод] [int] NULL,
	[ФинМесяцНомер] [int] NULL,
	[ФинМесяц]  AS (datename(month,dateadd(month,[ФинМесяцНомер]-(1),(0)))),
	[ФинНеделяНомер]  AS ([НеделяНомер]),
	[ФинНеделя]  AS ((CONVERT([varchar](50),datename(month,dateadd(month,[ФинМесяцНомер]-(1),(0))),(0))+' ')+CONVERT([varchar](50),[НеделяНомер],(0))),
	[ДатыКод] [bigint] IDENTITY(1,1) NOT NULL,
 CONSTRAINT [PK_Dates] PRIMARY KEY CLUSTERED 
(
	[ДатыКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [cube].[Dates_auto]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [cube].[Dates_auto](
	[ДатыКод] [bigint] IDENTITY(1,1) NOT NULL,
	[ДатыРасч] [date] NULL,
	[Год]  AS (datepart(year,[ДатыРасч])),
	[МесяцНомер]  AS (datepart(month,[ДатыРасч])),
	[День]  AS (datepart(day,[ДатыРасч])),
	[Месяц]  AS (datename(month,[ДатыРасч])),
	[НеделяНомер]  AS (datepart(week,[ДатыРасч])),
	[Неделя]  AS (datename(month,[ДатыРасч])+datename(week,[ДатыРасч])),
	[ФинГод]  AS (datepart(year,[ДатыРасч])),
	[ФинМесяцНомер]  AS (datepart(month,[ДатыРасч])),
	[ФинМесяц]  AS (datename(month,[ДатыРасч])),
	[ФинНеделяНомер]  AS (datepart(week,[ДатыРасч])),
	[ФинНеделя]  AS (datename(month,[ДатыРасч])+datename(week,[ДатыРасч]))
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [Dates_auto_idx_ДатыРасч] ON [cube].[Dates_auto] 
(
	[ДатыРасч] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [cube].[Dates]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [cube].[Dates](
	[ДатыКод_old] [bigint] NOT NULL,
	[ДатыРасч] [date] NULL,
	[Год] [int] NULL,
	[МесяцНомер] [int] NULL,
	[День] [int] NULL,
	[Месяц] [nvarchar](30) NULL,
	[НеделяНомер] [int] NULL,
	[Неделя] [nvarchar](61) NULL,
	[ФинГод] [int] NULL,
	[ФинМесяцНомер] [int] NULL,
	[ФинМесяц]  AS (datename(month,dateadd(month,[ФинМесяцНомер]-(1),(0)))),
	[ФинНеделяНомер] [int] NULL,
	[ФинНеделя]  AS ((CONVERT([varchar](50),datename(month,dateadd(month,[ФинМесяцНомер]-(1),(0))),(0))+' ')+CONVERT([varchar](50),[ФинНеделяНомер],(0))),
	[ДатыКод] [bigint] IDENTITY(1,1) NOT NULL,
 CONSTRAINT [PK_Dates_1] PRIMARY KEY CLUSTERED 
(
	[ДатыКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DailySales]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DailySales](
	[Дата] [varchar](30) NULL,
	[Номер Накл] [varchar](30) NULL,
	[Менеджер] [varchar](100) NULL,
	[Клиент] [varchar](100) NULL,
	[Адрес Доставки] [varchar](100) NULL,
	[Товар] [varchar](100) NULL,
	[Кол-во] [decimal](10, 2) NULL,
	[Цена ед] [money] NULL,
	[Стоим] [money] NULL,
	[Сумма Накл] [money] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[D_TVR]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[D_TVR](
	[ТовКод] [int] NOT NULL,
	[ТовНаим] [char](52) NULL,
	[ТовГрпНаим] [char](32) NULL,
	[ТовВидНаим] [char](32) NULL,
	[ТовАрт] [char](14) NULL,
	[ТовШтрих] [char](14) NULL,
	[ТовЕИ] [char](6) NULL,
	[ТовВесБрутто] [float] NULL,
	[ТовВесНетто] [float] NULL,
	[ЕстьОстаток] [tinyint] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[F_RASHCLEAN]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_RASHCLEAN](
	[ОпКодТов] [int] NULL,
	[СумКол] [decimal](18, 3) NULL,
	[СумСтоим] [money] NULL,
	[ОпДата] [bigint] NOT NULL,
	[Код] [bigint] IDENTITY(1,1) NOT NULL,
	[ОпДатаРасч] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[f_rashall]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[f_rashall](
	[ОпКодТов] [int] NULL,
	[ОпКол] [numeric](18, 3) NULL,
	[ОпСтоим] [money] NULL,
	[ОпКодКлн] [int] NULL,
	[ОпКод] [bigint] NOT NULL,
	[ОпВес] [numeric](18, 3) NULL,
	[ОпКолУпак] [numeric](18, 3) NULL,
	[ОпНакл] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[F_PRIHCLEAN2]    Script Date: 08/10/2015 12:55:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_PRIHCLEAN2](
	[ОпКодТов] [int] NULL,
	[СумКол] [decimal](18, 3) NULL,
	[СумСтоим] [money] NULL,
	[ОпДата] [bigint] NOT NULL,
	[Код] [bigint] IDENTITY(1,1) NOT NULL,
	[ЕстьСпис] [tinyint] NULL,
	[ОпДатаРасч] [datetime] NULL
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [uyhr] ON [dbo].[F_PRIHCLEAN2] 
(
	[ОпКодТов] ASC,
	[ОпДатаРасч] ASC,
	[Код] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  SqlAssembly [EDIKorusSOAP]    Script Date: 08/10/2015 12:55:57 ******/
CREATE ASSEMBLY [EDIKorusSOAP]
AUTHORIZATION [dbo]
FROM 
WITH PERMISSION_SET = SAFE
GO
ALTER ASSEMBLY [EDIKorusSOAP]
ADD FILE FROM 0x
AS N'Properties\AssemblyInfo.cs'
GO
ALTER ASSEMBLY [EDIKorusSOAP]
ADD FILE FROM 0x
AS N'Relationships.cs'
GO
ALTER ASSEMBLY [EDIKorusSOAP]
ADD FILE FROM 0x
AS N'Send.cs'
GO
ALTER ASSEMBLY [EDIKorusSOAP]
ADD FILE FROM 
AS N'Web References\pl.ecod.www\Reference.cs'
GO
EXEC sys.sp_addextendedproperty @name=N'SqlAssemblyProjectRoot', @value=N'c:\users\fedyakov\documents\visual studio 2010\Projects\EDIKorusSOAP\EDIKorusSOAP' , @level0type=N'ASSEMBLY',@level0name=N'EDIKorusSOAP'
GO
/****** Object:  UserDefinedFunction [dbo].[Dec2Bit]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[Dec2Bit]( @d int )
returns varchar(255)
as
begin
  declare @b varchar(255)
  set @b = ''
  while ( @d > 0 )
  begin
    set @b =  cast( @d % 2 as varchar ) + @b
    set @d = round( @d / 2, 0 )
  end
  return ( replicate( '0', 32-len(@b) ) + @b )
END
GO
/****** Object:  Table [edi].[CislinkMessages]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [edi].[CislinkMessages](
	[iddoc] [int] IDENTITY(1,1) NOT NULL,
	[Body] [xml] NULL,
 CONSTRAINT [PK_edi_CislinkMessages] PRIMARY KEY CLUSTERED 
(
	[iddoc] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[get_nakl_sum]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[get_nakl_sum] as
CREATE TABLE #tmpBus
(   doc_no INT,   host_number varchar(50)   )

declare @osql varchar(max);
set @osql = 'select o.doc_no, o.host_number from orders o 
where o.host_number like ''asx-%'' or o.host_number like ''atx-%''or o.host_number like ''acx-%''
or o.host_number like ''aux-%'' or o.host_number like ''anx-%'' or o.host_number like ''awx-%''
or o.host_number like ''aox-%'' or o.host_number like ''agx-%'' order by 1'
insert into #tmpBus execute (@osql) at wms
select * from #tmpBus
drop table #tmpBus
GO
/****** Object:  StoredProcedure [dbo].[INSERT_PRICE_GROUP]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[INSERT_PRICE_GROUP] ( @Price_List_Sale_Part_Group_Code_ int,
                                              @Customer_Code_ int,
                                              @Customer_Group_Code_ int,
                                              @Customer_Group_Discount_ float) AS

If @PRICE_LIST_SALE_PART_GROUP_CODE_=0
BEGIN
  SELECT @PRICE_LIST_SALE_PART_GROUP_CODE_=dbo.GET_NEXT_NUMBER_PRICE_GROUP()

  insert PRICE_LIST_SALE_PART_GROUP_TAB
    select @PRICE_LIST_SALE_PART_GROUP_CODE_ as PRICE_LIST_SALE_PART_GROUP_CODE_, 
           SALE_PART_CODE, 
           @Customer_Group_Code_ As Sale_Part_Group,
           PRICE_R
    from GET_CUSTOMER_PRICE_GROUP(@Customer_Code_, 
                                  @Customer_Group_Code_, 
                                  @Customer_Group_Discount_)
end

insert CUSTOMER_PRICE_LIST_SALE_PART_GROUP_TAB
  VALUES (@Customer_Code_, @PRICE_LIST_SALE_PART_GROUP_CODE_)
GO
/****** Object:  Table [dbo].[HIST_USL]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[HIST_USL](
	[УслКод] [bigint] NULL,
	[УслКол] [float] NULL,
	[УслЦена] [float] NULL,
	[УслНомер] [int] NOT NULL,
	[УслСкл] [bigint] NOT NULL,
	[УслОпер] [smallint] NOT NULL,
	[НаклКод] [bigint] NULL,
	[ДатаКод] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [wms].[HIST_SKL_SKULife]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[HIST_SKL_SKULife](
	[INVOICENUMBER] [int] NULL,
	[INVOICETYPE] [int] NULL,
	[INVOICESKL] [int] NULL,
	[SKU] [int] NULL,
	[PercentLife] [float] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [iHIST_SKL_SKULife] ON [wms].[HIST_SKL_SKULife] 
(
	[INVOICENUMBER] ASC,
	[INVOICETYPE] ASC,
	[INVOICESKL] ASC,
	[SKU] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_HIST_SKL_SKULife] ON [wms].[HIST_SKL_SKULife] 
(
	[INVOICENUMBER] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_HIST_SKL_SKULife_1] ON [wms].[HIST_SKL_SKULife] 
(
	[INVOICESKL] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_HIST_SKL_SKULife_2] ON [wms].[HIST_SKL_SKULife] 
(
	[INVOICETYPE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_HIST_SKL_SKULife_3] ON [wms].[HIST_SKL_SKULife] 
(
	[PercentLife] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_HIST_SKL_SKULife_4] ON [wms].[HIST_SKL_SKULife] 
(
	[SKU] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[HIST_SKL_PRICE]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[HIST_SKL_PRICE](
	[ОпКод] [bigint] NOT NULL,
	[ОпЦенаПрих] [money] NULL,
 CONSTRAINT [PK_HIST_SKL_PRICE] PRIMARY KEY CLUSTERED 
(
	[ОпКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[GEN_SUPP]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[GEN_SUPP](
	[Номер] [bigint] NOT NULL,
	[Имя] [char](32) NULL,
	[КодВБазеСоюза] [bigint] NOT NULL,
	[КодВБазеГенПост] [bigint] NOT NULL,
	[ТипПоставщика] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[FN_Warehouse]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[FN_Warehouse](
	[Distrib_code] [varchar](50) NOT NULL,
	[Warehouse_code] [varchar](50) NOT NULL,
	[Warehouse_address] [varchar](200) NOT NULL,
	[Warehouse_kladr_street] [varchar](17) NULL,
	[Warehouse_kladr_dom] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[F_STREAM]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_STREAM](
	[Клн] [bigint] NOT NULL,
	[Кол] [money] NULL,
	[Дата] [bigint] NOT NULL,
	[Тип] [tinyint] NOT NULL,
	[Ключ] [int] IDENTITY(1,1) NOT NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [IX_FSTREAM] ON [dbo].[F_STREAM] 
(
	[Клн] ASC,
	[Дата] ASC,
	[Тип] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[F_SROK_test]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_SROK_test](
	[Клн] [bigint] NOT NULL,
	[НашаФирма] [bigint] NOT NULL,
	[СуммаВрем] [money] NULL,
	[ДатаНачало] [datetime] NULL,
	[Разнесено] [money] NULL,
	[ДатаКонец] [datetime] NULL,
	[ДатаОпер] [datetime] NULL,
	[Период] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[F_SROK_ourFirm]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_SROK_ourFirm](
	[Клн] [bigint] NOT NULL,
	[НашаФирма] [bigint] NOT NULL,
	[СуммаВрем] [money] NULL,
	[ДатаНачало] [datetime] NULL,
	[Разнесено] [money] NULL,
	[ДатаКонец] [datetime] NULL,
	[ДатаОпер] [datetime] NULL,
	[Период] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[F_SROK]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[F_SROK](
	[Клн] [bigint] NOT NULL,
	[СуммаВрем] [money] NULL,
	[ДатаНачало] [datetime] NULL,
	[Разнесено] [money] NULL,
	[ДатаКонец] [datetime] NULL,
	[ДатаОпер] [datetime] NULL,
	[Период] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [edi].[KorusMessages]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [edi].[KorusMessages](
	[iddoc] [int] IDENTITY(1,1) NOT NULL,
	[PartnerIln] [bigint] NULL,
	[DocType] [nchar](15) NULL,
	[TrackingID] [uniqueidentifier] NULL,
	[Body] [xml] NULL,
	[ORDSP] [bit] NULL,
	[DELNOT] [bit] NULL,
	[ResponseResult] [varchar](max) NULL,
	[Response] [xml] NULL,
	[DelnoteXML] [xml] NULL,
	[povt_export] [bit] NULL,
	[stamp] [smalldatetime] NOT NULL,
 CONSTRAINT [PK_edi_KorusMessages] PRIMARY KEY CLUSTERED 
(
	[iddoc] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [DocType_ORDSP_DELNOT] ON [edi].[KorusMessages] 
(
	[DocType] ASC,
	[ORDSP] ASC,
	[DELNOT] ASC
)
INCLUDE ( [iddoc]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [edi].[KonturOrderStDay]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [edi].[KonturOrderStDay](
	[Box] [nchar](4) NULL,
	[addresMag] [nvarchar](70) NULL,
	[countorder] [int] NULL,
	[dd] [date] NULL,
	[counterror] [int] NULL,
	[error_order] [int] NULL,
	[id] [int] IDENTITY(1,1) NOT NULL,
	[torgS] [nvarchar](70) NULL,
	[nameMag] [nvarchar](70) NULL,
	[sumStr] [int] NULL,
 CONSTRAINT [PK_KonturOrderStDay] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_TRANS]    Script Date: 08/10/2015 12:55:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[M_TRANS](
	[Ид] [bigint] IDENTITY(1,1) NOT NULL,
	[ДатаРасч] [datetime] NULL,
	[Накл] [int] NULL,
	[Скл] [int] NULL,
	[ОпТип] [int] NULL,
	[Клн] [int] NULL,
	[КлнТип] [int] NULL,
	[Возврат] [int] NULL,
	[Сотрудник] [int] NULL,
	[ПлатКод] [bigint] NULL,
	[ПлатРежим] [int] NULL,
	[ПлатНом] [char](16) NULL,
	[ПлатТип] [int] NULL,
	[Сумма] [money] NULL,
	[Сальдо] [money] NULL,
	[ДатаИсх] [bigint] NULL,
	[НашаФирма] [int] NULL,
	[МенеджерНакладной] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [КлнНашаФирма] ON [dbo].[M_TRANS] 
(
	[Клн] ASC,
	[НашаФирма] ASC
)
WHERE ([Сумма]<>(0))
WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  UserDefinedTableType [dbo].[PdrTableType]    Script Date: 08/10/2015 12:55:58 ******/
CREATE TYPE [dbo].[PdrTableType] AS TABLE(
	[id] [int] NULL
)
GO
/****** Object:  Table [dbo].[PDR_USER]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PDR_USER](
	[ПользКод] [int] NULL,
	[ПодрКод] [int] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[PDR_ABC]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[PDR_ABC](
	[PdrKod] [int] NULL,
	[UsePdr] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[pdl_sotr]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[pdl_sotr](
	[pdl_text] [char](50) NULL,
	[pdl_ppl] [int] NULL,
	[pdl_names] [char](50) NULL,
	[pdl_otch] [char](50) NULL,
	[pdl_un2] [int] NULL,
	[pdl_kln] [bigint] NULL,
	[pdl_ok1] [char](50) NULL,
	[pdl_un1] [bigint] NULL,
	[pdl_ok3] [bigint] NULL,
	[pdl_ok4] [char](100) NULL,
	[pdl_ok5] [char](100) NULL,
	[pdl_email] [char](50) NULL,
	[pdl_pspn] [char](50) NULL,
	[pdl_vDokm] [int] NULL,
	[pdl_inn] [char](50) NULL,
	[pdl_prz] [int] NULL,
	[pdl_datr] [bigint] NULL,
	[pdl_adk] [bigint] NULL,
	[pdl_dovn1] [char](50) NULL,
	[pdl_dovn2] [char](50) NULL,
	[pdl_dovn3] [char](50) NULL,
	[pdl_dovd1] [bigint] NULL,
	[pdl_dovd2] [bigint] NULL,
	[pdl_dovd3] [bigint] NULL,
	[pdl_fior] [char](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[platuslrash]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[platuslrash](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [int] NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[platuslprih]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[platuslprih](
	[ПлатКод] [bigint] NOT NULL,
	[ПлатНом] [int] NULL,
	[ПлатНапр] [tinyint] NULL,
	[ПлатТип] [int] NULL,
	[ПлатДата] [bigint] NULL,
	[ПлатКлнКод] [bigint] NULL,
	[ПлатСумма] [money] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Pradata]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Pradata](
	[codtt] [nvarchar](255) NULL,
	[namett] [nvarchar](255) NULL,
	[adrtt] [nvarchar](255) NULL,
	[sravn] [nvarchar](255) NULL,
	[id] [int] IDENTITY(1,1) NOT NULL,
	[str_map] [nvarchar](255) NULL,
 CONSTRAINT [PK_Pradata] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[M_RealPriceNDS_Tbl]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [xmt].[M_RealPriceNDS_Tbl](
	[КлнКод] [bigint] NOT NULL,
	[ТовКод] [int] NOT NULL,
	[ТовЦенаРСХ] [money] NULL,
	[ГрпЦен] [int] NULL,
	[ЦенаПоГруппеЦен] [money] NULL,
	[ЦенаПоАльтГруппеЦен] [money] NULL,
	[ТоварнаяСкидка] [float] NULL,
	[КлнНаТовар] [float] NULL,
	[КлнНаВид] [float] NULL,
	[КлнНаГруппу] [float] NULL,
	[РеальнаяЦена] [float] NULL,
	[НДС] [float] NULL,
	[ТовАрт] [char](14) NULL,
	[ТовГрп] [int] NULL,
	[ЦенаНДС] [float] NULL,
	[ТовВид] [int] NULL,
	[БитовыеФлаги] [bigint] NULL,
 CONSTRAINT [PK_M_RealPriceNDS_Tbl] PRIMARY KEY CLUSTERED 
(
	[КлнКод] ASC,
	[ТовКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PaymentTemper]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PaymentTemper](
	[ОпНаклКод] [int] NULL,
	[ДатаРасч] [datetime] NULL,
	[Разнесено] [float] NULL,
	[СуммПериод] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [wms].[OrdPlan_Sku_Client]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[OrdPlan_Sku_Client](
	[КлнКод] [int] NULL,
	[ТовКод] [int] NULL,
	[ГруппаПланированияКод] [int] NULL
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [КлнТов] ON [wms].[OrdPlan_Sku_Client] 
(
	[КлнКод] ASC,
	[ТовКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [wms].[ordplan_groups]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [wms].[ordplan_groups](
	[id] [int] NOT NULL,
	[from_life_percent] [real] NULL,
	[to_life_percent] [real] NULL,
	[from_life_threshold] [real] NULL,
	[to_life_threshold] [real] NULL,
 CONSTRAINT [PK_wms_ordplan_groups] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ORDERS_SHELF_LIFE]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ORDERS_SHELF_LIFE](
	[PLAN_TIME] [datetime2](7) NULL,
	[DOC_NO] [nvarchar](32) NULL,
	[HOST_NUMBER] [nvarchar](128) NULL,
	[SKUCODE] [nvarchar](64) NULL,
	[HOST_ID] [nvarchar](64) NULL,
	[S_NAME] [nvarchar](256) NULL,
	[DD] [nvarchar](2) NULL,
	[MM] [nvarchar](2) NULL,
	[YYYY] [nvarchar](4) NULL,
	[PRODUCTION_DATE] [datetime2](7) NULL,
	[END_DATE] [datetime2](7) NULL,
	[QTY] [float] NULL,
	[PRICE] [float] NULL,
	[SROK] [float] NULL,
	[SHELF] [float] NULL,
	[WHO_RESPONSE] [nvarchar](60) NULL,
	[DEP] [nvarchar](128) NULL,
	[T_N] [nvarchar](128) NULL,
	[G_N] [nvarchar](128) NULL,
	[C_N] [nvarchar](128) NULL,
	[ADDRESS] [nvarchar](256) NULL,
	[UNITS] [numeric](38, 0) NULL,
	[NAME] [nvarchar](128) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [WBD].[Orders]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [WBD].[Orders](
	[Код клиента] [int] NULL,
	[Код точки доставки] [varchar](50) NULL,
	[Код альтернативного адреса] [int] NULL,
	[Номер заказа] [varchar](50) NULL,
	[ID товара] [int] NULL,
	[Артикул товара] [varchar](50) NULL,
	[Количество мест] [int] NULL,
	[ЕИ] [varchar](50) NULL,
	[Количество шт] [float] NULL,
	[Дата и время выработки] [varchar](50) NULL,
	[Номер партии] [varchar](50) NULL,
	[Срок годности] [varchar](50) NULL,
	[Дата получения заказа] [date] NULL,
	[Комментарий обработки] [varchar](max) NULL,
	[ДатаВремяДобавленияЗаписи] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  View [wms].[ships]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*WHERE     (sku.host_sku_group = 5312)*/
CREATE VIEW [wms].[ships]
AS
SELECT     o.doc_no, o.host_number, sku.host_id, sku.skucode, sku.name, s.name AS s_name, s.production_date, s.end_date, od.shiped / sku.uom_div AS qnt
FROM         WMS..WMS.ORDERS AS o INNER JOIN
                      WMS..WMS.ORDER_DETAILS AS od ON od.order_id = o.id INNER JOIN
                      WMS..WMS_ARCHIVE.OLDORDERED_LOADS AS ol ON ol.order_id = od.order_id AND ol.line = od.line INNER JOIN
                      WMS..WMS.LOADS AS l ON l.id = ol.load_id INNER JOIN
                      WMS..WMS.SERIAL AS s ON s.id = l.serial_id INNER JOIN
                      WMS..WMS.SKU AS sku ON sku.id = l.sku_id
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "o"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 54
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "od"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 54
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ol"
            Begin Extent = 
               Top = 54
               Left = 38
               Bottom = 102
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "l"
            Begin Extent = 
               Top = 54
               Left = 227
               Bottom = 102
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "s"
            Begin Extent = 
               Top = 102
               Left = 38
               Bottom = 150
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "sku"
            Begin Extent = 
               Top = 102
               Left = 227
               Bottom = 150
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 15' , @level0type=N'SCHEMA',@level0name=N'wms', @level1type=N'VIEW',@level1name=N'ships'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'00
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 2235
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'wms', @level1type=N'VIEW',@level1name=N'ships'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'wms', @level1type=N'VIEW',@level1name=N'ships'
GO
/****** Object:  Table [dbo].[OurFirms_old]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[OurFirms_old](
	[id] [int] NULL,
	[Name] [nvarchar](255) NULL
) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Автокод Нашей фирмы  (Автокод собственных ЮрЛиц ГК из Локиса)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'OurFirms_old', @level2type=N'COLUMN',@level2name=N'id'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Наименование Нашей Фирмы (собственные ЮрЛица ГК)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'OurFirms_old', @level2type=N'COLUMN',@level2name=N'Name'
GO
/****** Object:  View [dbo].[OurFirms]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create view [dbo].[OurFirms] as

select cast(КлнКод as int) [id], cast(КлнНаим as nvarchar) [Name] from KAT_KLN k where k.КлнГрпКод=7
GO
/****** Object:  View [dbo].[M_ReadableTransactions]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE   view [dbo].[M_ReadableTransactions] as
select ДатаРасч, Накл as [Номер накладной],
	ПлатНом as [Номер документа],
	Скл, ОпТип, Возврат, ПлатРежим, Клн,
	CASE isnull(ОпТип,0) + isnull(Возврат,0)*10 + isnull(ПлатРежим,0)*100
		WHEN 1 THEN 'П'
		WHEN 2 THEN 'Р'
		WHEN 3 THEN 'С'
		WHEN 11 THEN 'ВП'
		WHEN 12 THEN 'ВР'
		WHEN 100 THEN 'ПБ'
		WHEN 200 THEN 'ПК'
		WHEN 300 THEN 'РБ'
		WHEN 400 THEN 'РК'
		ELSE 'Тип не определен'
	END AS Операция,	
	case КлнТип
	-- только если клиент
		when 2 then (select КлнНаим from KAT_KLN where kat_kln.КлнКод = m_trans.Клн)
--		when 2 'Клиент'
		else 'Не определен клиент'
	end as [Клиент],
-- колонка прихода
case (isnull(ОпТип,0) + isnull(Возврат,0)*10 + isnull(ПлатРежим,0)*100)
	-- если приход
	when 1 then Сумма
	-- приход-возврат
	when 11 then Сумма
	-- приход по банку
	when 100 then Сумма
	-- приход по кассе
	when 200 then Сумма
	else 0
	end as [Приход],
-- колонка расхода
case (isnull(ОпТип,0) + isnull(Возврат,0)*10 + isnull(ПлатРежим,0)*100)
	-- расход
	when 2 then Сумма
	-- расход-возврат
	when 12 then Сумма
	-- расход по банку
	when 300 then Сумма
	-- расход по кассе
	when 400 then Сумма
	else 0
	end as [Расход],
-- колонка движения средств
case (isnull(ОпТип,0) + isnull(Возврат,0)*10 + isnull(ПлатРежим,0)*100)
	-- если приход
	when 1 then Сумма
	-- приход-возврат
	when 11 then Сумма
	-- приход по банку
	when 100 then Сумма
	-- приход по кассе
	when 200 then Сумма
	-- расход
	when 2 then -Сумма
	-- расход-возврат
	when 12 then -Сумма
	-- расход по банку
	when 300 then -Сумма
	-- расход по кассе
	when 400 then -Сумма
	else 0
	end as Платеж,
	Сальдо
-- comment
from m_trans
where КлнТип=2
GO
/****** Object:  Table [xmt].[OrderAndReturn]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[OrderAndReturn](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[documentId] [nvarchar](255) NULL,
	[PsevdoId] [int] NULL,
	[Item0] [nvarchar](50) NULL,
	[CustomerName] [nvarchar](500) NULL,
	[ClientId] [int] NULL,
	[AddressId] [int] NULL,
	[UserId] [int] NULL,
	[Article] [nvarchar](50) NULL,
	[ProdId] [nvarchar](50) NULL,
	[Count] [float] NULL,
	[dt_deliver] [datetime2](0) NULL,
	[SklId] [nvarchar](255) NULL,
	[Item1] [nvarchar](50) NULL,
	[Item2] [nvarchar](50) NULL,
	[Item3] [nvarchar](50) NULL,
	[Item4] [nvarchar](50) NULL,
	[notes] [nvarchar](500) NULL,
	[docType] [nvarchar](50) NULL,
	[Export] [bit] NULL,
 CONSTRAINT [PK_OrderReturn_1] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  UserDefinedFunction [dbo].[ParseString]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[ParseString](@S VARCHAR(MAX), @Delimiters VARCHAR(MAX))
RETURNS TABLE AS RETURN
SELECT N,S
FROM
(
 SELECT V.number,SUBSTRING(@S COLLATE Cyrillic_General_CI_AI,V.number,
  (
   SELECT MIN(VV.number)
   FROM master.dbo.spt_values VV
   WHERE VV.type='P' AND VV.number BETWEEN V.number AND LEN(@S)+1
   AND CHARINDEX(SUBSTRING(@S+LEFT(@Delimiters,1),VV.number,1),@Delimiters)>0
  )-V.number
 )
 FROM master.dbo.spt_values V
 WHERE V.type='P' AND V.number BETWEEN 1 AND LEN(@S)+1
 AND CHARINDEX(SUBSTRING(LEFT(@Delimiters,1)+@S,V.number,1),@Delimiters)>0
)T(N,S)
WHERE S>'';
GO
/****** Object:  View [dbo].[Position]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Position]
AS
SELECT     ТовКод, ТовНаим, CASE WHEN ТовАрт LIKE '%z%' THEN 'Товарная позиция по Z' ELSE 'Товарная позиция' END AS ТовПозиции, ТовАрт
FROM         dbo.KAT_TVR
GO
/****** Object:  View [dbo].[M_TPZ_ADD]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE     VIEW [dbo].[M_TPZ_ADD]
AS
select * from kat_tpz
-- Специальный вид для привязки еще одной характеристики
-- в количество обращений к товару
GO
/****** Object:  View [dbo].[M_SKDS_Only_grp]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE     VIEW [dbo].[M_SKDS_Only_grp]
AS
-- VG 20141218 возвращает толко данные по группе цен, закрепленной за клиентом 
select kat_kln.КлнНаим, 
		kat_kln.КлнКод as КлнКод, 
        kat_tvr.ТовКод as ТовКод,
     --   kat_tvr.ТовЦенаРСХ, 
        sld_kln.ГрпЦен,
	/* Группа цен */
	(select top 1 Цена from m_grpcen where ТврКод=ТовКод 
		and m_grpcen.ГрпЦен=sld_kln.ГрпЦен) as ЦенаПоГруппеЦен
from kat_tvr, kat_kln, sld_kln 
where kat_kln.КлнКод=sld_kln.КлнКод and sld_kln.ГрпЦен<>0
GO
/****** Object:  View [dbo].[M_SKDS_Full]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE    VIEW [dbo].[M_SKDS_Full]
AS
select kat_kln.КлнНаим, kat_kln.КлнКод as КлнКод, kat_tvr.ТовКод as ТовКод,
	kat_tvr.ТовЦенаРСХ, sld_kln.ГрпЦен,
	/* Группа цен */
	(select top 1 Цена from m_grpcen where ТврКод=ТовКод 
		and m_grpcen.ГрпЦен=sld_kln.ГрпЦен) as ЦенаПоГруппеЦен,
	/* Альтернативная группа цен */
	(select top 1 Цена from m_grpcen, cenp_tab
		where m_grpcen.ТврКод=kat_tvr.ТовКод and
		cenp_tab.КлнКод=kat_kln.КлнКод and
		cenp_tab.ТовКод=kat_tvr.ТовКод and
		m_grpcen.ГрпЦен=cenp_tab.ЦенГрп
		) as ЦенаПоАльтГруппеЦен,
	/* Товарная скидка */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=kat_tvr.ТовКод
		and skd_tab.СкдТип=1) as ТоварнаяСкидка,
	/* Клиентская на товар */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=kat_kln.КлнКод
		and skd_tab.СкдДоп=kat_tvr.ТовКод
		and skd_tab.СкдТип=6) as КлнНаТовар,
	/* Клиентская на вид */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=kat_kln.КлнКод
		and skd_tab.СкдДоп=kat_tvr.ТовВид
		and skd_tab.СкдТип=7) as КлнНаВид,
	/* Клиентская на группу */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=kat_kln.КлнКод
		and skd_tab.СкдДоп=kat_tvr.ТовГрп
		and skd_tab.СкдТип=0) as КлнНаГруппу
from kat_tvr, kat_kln left outer join sld_kln on kat_kln.КлнКод=sld_kln.КлнКод
GO
/****** Object:  View [dbo].[M_SKDS]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE     VIEW [dbo].[M_SKDS]
AS
select kat_kln.КлнНаим, kat_kln.КлнКод as КлнКод, kat_tvr.ТовКод as ТовКод,
	kat_tvr.ТовЦенаРСХ, sld_kln.ГрпЦен,
	/* Группа цен */
	(select top 1 Цена from m_grpcen where ТврКод=ТовКод 
		and m_grpcen.ГрпЦен=sld_kln.ГрпЦен) as ЦенаПоГруппеЦен,
	/* Альтернативная группа цен */
	(select top 1 Цена from m_grpcen, cenp_tab
		where m_grpcen.ТврКод=kat_tvr.ТовКод and
		cenp_tab.КлнКод=kat_kln.КлнКод and
		cenp_tab.ТовКод=kat_tvr.ТовКод and
		m_grpcen.ГрпЦен=cenp_tab.ЦенГрп
		) as ЦенаПоАльтГруппеЦен,
	/* Товарная скидка */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=kat_tvr.ТовКод
		and skd_tab.СкдТип=1) as ТоварнаяСкидка,
	/* Клиентская на товар */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=kat_kln.КлнКод
		and skd_tab.СкдДоп=kat_tvr.ТовКод
		and skd_tab.СкдТип=6) as КлнНаТовар,
	/* Клиентская на вид */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=kat_kln.КлнКод
		and skd_tab.СкдДоп=kat_tvr.ТовВид
		and skd_tab.СкдТип=7) as КлнНаВид,
	/* Клиентская на группу */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=kat_kln.КлнКод
		and skd_tab.СкдДоп=kat_tvr.ТовГрп
		and skd_tab.СкдТип=0) as КлнНаГруппу
from kat_tvr, kat_kln, sld_kln 
where kat_kln.КлнКод=sld_kln.КлнКод
GO
/****** Object:  View [dbo].[M_Remnants_dop]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[M_Remnants_dop]
AS
SELECT     r.*, t.ТовВесБрутто * r.Остаток AS ВесОстаткаБрутто, (r.Остаток * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчет, 
                      t.ТовВесНетто * r.Остаток AS ВесОстаткаНетто, CASE WHEN УпакКоэф = 0 THEN Остаток ELSE Остаток / УпакКоэф END AS ОстатокВУпаковках, 
                      r.СпросДень AS ДневнойСпрос, t.ТовВесБрутто * r.СпросДень AS СпросДеньВесБрутто, (r.СпросДень * k.ТовЦенаУчет) * (1 + k.НДС / 100) 
                      AS СуммаСпросДеньУчет, r.ПрцЗапаса AS Expr1, r.СрТренд AS Expr2, r.МаксТренд AS Expr3
FROM         dbo.REMNANTS_DOP r LEFT OUTER JOIN
                      dbo.TVR_DEF t ON r.ТовКод = t.ТовКод LEFT OUTER JOIN
                      dbo.KAT_TVR k ON r.ТовКод = k.ТовКод LEFT OUTER JOIN
                      dbo.KAT_UPK u ON k.ТовУпак = u.УпакКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "r"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 4
         End
         Begin Table = "t"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "k"
            Begin Extent = 
               Top = 114
               Left = 38
               Bottom = 222
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "u"
            Begin Extent = 
               Top = 114
               Left = 227
               Bottom = 207
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'M_Remnants_dop'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'M_Remnants_dop'
GO
/****** Object:  View [dbo].[M_Remnants]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE    VIEW [dbo].[M_Remnants]
AS
SELECT     
	r.*
	, t.ТовВесБрутто * r.Остаток AS ВесОстаткаБрутто
	, (r.Остаток * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчет
	, t.ТовВесНетто * r.Остаток AS ВесОстаткаНетто
	, CASE 
		WHEN УпакКоэф = 0 THEN Остаток 
		ELSE Остаток / УпакКоэф 
	END AS ОстатокВУпаковках
	, r.СпросДень AS ДневнойСпрос
	, t.ТовВесБрутто * r.СпросДень AS СпросДеньВесБрутто
	, (r.СОжидПрих) * (1 + k.НДС / 100) AS СуммаСпросДеньУчет
	, t.ТовВесБрутто * (r.СОжидПрих) as ВесОстаткаБруттоОжидаемый
	, ((r.СОжидПрих) * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчетОжидаемый
	, t.ТовВесНетто * (r.СОжидПрих) AS ВесОстаткаНеттоОжидаемый
	, CASE 
		WHEN УпакКоэф = 0 THEN (СОжидПрих) 
		ELSE (СОжидПрих) / УпакКоэф 
	END AS ОстатокВУпаковкахОжидаемый
FROM REMNANTS r LEFT OUTER JOIN
	dbo.TVR_DEF t ON r.ТовКод = t.ТовКод LEFT OUTER JOIN
	dbo.KAT_TVR k ON r.ТовКод = k.ТовКод LEFT OUTER JOIN
	dbo.KAT_UPK u ON k.ТовУпак = u.УпакКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "r"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 4
         End
         Begin Table = "t"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "k"
            Begin Extent = 
               Top = 114
               Left = 38
               Bottom = 222
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "u"
            Begin Extent = 
               Top = 114
               Left = 227
               Bottom = 207
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 19
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output =' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'M_Remnants'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N' 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'M_Remnants'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'M_Remnants'
GO
/****** Object:  UserDefinedFunction [dbo].[get_curr_price]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[get_curr_price](@kln bigint, @tvr bigint, @naklkod bigint)
returns money
as
begin
declare @curr_price money;
declare @alt_price money;
declare @grp_price money;
declare @tvr_discount decimal;
declare @kln_tvr decimal;
declare @kln_vid decimal;
declare @kln_grp decimal;
declare @nds decimal;
declare @kat_price money;
declare @kat_price_uchet money;

select @nds=НДС from KAT_TVR where ТовКод=@tvr
select @kat_price=ТовЦенаРСХ*(1+@nds/100) from KAT_TVR where ТовКод=@tvr
select @kat_price_uchet=ТовЦенаУчет*(1+@nds/100) from KAT_TVR where ТовКод=@tvr

set @alt_price = 
(   select top 1 Цена from m_grpcen, cenp_tab
	where 
	m_grpcen.ТврКод = @tvr and cenp_tab.КлнКод = @kln and
	cenp_tab.ТовКод = @tvr and m_grpcen.ГрпЦен = cenp_tab.ЦенГрп and
	Цена is not null)*(1+@nds/100);
set @grp_price = 
(   select top 1 Цена from m_grpcen, sld_kln 
	where 
	m_grpcen.ТврКод = @tvr and sld_kln.КлнКод = @kln and
	m_grpcen.ГрпЦен = sld_kln.ГрпЦен)*(1+@nds/100)

set @tvr_discount = 
(   select top 1 СкдПрц1 
	from SKD_TAB 
	where skd_tab.СкдКод = @tvr and skd_tab.СкдТип = 1)
set @kln_tvr = 
(select top 1 СкдПрц1 
	from SKD_TAB 
	where
		skd_tab.СкдКод = @kln
		and skd_tab.СкдДоп = @tvr
		and skd_tab.СкдТип = 6)
set @kln_vid = 
(select top 1 СкдПрц1 
	from SKD_TAB, kat_tvr
	where 
		skd_tab.СкдКод = @kln
		and skd_tab.СкдДоп = kat_tvr.ТовВид
		and kat_tvr.ТовКод = @tvr
		and skd_tab.СкдТип = 7)
set @kln_grp = 
(select top 1 СкдПрц1 
	from SKD_TAB, kat_tvr
	where 
		skd_tab.СкдКод = @kln
		and skd_tab.СкдДоп = kat_tvr.ТовГрп
		and kat_tvr.ТовКод = @tvr
		and skd_tab.СкдТип = 0)


set @curr_price = (
case
	/* Если назначена группа цен */
	when @alt_price <> 0 and @alt_price is not null then
		case
			when @kln_tvr<>0 then @alt_price*(1-@kln_tvr/100)
			when @kln_vid<>0 then @alt_price*(1-@kln_vid/100)
			when @kln_grp<>0 then @alt_price*(1-@kln_grp/100)
			else @alt_price
		end
	when @grp_price <> 0 and @grp_price is not null then
		case
			when @kln_tvr<>0 then @grp_price*(1-@kln_tvr/100)
			when @kln_vid<>0 then @grp_price*(1-@kln_vid/100)
			when @kln_grp<>0 then @grp_price*(1-@kln_grp/100)
			else @grp_price
		end
	else
		case
			when @kln_tvr<>0 then @kat_price*(1-@kln_tvr/100)
			when @kln_vid<>0 then @kat_price*(1-@kln_vid/100)
			when @kln_grp<>0 then @kat_price*(1-@kln_grp/100)
			else @kat_price
		end
end)

if @curr_price>@kat_price_uchet*10 and @kat_price_uchet>0
set @curr_price = @kat_price_uchet;


return @curr_price
end
GO
/****** Object:  UserDefinedFunction [dbo].[Get_Alt_Group]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE FUNCTION [dbo].[Get_Alt_Group] (@CUSTOMER_CODE_ int, @SALE_PART_CODE_ int)  
RETURNS int AS  
BEGIN 
declare @val_ int
select top 1 @val_=  ЦенГрп 
from cenp_tab
where клнкод=@CUSTOMER_CODE_
and товкод=@SALE_PART_CODE_
return @val_
END
GO
/****** Object:  StoredProcedure [dbo].[getBonus_test]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[getBonus_test]
@naklKod bigint, @tvr bigint, @grp bigint, @vid bigint, @kln int, @d nvarchar(30), @bonType int
as
BEGIN
declare @accept_bon_prior int;
declare @accept_bon_stavka numeric(9,2);
declare @accept_bon_id int;
declare @denied_bon_prior int;
declare @stavka_bonus numeric(9,2);

declare @bonId_list table(bonId int, iskl int, StavkaBonDef numeric(9,2));
declare @bonTvr_list_acc table(idbon int, idTVR bigint, idTVRGRP int, idTVRVID int, iskl int, StavkaBon numeric(9,2));
declare @bonTvr_list_den table(idbon int, idTVR bigint, idTVRGRP int, idTVRVID int, iskl int, StavkaBon numeric(9,2));

delete from @bonId_list;
delete from @bonTvr_list_acc;
delete from @bonTvr_list_den;

--  список действующих бонусных программ
insert into @bonId_list(bonId, iskl, StavkaBonDef)
select t.idBon, t.iskl, b.StavkaBonDef from [Бонус].[dbo].Bonus_tt t
inner join [Бонус].[dbo].Bonus b on b.idBon=t.idBon and b.idBon_type=@bonType
and @d between b.Date_beg and b.Date_end
where t.idKLN=@kln
---------------------------------------

if (select count(*) from @bonId_list)>0		--  если действующие БП есть, то продолжаем расчет
	begin
		--	список разрешенных БП
		insert into @bonTvr_list_acc(idbon, idTVR, idTVRGRP, idTVRVID, iskl, StavkaBon)
		select bt.idbon, bt.idTVR, bt.idTVRGRP, bt.idTVRVID, bt.iskl, bt.StavkaBon from [Бонус].[dbo].bonus_tvr bt
		where bt.iskl=0 and bt.idBon in (select bonId from @bonId_list where iskl=0)
		--	список запрещенных БП
		insert into @bonTvr_list_den(idbon, idTVR, idTVRGRP, idTVRVID, iskl, StavkaBon)
		select bt.idbon, bt.idTVR, bt.idTVRGRP, bt.idTVRVID, bt.iskl, bt.StavkaBon from [Бонус].[dbo].bonus_tvr bt
		where bt.iskl=1 and bt.idBon in (select bonId from @bonId_list where iskl=1)

		--	выборка из разрешенного списка записи с наивысшим приоритетом и максимальной бонусной ставкой
		select top 1 @accept_bon_prior=a.prior, @accept_bon_stavka=a.stavka, @accept_bon_id=a.idBon from
			(
			select 3 prior, bt.StavkaBon stavka, bt.idBon idBon, bt.iskl from @bonTvr_list_acc bt
			where bt.idTVR=@tvr
			union
			select 2, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list_acc bt
			where bt.idTVR is null and bt.idTVRVID=@vid
			union
			select 1, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list_acc bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp
			) a
		order by a.prior desc, a.stavka desc;

		--	выборка из запрещенного списка записи с наивысшим приоритетом и максимальной бонусной ставкой
		select top 1 @denied_bon_prior=a.prior from
			(
			select 3 prior, bt.StavkaBon stavka, bt.idBon idBon, bt.iskl from @bonTvr_list_den bt
			where bt.idTVR=@tvr
			union
			select 2, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list_den bt
			where bt.idTVR is null and bt.idTVRVID=@vid
			union
			select 1, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list_den bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp
			) a
		order by a.prior desc, a.stavka desc;


		set @stavka_bonus=0;
		if @accept_bon_prior is null set @accept_bon_prior=0;
		if @denied_bon_prior is null set @denied_bon_prior=0;

		-- сравниваем по приоритетам найденные записи
		if (@accept_bon_prior>@denied_bon_prior) set @stavka_bonus=@accept_bon_stavka;
		if (@accept_bon_prior<=@denied_bon_prior) set @stavka_bonus=0;


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus=0 and (	select count(*) from @bonId_list where iskl=0	)=1
			begin
				select @stavka_bonus=StavkaBonDef, @accept_bon_id=bonId from @bonId_list where iskl=0;
			end;

		if @stavka_bonus>0	--	определяет знак ставки
			set @stavka_bonus=@stavka_bonus * (	select t.sign_type from [Бонус].[dbo].Bonus b
												inner join [Бонус].[dbo].Bon_type t on t.id_type=@bonType and b.idBon=@accept_bon_id )

		--select @naklKod, @tvr, @accept_bon_id, @bonType, @stavka_bonus
	end
		
		--	добавляем строку с полученными данными
		INSERT INTO [cube].[bonusInfo] ([naklKod], [tvrKod], [bonId], [bonType], [bonStavka])
		VALUES (@naklKod, @tvr, @accept_bon_id, @bonType, @stavka_bonus);

END
GO
/****** Object:  UserDefinedFunction [dbo].[getBonus_byType3]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[getBonus_byType3](
@tvr bigint, @grp bigint, @vid bigint, @kln int, @d datetime, @bonType int, @stoim money)
returns money
as
BEGIN
declare @stavka_bonus money;
declare @stavka_bonus_def money;
declare @iskl int;

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @stavka_bonus=a.StavkaBon, @stavka_bonus_def=a.StavkaBonDef, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon, bt.StavkaBonDef, bt.iskl from bonus_table bt
			where bt.idTVR=@tvr and bt.idBon_type=@bonType
			and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln
			union all
			select 2 prior, bt.StavkaBon, bt.StavkaBonDef, bt.iskl from bonus_table bt
			where bt.idTVR is null and bt.idTVRVID=@vid and bt.idBon_type=@bonType
			and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln
			union all
			select 1 prior, bt.StavkaBon, bt.StavkaBonDef, bt.iskl from bonus_table bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp and bt.idBon_type=@bonType
			and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln
			union all
			select 0 prior, bt.StavkaBon, bt.StavkaBonDef, bt.iskl from bonus_table bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP is null and bt.idBon_type=@bonType
			and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln
			) a
		order by a.prior desc, a.iskl desc, a.StavkaBon asc, a.StavkaBonDef asc;

		--	запись исключена, то ставка = 0
		if @iskl=1 set @stavka_bonus=0;

		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus is null and (	select count(*) from bonus_table bt
										where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP is null and bt.idBon_type=1
										and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln	)=1
			begin
				set @stavka_bonus=@stavka_bonus_def;
			end;
		
		set @stavka_bonus = @stoim * isnull(@stavka_bonus, 0) / 100

return @stavka_bonus 
END
GO
/****** Object:  UserDefinedFunction [dbo].[getBonus_byType2]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[getBonus_byType2](
@tvr bigint, @grp bigint, @vid bigint, @kln int, @d datetime, @bonType int, @stoim money)
returns money
as
BEGIN
declare @stavka_bonus money;
declare @stavka_bonus_def money;
declare @iskl int;

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @stavka_bonus=a.StavkaBon, @stavka_bonus_def=a.StavkaBonDef, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon, bt.StavkaBonDef, bt.iskl from bonus_table bt
			where bt.idTVR=@tvr and bt.idBon_type=@bonType
			and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln
			union all
			select 2 prior, bt.StavkaBon, bt.StavkaBonDef, bt.iskl from bonus_table bt
			where bt.idTVR is null and bt.idTVRVID=@vid and bt.idBon_type=@bonType
			and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln
			union all
			select 1 prior, bt.StavkaBon, bt.StavkaBonDef, bt.iskl from bonus_table bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp and bt.idBon_type=@bonType
			and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln
			) a
		order by a.prior desc, a.iskl desc, a.StavkaBon asc, a.StavkaBonDef asc;

		--	запись исключена, то ставка = 0
		if @iskl=1 set @stavka_bonus=0;


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus is null and (	select count(*) from bonus_table bt
										where bt.idTVR=@tvr and bt.idBon_type=@bonType
										and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln and iskl=0	)=1
			begin
				set @stavka_bonus=@stavka_bonus_def;
			end;
		
		set @stavka_bonus = @stoim * isnull(@stavka_bonus, 0) / 100

return @stavka_bonus 
END
GO
/****** Object:  UserDefinedFunction [dbo].[getBonus_byType_test]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[getBonus_byType_test](
@naklKod bigint, @tvr bigint, @grp bigint, @vid bigint, @kln int, @d datetime, @bonType int, @stoim money)
returns money
as
BEGIN
declare @stavka_bonus money;
declare @stavka_bonus_def money;
declare @iskl int;

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @stavka_bonus=a.StavkaBon, @stavka_bonus_def=a.StavkaBonDef, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon, bt.StavkaBonDef, bt.iskl from bonus_table bt
			where bt.idTVR=@tvr and bt.idBon_type=@bonType
			and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln
			union all
			select 2 prior, bt.StavkaBon, bt.StavkaBonDef, bt.iskl from bonus_table bt
			where bt.idTVR is null and bt.idTVRVID=@vid and bt.idBon_type=@bonType
			and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln
			union all
			select 1 prior, bt.StavkaBon, bt.StavkaBonDef, bt.iskl from bonus_table bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp and bt.idBon_type=@bonType
			and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln
			) a
		order by a.prior desc, a.iskl desc, a.StavkaBon asc, a.StavkaBonDef asc;

		--	запись исключена, то ставка = 0
		if @iskl=1 set @stavka_bonus=0;


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus is null and (	select count(*) from bonus_table bt
										where bt.idTVR=@tvr and bt.idBon_type=@bonType
										and @d between bt.Date_beg and bt.Date_end and bt.idKLN=@kln and iskl=0	)=1
			begin
				set @stavka_bonus=@stavka_bonus_def;
			end;
		
		set @stavka_bonus = @stoim * isnull(@stavka_bonus, 0) / 100

return @stavka_bonus 
END
GO
/****** Object:  UserDefinedFunction [dbo].[getBonus_byType]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[getBonus_byType](
@naklKod bigint, @tvr bigint, @grp bigint, @vid bigint, @kln int, @d datetime, @bonType int, @stoim money)
returns money
as
BEGIN
declare @accept_bon_prior int;
declare @accept_bon_stavka money;
declare @accept_bon_id int;
declare @denied_bon_prior int;
declare @stavka_bonus money;
declare @iskl int;

declare @bonId_list table(bonId int, iskl int, StavkaBonDef money);
declare @bonTvr_list table(idbon int, idTVR bigint, idTVRGRP int, idTVRVID int, iskl int, StavkaBon money);


--  список действующих бонусных программ
insert into @bonId_list(bonId, iskl, StavkaBonDef)
select t.idBon, t.iskl, b.StavkaBonDef from [Бонус].[dbo].Bonus_tt t
inner join [Бонус].[dbo].Bonus b on b.idBon=t.idBon and b.idBon_type=@bonType
and @d between b.Date_beg and b.Date_end
where t.idKLN=@kln
---------------------------------------

if (select count(*) from @bonId_list)>0		--  если действующие БП есть, то продолжаем расчет
	begin
		--	список БП по товарам, группам, видам
		insert into @bonTvr_list(idbon, idTVR, idTVRGRP, idTVRVID, iskl, StavkaBon)
		select bt.idbon, bt.idTVR, bt.idTVRGRP, bt.idTVRVID, bt.iskl, bt.StavkaBon from [Бонус].[dbo].bonus_tvr bt
		where bt.iskl=0 and bt.idBon in (select bonId from @bonId_list)

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @accept_bon_prior=a.prior, @stavka_bonus=a.stavka, @accept_bon_id=a.idBon, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon stavka, bt.idBon idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR=@tvr
			union all
			select 2, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID=@vid
			union all
			select 1, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp
			) a
		order by a.prior desc, a.iskl desc, a.stavka desc;

		--	запись исключена, то ставка = 0
		if @iskl=1 set @stavka_bonus=0;


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus is null and (	select count(*) from @bonId_list where iskl=0	)=1
			begin
				select @stavka_bonus=StavkaBonDef, @accept_bon_id=bonId from @bonId_list where iskl=0;
			end;
		
			if @stavka_bonus is null set @stavka_bonus=0;
		
			if @stavka_bonus>0	--	определяем знак ставки и считаем бонус
				set @stavka_bonus = @stoim * @stavka_bonus / 100 * (select t.sign_type from [Бонус].[dbo].Bonus b
																	inner join [Бонус].[dbo].Bon_type t on t.id_type=@bonType and b.idBon=@accept_bon_id)

	end

return @stavka_bonus 
END
GO
/****** Object:  UserDefinedFunction [dbo].[getBonus_bonus]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[getBonus_bonus](
@naklKod bigint, @tvr bigint, @grp bigint, @vid bigint, @kln int, @d datetime, @bonType int, @stoim money)
returns money
as
BEGIN
declare @accept_bon_prior int;
declare @accept_bon_stavka money;
declare @accept_bon_id int;
declare @denied_bon_prior int;
declare @stavka_bonus money;
declare @iskl int;

declare @bonId_list table(bonId int, iskl int, StavkaBonDef money);
declare @bonTvr_list table(idbon int, idTVR bigint, idTVRGRP int, idTVRVID int, iskl int, StavkaBon money);


--  список действующих бонусных программ
insert into @bonId_list(bonId, iskl, StavkaBonDef)
select t.idBon, t.iskl, b.StavkaBonDef from [Бонус].[dbo].Bonus_tt t
inner join [Бонус].[dbo].Bonus b on b.idBon=t.idBon and b.idBon_type=@bonType
and @d between b.Date_beg and b.Date_end
where t.idKLN=@kln
---------------------------------------

if (select count(*) from @bonId_list)>0		--  если действующие БП есть, то продолжаем расчет
	begin
		--	список БП по товарам, группам, видам
		insert into @bonTvr_list(idbon, idTVR, idTVRGRP, idTVRVID, iskl, StavkaBon)
		select bt.idbon, bt.idTVR, bt.idTVRGRP, bt.idTVRVID, bt.iskl, bt.StavkaBon from [Бонус].[dbo].bonus_tvr bt
		where bt.iskl=0 and bt.idBon in (select bonId from @bonId_list)

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @accept_bon_prior=a.prior, @stavka_bonus=a.stavka, @accept_bon_id=a.idBon, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon stavka, bt.idBon idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR=@tvr
			union all
			select 2, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID=@vid
			union all
			select 1, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp
			) a
		order by a.prior desc, a.iskl desc, a.stavka desc;

		--	запись исключена, то ставка = 0
		if @iskl=1 set @stavka_bonus=0;


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus is null and (	select count(*) from @bonId_list where iskl=0	)=1
			begin
				select @stavka_bonus=StavkaBonDef, @accept_bon_id=bonId from @bonId_list where iskl=0;
			end;
		
			if @stavka_bonus is null set @stavka_bonus=0;
		
			if @stavka_bonus>0	--	определяем знак ставки и считаем бонус
				set @stavka_bonus = @stoim * @stavka_bonus / 100 * (select t.sign_type from [Бонус].[dbo].Bonus b
																	inner join [Бонус].[dbo].Bon_type t on t.id_type=@bonType and b.idBon=@accept_bon_id)

	end
		--	добавляем строку с полученными данными
		--INSERT INTO [cube].[bonusInfo] ([naklKod], [tvrKod], [bonId], [bonType], [bonus], [naklDate])
		--VALUES (@naklKod, @tvr, @accept_bon_id, @bonType, @stavka_bonus, @d);


return @stavka_bonus 

END
GO
/****** Object:  UserDefinedFunction [dbo].[getBonus_bonId]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[getBonus_bonId](
@naklKod bigint, @tvr bigint, @grp bigint, @vid bigint, @kln int, @d datetime, @bonType int, @stoim money)
returns int
as
BEGIN
declare @accept_bon_prior int;
declare @accept_bon_stavka money;
declare @accept_bon_id int;
declare @denied_bon_prior int;
declare @stavka_bonus money;
declare @iskl int;

declare @bonId_list table(bonId int, iskl int, StavkaBonDef money);
declare @bonTvr_list table(idbon int, idTVR bigint, idTVRGRP int, idTVRVID int, iskl int, StavkaBon money);


--  список действующих бонусных программ
insert into @bonId_list(bonId, iskl, StavkaBonDef)
select t.idBon, t.iskl, b.StavkaBonDef from [Бонус].[dbo].Bonus_tt t
inner join [Бонус].[dbo].Bonus b on b.idBon=t.idBon and b.idBon_type=@bonType
and @d between b.Date_beg and b.Date_end
where t.idKLN=@kln
---------------------------------------

if (select count(*) from @bonId_list)>0		--  если действующие БП есть, то продолжаем расчет
	begin
		--	список БП по товарам, группам, видам
		insert into @bonTvr_list(idbon, idTVR, idTVRGRP, idTVRVID, iskl, StavkaBon)
		select bt.idbon, bt.idTVR, bt.idTVRGRP, bt.idTVRVID, bt.iskl, bt.StavkaBon from [Бонус].[dbo].bonus_tvr bt
		where bt.iskl=0 and bt.idBon in (select bonId from @bonId_list)

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @accept_bon_prior=a.prior, @stavka_bonus=a.stavka, @accept_bon_id=a.idBon, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon stavka, bt.idBon idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR=@tvr
			union all
			select 2, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID=@vid
			union all
			select 1, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp
			) a
		order by a.prior desc, a.iskl desc, a.stavka desc;

		--	запись исключена, то ставка = 0
		if @iskl=1 set @stavka_bonus=0;


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus is null and (	select count(*) from @bonId_list where iskl=0	)=1
			begin
				select @stavka_bonus=StavkaBonDef, @accept_bon_id=bonId from @bonId_list where iskl=0;
			end;
		
	end

return @accept_bon_id

END
GO
/****** Object:  UserDefinedFunction [dbo].[getBonus]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[getBonus]( @d datetime , @kln int, @tvr int)
returns money
as
BEGIN
declare @accept_bon_prior int;
declare @accept_bon_stavka numeric(9,2);
declare @accept_bon_id int;
declare @denied_bon_prior int;

declare @stavka_bonus numeric(9,2);


select top 1 @accept_bon_prior=a.prior, @accept_bon_stavka=a.stavka, @accept_bon_id=a.idBon from
	(
	select 3 prior, bt0.StavkaBon stavka, bt0.idBon idBon, 0 iskl from Бонус.dbo.bonus_tvr bt0
	inner join (select distinct bt.idbon from Бонус.dbo.bonus_tvr bt
				inner join kat_tvr k on k.ТовКод=@tvr and bt.idTVR=k.ТовКод
				and bt.iskl=0
				and bt.idBon in (select t.idBon from бонус.dbo.Bonus_tt t
								    inner join Бонус.dbo.Bonus b on b.idBon=t.idBon and @d between b.Date_beg and b.Date_end
								    where t.idKLN=@kln and t.iskl=0)) q on q.idBon=bt0.idBon
	inner join kat_tvr k0 on k0.ТовКод=@tvr and bt0.idTVR=k0.ТовКод
	where bt0.iskl=0
	union
	select 2, bt0.StavkaBon, bt0.idBon, 0 iskl from Бонус.dbo.bonus_tvr bt0
	inner join (select distinct bt.idbon from Бонус.dbo.bonus_tvr bt
				inner join kat_tvr k on k.ТовКод=@tvr and bt.idTVR is null and bt.idTVRVID=k.ТовВид
				and bt.iskl=0
				and bt.idBon in (select t.idBon from бонус.dbo.Bonus_tt t
								    inner join Бонус.dbo.Bonus b on b.idBon=t.idBon and @d between b.Date_beg and b.Date_end
								    where t.idKLN=@kln and t.iskl=0)) q on q.idBon=bt0.idBon
	inner join kat_tvr k0 on k0.ТовКод=@tvr and bt0.idTVR is null and bt0.idTVRVID=k0.ТовВид
	where bt0.iskl=0
	union
	select 1, bt0.StavkaBon, bt0.idBon, 0 iskl from Бонус.dbo.bonus_tvr bt0
	inner join (select distinct bt.idbon from Бонус.dbo.bonus_tvr bt
				inner join kat_tvr k on k.ТовКод=@tvr and bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=k.ТовГрп
				and bt.iskl=0
				and bt.idBon in (select t.idBon from бонус.dbo.Bonus_tt t
								    inner join Бонус.dbo.Bonus b on b.idBon=t.idBon and @d between b.Date_beg and b.Date_end
								    where t.idKLN=@kln and t.iskl=0)) q on q.idBon=bt0.idBon
	inner join kat_tvr k0 on k0.ТовКод=@tvr and bt0.idTVR is null and bt0.idTVRVID is null and bt0.idTVRGRP=k0.ТовГрп
	where bt0.iskl=0
	) a
order by a.prior desc, a.stavka desc;

select top 1 @denied_bon_prior=a.prior from
	(
	select 3 prior, bt0.StavkaBon stavka, bt0.idBon idBon, 0 iskl from Бонус.dbo.bonus_tvr bt0
	inner join (select distinct bt.idbon from Бонус.dbo.bonus_tvr bt
				inner join kat_tvr k on k.ТовКод=@tvr and bt.idTVR=k.ТовКод
				and bt.iskl=0
				and bt.idBon in (select t.idBon from бонус.dbo.Bonus_tt t
								    inner join Бонус.dbo.Bonus b on b.idBon=t.idBon and @d between b.Date_beg and b.Date_end
								    where t.idKLN=@kln and t.iskl=0)) q on q.idBon=bt0.idBon
	inner join kat_tvr k0 on k0.ТовКод=@tvr and bt0.idTVR=k0.ТовКод
	where bt0.iskl=1
	union
	select 2, bt0.StavkaBon, bt0.idBon, 0 iskl from Бонус.dbo.bonus_tvr bt0
	inner join (select distinct bt.idbon from Бонус.dbo.bonus_tvr bt
				inner join kat_tvr k on k.ТовКод=@tvr and bt.idTVR is null and bt.idTVRVID=k.ТовВид
				and bt.iskl=0
				and bt.idBon in (select t.idBon from бонус.dbo.Bonus_tt t
								    inner join Бонус.dbo.Bonus b on b.idBon=t.idBon and @d between b.Date_beg and b.Date_end
								    where t.idKLN=@kln and t.iskl=0)) q on q.idBon=bt0.idBon
	inner join kat_tvr k0 on k0.ТовКод=@tvr and bt0.idTVR is null and bt0.idTVRVID=k0.ТовВид
	where bt0.iskl=1
	union
	select 1, bt0.StavkaBon, bt0.idBon, 0 iskl from Бонус.dbo.bonus_tvr bt0
	inner join (select distinct bt.idbon from Бонус.dbo.bonus_tvr bt
				inner join kat_tvr k on k.ТовКод=@tvr and bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=k.ТовГрп
				and bt.iskl=0
				and bt.idBon in (select t.idBon from бонус.dbo.Bonus_tt t
								    inner join Бонус.dbo.Bonus b on b.idBon=t.idBon and @d between b.Date_beg and b.Date_end
								    where t.idKLN=@kln and t.iskl=0)) q on q.idBon=bt0.idBon
	inner join kat_tvr k0 on k0.ТовКод=@tvr and bt0.idTVR is null and bt0.idTVRVID is null and bt0.idTVRGRP=k0.ТовГрп
	where bt0.iskl=1
	) a
order by a.prior desc, a.stavka desc;


set @stavka_bonus=0;
if @accept_bon_prior is null set @accept_bon_prior=0;
if @denied_bon_prior is null set @denied_bon_prior=0;


if (@accept_bon_prior>@denied_bon_prior) set @stavka_bonus=@accept_bon_stavka;
if (@accept_bon_prior<=@denied_bon_prior) set @stavka_bonus=0;



if @stavka_bonus=0 and (	select count(*) from бонус.dbo.Bonus_tt t
							inner join Бонус.dbo.Bonus b on b.idBon=t.idBon and @d between b.Date_beg and b.Date_end
							where t.idKLN=@kln and t.iskl=0	)=1
	begin
		select @stavka_bonus=b.StavkaBonDef, @accept_bon_id=t.idBon from бонус.dbo.Bonus_tt t
		inner join Бонус.dbo.Bonus b on b.idBon=t.idBon and @d between b.Date_beg and b.Date_end
		where t.idKLN=@kln and t.iskl=0;
	end;

--if @stavka_bonus=-1 set @stavka_bonus=0;

if @stavka_bonus>0 set @stavka_bonus=@stavka_bonus * (	select t.sign_type from Бонус.dbo.Bonus b
											inner join Бонус.dbo.Bon_type t on t.id_type=b.idBon_type and b.idBon=@accept_bon_id )
return @stavka_bonus


END
GO
/****** Object:  UserDefinedFunction [dbo].[get_VozvratTR_test]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[get_VozvratTR_test]
(@ОпНаклКод bigint, @ОпТип int, @ОпВозвр int, @ОпСтоимИтог money)
returns money
as
begin
declare @ret money
set @ret=0
if (@ОпТип = 1) AND (@ОпВозвр = 1)
	begin
	if(select COUNT(*) from dbo.nkl_link lnk
	   where lnk.ОпНаклКод2 = @ОпНаклКод AND lnk.ОпНаклКод1 IS NOT NULL AND lnk.ОпНаклКод2 IS NOT NULL)>0
	   begin
	    set @ret=@ОпСтоимИтог
	   end
	end
return @ret;
end
GO
/****** Object:  UserDefinedFunction [dbo].[get_VozvratTR]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[get_VozvratTR]
(@ОпНаклКод bigint, @ОпТип int, @ОпВозвр int, @ОпСтоимИтог money)
returns money
as
begin
--   dbo.get_VozvratTR(ОпНаклКод,ОпТип,ОпВозвр,ОпКол*ОпЦена)
declare @ret money
set @ret=0
if (@ОпТип = 1) AND (@ОпВозвр = 1)
	begin
	if(select COUNT(*) from dbo.nkl_link lnk
	   where lnk.ОпНаклКод2 = @ОпНаклКод AND lnk.ОпНаклКод1 IS NOT NULL AND lnk.ОпНаклКод2 IS NOT NULL)>0
	   begin
	    set @ret=@ОпСтоимИтог
	   end
	end
return @ret;
end
GO
/****** Object:  UserDefinedFunction [dbo].[get_VozvratEXP_test]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[get_VozvratEXP_test]
(@ОпНаклКод bigint, @ОпТип int, @ОпВозвр int, @ОпСтоимИтог money)
returns money
as
begin
declare @ret money
set @ret=0
if (@ОпТип = 1) AND (@ОпВозвр = 1)
	begin
	if(select COUNT(*) from dbo.nkl_link lnk
	   where lnk.ОпНаклКод2 = @ОпНаклКод AND lnk.ОпНаклКод1 IS NOT NULL AND lnk.ОпНаклКод2 IS NOT NULL)=0
	   begin
	    set @ret=@ОпСтоимИтог
	   end
	end
return @ret;
end
GO
/****** Object:  UserDefinedFunction [dbo].[get_VozvratEXP]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[get_VozvratEXP]
(@ОпНаклКод bigint, @ОпТип int, @ОпВозвр int, @ОпСтоимИтог money)
returns money
as
begin
declare @ret money
set @ret=0
if (@ОпТип = 1) AND (@ОпВозвр = 1)
	begin
	if(select COUNT(*) from dbo.nkl_link lnk
	   where lnk.ОпНаклКод2 = @ОпНаклКод AND lnk.ОпНаклКод1 IS NOT NULL AND lnk.ОпНаклКод2 IS NOT NULL)=0
	   begin
	    set @ret=@ОпСтоимИтог
	   end
	end
return @ret;
end
GO
/****** Object:  UserDefinedFunction [dbo].[Get_Price_Group]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create FUNCTION [dbo].[Get_Price_Group] (@Customer_Code int) 
returns int
as
begin
return 
(select top 1 ГрпЦен
    FROM  sld_kln
    WHERE sld_kln.КлнКод = @Customer_Code)
end
GO
/****** Object:  View [dbo].[F_SPIS]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[F_SPIS]
AS select hist_skl.ОпКодТов,hist_skl.ОпКол,
hist_skl.ОпЦена*hist_skl.ОпКол as ОпСтоим,hist_skl.ОпКод,
hist_skl.ОпВозвр,d_nakl.НаклСклКод,d_nakl.НаклКлн,d_nakl.НаклДатаРасч as ОпДатаРасч,d_nakl.НаклДата as ОпДата, d_nakl.НаклТип 
from hist_skl  join d_nakl on hist_skl.ОпНаклКод=d_nakl.ОпНаклКод
where 
--(hist_skl.ОпТип=1 and hist_skl.ОпВозвр=1) or 
hist_skl.ОпТип=3
GO
/****** Object:  View [dbo].[F_Sale]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_Sale]
AS
SELECT     dbo.F_OPER.ОпКод, dbo.D_NAKL.НаклНомер, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклСклНаим, dbo.D_NAKL.НаклКлн AS ОпКодКлн, 
                      dbo.D_NAKL.НаклСотр, dbo.D_NAKL.НаклДата AS ОпДата, dbo.D_NAKL.НаклДатаРасч AS ОпДатаРасч, dbo.D_NAKL.ОпНаклКод, 
                      dbo.F_OPER.ОпКодТов, dbo.F_OPER.ОпКол * (5 - dbo.F_OPER.ОпТип * 2) AS ОпКол, dbo.F_OPER.ОпСтоим * (5 - dbo.F_OPER.ОпТип * 2) 
                      AS ОпСтоим, dbo.F_OPER.ОпВесБрутто * (5 - dbo.F_OPER.ОпТип * 2) AS ОпВесБрутто, dbo.F_OPER.ОпКолУпак * (5 - dbo.F_OPER.ОпТип * 2) 
                      AS ОпКолУпак, dbo.F_OPER.ОпВесНетто * (5 - dbo.F_OPER.ОпТип * 2) AS ОпВесНетто, ISNULL(dbo.F_OPER.ОпВозвр, 0) AS ОпВозвр, 
                      dbo.D_NAKL.НаклТип, dbo.D_NAKL.НаклКод, dbo.F_OPER.ОпТип, RTRIM(CAST(dbo.D_NAKL.НаклКлн AS char)) 
                      + '/' + RTRIM(CAST(dbo.D_NAKL.КодАдрДоставки AS char)) AS КодКлн_КодАдрДоставки, dbo.D_NAKL.КодАдрДоставки
FROM         dbo.F_OPER INNER JOIN
                      dbo.D_NAKL ON dbo.F_OPER.ОпНаклКод = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_OPER.ОпТип = 2) OR
                      (dbo.F_OPER.ОпТип = 3)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "F_OPER"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_NAKL"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 3810
         Alias = 1155
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_Sale'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_Sale'
GO
/****** Object:  View [dbo].[Hist_skl_inp]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Hist_skl_inp]
AS
SELECT     TOP (100) PERCENT dbo.HIST_SKL.ОпКодТов, dbo.LIST_SKL.ОпДатаРасч AS ОпДатаРасч, dbo.HIST_SKL.ОпЦена AS ОпЦена
FROM         dbo.HIST_SKL INNER JOIN
                      dbo.LIST_SKL ON dbo.HIST_SKL.ОпНаклКод = dbo.LIST_SKL.ОпНаклКод INNER JOIN
                      dbo.KAT_KLN ON dbo.LIST_SKL.ОпКлн = dbo.KAT_KLN.КлнКод
WHERE     (dbo.HIST_SKL.ОпТип = 1) AND (dbo.HIST_SKL.ОпВозвр <> 1) AND (dbo.LIST_SKL.ОпКлнТип = 2) AND (dbo.HIST_SKL.ОпЦена <> 0) AND 
                      (dbo.KAT_KLN.КлнГрпКод IN (17, 20))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "HIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 261
               Right = 217
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 255
               Bottom = 223
               Right = 424
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 6
               Left = 462
               Bottom = 206
               Right = 622
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 2595
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Hist_skl_inp'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Hist_skl_inp'
GO
/****** Object:  StoredProcedure [dbo].[GetSKL_12]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Глухов 20150204
-- Процедура расчитывает долги по накладным и выбирает только отрицательные
-- TRUNCATE TABLE SKL_with_debt




CREATE PROCEDURE [dbo].[GetSKL_12]
AS
	--Расчет стоимости накладных и услуг которые отгружались клиенту
	select [ОпНаклКод],ОпКлн,НашаФирма,ОпТип 
		, ROW_NUMBER() OVER (ORDER BY ОпДатаРасч,ОпНакл) ID
		,(CASE WHEN ОпТип = 2 THEN 1 WHEN ОпТип = 1 THEN -1 ELSE 0 END)*
			(
				ISNULL(
						(
						select SUM(ОпЦена * ОпКол)
						FROM hist_skl 
						where l.ОпНаклКод = hist_skl.ОпНаклКод							
						)
					  ,0)
				+
				ISNULL(
						(
						select SUM(УслЦена * УслКол)
						FROM hist_usl 
						where
							l.ОпНакл = hist_usl.УслНомер
							and l.ОпСкл = hist_usl.УслСкл
							and l.ОпТип = hist_usl.УслОпер
						   --l.ОпНаклКод = HIST_USL.НаклКод						
						)
			
				,0)
			) Сумма
		INTO #t
		from list_skl l
	where ОпКлнТип=2 and left(right(dbo.dec2bit(ОпБит), 16), 1)='0'

CREATE UNIQUE CLUSTERED  INDEX _ix ON #t(ОпКлн,НашаФирма,ID);

TRUNCATE TABLE dbo.[skl_with_debt12];

WITH DO
AS
(
SELECT * , 			
			isnull(СУММА,0)+ 
			(isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн and l1.НашаФирма = l2.НашаФирма  ),0)  --
			----Расчет платежей клиента
			+isnull((select 
				SUM((CASE WHEN (ПлатНапр > 2) THEN 1 WHEN (ПлатНапр < 3) THEN -1 ELSE 0 END)*ПлатСумма) 				
			from dkm_base b 
			--inner join DKM_BASI bi on b.ПлатКлнКод = bi.[ДОКодКлн] and b.ПлатКод = bi.[ДОКодПлат]			
			where b.ПлатТип < 40 and b.ПлатКлнСотр = 1 AND (l1.ОпКлн = b.ПлатКлнКод) 
			AND EXISTS(SELECT * FROM DKM_BASI bi WHERE l1.НашаФирма = bi.НашаФирма AND b.ПлатКлнКод = bi.[ДОКодКлн] and b.ПлатКод = bi.[ДОКодПлат]	)
			),0)
			- isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн and l1.НашаФирма = l2.НашаФирма AND l2.ОпТип  IN (1,2) AND l1.ID<=l2.ID),0))					
			_НаклДЗ			
FROM #t as l1
WHERE ОпТип   IN (1,2)
)

INSERT INTO [dbo].[skl_with_debt12]
           ([ОпНаклКод]           
           ,НашаФирма  
           ,[Сумма]                      
           ,[НаклДЗ])
SELECT  ddo.[ОпНаклКод]
      , ddo.НашаФирма
      --, ddo.ОпКлн  
      , ddo.Сумма
      , ddo._НаклДЗ НаклДЗ /*
,CASE 
	WHEN		
			ddo._НаклДЗ < ddo.Сумма THEN _НаклДЗ
	WHEN	
			ddo._НаклДЗ >= ddo.Сумма THEN Сумма
	ELSE 0
 END
	НаклДЗ	*/
 FROM DO ddo
-- /*  временно убираем 20150205
 INNER JOIN (SELECT  MAX(Id) AS Id
           , НашаФирма , ОпКлн FROM DO
             GROUP BY НашаФирма,ОпКлн) Flt ON ddo.Id = Flt.Id AND ddo.НашаФирма = Flt.НашаФирма AND ddo.ОпКлн = Flt.ОпКлн
 --WHERE _НаклДЗ < 0

Drop table #t


--select * from KAT_KLN where КлнНаим like '%трио%'



--select * from [skl_with_debt]
GO
/****** Object:  StoredProcedure [dbo].[GetSKL]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ЕФ 08/04/2011
-- Процедура расчитывает долги по накладным
--TRUNCATE TABLE SKL_with_debt




CREATE PROCEDURE [dbo].[GetSKL]
AS
	--Расчет стоимости накладных и услуг которые отгружались клиенту
	select [ОпНаклКод],ОпКлн,НашаФирма,ОпТип 
		, ROW_NUMBER() OVER (ORDER BY ОпДатаРасч,ОпНакл) ID
		,(CASE WHEN ОпТип = 2 THEN 1 WHEN ОпТип = 1 THEN -1 ELSE 0 END)*
			(
				ISNULL(
						(
						select SUM(ОпЦена * ОпКол)
						FROM hist_skl 
						where l.ОпНаклКод = hist_skl.ОпНаклКод							
						)
					  ,0)
				+
				ISNULL(
						(
						select SUM(УслЦена * УслКол)
						FROM hist_usl 
						where
							l.ОпНакл = hist_usl.УслНомер
							and l.ОпСкл = hist_usl.УслСкл
							and l.ОпТип = hist_usl.УслОпер
						   --l.ОпНаклКод = HIST_USL.НаклКод						
						)
			
				,0)
			) Сумма
		INTO #t
		from list_skl l
	where ОпКлнТип=2 and left(right(dbo.dec2bit(ОпБит), 16), 1)='0'

CREATE UNIQUE CLUSTERED  INDEX _ix ON #t(ОпКлн,НашаФирма,ID);

TRUNCATE TABLE dbo.[skl_with_debt];

WITH DO
AS
(
SELECT * , 			
			isnull(СУММА,0)+ 
			(isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн and l1.НашаФирма = l2.НашаФирма  ),0)  --
			----Расчет платежей клиента
			+isnull((select 
				SUM((CASE WHEN (ПлатНапр > 2) THEN 1 WHEN (ПлатНапр < 3) THEN -1 ELSE 0 END)*ПлатСумма) 				
			from dkm_base b 
			--inner join DKM_BASI bi on b.ПлатКлнКод = bi.[ДОКодКлн] and b.ПлатКод = bi.[ДОКодПлат]			
			where b.ПлатТип < 40 and b.ПлатКлнСотр = 1 AND (l1.ОпКлн = b.ПлатКлнКод) 
			AND EXISTS(SELECT * FROM DKM_BASI bi WHERE l1.НашаФирма = bi.НашаФирма /*AND b.ПлатКлнКод = bi.[ДОКодКлн]*/ and b.ПлатКод = bi.[ДОКодПлат]	)
			),0)
			- isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн and l1.НашаФирма = l2.НашаФирма AND l2.ОпТип = 2 AND l1.ID<=l2.ID),0))					
			_НаклДЗ			
		
		  
		

FROM #t as l1
WHERE ОпТип = 2

)



INSERT INTO [dbo].[skl_with_debt]
           ([ОпНаклКод]           
           ,[Сумма]                      
           ,[НаклДЗ])

SELECT [ОпНаклКод]
           ,[Сумма]                      
,CASE 
	WHEN		
			_НаклДЗ < Сумма THEN _НаклДЗ
	WHEN	
			_НаклДЗ >= Сумма THEN Сумма
	ELSE 0
 END
	НаклДЗ
	
 FROM DO
 WHERE _НаклДЗ > 1




Drop table #t


--select * from KAT_KLN where КлнНаим like '%трио%'



--select * from [skl_with_debt]
GO
/****** Object:  UserDefinedFunction [dbo].[getGroupPrice]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
create FUNCTION [dbo].[getGroupPrice] (@ТовКод bigint, @ГрпЦен int) 
returns money
as
begin
return 
(SELECT TOP 1 Цена
FROM   m_grpcen
WHERE  m_grpcen.ТврКод = @ТовКод 
  AND  m_grpcen.ГрпЦен = @ГрпЦен)
end
GO
/****** Object:  UserDefinedFunction [dbo].[getBonus_test3_tabl]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[getBonus_test3_tabl](
@naklKod bigint, @tvr bigint, @grp bigint, @vid bigint, @kln int, @d datetime, @stoim money)
RETURNS  @ret TABLE 
  (Бонус_1 money, Бонус_2 money, Бонус_3 money)
as
BEGIN
declare @accept_bon_prior int;
declare @accept_bon_stavka money;
declare @accept_bon_id int;
declare @denied_bon_prior int;
declare @stavka_bonus_1 money;
declare @stavka_bonus_2 money;
declare @stavka_bonus_3 money;
declare @iskl int;

declare @bonId_list table(bonId int, iskl int, StavkaBonDef money, idBon_type int);
declare @bonTvr_list table(idbon int, idTVR bigint, idTVRGRP int, idTVRVID int, iskl int, StavkaBon money);


--  список действующих бонусных программ
insert into @bonId_list(bonId, iskl, StavkaBonDef, idBon_type)
select t.idBon, t.iskl, b.StavkaBonDef, b.idBon_type from [Бонус].[dbo].Bonus_tt t
inner join [Бонус].[dbo].Bonus b on b.idBon=t.idBon-- and b.idBon_type=@bonType
and @d between b.Date_beg and b.Date_end
where t.idKLN=@kln
---------------------------------------

if (select count(*) from @bonId_list)>0		--  если действующие БП есть, то продолжаем расчет
	begin
		--	список БП по товарам, группам, видам для бонуса_1
		insert into @bonTvr_list(idbon, idTVR, idTVRGRP, idTVRVID, iskl, StavkaBon)
		select bt.idbon, bt.idTVR, bt.idTVRGRP, bt.idTVRVID, bt.iskl, bt.StavkaBon from [Бонус].[dbo].bonus_tvr bt
		where bt.iskl=0 and bt.idBon in (select bonId from @bonId_list where idBon_type=1)

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @accept_bon_prior=a.prior, @stavka_bonus_1=a.stavka, @accept_bon_id=a.idBon, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon stavka, bt.idBon idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR=@tvr
			union all
			select 2, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID=@vid
			union all
			select 1, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp
			) a
		order by a.prior desc, a.iskl desc, a.stavka desc;

		--	запись исключена, то ставка = 0
		if @iskl=1 set @stavka_bonus_1=0;


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus_1 is null and (	select count(*) from @bonId_list where iskl=0	)=1
			begin
				select @stavka_bonus_1=StavkaBonDef, @accept_bon_id=bonId from @bonId_list where iskl=0;
			end;
		
			if @stavka_bonus_1 is null set @stavka_bonus_1=0;
		
			if @stavka_bonus_1>0	--	определяем знак ставки и считаем бонус
				set @stavka_bonus_1 = @stoim * @stavka_bonus_1 / 100 * (select t.sign_type from [Бонус].[dbo].Bonus b
																	inner join [Бонус].[dbo].Bon_type t on t.id_type=1 and b.idBon=@accept_bon_id)
		
		--	список БП по товарам, группам, видам для бонуса_2
		insert into @bonTvr_list(idbon, idTVR, idTVRGRP, idTVRVID, iskl, StavkaBon)
		select bt.idbon, bt.idTVR, bt.idTVRGRP, bt.idTVRVID, bt.iskl, bt.StavkaBon from [Бонус].[dbo].bonus_tvr bt
		where bt.iskl=0 and bt.idBon in (select bonId from @bonId_list where idBon_type=2)

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @accept_bon_prior=a.prior, @stavka_bonus_2=a.stavka, @accept_bon_id=a.idBon, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon stavka, bt.idBon idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR=@tvr
			union all
			select 2, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID=@vid
			union all
			select 1, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp
			) a
		order by a.prior desc, a.iskl desc, a.stavka desc;

		--	запись исключена, то ставка = 0
		if @iskl=1 set @stavka_bonus_2=0;


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus_2 is null and (	select count(*) from @bonId_list where iskl=0	)=1
			begin
				select @stavka_bonus_2=StavkaBonDef, @accept_bon_id=bonId from @bonId_list where iskl=0;
			end;
		
			if @stavka_bonus_2 is null set @stavka_bonus_2=0;
		
			if @stavka_bonus_2>0	--	определяем знак ставки и считаем бонус
				set @stavka_bonus_2 = @stoim * @stavka_bonus_2 / 100 * (select t.sign_type from [Бонус].[dbo].Bonus b
																	inner join [Бонус].[dbo].Bon_type t on t.id_type=2 and b.idBon=@accept_bon_id)
		
		--	список БП по товарам, группам, видам для бонуса_3
		insert into @bonTvr_list(idbon, idTVR, idTVRGRP, idTVRVID, iskl, StavkaBon)
		select bt.idbon, bt.idTVR, bt.idTVRGRP, bt.idTVRVID, bt.iskl, bt.StavkaBon from [Бонус].[dbo].bonus_tvr bt
		where bt.iskl=0 and bt.idBon in (select bonId from @bonId_list where idBon_type=2)

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @accept_bon_prior=a.prior, @stavka_bonus_3=a.stavka, @accept_bon_id=a.idBon, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon stavka, bt.idBon idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR=@tvr
			union all
			select 2, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID=@vid
			union all
			select 1, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp
			) a
		order by a.prior desc, a.iskl desc, a.stavka desc;

		--	запись исключена, то ставка = 0
		if @iskl=1 set @stavka_bonus_3=0;


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus_3 is null and (	select count(*) from @bonId_list where iskl=0	)=1
			begin
				select @stavka_bonus_3=StavkaBonDef, @accept_bon_id=bonId from @bonId_list where iskl=0;
			end;
		
			if @stavka_bonus_3 is null set @stavka_bonus_3=0;
		
			if @stavka_bonus_3>0	--	определяем знак ставки и считаем бонус
				set @stavka_bonus_3 = @stoim * @stavka_bonus_3 / 100 * (select t.sign_type from [Бонус].[dbo].Bonus b
																	inner join [Бонус].[dbo].Bon_type t on t.id_type=3 and b.idBon=@accept_bon_id)

	end
		--	добавляем строку с полученными данными
		INSERT @ret select @stavka_bonus_1,@stavka_bonus_2,@stavka_bonus_3


return

END
GO
/****** Object:  UserDefinedFunction [dbo].[getBonus_test3_optim_bonId]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[getBonus_test3_optim_bonId](
@naklKod bigint, @tvr bigint, @grp bigint, @vid bigint, @kln int, @d datetime, @bonType int, @stoim money)
returns int
as
BEGIN
declare @accept_bon_prior int;
declare @accept_bon_stavka money;
declare @accept_bon_id int;
declare @denied_bon_prior int;
declare @stavka_bonus money;
declare @iskl int;

declare @bonId_list table(bonId int, iskl int, StavkaBonDef money);
declare @bonTvr_list table(idbon int, idTVR bigint, idTVRGRP int, idTVRVID int, iskl int, StavkaBon money);


--  список действующих бонусных программ
insert into @bonId_list(bonId, iskl, StavkaBonDef)
select t.idBon, t.iskl, b.StavkaBonDef from [Бонус].[dbo].Bonus_tt t
inner join [Бонус].[dbo].Bonus b on b.idBon=t.idBon and b.idBon_type=@bonType
and @d between b.Date_beg and b.Date_end
where t.idKLN=@kln
---------------------------------------

if (select count(*) from @bonId_list)>0		--  если действующие БП есть, то продолжаем расчет
	begin
		--	список БП по товарам, группам, видам
		insert into @bonTvr_list(idbon, idTVR, idTVRGRP, idTVRVID, iskl, StavkaBon)
		select bt.idbon, bt.idTVR, bt.idTVRGRP, bt.idTVRVID, bt.iskl, bt.StavkaBon from [Бонус].[dbo].bonus_tvr bt
		where bt.iskl=0 and bt.idBon in (select bonId from @bonId_list)

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @accept_bon_prior=a.prior, @stavka_bonus=a.stavka, @accept_bon_id=a.idBon, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon stavka, bt.idBon idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR=@tvr
			union all
			select 2, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID=@vid
			union all
			select 1, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp
			) a
		order by a.prior desc, a.iskl desc, a.stavka desc;

		--	запись исключена, то ставка = 0
		if @iskl=1 set @stavka_bonus=0;


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus is null and (	select count(*) from @bonId_list where iskl=0	)=1
			begin
				select @stavka_bonus=StavkaBonDef, @accept_bon_id=bonId from @bonId_list where iskl=0;
			end;
		
	end

return @accept_bon_id

END
GO
/****** Object:  UserDefinedFunction [dbo].[getBonus_test3_optim]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function [dbo].[getBonus_test3_optim](
@naklKod bigint, @tvr bigint, @grp bigint, @vid bigint, @kln int, @d datetime, @bonType int, @stoim money)
returns money
as
BEGIN
declare @accept_bon_prior int;
declare @accept_bon_stavka money;
declare @accept_bon_id int;
declare @denied_bon_prior int;
declare @stavka_bonus money;
declare @iskl int;

declare @bonId_list table(bonId int, iskl int, StavkaBonDef money);
declare @bonTvr_list table(idbon int, idTVR bigint, idTVRGRP int, idTVRVID int, iskl int, StavkaBon money);


--  список действующих бонусных программ
insert into @bonId_list(bonId, iskl, StavkaBonDef)
select t.idBon, t.iskl, b.StavkaBonDef from [Бонус].[dbo].Bonus_tt t
inner join [Бонус].[dbo].Bonus b on b.idBon=t.idBon and b.idBon_type=@bonType
and @d between b.Date_beg and b.Date_end
where t.idKLN=@kln
---------------------------------------

if (select count(*) from @bonId_list)>0		--  если действующие БП есть, то продолжаем расчет
	begin
		--	список БП по товарам, группам, видам
		insert into @bonTvr_list(idbon, idTVR, idTVRGRP, idTVRVID, iskl, StavkaBon)
		select bt.idbon, bt.idTVR, bt.idTVRGRP, bt.idTVRVID, bt.iskl, bt.StavkaBon from [Бонус].[dbo].bonus_tvr bt
		where bt.iskl=0 and bt.idBon in (select bonId from @bonId_list)

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @accept_bon_prior=a.prior, @stavka_bonus=a.stavka, @accept_bon_id=a.idBon, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon stavka, bt.idBon idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR=@tvr
			union all
			select 2, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID=@vid
			union all
			select 1, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp
			) a
		order by a.prior desc, a.iskl desc, a.stavka desc;

		--	запись исключена, то ставка = 0
		if @iskl=1 set @stavka_bonus=0;


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @stavka_bonus is null and (	select count(*) from @bonId_list where iskl=0	)=1
			begin
				select @stavka_bonus=StavkaBonDef, @accept_bon_id=bonId from @bonId_list where iskl=0;
			end;
		
			if @stavka_bonus is null set @stavka_bonus=0;
		
			if @stavka_bonus>0	--	определяем знак ставки и считаем бонус
				set @stavka_bonus = @stoim * @stavka_bonus / 100 * (select t.sign_type from [Бонус].[dbo].Bonus b
																	inner join [Бонус].[dbo].Bon_type t on t.id_type=@bonType and b.idBon=@accept_bon_id)

	end
		--	добавляем строку с полученными данными
		--INSERT INTO [cube].[bonusInfo] ([naklKod], [tvrKod], [bonId], [bonType], [bonus], [naklDate])
		--VALUES (@naklKod, @tvr, @accept_bon_id, @bonType, @stavka_bonus, @d);


return @stavka_bonus 

END
GO
/****** Object:  StoredProcedure [dbo].[getBonus_test2_optim]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[getBonus_test2_optim]
@naklKod bigint, @tvr bigint, @grp bigint, @vid bigint, @kln int, @d nvarchar(30), @bonType int
as
BEGIN
declare @accept_bon_prior int;
declare @accept_bon_stavka numeric(9,2);
declare @accept_bon_id int;
declare @denied_bon_prior int;
declare @stavka_bonus numeric(9,2);
declare @iskl int;

declare @bonId_list table(bonId int, iskl int, StavkaBonDef numeric(9,2));
declare @bonTvr_list table(idbon int, idTVR bigint, idTVRGRP int, idTVRVID int, iskl int, StavkaBon numeric(9,2));


--  список действующих бонусных программ
insert into @bonId_list(bonId, iskl, StavkaBonDef)
select t.idBon, t.iskl, b.StavkaBonDef from [Бонус].[dbo].Bonus_tt t
inner join [Бонус].[dbo].Bonus b on b.idBon=t.idBon and b.idBon_type=@bonType
and @d between b.Date_beg and b.Date_end
where t.idKLN=@kln
---------------------------------------

if (select count(*) from @bonId_list)>0		--  если действующие БП есть, то продолжаем расчет
	begin
		--	список БП по товарам, группам, видам
		insert into @bonTvr_list(idbon, idTVR, idTVRGRP, idTVRVID, iskl, StavkaBon)
		select bt.idbon, bt.idTVR, bt.idTVRGRP, bt.idTVRVID, bt.iskl, bt.StavkaBon from [Бонус].[dbo].bonus_tvr bt
		where bt.iskl=0 and bt.idBon in (select bonId from @bonId_list)

		--	выборка из списка БП записи с наивысшим приоритетом и (максимальной бонусной ставкой или исключенными БП)
		select top 1 @accept_bon_prior=a.prior, @stavka_bonus=a.stavka, @accept_bon_id=a.idBon, @iskl=a.iskl from
			(
			select 3 prior, bt.StavkaBon stavka, bt.idBon idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR=@tvr
			union
			select 2, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID=@vid
			union
			select 1, bt.StavkaBon, bt.idBon, bt.iskl from @bonTvr_list bt
			where bt.idTVR is null and bt.idTVRVID is null and bt.idTVRGRP=@grp
			) a
		order by a.prior desc, a.iskl desc, a.stavka desc;

		--	если записей не найдено или запись исключена, то ставка = 0
		if (@iskl in (1, null))
			begin
				set @accept_bon_id=0;
			end


		-- если ставка еще не определена, то берем ставку для всей БП (если действующая БП найдена одна)
		if @accept_bon_id is null and (	select count(*) from @bonId_list where iskl=0	)=1
			begin
				select @stavka_bonus=StavkaBonDef, @accept_bon_id=bonId from @bonId_list where iskl=0;
			end;
		
		if @stavka_bonus is null set @stavka_bonus=0;
		
		if @stavka_bonus>0	--	определяет знак ставки
			set @stavka_bonus=@stavka_bonus * (	select t.sign_type from [Бонус].[dbo].Bonus b
												inner join [Бонус].[dbo].Bon_type t on t.id_type=@bonType and b.idBon=@accept_bon_id )

		
	end
		
		--	добавляем строку с полученными данными
		INSERT INTO [cube].[bonusInfo] ([naklKod], [tvrKod], [bonId], [bonType], [bonStavka])
		VALUES (@naklKod, @tvr, @accept_bon_id, @bonType, @stavka_bonus);

END
GO
/****** Object:  View [dbo].[hist_skl_totals]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[hist_skl_totals]
AS
SELECT     ОпНаклКод, SUM(Продажи) AS Продажи, SUM(ПродажиБаза) AS ПродажиБаза, SUM(ПродажиДельта) AS ПродажиДельта
FROM         dbo.HIST_SKL
GROUP BY ОпНаклКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "HIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 305
               Right = 242
            End
            DisplayFlags = 280
            TopColumn = 5
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'hist_skl_totals'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'hist_skl_totals'
GO
/****** Object:  View [dbo].[F_PROGNOS]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_PROGNOS] as
select k.КлнКод, t.ТовКод, t.ТовГрп, t.ТовВид,t.НДС, t.БФ,
t.ТовЦенаРСХ/* *(1+НДС/100)*/ as ЦенаКат, t.ТовЦенаУчет * (1+НДС/100) as ЦенаКатУчет
, t.ТовЦенаУчет as ЦенаКатУчет_безНДС
,(select top 1 Цена from m_grpcen, cenp_tab
					where 
					m_grpcen.ТврКод = cenp_tab.ТовКод and
					cenp_tab.ТовКод = t.ТовКод and
					cenp_tab.КлнКод = k.КлнКод and
					m_grpcen.ГрпЦен = cenp_tab.ЦенГрп and
					Цена is not null  )/* *(1+НДС/100)*/ as ЦенаАльтГрп
,(select top 1 Цена from m_grpcen, sld_kln 
	where 
	m_grpcen.ТврКод = t.ТовКод and
	sld_kln.КлнКод = k.КлнКод and
	m_grpcen.ГрпЦен = sld_kln.ГрпЦен)/* *(1+НДС/100)*/ as ЦенаГрп
,(select top 1 СкдПрц1 
	from SKD_TAB 
	where 
		skd_tab.СкдКод = t.ТовКод
		and skd_tab.СкдТип = 1) as ТовСкидка
,(select top 1 СкдПрц1 
	from SKD_TAB 
	where
		skd_tab.СкдКод = k.КлнКод
		and skd_tab.СкдДоп = t.ТовКод
		and skd_tab.СкдТип = 6) as КлнНаТов
,(select top 1 СкдПрц1 
	from SKD_TAB, kat_tvr
	where 
		skd_tab.СкдКод = k.КлнКод
		and skd_tab.СкдДоп = kat_tvr.ТовВид
		and kat_tvr.ТовКод = t.ТовКод
		and skd_tab.СкдТип = 7) as КлнНаВид
,(select top 1 СкдПрц1 
	from SKD_TAB, kat_tvr
	where 
		skd_tab.СкдКод = k.КлнКод
		and skd_tab.СкдДоп = kat_tvr.ТовГрп
		and kat_tvr.ТовКод=t.ТовКод
		and skd_tab.СкдТип = 0) as КлнНаГрп
from kat_tvr t
cross join (select x.* from kat_kln x, sld_kln s where x.КлнКод=s.КлнКод) k
GO
/****** Object:  UserDefinedFunction [dbo].[f_prihcleanSumKol]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE FUNCTION [dbo].[f_prihcleanSumKol](@VTov int, @VDate datetime, @Kod bigint, @VKol decimal(10,3))
RETURNS bigint AS  
BEGIN 
declare @q bigint

select @q = SUM(СумКол) from f_prihclean p1
where p1.ОпКодТов = @VTov and p1.ОпДатаРасч<=@vdate and p1.Код>=@Kod

set @q = @q - @vkol

if @q <= 0 set @q = 0

return @q
END
GO
/****** Object:  View [wms].[ClientPlanGroups]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [wms].[ClientPlanGroups]
as
select cast(HOst_id as int) as КлнКод
,id GroupID
,name GroupName
 from wms.ClientGroups
where --REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(left(Name,2),'0',''),'1',''),'2',''),'3',''),'4',''),'5',''),'6',''),'7',''),'8',''),'9','') =''
id in (-965,
-964,
-963,
-962,
-961,
-960,
-959,
-958,
-957,
9261)
GO
/****** Object:  View [dbo].[ALLKDK]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[ALLKDK]
AS
select a.*,
b.[1] AS [_1],
b.[2] AS [_2],
b.[3] AS [_3],
b.[4] AS [_4],
b.[5] AS [_5],
b.[6] AS [_6],
b.[7] AS [_7],
b.[8] AS [_8],
b.[9] AS [_9],
b.[10] AS [_10],
b.[11] AS [_11],
b.[12] AS [_12],
b.[13] AS [_13],
b.[14] AS [_14],
b.[15] AS [_15],
b.[16] AS [_16],
b.[17] AS [_17],
b.[18] AS [_18],
b.[19] AS [_19],
b.[20] AS [_20],
b.[21] AS [_21],
b.[22] AS [_22],
b.[23] AS [_23],
b.[24] AS [_24],
b.[25] AS [_25],
b.[26] AS [_26]
 from 

(
	select * from (SELECT        kdk.КодКлн AS КодАдреса, kdk.КодГрпДопХар, kdk.КодДопХар, a.КодКлиента AS КодКлн/*, dbo.Kat_kdk.НаимДопХар*/
	FROM            dbo.List_kdk AS kdk INNER JOIN
							 dbo.KLN_ADK AS a ON kdk.КодКлн = a.КодАдресаДоставки AND kdk.mode = 1 INNER JOIN
							 dbo.Kat_kdk ON kdk.КодДопХар = dbo.Kat_kdk.КодДопХар AND kdk.КодГрпДопХар = dbo.Kat_kdk.КодГрДопХар
	UNION ALL
	SELECT        0 AS КодАдреса, kdk.КодГрпДопХар, kdk.КодДопХар, kdk.КодКлн/*, Kat_kdk_1.НаимДопХар*/
	FROM            dbo.List_kdk AS kdk INNER JOIN
							 dbo.Kat_kdk AS Kat_kdk_1 ON kdk.КодДопХар = Kat_kdk_1.КодДопХар AND kdk.КодГрпДопХар = Kat_kdk_1.КодГрДопХар
	WHERE        (kdk.mode = 0)
	) as t

	PIVOT
	(
	 MAX(КодДопХар) 
	 FOR КодГрпДопХар in ([1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26])
	) as PT
--select * from dbo.kat_kdk

) as a
JOIN
(
	select * from (SELECT        kdk.КодКлн AS КодАдреса, kdk.КодГрпДопХар, /*kdk.КодДопХар,*/ a.КодКлиента AS КодКлн, dbo.Kat_kdk.НаимДопХар
	FROM            dbo.List_kdk AS kdk INNER JOIN
							 dbo.KLN_ADK AS a ON kdk.КодКлн = a.КодАдресаДоставки AND kdk.mode = 1 INNER JOIN
							 dbo.Kat_kdk ON kdk.КодДопХар = dbo.Kat_kdk.КодДопХар AND kdk.КодГрпДопХар = dbo.Kat_kdk.КодГрДопХар
	UNION ALL
	SELECT        0 AS КодАдреса, kdk.КодГрпДопХар, /*kdk.КодДопХар,*/ kdk.КодКлн, Kat_kdk_1.НаимДопХар
	FROM            dbo.List_kdk AS kdk INNER JOIN
							 dbo.Kat_kdk AS Kat_kdk_1 ON kdk.КодДопХар = Kat_kdk_1.КодДопХар AND kdk.КодГрпДопХар = Kat_kdk_1.КодГрДопХар
	WHERE        (kdk.mode = 0)
	) as t

	PIVOT
	(
	 MAX(НаимДопХар) 
	 FOR КодГрпДопХар in ([1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26])
	) as PT
--select * from dbo.kat_kdk

) as b
ON a.КодКлн = b.КодКлн and a.КодАдреса = b.КодАдреса
GO
/****** Object:  StoredProcedure [dbo].[ChicagoInvoice]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Ефремов
-- Create date: 11-06-2015
-- Description:	Вывод шапки документов Invoice для Чикаго
-- =============================================
--exec [dbo].[ChicagoInvoice]

CREATE PROCEDURE [dbo].[ChicagoInvoice]
	 
	@startdate date = NULL,
	@enddate date = NULL,@group int =NULL,@sklad int =NULL

AS
--declare
--@startdate date = NULL,
--	@enddate date = NULL, @group int =166 ,@sklad int =128 

BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	if(@group is NULL)
	begin
		set @group = 166
	end
	
	if(@sklad is NULL)
	begin
		set @sklad = 128
	end
	

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	

      declare @invoice table (
						innercode varchar(15),
						outercode varchar(15),
						outerparentcode  varchar(15),
						innerparentcode  varchar(15),
						date varchar(15),
						docno  varchar(15),
						printdocnum  varchar(15),
						prndocnum  varchar(15),
						prncreatorcodedocnum  varchar(40),
						deleted   varchar(15),
						firmcode  varchar(15),
						routecode   varchar(15),
						employeecode   varchar(15),
						buypointcode   varchar(15),
						comment   varchar(15),
						storecode   varchar(15),
						buyercode   varchar(15),
						counteragentcode   varchar(20),
						currencycode  varchar(15),
						bw   varchar(15),
						paytypecode   varchar(15),
						discountRate   varchar(15),
						usevatrate   varchar(15),
						includevat   varchar(15)
						); 	


insert into @invoice(   innercode ,
						outercode ,
						outerparentcode  ,
						innerparentcode  ,
						date ,
						docno  ,
						printdocnum  ,
						prndocnum  ,
						prncreatorcodedocnum  ,
						deleted   ,
						firmcode  ,
						routecode   ,
						employeecode   ,
						buypointcode   ,
						comment   ,
						storecode   ,
						buyercode   ,
						counteragentcode   ,
						currencycode  ,
						bw   ,
						paytypecode   ,
						discountRate   ,
						usevatrate   ,
						includevat   )
select 
		 'innercode',
		'outercode',
		'outerparentcode',
		'innerparentcode',
		'date' ,
		'docno',
		'printdocnum',
		'prndocnum',
		 'prncreatorcodedocnum',
		'deleted',
		'firmcode' ,
		'routecode',
		'employeecode',
		'buypointcode',
		'comment',
		'storecode',
		'buyercode',
		 'counteragentcode',
		  'currencycode',
		'bw',
	    'paytypecode',
		'discountRate',
		'usevatrate',
		'includevat' 


--select * from @invoice

union
	select 
		'innercode' = convert(varchar(15),''),
		'outercode' =convert(varchar(15), l.ОпНаклКод),
		'outerparentcode' = convert(varchar(15),''),
		'innerparentcode' = convert(varchar(15),''),
		'date' = convert(varchar(15), cast(l.ОпДатаРасч as date)),
		'docno' =  convert(varchar(15),l.ОпНаклКод),
		'printdocnum' =  convert(varchar(15),l.ОпНаклКод),
		'prndocnum' =  convert(varchar(15),l.ОпНаклКод),
		'prncreatorcodedocnum' =  convert(varchar(15),''),
		'deleted' =  convert(varchar(15),'0'),
		'firmcode' = convert(varchar(8), l.НашаФирма),
		'routecode' =  convert(varchar(15),''),
		'employeecode' =   convert(varchar(8),l.ОпСотр),
		'buypointcode' =  convert(varchar(8), ka.КодАдресаДоставки),
		'comment' =  convert(varchar(15),''),
		'storecode' =   convert(varchar(8),l.ОпСкл),
		'buyercode' =   convert(varchar(8),l.ОпКлн),
		'counteragentcode' =   convert(varchar(8),l.ОпКлн),
		'currencycode' =  convert(varchar(15),''),
		'bw' =  convert(varchar(15),'0'),
		'paytypecode' =  convert(varchar(15),'2'),
		'discountRate' =  convert(varchar(15),''),
		'usevatrate' = convert(varchar(15),'1'),
		'includevat' =  convert(varchar(15),'1')
		

	from dbo.LIST_SKL as l
				left join dbo.KAT_KLN kl on l.ОпКлн=kl.КлнКод
				left join dbo.CLN_DKL cld on cld.КлнКод = kl.КлнКод 
				left join dbo.KLN_ADK ka on ka.КодАдресаДоставки = l.КодАдрДоставки
	where	cast(L.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
			l.ОпНаклКод in
				(
				select b.ОпНаклКод
				from (
						select 
							l.ОпНаклКод	 
							,'type_oper' = 
							case 
								when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
								then 2
								when l.ОпВозврат=0 and l.ОпТип=1 --приход от поставщика
								then 1
								when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
								then 3
								when l.ОпТип=3                                    --списание
								then 4
								when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
								then 31
								when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
								then 6
								when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
								then 6
								else NULL
							end 
						from LIST_SKL as l
								inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
              					INNER JOIN dbo.KAT_TVR kt ON H.ОпКодТов=Kt.ТовКод
              					inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
						where cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
								and Kt.ТовГрп in (@group) 
								and (Kt.БФ & 1 ) = 0  --Tvr не архив
								and trd.КодПоставщика not like ''
								and  l.ОпКлн not in (19358,19359,19360) --исключен клиент Найдено-потеряно 25/12/12
									and l.ОпКлнТип!=4 --исключаю движение м/у внутренними складами пп/рп 26/12/12
									and l.ОпСкл in(@sklad)
					--				(  SELECT [СклКод] FROM [PR_Euras].[dbo].[KAT_SKL] where [СклГрп] in (1,3,5)) --фильтр по группе скдадов 25/12/12
					) as b
				WHERE b.type_oper in (2) -- интересует только отгрузка клиенту 
				group by b.ОпНаклКод
			)

select * from @invoice

	--order by L.ОпНаклКод asc
END
GO
/****** Object:  Table [xmt].[CheckListItem]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[CheckListItem](
	[CheckListId] [int] NOT NULL,
	[id] [int] NOT NULL,
	[name] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_CheckListItem] PRIMARY KEY CLUSTERED 
(
	[CheckListId] ASC,
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[F_RASH_Vozvr]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_RASH_Vozvr]
AS
SELECT     dbo.F_OPER.ОпКод, dbo.D_NAKL.НаклНомер, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклСклНаим, dbo.D_NAKL.НаклКлн AS ОпКодКлн, 
                      dbo.D_NAKL.НаклСотр, dbo.D_NAKL.НаклДата AS ОпДата, dbo.D_NAKL.НаклДатаРасч AS ОпДатаРасч, dbo.D_NAKL.ОпНаклКод, 
                      dbo.F_OPER.ОпКодТов, dbo.F_OPER.ОпКол, dbo.F_OPER.ОпСтоим, dbo.F_OPER.ОпВесБрутто, dbo.F_OPER.ОпКолУпак, dbo.F_OPER.ОпВесНетто, 
                      dbo.F_OPER.ОпВозвр, dbo.D_NAKL.НаклТип, dbo.D_NAKL.НаклКод, dbo.F_OPER.ОпТип, RTRIM(CAST(dbo.D_NAKL.НаклКлн AS char)) 
                      + '/' + RTRIM(CAST(dbo.D_NAKL.КодАдрДоставки AS char)) AS КодКлн_КодАдрДоставки, dbo.D_NAKL.КодАдрДоставки
FROM         dbo.F_OPER INNER JOIN
                      dbo.D_NAKL ON dbo.F_OPER.ОпНаклКод = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_OPER.ОпТип = 3)
	      --OR (dbo.F_OPER.ОпТип = 1)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "F_OPER"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_NAKL"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_RASH_Vozvr'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_RASH_Vozvr'
GO
/****** Object:  View [dbo].[F_RASH_TM]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE   VIEW [dbo].[F_RASH_TM]
AS
SELECT     dbo.HIST_SKL.ОпКод, 
 dbo.LIST_SKL.ОпНакл as НаклНомер, 
 dbo.KAT_SKL.СклКод as НаклСклКод, dbo.KAT_SKL.СклНаим as НаклСклНаим, 
 case 
	when dbo.LIST_SKL.ОпКлн=0 then 999999999
	else dbo.LIST_SKL.ОпКлн
 end AS ОпКодКлн, 
 dbo.LIST_SKL.ОпСотр as НаклСотр, dbo.D_DATES.ДатыКод AS ОпДата, 
 dbo.LIST_SKL.ОпДатаРасч AS ОпДатаРасч, dbo.LIST_SKL.ОпНаклКод, 
 dbo.HIST_SKL.ОпКодТов, dbo.HIST_SKL.ОпКол, 
 dbo.HIST_SKL.ОпКол*dbo.HIST_SKL.ОпЦена as ОпСтоим,
 dbo.HIST_SKL.ОпКол*dbo.TVR_DEF.ТовВесБрутто as ОпВесБрутто, 
 dbo.HIST_SKL.ОпКол/dbo.KAT_UPK.УпакКоэф as ОпКолУпак, 
 dbo.HIST_SKL.ОпКол*dbo.TVR_DEF.ТовВесНетто as ОпВесНетто, 
case
 when dbo.HIST_SKL.ОпВозвр = 1 then dbo.HIST_SKL.ОпВозвр
end as ОпВозвр, 
dbo.LIST_SKL.ОпТип as НаклТип, 
 --dbo.D_NAKL.НаклКод,
case  
	when dbo.HIST_SKL.ОпВозвр=0 then 1
	else 3
end as ОпТип,
RTRIM(CAST(dbo.LIST_SKL.ОпКлн AS char)) 
                      + '/' + RTRIM(CAST(dbo.LIST_SKL.КодАдрДоставки AS char)) 
AS КодКлн_КодАдрДоставки, dbo.LIST_SKL.КодАдрДоставки
FROM         --dbo.F_OPER 
dbo.LIST_SKL
inner join dbo.HIST_SKL on dbo.LIST_SKL.ОпНаклКод=dbo.HIST_SKL.ОпНаклКод
left join dbo.TVR_DEF on dbo.HIST_SKL.ОпКодТов=dbo.TVR_DEF.ТовКод
left join dbo.KAT_TVR on dbo.HIST_SKL.ОпКодТов=dbo.KAT_TVR.ТовКод
left join dbo.KAT_UPK on (dbo.KAT_TVR.ТовУпак=dbo.KAT_UPK.УпакКод
	and  kat_upk.УпакКоэф>0)
inner join dbo.KAT_SKL on dbo.KAT_SKL.СклКод = dbo.LIST_SKL.ОпСкл
inner join dbo.D_DATES on dbo.D_DATES.ДатыРасч = dbo.LIST_SKL.ОпДатаРасч
WHERE     (dbo.LIST_SKL.ОпТип = 2) 
and (dbo.LIST_SKL.ОпКлнТип = 2)
GO
/****** Object:  View [dbo].[F_RASH_060912]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_RASH_060912]
AS
SELECT     dbo.F_OPER.ОпКод, dbo.D_NAKL.НаклНомер, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклСклНаим, dbo.D_NAKL.НаклКлн AS ОпКодКлн, 
                      dbo.D_NAKL.НаклСотр, dbo.D_NAKL.НаклДата AS ОпДата, dbo.D_NAKL.НаклДатаРасч AS ОпДатаРасч, dbo.D_NAKL.ОпНаклКод, 
                      dbo.F_OPER.ОпКодТов, dbo.F_OPER.ОпКол, dbo.F_OPER.ОпСтоим, dbo.F_OPER.ОпВесБрутто, dbo.F_OPER.ОпКолУпак, dbo.F_OPER.ОпВесНетто, 
                      dbo.F_OPER.ОпВозвр, dbo.D_NAKL.НаклТип, dbo.D_NAKL.НаклКод, dbo.F_OPER.ОпТип, RTRIM(CAST(dbo.D_NAKL.НаклКлн AS char)) 
                      + '/' + RTRIM(CAST(dbo.D_NAKL.КодАдрДоставки AS char)) AS КодКлн_КодАдрДоставки, dbo.D_NAKL.КодАдрДоставки
FROM         dbo.F_OPER INNER JOIN
                      dbo.D_NAKL ON dbo.F_OPER.ОпНаклКод = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_OPER.ОпТип = 2) OR
                      (dbo.F_OPER.ОпТип = 4)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "F_OPER"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_NAKL"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_RASH_060912'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_RASH_060912'
GO
/****** Object:  View [dbo].[F_RASH]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_RASH]
AS
SELECT     dbo.F_OPER.ОпКод, dbo.D_NAKL.НаклНомер, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклСклНаим, dbo.D_NAKL.НаклКлн AS ОпКодКлн, 
                      dbo.D_NAKL.НаклСотр, dbo.D_NAKL.НаклДата AS ОпДата, dbo.D_NAKL.НаклДатаРасч AS ОпДатаРасч, dbo.D_NAKL.ОпНаклКод, 
                      dbo.F_OPER.ОпКодТов, dbo.F_OPER.ОпКол, dbo.F_OPER.ОпСтоим, dbo.F_OPER.ОпВесБрутто, dbo.F_OPER.ОпКолУпак, dbo.F_OPER.ОпВесНетто, 
                      dbo.F_OPER.ОпВозвр, dbo.D_NAKL.НаклТип, dbo.D_NAKL.НаклКод, dbo.F_OPER.ОпТип, RTRIM(CAST(dbo.D_NAKL.НаклКлн AS char)) 
                      + '/' + RTRIM(CAST(dbo.D_NAKL.КодАдрДоставки AS char)) AS КодКлн_КодАдрДоставки, dbo.D_NAKL.КодАдрДоставки
FROM         dbo.F_OPER INNER JOIN
                      dbo.D_NAKL ON dbo.F_OPER.ОпНаклКод = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_OPER.ОпТип = 2) OR
                      (dbo.F_OPER.ОпТип = 4)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "F_OPER"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_NAKL"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 3990
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_RASH'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_RASH'
GO
/****** Object:  View [dbo].[D_SOTRNAKLAdk]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--2010.12.03
--Евгений Федяков
--Представление заменяет таблицу, которая заполянялась около 10 минут

CREATE VIEW [dbo].[D_SOTRNAKLAdk]
AS
SELECT
		СотрКод,
		СотрФамилияИмя,
		СотрОтчество,
		ГрпСотрНаим,
		ОпНаклКод,
		КлнНаим,
		ГрпКлнНаим,
		ГородНаим,
		КлнКод,
		КодГлКлн,
		ГлКлнНаим,
		Повтор,
		RTRIM(CAST(dbo.D_SOTRNAKL.КлнКод AS char))+'/0'	КодКлн_КодАдрДоставки,
		Null	КодАдрДоставки,
		Null	АдрДоставки
FROM DBO.D_SOTRNAKL
UNION ALL
SELECT
		DBO.D_SOTRNAKL.СотрКод,
		DBO.D_SOTRNAKL.СотрФамилияИмя,
		DBO.D_SOTRNAKL.СотрОтчество,
		DBO.D_SOTRNAKL.ГрпСотрНаим,
		DBO.D_SOTRNAKL.ОпНаклКод,
		DBO.D_SOTRNAKL.КлнНаим,
		DBO.D_SOTRNAKL.ГрпКлнНаим,
		DBO.D_SOTRNAKL.ГородНаим,
		DBO.D_SOTRNAKL.КлнКод,
		DBO.D_SOTRNAKL.КодГлКлн,
		DBO.D_SOTRNAKL.ГлКлнНаим,
		DBO.D_SOTRNAKL.Повтор,
		RTRIM(CAST(dbo.D_SOTRNAKL.КлнКод AS char))+'/' + RTRIM(CAST(dbo.KLN_ADK.КодАдресаДоставки as char)),
		dbo.KLN_ADK.КодАдресаДоставки,
		dbo.KLN_ADK.АдресДоставки
FROM DBO.D_SOTRNAKL JOIN
     dbo.KLN_ADK ON DBO.D_SOTRNAKL.КлнКод = dbo.KLN_ADK.КодКлиента
GO
/****** Object:  Table [xmt].[Channel]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[Channel](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[channelId] [int] NULL,
	[title] [nvarchar](255) NULL,
	[link] [nvarchar](500) NULL,
	[pubDate] [nvarchar](50) NULL,
	[lastBuildDate] [nvarchar](50) NULL,
	[salesAgent] [nvarchar](255) NULL,
	[uid] [uniqueidentifier] NULL,
 CONSTRAINT [PK_Channel] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[akc_list_bit]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[akc_list_bit]
AS
SELECT     Наименование, АкцияКод, Статус, Номер, ДатаНачала, ДатаКонца, ДатаПланируемого, БитовыеФлаги, Сотр, ДатаСоздания, Валюта, Аналитика, НашаФирма, 
                      РДатаНачала, РДатаКонца, РДатаПланируемого, РДатаСоздания, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 0), 1) AS bit00, 
                      LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 1), 1) AS bit01, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 2), 1) AS bit02, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 3), 1) 
                      AS bit03, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 4), 1) AS bit04, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 5), 1) AS bit05, 
                      LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 6), 1) AS bit06, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 7), 1) AS bit07, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 8), 1) 
                      AS bit08, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 9), 1) AS bit09, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 10), 1) AS bit10, 
                      LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 11), 1) AS bit11, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 12), 1) AS bit12, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 13), 
                      1) AS bit13, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 14), 1) AS bit14, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 15), 1) AS bit15, 
                      LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 16), 1) AS bit16, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 17), 1) AS bit17, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 18), 
                      1) AS bit18, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 19), 1) AS bit19, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 20), 1) AS bit20, 
                      LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 21), 1) AS bit21, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 22), 1) AS bit22, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 23), 
                      1) AS bit23, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 24), 1) AS bit24, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 25), 1) AS bit25, 
                      LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 26), 1) AS bit26, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 27), 1) AS bit27, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 28), 
                      1) AS bit28, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 29), 1) AS bit29, LEFT(RIGHT(dbo.Dec2Bit(БитовыеФлаги), 30), 1) AS bit30
FROM         dbo.akc_list
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "akc_list"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 246
               Right = 222
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'akc_list_bit'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'akc_list_bit'
GO
/****** Object:  StoredProcedure [dbo].[CampinaGetSALOUTLD2]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Ефремов
-- Create date: 22-12-2014
-- Description:	Вывод таблицы SALOUTLD (Продажи - табличная часть) для SalesWork поставщик Campina
-- =============================================
CREATE PROCEDURE [dbo].[CampinaGetSALOUTLD2]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
--declare @startdate date ='2014-12-01', -- NULL,
--@enddate date = '2014-12-01' 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	select	
		'VAT' = kt.НДС,
		'LocalCode' = kt.ТовКод,
		'TovArt -no out' =kt.ТовАрт,
		'NameTov' = kt.ТовНаим,
		'Price' = ROUND(h.[ОпЦена]/( 1+ ( kt.[НДС]/100 )), 4),--ROUND(h.[ОпКол]*(h.[ОпЦена]/( 1+ ( kt.[НДС]/100 ))),4),
		'Qty' = 
				case
					when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
						then 1
					when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
						then -1
  					when l.ОпТип=3                                    --списание
  						then 1
  					when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
	  					then 1
  					when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
  						then -1
	  				else 0
  				end
				* SUM(h.ОпКол),
		'Invoice_No' = l.ОпНаклКод,
		'Invoice_NoLo' = l.ОпНакл,
		--'Lot_id' = '',
		'DTLM' = @dt,
		'Status' = '2',
		'Order_No' = '0',
		'AccPrice' = '0'
	from dbo.LIST_SKL as l
			inner join dbo.HIST_SKL as h on l.ОпНаклКод = h.ОпНаклКод
			inner join dbo.KAT_TVR as kt on h.ОпКодТов = kt.ТовКод
			inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
	where	cast(L.ОпДатаРасч as date) BETWEEN @startDate and @endDate --l.ОпНаклКод = 1000605 and
			and (Kt.ТовГрп in (174, 289))
			and (Kt.БФ & 1 ) = 0  --Tvr не архив
			and trd.КодПоставщика not like ''
			--and kt.ТовНаим like '%с соком Вишня 385г%'
			and l.ОпНаклКод in
					(
					select b.ОпНаклКод
					from (
							select 
								l.ОпНаклКод	 
								,'type_oper' = 
								case 
									when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
									then 2
									when l.ОпВозврат=0 and l.ОпТип=1 --приход от поставщика
									then 1
									when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
									then 3
									when l.ОпТип=3                                    --списание
									then 4
									when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
									then 31
									when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
									then 6
									when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
									then 6
									else NULL
								end 
							from LIST_SKL as l
									inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
              						INNER JOIN dbo.KAT_TVR kt ON H.ОпКодТов=Kt.ТовКод
              						inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
							where cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
									and Kt.ТовГрп in (174, 289) 
									and (Kt.БФ & 1 ) = 0  --Tvr не архив
									and trd.КодПоставщика not like ''
									
									and  l.ОпКлн not in (19358,19359,19360) --исключен клиент Найдено-потеряно 25/12/12
									and l.ОпКлнТип!=4 --исключаю движение м/у внутренними складами пп/рп 26/12/12
									and l.ОпСкл in -- (102, 103, 65, 110, 111)
									(  SELECT [СклКод] FROM [PR_Euras].[dbo].[KAT_SKL] where [СклГрп] in (1,3,5)) --фильтр по группе скдадов 25/12/12
						) as b
					WHERE b.type_oper in (2, 3, 4, 6)
					group by b.ОпНаклКод)
	group by l.ОпНаклКод, kt.ТовКод,kt.ТовАрт,kt.ТовНаим, kt.НДС, h.[ОпЦена], l.ОпВозврат, l.ОпКлнТип, l.ОпТип, l.ОпНакл
END
GO
/****** Object:  StoredProcedure [dbo].[CampinaGetSALOUTLD]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 16-06-2014
-- Description:	Вывод таблицы SALOUTLD (Продажи - табличная часть) для SalesWork поставщик Campina
-- =============================================
CREATE PROCEDURE [dbo].[CampinaGetSALOUTLD]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
--@startdate date ='2013-01-01', -- NULL,
--	@enddate date = '2013-12-31' 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	select	
		'VAT' = kt.НДС,
		'LocalCode' = kt.ТовКод,
		'Price' = ROUND(h.[ОпЦена]/( 1+ ( kt.[НДС]/100 )), 4),--ROUND(h.[ОпКол]*(h.[ОпЦена]/( 1+ ( kt.[НДС]/100 ))),4),
		'Qty' = 
				case
					when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
						then 1
					when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
						then -1
  					when l.ОпТип=3                                    --списание
  						then 1
  					when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
	  					then 1
  					when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
  						then -1
	  				else 0
  				end
				* SUM(h.ОпКол),
		'Invoice_No' = l.ОпНаклКод,
		--'Lot_id' = '',
		'DTLM' = @dt,
		'Status' = '2',
		'Order_No' = '0',
		'AccPrice' = '0'
	from dbo.LIST_SKL as l
			inner join dbo.HIST_SKL as h on l.ОпНаклКод = h.ОпНаклКод
			inner join dbo.KAT_TVR as kt on h.ОпКодТов = kt.ТовКод
			inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
	where	cast(L.ОпДатаРасч as date) BETWEEN @startDate and @endDate --l.ОпНаклКод = 1000605 and
			and (Kt.ТовГрп in (174, 289))
			and (Kt.БФ & 1 ) = 0  --Tvr не архив
			and trd.КодПоставщика not like ''
			and l.ОпНаклКод in
					(
					select b.ОпНаклКод
					from (
							select 
								l.ОпНаклКод	 
								,'type_oper' = 
								case 
									when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
									then 2
									when l.ОпВозврат=0 and l.ОпТип=1 --приход от поставщика
									then 1
									when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
									then 3
									when l.ОпТип=3                                    --списание
									then 4
									when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
									then 31
									when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
									then 6
									when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
									then 6
									else NULL
								end 
							from LIST_SKL as l
									inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
              						INNER JOIN dbo.KAT_TVR kt ON H.ОпКодТов=Kt.ТовКод
              						inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
							where cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
									and Kt.ТовГрп in (174, 289) 
									and (Kt.БФ & 1 ) = 0  --Tvr не архив
									and trd.КодПоставщика not like ''
									and  l.ОпКлн not in (19358,19359,19360) --исключен клиент Найдено-потеряно 25/12/12
									and l.ОпКлнТип!=4 --исключаю движение м/у внутренними складами пп/рп 26/12/12
									and l.ОпСкл in  (61,65,75,102, 103,  110, 111,113,116,127,128,129)
									
									--(  SELECT [СклКод] FROM [PR_Euras].[dbo].[KAT_SKL] where [СклГрп] in (1,3,5)) --фильтр по группе скдадов 
						) as b
					WHERE b.type_oper in (2, 3, 4, 6)
					group by b.ОпНаклКод)
	group by l.ОпНаклКод, kt.ТовКод, kt.НДС, h.[ОпЦена], l.ОпВозврат, l.ОпКлнТип, l.ОпТип, l.ОпНакл
END
GO
/****** Object:  StoredProcedure [wms].[Clear]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [wms].[Clear]
AS
TRUNCATE TABLE [wms].[sku]
GO
/****** Object:  UserDefinedFunction [dbo].[AKC]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:        ЕФ
-- Create date: 26,10,2011
-- Description:    Функция вовращает акцию для товара
-- =============================================
CREATE FUNCTION [dbo].[AKC] 
(    
    -- Add the parameters for the function here
    @КлнКод int,
    @ТовГрп int,
	@ТовВид int,
    @ТовКод int
	
)
RETURNS TABLE 
AS
RETURN 
(
	select top 1 *
 from (
        select al.*,
               at . Тип GVT,
               at . ПроцентЦена
        from akc_list al (nolock) 
             inner join akc_kln ak (nolock) on ak.АкцияКод = al.АкцияКод
             inner join akc_tvr at (nolock) on at . АкцияКод = al.АкцияКод
        where ak.Тип = 0 and
              al.Статус = 1 AND
              ak.КлнТТ = @КлнКод AND
              at . Тип = 0 AND
              at . Товар = @ТовГрп AND
              GetDate() between al.РДатаНачала and al.РДатаКонца
        UNION ALL
        select al.*,
               at . Тип,
               at . ПроцентЦена
        from akc_list al (nolock) 
             inner join akc_kln ak (nolock) on ak.АкцияКод = al.АкцияКод
             inner join akc_tvr at (nolock) on at . АкцияКод = al.АкцияКод
        where ak.Тип = 0 and
              al.Статус = 1 AND
              ak.КлнТТ = @КлнКод AND
              at . Тип = 1 AND
              at . Товар = @ТовВид AND
              GetDate() between al.РДатаНачала and al.РДатаКонца
        UNION ALL
        select al.*,
               at . Тип,
               at . ПроцентЦена
        from akc_list al (nolock) 
             inner join akc_kln ak (nolock) on ak.АкцияКод = al.АкцияКод
             inner join akc_tvr at (nolock) on at . АкцияКод = al.АкцияКод
        where ak.Тип = 0 and
              al.Статус = 1 AND
              ak.КлнТТ = @КлнКод AND
              at . Тип = 2 AND
              at . Товар = @ТовКод AND
              GetDate() between al.РДатаНачала and al.РДатаКонца
      ) tt
 order by GVT desc,
          РДатаСоздания desc)
GO
/****** Object:  StoredProcedure [xmt].[aox_report]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [xmt].[aox_report]
	@_dateBegin date = NULL, 
	@_dateEnd date = NULL, 
	@_agent int  = NULL
AS
BEGIN
	SET NOCOUNT ON;
	
--declare @dateBegin date = NULL, @dateEnd date = NULL,	@agent int  = NULL	
declare @dateBegin date = @_dateBegin;
declare @dateEnd date = @_dateEnd;
declare @agent int = @_agent;

SELECT  --newid(),
d.documentId
      ,cast(d.DocumentCreated as date) createDate
	  ,r.[retailId] 
      ,r.[name] retailName
      ,r.[address]
      ,sa.salesAgentId
      ,sa.name agentName
      ,ci.id itemId
      ,right ('00'+ltrim(str( ci.id  )),2 ) + '. ' + ci.name itemName
      , substring(ci.name, 0, CHARINDEX(':', ci.name)) itemName1
      ,right ('00'+ltrim(str( ci.id  )),2 ) + '. ' + substring(ci.name, CHARINDEX(':', ci.name)+2, len(ci.name)-CHARINDEX(':', ci.name)) itemName2
      ,substring(ci.name, CHARINDEX(':', ci.name)+2, len(ci.name)-CHARINDEX(':', ci.name)) itemName2_
      ,di.CheckReportItemValue
  FROM [EdiAll].[xmt].[Retail] r
  inner join 
  (
SELECT 
g.СотрКод AS salesAgent,
		CAST(a.КодКлиента AS varchar(50))+'/'+
		IsNull(LTRIM(CAST(a.КодАдресаДоставки AS varchar(50))),0) AS retail		
from PR_Euras.dbo.adk_grpt g 
inner join  PR_Euras.dbo.kln_adk a on a.КодАдресаДоставки = g.КодАдресаДоставки
) t on t.retail = r.retailId
inner join EdiAll.xmt.SalesAgent sa on sa.salesAgentId = t.salesAgent
inner join [EdiAll].[xmt].[DocumentCheckReport] d on d.FromSalesAgentId = t.salesAgent and d.CheckReportRetailId = t.retail
inner join [EdiAll].[xmt].[CheckList] c on c.id = d.[CheckReportCheckListId]
inner join [EdiAll].[xmt].[CheckListItem] ci on ci.CheckListId = c.id
left join [EdiAll].[xmt].[DocumentCheckReportItem] di on di.CheckReportItemId = ci.id and di.documentId = d.documentId
  where r.prefix = 'aox'
  and (d.CheckReportCheckListName = 'Ежедневный отчет торгомерчендайзера' or d.CheckReportCheckListName is null)
  and ((@agent is not null and sa.salesAgentId = @agent) or @agent is null)
  
  and (
	 (@dateBegin is not null and @dateEnd is not null and cast(d.DocumentCreated as date) >= @dateBegin and cast(d.DocumentCreated as date) <= @dateEnd)
  or (@dateBegin is not null and @dateEnd is null and cast(d.DocumentCreated as date) >= @dateBegin)
  or (@dateBegin is null and @dateEnd is not null and cast(d.DocumentCreated as date) <= @dateEnd)
  or (@dateBegin is null and @dateEnd is null)
  )
  order by cast(d.DocumentCreated as date), r.name, r.[address], ci.id

END
GO
/****** Object:  View [cube].[KAT_SKL]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [cube].[KAT_SKL]
as
SELECT [СклНаим]
      ,[СклКод]
      ,[КлнКод]
  FROM [dbo].[KAT_SKL]
GO
/****** Object:  View [dbo].[OPT_TBL_KPK_ADRES_MARS]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OPT_TBL_KPK_ADRES_MARS]
AS
SELECT     NULL AS mng, КодКлиента AS owner, КодАдресаДоставки AS tt, CAST(КодКлиента AS varchar(50)) + '/' + CAST(КодАдресаДоставки AS varchar(50)) 
                      AS owner_tt
FROM         dbo.KLN_ADK
UNION
SELECT     NULL AS mng, dbo.KAT_KLN.КлнКод AS owner, 0 AS tt, CAST(dbo.KAT_KLN.КлнКод AS varchar(50)) + '/0' AS owner_tt
FROM         dbo.KAT_KLN INNER JOIN
                      dbo.CLN_DKL ON dbo.KAT_KLN.КлнКод = dbo.CLN_DKL.КлнКод
GO
/****** Object:  UserDefinedFunction [dbo].[QtyOnPacks]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE FUNCTION [dbo].[QtyOnPacks] (@КодТовара  bigint,@Количество  decimal (18,3))  
RETURNS decimal (18,3) AS  
BEGIN 

Declare @КоэфПоУмол decimal(18,3)
Declare @КоэфУпак1 decimal(18,3)
Declare @КоэфУпак2 decimal(18,3)
Declare @КоэфУпак3 decimal(18,3)
Declare @КоэфУпак4 decimal(18,3)
Declare @КоэфУпак5 decimal(18,3)
Declare @КоэфУпак6 decimal(18,3)
Declare @КоэфУпак7 decimal(18,3)
Declare @КоэфУпак8 decimal(18,3)
Declare @КоэфУпак9 decimal(18,3)
Declare @КоэфУпак10 decimal(18,3)

declare @Упаковок decimal (18,3)
declare @Остаток decimal (18,3)

Declare @n decimal(10,0)

-- Записываем коэфициент упаковки по умолчанию
(SELECT @КоэфПоУмол=isnull(kat_upk.УпакКоэф,0.000) 
FROM KAT_TVR LEFT JOIN kat_upk ON KAT_TVR.ТовУпак = kat_upk.УпакКод 
WHERE KAT_TVR.ТовКод=@КодТовара)
-- Записываем коэфициент упаковки №1
SELECT @КоэфУпак1=isnull(kat_upk.УпакКоэф,0.000)
FROM TVR_DEF LEFT JOIN kat_upk ON TVR_DEF.ДопУпак1 = kat_upk.УпакКод 
WHERE TVR_DEF.ТовКод=@КодТовара
-- Записываем коэфициент упаковки №2
SELECT @КоэфУпак2=isnull(kat_upk.УпакКоэф,0.000)
FROM TVR_DEF LEFT JOIN kat_upk ON TVR_DEF.ДопУпак2 = kat_upk.УпакКод 
WHERE TVR_DEF.ТовКод=@КодТовара
-- Записываем коэфициент упаковки №3
SELECT @КоэфУпак3=isnull(kat_upk.УпакКоэф,0.000)
FROM TVR_DEF LEFT JOIN kat_upk ON TVR_DEF.ДопУпак3 = kat_upk.УпакКод 
WHERE TVR_DEF.ТовКод=@КодТовара
-- Записываем коэфициент упаковки №4
SELECT @КоэфУпак4=isnull(kat_upk.УпакКоэф,0.000)
FROM TVR_DEF LEFT JOIN kat_upk ON TVR_DEF.ДопУпак4 = kat_upk.УпакКод 
WHERE TVR_DEF.ТовКод=@КодТовара
-- Записываем коэфициент упаковки №5
SELECT @КоэфУпак5=isnull(kat_upk.УпакКоэф,0.000)
FROM TVR_DEF LEFT JOIN kat_upk ON TVR_DEF.ДопУпак5 = kat_upk.УпакКод 
WHERE TVR_DEF.ТовКод=@КодТовара
-- Записываем коэфициент упаковки №6
SELECT @КоэфУпак6=isnull(kat_upk.УпакКоэф,0.000)
FROM TVR_DEF LEFT JOIN kat_upk ON TVR_DEF.ДопУпак6 = kat_upk.УпакКод 
WHERE TVR_DEF.ТовКод=@КодТовара
-- Записываем коэфициент упаковки №7
SELECT @КоэфУпак7=isnull(kat_upk.УпакКоэф,0.000)
FROM TVR_DEF LEFT JOIN kat_upk ON TVR_DEF.ДопУпак7 = kat_upk.УпакКод 
WHERE TVR_DEF.ТовКод=@КодТовара
-- Записываем коэфициент упаковки №8
SELECT @КоэфУпак8=isnull(kat_upk.УпакКоэф,0.000)
FROM TVR_DEF LEFT JOIN kat_upk ON TVR_DEF.ДопУпак8 = kat_upk.УпакКод 
WHERE TVR_DEF.ТовКод=@КодТовара
-- Записываем коэфициент упаковки №9
SELECT @КоэфУпак9=isnull(kat_upk.УпакКоэф,0.000)
FROM TVR_DEF LEFT JOIN kat_upk ON TVR_DEF.ДопУпак9 = kat_upk.УпакКод 
WHERE TVR_DEF.ТовКод=@КодТовара
-- Записываем коэфициент упаковки №10
SELECT @КоэфУпак10=isnull(kat_upk.УпакКоэф,0.000)
FROM TVR_DEF LEFT JOIN kat_upk ON TVR_DEF.ДопУпак10 = kat_upk.УпакКод 
WHERE TVR_DEF.ТовКод=@КодТовара

set @n=1
WHILE @n<=10 
BEGIN
set @Упаковок=CAST(@Количество/@КоэфПоУмол as bigint)
set @Остаток=@Количество-@Упаковок*@КоэфПоУмол
set @n=@n+1
END
set @Остаток=('@КоэфУпак'+ str(@n-1))
return (@Остаток)
--SELECT [Prodresurs_6].[dbo].[QtyOnPacks](1069343357, 10)
END
GO
/****** Object:  View [dbo].[Real_Price_Cit_View]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Real_Price_Cit_View]
AS
SELECT     COUNT(*) AS Expr1, ТовКод, ЦенаНДС
FROM         dbo.Real_Price_TAB
GROUP BY ТовКод, ЦенаНДС
GO
/****** Object:  View [dbo].[Vw_SIMPLE_Positions]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_SIMPLE_Positions]
AS
SELECT     dbo.KAT_TVR.ТовКод AS Идентификатор, dbo.KAT_TVR.ТовНаим AS Наименование
FROM         dbo.KAT_TVR LEFT OUTER JOIN
                      dbo.KAT_GRPT ON dbo.KAT_TVR.ТовГрп = dbo.KAT_GRPT.ГрпКод LEFT OUTER JOIN
                      dbo.KAT_VIDT ON dbo.KAT_TVR.ТовВид = dbo.KAT_VIDT.ВидКод
WHERE     (dbo.KAT_GRPT.ГрпНаим LIKE '%4%езона%') OR
                      (dbo.KAT_TVR.ТовНаим LIKE '%Экстра%7.5%') OR
                      (dbo.KAT_TVR.ТовНаим LIKE '%Экстра%7,5%') OR
                      (dbo.KAT_TVR.ТовНаим LIKE '%Экстра%5,1%') OR
                      (dbo.KAT_TVR.ТовНаим LIKE '%Экстра%5.1%')
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_GRPT"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 84
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_VIDT"
            Begin Extent = 
               Top = 6
               Left = 416
               Bottom = 99
               Right = 567
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 13
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SIMPLE_Positions'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SIMPLE_Positions'
GO
/****** Object:  UserDefinedFunction [dbo].[Vw_KPK_Units_1]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[Vw_KPK_Units_1] ()
RETURNS TABLE AS  return
select ТовКод,ДопУпак1 as ТовУпак from dbo.TVR_DEF as t1
where ДопУпак1!=0 and ДопУпак1 not in
(select ТовУпак from dbo.KAT_TVR tt where t1.ТовКод=tt.ТовКод)
union
select ТовКод,ДопУпак2 from dbo.TVR_DEF t2
where ДопУпак2!=0 and ДопУпак2 not in
(select ТовУпак from dbo.KAT_TVR tt where t2.ТовКод=tt.ТовКод)
union
select ТовКод,ДопУпак3 from dbo.TVR_DEF t3
where ДопУпак3!=0 and ДопУпак3 not in
(select ТовУпак from dbo.KAT_TVR tt where t3.ТовКод=tt.ТовКод)
union
select ТовКод,ДопУпак4 from dbo.TVR_DEF t4
where ДопУпак4!=0 and ДопУпак4 not in
(select ТовУпак from dbo.KAT_TVR tt where t4.ТовКод=tt.ТовКод)
union
select ТовКод,ДопУпак5 from dbo.TVR_DEF t5
where ДопУпак5!=0 and ДопУпак5 not in
(select ТовУпак from dbo.KAT_TVR tt where t5.ТовКод=tt.ТовКод)
union
select ТовКод,ДопУпак6 from dbo.TVR_DEF t6
where ДопУпак6!=0 and ДопУпак6 not in
(select ТовУпак from dbo.KAT_TVR tt where t6.ТовКод=tt.ТовКод)
union
select ТовКод,ДопУпак7 from dbo.TVR_DEF t7
where ДопУпак7!=0 and ДопУпак7 not in
(select ТовУпак from dbo.KAT_TVR tt where t7.ТовКод=tt.ТовКод)
union
select ТовКод,ДопУпак8 from dbo.TVR_DEF t8
where ДопУпак8!=0 and ДопУпак8 not in
(select ТовУпак from dbo.KAT_TVR tt where t8.ТовКод=tt.ТовКод)
union
select ТовКод,ДопУпак9 from dbo.TVR_DEF t9
where ДопУпак9!=0 and ДопУпак9 not in
(select ТовУпак from dbo.KAT_TVR tt where t9.ТовКод=tt.ТовКод)
union
select ТовКод,ДопУпак10 from dbo.TVR_DEF t10
where ДопУпак10!=0 and ДопУпак10 not in
(select ТовУпак from dbo.KAT_TVR tt where t10.ТовКод=tt.ТовКод)
GO
/****** Object:  View [dbo].[VIEW21]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW21]
AS
SELECT     [Код товара] AS Expr2, MIN(DISTINCT Товар) AS Expr1
FROM         dbo.del_kanal
GROUP BY [Код товара]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "del_kanal"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 152
               Right = 362
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW21'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW21'
GO
/****** Object:  View [dbo].[vRaznDates1]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vRaznDates1]
AS
SELECT     dbo.TOV_RAZN.ТовКод, dbo.D_DATES.ДатыРасч AS ПрихДата, dbo.TOV_RAZN.ПрихДатаКод, dbo.TOV_RAZN.РасхДатаКод
FROM         dbo.TOV_RAZN INNER JOIN
                      dbo.D_DATES ON dbo.TOV_RAZN.ПрихДатаКод = dbo.D_DATES.ДатыКод
GO
/****** Object:  View [cube].[VozvratSale]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [cube].[VozvratSale]
AS
SELECT [ID]
      ,[Type]
  FROM [dbo].[VozvratSale]
GO
/****** Object:  View [dbo].[Vw_KPK_TovPrice_Test]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_TovPrice_Test]
AS
SELECT     товкод AS ТовКод, ind AS ГруппаЦен, ЦенаНДС AS Цена
FROM         dbo.Real_Price_Ind_TAB
GO
/****** Object:  View [dbo].[Vw_KPK_TovPrice]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_TovPrice]
AS
SELECT     товкод AS ТовКод, ind AS ГруппаЦен, ЦенаНДС AS Цена
FROM         dbo.Real_Price_Ind_TAB
GO
/****** Object:  View [dbo].[Vw_TVRS_KPK]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_TVRS_KPK]
AS
SELECT     dbo.Tbl_KPK_Ostatki.Наименование, dbo.KAT_TVR.ТовКод, dbo.Tbl_KPK_Ostatki.Наименование AS Expr2, dbo.KAT_GRPT.ГрпКод, NULL 
                      AS Expr4, NULL AS Expr3, NULL AS Expr5, NULL AS Expr6, NULL AS Expr7, - dbo.Tbl_KPK_Ostatki.Дефицит AS Expr1
FROM         dbo.KAT_TVR RIGHT OUTER JOIN
                      dbo.Tbl_KPK_Ostatki ON dbo.KAT_TVR.ТовНаим = dbo.Tbl_KPK_Ostatki.Наименование FULL OUTER JOIN
                      dbo.KAT_GRPT ON dbo.KAT_TVR.ТовГрп = dbo.KAT_GRPT.ГрпКод
GO
/****** Object:  View [dbo].[Vw_TVR_GRUP]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_TVR_GRUP]
AS
SELECT     ГрпКод, ГрпНаим
FROM         dbo.KAT_GRPT
GO
/****** Object:  View [dbo].[Vw_SpisUpakDop]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_SpisUpakDop]
AS
SELECT     ТовКод, ДопУпак1 AS ТовУпак
FROM         dbo.TVR_DEF AS t1
WHERE     ДопУпак1 != 0 AND ДопУпак1 NOT IN
                          (SELECT     ТовУпак
                            FROM          dbo.KAT_TVR tt
                            WHERE      t1.ТовКод = tt.ТовКод)
UNION
SELECT     ТовКод, ДопУпак2
FROM         dbo.TVR_DEF t2
WHERE     ДопУпак2 != 0 AND ДопУпак1 NOT IN
                          (SELECT     ТовУпак
                            FROM          dbo.KAT_TVR tt
                            WHERE      t2.ТовКод = tt.ТовКод)
UNION
SELECT     ТовКод, ДопУпак3
FROM         dbo.TVR_DEF t3
WHERE     ДопУпак3 != 0 AND ДопУпак1 NOT IN
                          (SELECT     ТовУпак
                            FROM          dbo.KAT_TVR tt
                            WHERE      t3.ТовКод = tt.ТовКод)
UNION
SELECT     ТовКод, ДопУпак4
FROM         dbo.TVR_DEF t4
WHERE     ДопУпак4 != 0 AND ДопУпак1 NOT IN
                          (SELECT     ТовУпак
                            FROM          dbo.KAT_TVR tt
                            WHERE      t4.ТовКод = tt.ТовКод)
UNION
SELECT     ТовКод, ДопУпак5
FROM         dbo.TVR_DEF t5
WHERE     ДопУпак5 != 0 AND ДопУпак1 NOT IN
                          (SELECT     ТовУпак
                            FROM          dbo.KAT_TVR tt
                            WHERE      t5.ТовКод = tt.ТовКод)
UNION
SELECT     ТовКод, ДопУпак6
FROM         dbo.TVR_DEF t6
WHERE     ДопУпак6 != 0 AND ДопУпак1 NOT IN
                          (SELECT     ТовУпак
                            FROM          dbo.KAT_TVR tt
                            WHERE      t6.ТовКод = tt.ТовКод)
UNION
SELECT     ТовКод, ДопУпак7
FROM         dbo.TVR_DEF t7
WHERE     ДопУпак7 != 0 AND ДопУпак1 NOT IN
                          (SELECT     ТовУпак
                            FROM          dbo.KAT_TVR tt
                            WHERE      t7.ТовКод = tt.ТовКод)
UNION
SELECT     ТовКод, ДопУпак8
FROM         dbo.TVR_DEF t8
WHERE     ДопУпак8 != 0 AND ДопУпак1 NOT IN
                          (SELECT     ТовУпак
                            FROM          dbo.KAT_TVR tt
                            WHERE      t8.ТовКод = tt.ТовКод)
UNION
SELECT     ТовКод, ДопУпак9
FROM         dbo.TVR_DEF t9
WHERE     ДопУпак9 != 0 AND ДопУпак1 NOT IN
                          (SELECT     ТовУпак
                            FROM          dbo.KAT_TVR tt
                            WHERE      t9.ТовКод = tt.ТовКод)
UNION
SELECT     ТовКод, ДопУпак10
FROM         dbo.TVR_DEF t10
WHERE     ДопУпак10 != 0 AND ДопУпак1 NOT IN
                          (SELECT     ТовУпак
                            FROM          dbo.KAT_TVR tt
                            WHERE      t10.ТовКод = tt.ТовКод)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SpisUpakDop'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SpisUpakDop'
GO
/****** Object:  View [dbo].[Vw_SpisUpakDef]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_SpisUpakDef]
AS
SELECT     ТовКод, ТовУпак
FROM         dbo.KAT_TVR
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SpisUpakDef'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SpisUpakDef'
GO
/****** Object:  View [cube].[Wares]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [cube].[Wares]
As
SELECT [ТовКод]
      ,[ТовНаим]
      ,[ТовГрпНаим]
      ,[ТовВидНаим]
      ,[ТовАрт]
      ,[ТовШтрих]
      ,[ТовЕИ]
      ,[ТовВесБрутто]
      ,[ТовВесНетто]
      ,[ЕстьОстаток]
  FROM [dbo].[D_TVR]
GO
/****** Object:  View [dbo].[weeks]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[weeks] 
AS
  -- номера недель с началом недели
--SET DATEFIRST 1
SELECT MIN(L.ОпДатаРасч) wStart, 
       MAX(L.ОпДатаРасч) wEnd, 
       datepart(ww,L.ОпДатаРасч) wNum, 
       datepart(yy,L.ОпДатаРасч) yNum
from pr_euras.dbo.LIST_SKL l 
	INNER JOIN pr_euras.dbo.HIST_SKL h ON L.ОпНаклКод=H.ОпНаклКод
GROUP BY datepart(ww,L.ОпДатаРасч),
       datepart(yy,L.ОпДатаРасч)
--ORDER BY 1 desc
GO
/****** Object:  View [dbo].[net_retail2]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[net_retail2]
AS
SELECT     KLN1.КлнНаим AS Сеть, KLN1.КлнКод AS idСети, KLN.КлнНаим AS Подсеть, KLN.КлнКод AS idПодсети
FROM         dbo.KAT_KLN AS KLN LEFT OUTER JOIN
                      dbo.CLN_DKL AS Cln ON KLN.КлнКод = Cln.КлнКод LEFT OUTER JOIN
                      dbo.KAT_KLN AS KLN1 ON Cln.КодГлКлн = KLN1.КлнКод LEFT OUTER JOIN
                      dbo.CLN_DKL AS Cln1 ON KLN1.КлнКод = Cln1.КлнКод LEFT OUTER JOIN
                      dbo.KAT_KLN AS KLN2 ON Cln1.КодГлКлн = KLN2.КлнКод
WHERE     (KLN1.КлнКод <> 0)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KLN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Cln"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 381
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN1"
            Begin Extent = 
               Top = 6
               Left = 419
               Bottom = 114
               Right = 570
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Cln1"
            Begin Extent = 
               Top = 6
               Left = 608
               Bottom = 114
               Right = 762
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN2"
            Begin Extent = 
               Top = 6
               Left = 800
               Bottom = 114
               Right = 951
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
       ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'net_retail2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'  Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'net_retail2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'net_retail2'
GO
/****** Object:  View [dbo].[net_retail]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[net_retail]
AS
SELECT     CASE WHEN kln2.КлнНаим IS NULL THEN kln1.КлнНаим ELSE kln2.КлнНаим END AS Сеть, CASE WHEN kln2.КлнКод IS NULL 
                      THEN kln1.КлнКод ELSE kln2.КлнКод END AS idСети, KLN1.КлнНаим AS Подсеть, KLN1.КлнКод AS idПодсети, KLN.КлнНаим AS Клиент, 
                      KLN.КлнКод AS idКлиента
FROM         dbo.KAT_KLN AS KLN LEFT OUTER JOIN
                      dbo.CLN_DKL AS Cln ON KLN.КлнКод = Cln.КлнКод LEFT OUTER JOIN
                      dbo.KAT_KLN AS KLN1 ON Cln.КодГлКлн = KLN1.КлнКод LEFT OUTER JOIN
                      dbo.CLN_DKL AS Cln1 ON KLN1.КлнКод = Cln1.КлнКод LEFT OUTER JOIN
                      dbo.KAT_KLN AS KLN2 ON Cln1.КодГлКлн = KLN2.КлнКод
WHERE     (KLN1.КлнКод <> 0)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KLN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Cln"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 381
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN1"
            Begin Extent = 
               Top = 6
               Left = 419
               Bottom = 114
               Right = 570
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Cln1"
            Begin Extent = 
               Top = 6
               Left = 608
               Bottom = 114
               Right = 762
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN2"
            Begin Extent = 
               Top = 6
               Left = 800
               Bottom = 114
               Right = 951
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
       ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'net_retail'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'  Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'net_retail'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'net_retail'
GO
/****** Object:  View [dbo].[MTOrderToLO1]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [dbo].[MTOrderToLO1]
as
SELECT  

left(right([Столбец 0],len([Столбец 0])-8-CHARINDEX ('zakaz_mt_',[Столбец 0])),38) OrderID,
left(
right([Столбец 0],len([Столбец 0])-47-CHARINDEX ('zakaz_mt_',[Столбец 0])) ,
-1+charindex('_',right([Столбец 0],len([Столбец 0])-47-CHARINDEX ('zakaz_mt_',[Столбец 0])))
)
UserID,
*
  FROM [dbo].[AutoLoadReportTxtLog]
--  truncate table [PR_Euras].[dbo].[AutoLoadReportTxtLog]
--update [PR_Euras].[dbo].[AutoLoadReportTxtLog]
where /*[Обработана строка] = 0
and*/ [Столбец 0] like '%zakaz_mt_{2B8E849C-3240-412D-B23F-A5539AD7C7EA}%'
union all
SELECT  

left(right([Столбец 0],len([Столбец 0])-9-CHARINDEX ('return_mt_',[Столбец 0])),38) OrderID,
left(
right([Столбец 0],len([Столбец 0])-48-CHARINDEX ('return_mt_',[Столбец 0])) ,
-1+charindex('_',right([Столбец 0],len([Столбец 0])-48-CHARINDEX ('return_mt_',[Столбец 0])))
)
UserID,
*
  FROM [dbo].[AutoLoadReportTxtLog]
--  truncate table [PR_Euras].[dbo].[AutoLoadReportTxtLog]
--update [PR_Euras].[dbo].[AutoLoadReportTxtLog]
where /*[Обработана строка] = 0
and*/ [Столбец 0] like '%return_mt_{2B8E849C-3240-412D-B23F-A5539AD7C7EA}%'--where id  in ('{2B8E849C-3240-412D-B23F-A5539AD7C7EA}')
GO
/****** Object:  View [dbo].[MTOrderToLO]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [dbo].[MTOrderToLO]
as
SELECT  

left(right([Столбец 0],len([Столбец 0])-8-CHARINDEX ('zakaz_mt_',[Столбец 0])),38) OrderID,
left(
right([Столбец 0],len([Столбец 0])-47-CHARINDEX ('zakaz_mt_',[Столбец 0])) ,
-1+charindex('_',right([Столбец 0],len([Столбец 0])-47-CHARINDEX ('zakaz_mt_',[Столбец 0])))
)
UserID,
*
  FROM [dbo].[AutoLoadReportTxtLog]
--  truncate table [PR_Euras].[dbo].[AutoLoadReportTxtLog]
--update [PR_Euras].[dbo].[AutoLoadReportTxtLog]
where [Обработана строка] = 0
and [Столбец 0] like '%zakaz_mt_%'


union all


SELECT  

left(right([Столбец 0],len([Столбец 0])-11-CHARINDEX ('zakazcsv_mt_',[Столбец 0])),38) OrderID,
left(
right([Столбец 0],len([Столбец 0])-50-CHARINDEX ('zakazcsv_mt_',[Столбец 0])) ,
-1+charindex('_',right([Столбец 0],len([Столбец 0])-50-CHARINDEX ('zakazcsv_mt_',[Столбец 0])))
)
UserID,
*
  FROM [dbo].[AutoLoadReportTxtLog]
--  truncate table [PR_Euras].[dbo].[AutoLoadReportTxtLog]
--update [PR_Euras].[dbo].[AutoLoadReportTxtLog]
where 
[Обработана строка] = 0 and
 [Столбец 0] like '%zakazcsv_mt_%'
union all
SELECT  

left(right([Столбец 0],len([Столбец 0])-9-CHARINDEX ('return_mt_',[Столбец 0])),38) OrderID,
left(
right([Столбец 0],len([Столбец 0])-48-CHARINDEX ('return_mt_',[Столбец 0])) ,
-1+charindex('_',right([Столбец 0],len([Столбец 0])-48-CHARINDEX ('return_mt_',[Столбец 0])))
)
UserID,
*
  FROM [dbo].[AutoLoadReportTxtLog]
--  truncate table [PR_Euras].[dbo].[AutoLoadReportTxtLog]
--update [PR_Euras].[dbo].[AutoLoadReportTxtLog]
where [Обработана строка] = 0
and [Столбец 0] like '%return_mt_%'
GO
/****** Object:  StoredProcedure [dbo].[MT_SET_OBJ]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Холмогорова А.А.
-- Create date: 18-05-2015
-- Description:	Справочник продукции Mr.Ricco
-- =============================================
CREATE PROCEDURE [dbo].[MT_SET_OBJ] 
	-- Add the parameters for the stored procedure here
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select cast (ТовКод as varchar(16)) as vkod,
	  cast (ТовНаим as varchar(100)) as vname,
	   cast (kv.ВидНаим  as varchar(100))as vtg_name
from KAT_TVR kt
inner join KAT_VIDT kv on kv.ВидКод = kt.ТовВид
where kt.ТовГрп = 311
order by 3,2
END
GO
/****** Object:  StoredProcedure [dbo].[MT_SET_DOC2]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Холмогорова А.А.(доработано Ефремов )
-- Create date: 20-05-2015
-- Description:	Накладные (Продажи, Приход, Возвраты от клиента, Возвраты поставщикам)
-- =============================================
CREATE PROCEDURE [dbo].[MT_SET_DOC2]
	-- Add the parameters for the stored procedure here
	--declare 
	@startdate date = NULL,
    	@enddate date = NULL,
    	@did bigint = null
	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here



BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)




if @did is not null
	
	select  distinct
		'guid' = '',
		'rdoc_type' = cast(case when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
							then 0
						   when l.ОпВозврат=0 and l.ОпТип=1 and l.ОпКлнТип=2 --приход от поставщика
							then 1
						   when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
							then 2
		                   when l.ОпТип=3                                    --списание
							then 3
						   when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
							then 4
						   when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
							then 5
						   when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
							then 6
						   else '' end  as varchar(5)),
		'vdate' =  CONVERT ( varchar(20) , l.ОпДатаРасч , 104 ) ,
		'vdatecreated' =  CONVERT ( varchar(30) , l.ОпДатаРасч , 104 ),
		'rscl' = --l.НашаФирма 
		        cast(case 
				when l.ОпСкл in (65, 113, 115) then 1
				when l.ОпСкл in (102, 103, 116, 127) then 2
				when l.ОпСкл in (110, 111, 128, 129, 61)  then 0 end as varchar(10))
				,
		'vshipping_date' = CONVERT ( date , l.ОпДатаРасч , 104 ), -- cast(l.ОпДатаРасч as date),
		'vdiscont' = null,
		'vrem' = cast(l.Основание as varchar(1024)),
		'nid' = null,
		'rtp' = null,
		'vdist_doc_number' =  cast( l.ОпНакл as varchar(30)),
		'did' =  cast(l.ОпНаклКод as varchar(16)),
		'vdist_client_id' = cast( case when l.ОпТип != 3 then coalesce(convert(varchar,cld.КлнКод) + '.' + convert(varchar,ka.КодАдресаДоставки), convert(varchar,cld.КлнКод) + '.0') else '0' end as varchar(16)),
		'vdistr_payer' = convert(varchar(16), cld.КлнКод),
		'rdid' = null,  --convert(varchar(16),zak.ЗкзНом)
		'fdel' = convert(varchar(16),0),
        'rdoc' = null
		
	from dbo.LIST_SKL as l
				left join dbo.KAT_KLN kl on l.ОпКлн=kl.КлнКод
				left join dbo.CLN_DKL cld on cld.КлнКод = kl.КлнКод 
				left join dbo.KLN_ADK ka on ka.КодАдресаДоставки = l.КодАдрДоставки
				INNER JOIN dbo.zkz_nkl AS znnk ON l.ОпНакл = znnk.Накл
                left JOIN dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод  --18/06/2015 сопоставлние закза не всегда проходит 
	where	cast(L.ОпДатаРасч as date) BETWEEN @startDate and @endDate 
			and l.ОпНаклКод =@did
			and l.ОпНаклКод in (select b.ОпНаклКод 
								from (select l.ОпНаклКод	
											,'type_oper' = case 
															when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
															then 0
															when l.ОпВозврат=0 and l.ОпТип=1 and l.ОпКлнТип=2 --приход от поставщика
															then 1
															when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
															then 2
															when l.ОпТип=3                                    --списание
															then 3
															when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
															then 4
															when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
															then 5
															when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
															then 6
															else ''	end
									from LIST_SKL as l
									inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
              						INNER JOIN dbo.KAT_TVR kt ON H.ОпКодТов=Kt.ТовКод
              						inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
									where cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
										and Kt.ТовГрп in (311) 
										and  l.ОпКлн not in (19358,19359,19360) --исключен клиент Найдено-потеряно 25/12/12
										and l.ОпКлнТип!=4 --исключаю движение м/у внутренними складами пп/рп 26/12/12
										and l.ОпСкл in (110, 111, 128, 129, 65, 113, 102, 103, 116, 127, 115, 61) ) as b
								WHERE b.type_oper in (0 ) -- нужны только отгрузки , 1, 2, 4)
								group by b.ОпНаклКод)
	else
		select  distinct
		'guid' = '',
		'rdoc_type' = cast(case when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
							then 0
						   when l.ОпВозврат=0 and l.ОпТип=1 and l.ОпКлнТип=2 --приход от поставщика
							then 1
						   when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
							then 2
		                   when l.ОпТип=3                                    --списание
							then 3
						   when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
							then 4
						   when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
							then 5
						   when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
							then 6
						   else '' end  as varchar(5)),
		'vdate' =  CONVERT ( varchar(20) , l.ОпДатаРасч , 104 ) ,
		'vdatecreated' =  CONVERT ( varchar(30) , l.ОпДатаРасч , 104 ),
		'rscl' =-- l.НашаФирма 
		        cast(case 
				when l.ОпСкл in (65, 113, 115) then 1
				when l.ОпСкл in (102, 103, 116, 127) then 2
				when l.ОпСкл in (110, 111, 128, 129, 61)  then 0 end as varchar(10))
				,
		'vshipping_date' = CONVERT ( date , l.ОпДатаРасч , 104 ), -- cast(l.ОпДатаРасч as date),
		'vdiscont' = null,
		'vrem' = cast(l.Основание as varchar(1024)),
		'nid' = null,
		'rtp' = null,
		'vdist_doc_number' =  cast( l.ОпНакл as varchar(30)),
		'did' =  cast(l.ОпНаклКод as varchar(16)),
		'vdist_client_id' = cast( case when l.ОпТип != 3 then coalesce(convert(varchar,cld.КлнКод) + '.' + convert(varchar,ka.КодАдресаДоставки), convert(varchar,cld.КлнКод) + '.0') else '0' end as varchar(16)),
		'vdistr_payer' = convert(varchar(16), cld.КлнКод),
		'rdid' = null,  --convert(varchar(16),zak.ЗкзНом)
		'fdel' = convert(varchar(16),0),
        'rdoc' = null
		
	from dbo.LIST_SKL as l
				left join dbo.KAT_KLN kl on l.ОпКлн=kl.КлнКод
				left join dbo.CLN_DKL cld on cld.КлнКод = kl.КлнКод 
				left join dbo.KLN_ADK ka on ka.КодАдресаДоставки = l.КодАдрДоставки
				INNER JOIN dbo.zkz_nkl AS znnk ON l.ОпНакл = znnk.Накл
                left JOIN dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод  --18/06/2015 сопоставлние закза не всегда проходит 
	where	cast(L.ОпДатаРасч as date) BETWEEN @startDate and @endDate 
			--and l.ОпНаклКод =@did
			and l.ОпНаклКод in (select b.ОпНаклКод 
								from (select l.ОпНаклКод	
											,'type_oper' = case 
															when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
															then 0
															when l.ОпВозврат=0 and l.ОпТип=1 and l.ОпКлнТип=2 --приход от поставщика
															then 1
															when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
															then 2
															when l.ОпТип=3                                    --списание
															then 3
															when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
															then 4
															when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
															then 5
															when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
															then 6
															else ''	end
									from LIST_SKL as l
									inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
              						INNER JOIN dbo.KAT_TVR kt ON H.ОпКодТов=Kt.ТовКод
              						inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
									where cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
										and Kt.ТовГрп in (311) 
										and  l.ОпКлн not in (19358,19359,19360) --исключен клиент Найдено-потеряно 25/12/12
										and l.ОпКлнТип!=4 --исключаю движение м/у внутренними складами пп/рп 26/12/12
										and l.ОпСкл in (110, 111, 128, 129, 65, 113, 102, 103, 116, 127, 115, 61) ) as b
								WHERE b.type_oper in (0 ) -- нужны только отгрузки , 1, 2, 4)
								group by b.ОпНаклКод)
								
	
	--order by L.ОпНаклКод asc
END
END
GO
/****** Object:  StoredProcedure [dbo].[MT_SET_DOC_DEL2]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Холмогорова А.А.
-- Create date: 20-05-2015
-- Description:	Неактуальные накладные
-- =============================================
CREATE PROCEDURE [dbo].[MT_SET_DOC_DEL2]
	-- Add the parameters for the stored procedure here
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT distinct 'bdate' = null, 'edate' = null from list_skl
END
GO
/****** Object:  View [wms].[NONPLANNED]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create  view [wms].[NONPLANNED]
as
SELECT [INVOICENUMBER]
      ,[INVOICETYPE]
      ,[INVOICESKL]
      ,[SKU]
      ,[need_qty]
      ,[NonPlanned]      
  FROM [PR_Euras].[wms].[HIST_SKL]
  where [Status] = '+'
GO
/****** Object:  View [dbo].[OPT_KAT_TVR_MARS]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OPT_KAT_TVR_MARS]
AS
SELECT     ТовКод, ТовНаим, ТовГрп, ТовВид, ТовАрт, ТовЕИ, ТовУпак, ТовЦенаРСХ, НДС, ТовЦенаУчет
FROM         dbo.KAT_TVR
WHERE     (ТовГрп = 196)
GO
/****** Object:  View [dbo].[TT_Hohland]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[TT_Hohland]
AS
/*SELECT     'Дистрибьютор' AS 'Дистрибьютор', 'Код клиента ERP' AS 'Код клиента ERP', 'Тип ТТ' AS 'Тип ТТ','ОпКлн' as 'ОпКлн'
UNION ALL*/
SELECT     STR(distr_code) AS 'Дистрибьютор', Client_code AS 'Код клиента ERP', RTRIM(ISNULL(SUBSTRING(kateg, 1, 100), 'Оптовый клиент')) AS 'Тип ТТ', КлнНаим,ОпКлн
FROM         
(SELECT     2 AS distr_code, 
			CAST(t.ОпКлн AS VARCHAR(10)) + '/' + CAST(t.КодАдрДоставки AS VARCHAR(10)) + 'e' AS Client_code, tt.typeTThh AS kateg, k.КлнНаим,t.ОпКлн
        FROM          
    (SELECT DISTINCT l.ОпКлн, 
					 l.КодАдрДоставки
         FROM LIST_SKL AS l 
           INNER JOIN HIST_SKL AS h ON l.ОпНаклКод = h.ОпНаклКод 
           INNER JOIN KAT_TVR AS k ON h.ОпКодТов = k.ТовКод
          WHERE (k.ТовГрп = 226) AND (l.ОпКлнТип = 2) AND (l.ОпТип = 2) AND (l.ОпВозврат = 0) 
             OR (k.ТовГрп = 226) AND (l.ОпКлнТип = 2) AND (l.ОпТип = 1) AND (l.ОпВозврат = 1) 
             ) AS t 
            LEFT OUTER JOIN KAT_KLN AS k ON k.КлнКод = t.ОпКлн 
            LEFT OUTER JOIN KLN_ADK AS a ON a.КодАдресаДоставки = t.КодАдрДоставки 
            LEFT OUTER JOIN CLN_DKL AS C ON C.КлнКод = t.ОпКлн 
            LEFT OUTER JOIN List_kdk AS lk ON k.КлнКод = lk.КодКлн AND lk.mode = 0 AND lk.КодГрпДопХар = 3 
            LEFT OUTER JOIN Kat_kdk AS kk ON lk.КодДопХар = kk.КодДопХар   AND kk.КодГрДопХар = 3 
            LEFT OUTER JOIN Reports.dbo.typeTT AS tt ON kk.КодДопХар = tt.КодДопХар
--        WHERE      (kk.НаимДопХар IS NULL)
) AS te
UNION ALL
SELECT     STR(distr_code) AS Expr1, Client_code, RTRIM(ISNULL(SUBSTRING(kategs, 1, 100), 'Оптовый клиент')) AS Expr2, КлнНаим,ОпКлн

FROM  
 (SELECT  2 AS distr_code, 
		CAST(t_1.ОпКлн AS VARCHAR(10)) + '/' + CAST(t_1.КодАдрДоставки AS VARCHAR(10)) + 's' AS Client_code, tt.typeTThh AS kategs, k.КлнНаим,t_1.ОпКлн
    FROM 
   (SELECT DISTINCT l.ОпКлн, l.КодАдрДоставки
     FROM PR_EurasSur.dbo.LIST_SKL AS l 
     INNER JOIN PR_EurasSur.dbo.HIST_SKL AS h ON l.ОпНаклКод = h.ОпНаклКод 
     INNER JOIN PR_EurasSur.dbo.KAT_TVR AS k ON h.ОпКодТов = k.ТовКод
            WHERE (k.ТовГрп = 226) AND (l.ОпКлнТип = 2) AND (l.ОпТип = 2) AND (l.ОпВозврат = 0) 
                OR (k.ТовГрп = 226) AND (l.ОпКлнТип = 2) AND (l.ОпТип = 1) AND (l.ОпВозврат = 1) 
               ) AS t_1 
     LEFT OUTER JOIN PR_EurasSur.dbo.KAT_KLN AS k ON k.КлнКод = t_1.ОпКлн 
     LEFT OUTER JOIN PR_EurasSur.dbo.KLN_ADK AS a ON a.КодАдресаДоставки = t_1.КодАдрДоставки 
     LEFT OUTER JOIN PR_EurasSur.dbo.CLN_DKL AS C ON C.КлнКод = t_1.ОпКлн 
     LEFT OUTER JOIN PR_EurasSur.dbo.List_kdk AS lk ON k.КлнКод = lk.КодКлн  AND lk.mode = 0 AND lk.КодГрпДопХар = 5 
     LEFT OUTER JOIN PR_EurasSur.dbo.Kat_kdk AS kk ON lk.КодДопХар = kk.КодДопХар AND kk.КодГрДопХар = 5 
     LEFT OUTER JOIN Reports.dbo.typeTT AS tt ON kk.КодДопХар = tt.КодДопХар) AS ts
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4[30] 2[40] 3) )"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2[59] 3) )"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 5
   End
   Begin DiagramPane = 
      PaneHidden = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 4140
         Width = 4335
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      PaneHidden = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'TT_Hohland'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'TT_Hohland'
GO
/****** Object:  View [cube].[sharp_zkz_nkl]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [cube].[sharp_zkz_nkl]
AS
SELECT     MAX(ДокКод) AS ДокКод, Скл, ФлгОпер, Накл
FROM         dbo.zkz_nkl AS z
WHERE     (Тип = 4)
GROUP BY Скл, ФлгОпер, Накл
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "z"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'cube', @level1type=N'VIEW',@level1name=N'sharp_zkz_nkl'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'cube', @level1type=N'VIEW',@level1name=N'sharp_zkz_nkl'
GO
/****** Object:  UserDefinedFunction [dbo].[Price_Order_Ind]    Script Date: 08/10/2015 12:55:58 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE FUNCTION [dbo].[Price_Order_Ind] (@Sale_Part_Art nvarchar(255))  
RETURNS int AS  
BEGIN 
declare @ret_val int
select top 1 @ret_val=ind
from dbo.Price_List_order_Tab
where RTRIM(LTRIM(f1))= RTRIM(LTRIM(@Sale_Part_Art))
select @ret_val=isnull(@ret_val,0)
return @ret_val
END
GO
/****** Object:  UserDefinedFunction [dbo].[Send]    Script Date: 08/10/2015 12:55:59 ******/
CREATE FUNCTION [dbo].[Send](@Name [nvarchar](4000), @Password [nvarchar](4000), @ParnerILN [nvarchar](4000), @DocumentType [nvarchar](4000), @DocumentVersion [nvarchar](4000), @DocumentStandard [nvarchar](4000), @DocumentTest [nvarchar](4000), @ControlNumber [nvarchar](4000), @DocumentContent [xml], @Timeout [int])
RETURNS [nvarchar](4000) WITH EXECUTE AS CALLER
AS 
EXTERNAL NAME [EDIKorusSOAP].[UserDefinedFunctions].[Send]
GO
/****** Object:  View [dbo].[PrihCen]    Script Date: 08/10/2015 12:55:59 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[PrihCen] 
--WITH VIEW_METADATA
AS
select distinct h.ОпКодТов ,t.ТовАрт ,h.ОпЦена*(1+t.НДС/100) AS ОпЦена
FROM LIST_SKL AS l 
JOIN HIST_SKL AS h ON h.ОпНаклКод = l.ОпНаклКод 
JOIN KAT_TVR AS t ON t.ТовКод = h.ОпКодТов 
JOIN ( 
SELECT t3.ТовАрт, l3.ОпДатаРасч as MAXДатаРасч, 
MAX(l3.ОпНаклКод) As MAXНаклКод 
FROM LIST_SKL AS l3 
JOIN HIST_SKL AS h3 ON h3.ОпНаклКод = l3.ОпНаклКод 
JOIN KAT_TVR AS t3 ON t3.ТовКод = h3.ОпКодТов 
JOIN ( 
SELECT t2.ТовАрт, MAX(l2.ОпДатаРасч) as MAXДатаРасч 
FROM LIST_SKL AS l2 
JOIN HIST_SKL AS h2 ON h2.ОпНаклКод = l2.ОпНаклКод 
JOIN KAT_TVR AS t2 ON t2.ТовКод = h2.ОпКодТов 
WHERE l2.ОпТип = 1 And h2.ОпВозвр = 0 And h2.ОпТипКлн = 2 
GROUP BY t2.ТовАрт 
) s1 ON MAXДатаРасч = l3.ОпДатаРасч and t3.ТовАрт = s1.ТовАрт 
WHERE l3.ОпТип = 1 And h3.ОпВозвр = 0 And h3.ОпТипКлн = 2 
GROUP BY t3.ТовАрт,l3.ОпДатаРасч 
) s
ON s.ТовАрт = t.ТовАрт AND s.MAXДатаРасч = l.ОпДатаРасч AND s.MAXНаклКод = l.ОпНаклКод 
WHERE l.ОпТип = 1 AND h.ОпВозвр = 0 AND  h.ОпТипКлн = 2 AND t.ТовАрт like '%w%' AND h.ОпЦена>0
GO
/****** Object:  View [cube].[Dates1]    Script Date: 08/10/2015 12:55:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [cube].[Dates1] as

SELECT 
ДатыКод,
Convert(Date,[ДатыРасч]) [ДатыРасч],
YEAR([ДатыРасч]) Год
,Month([ДатыРасч]) МесяцНомер
,Day([ДатыРасч]) День
,DATENAME(MM,[ДатыРасч]) Месяц
,convert(integer,DateName(week,dateadd(dd,0,"ДатыРасч"))) НеделяНомер
,DateName(month, dateadd(dd,0,"ДатыРасч"))+' ' + convert(CHAR, DateName(week, dateadd(dd,0,"ДатыРасч"))) Неделя
,YEAR(Thursday)-(2011-YEAR([ДатыРасч])) ФинГод
,Month(Thursday) ФинМесяцНомер
,DateName(month, Thursday) ФинМесяц
,convert(integer,DateName(iso_week,Thursday)) ФинНеделяНомер
,DateName(month, Thursday)+' ' + convert(CHAR, DateName(iso_week, Thursday)) ФинНеделя
  FROM [dbo].[D_DATES]
  where YEAR([ДатыРасч]) <> 2012
UNION ALL  

SELECT 
ДатыКод,
Convert(Date,[ДатыРасч]) [ДатыРасч],
YEAR([ДатыРасч]) Год
,Month([ДатыРасч]) МесяцНомер
,Day([ДатыРасч]) День
,DATENAME(MM,[ДатыРасч]) Месяц
,convert(integer,DateName(week,dateadd(dd,0,"ДатыРасч"))) НеделяНомер
,DateName(month, dateadd(dd,0,"ДатыРасч"))+' ' + convert(CHAR, DateName(week, dateadd(dd,0,"ДатыРасч"))) Неделя
,YEAR([ДатыРасч]) ФинГод
,	
ФинМесяцНомер
,ФинМесяц
,ФинНеделяНомер 
,ФинМесяц+' ' + convert(CHAR, ФинНеделяНомер) ФинНеделя
FROM

(SELECT 
ДатыКод,
Convert(Date,[ДатыРасч]) [ДатыРасч],
YEAR([ДатыРасч]) Год
,Month([ДатыРасч]) МесяцНомер
,Day([ДатыРасч]) День
,DATENAME(MM,[ДатыРасч]) Месяц
,convert(integer,DateName(week,dateadd(dd,0,"ДатыРасч"))) НеделяНомер
,DateName(month, dateadd(dd,0,"ДатыРасч"))+' ' + convert(CHAR, DateName(week, dateadd(dd,0,"ДатыРасч"))) Неделя
,YEAR([ДатыРасч]) ФинГод
,(datediff(dd,'20120102',[ДатыРасч])/7)+1
 ФинНеделяНомер
,
CASE 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (1,2,3,4) THEN 1
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (5,6,7,8) THEN 2
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (9,10,11,12,13) THEN 3
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (14,15,16,17) THEN 4
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (18,19,20,21) THEN 5
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (22,23,24,25,26) THEN 6
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (27,28,29,30) THEN 7
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (31,32,33,34) THEN 8
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (35,36,37,38,39) THEN 9
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (40,41,42,43) THEN 10
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (44,45,46,47) THEN 11
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (48,49,50,51,52,53) THEN 12
		--WHEN 5..8 THEN 2
		ELSE 0
END		
ФинМесяцНомер
,
CASE 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (1,2,3,4) THEN DateName(month, dateadd(MM,0,'20000101')) 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (5,6,7,8) THEN DateName(month, dateadd(MM,1,'20000101')) 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (9,10,11,12,13) THEN DateName(month, dateadd(MM,2,'20000101')) 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (14,15,16,17) THEN DateName(month, dateadd(MM,3,'20000101')) 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (18,19,20,21) THEN DateName(month, dateadd(MM,4,'20000101')) 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (22,23,24,25,26) THEN DateName(month, dateadd(MM,5,'20000101')) 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (27,28,29,30) THEN DateName(month, dateadd(MM,6,'20000101')) 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (31,32,33,34) THEN DateName(month, dateadd(MM,7,'20000101')) 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (35,36,37,38,39) THEN DateName(month, dateadd(MM,8,'20000101')) 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (40,41,42,43) THEN DateName(month, dateadd(MM,9,'20000101')) 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (44,45,46,47) THEN DateName(month, dateadd(MM,10,'20000101')) 
		WHEN (datediff(dd,'20120102',[ДатыРасч])/7)+1 in (48,49,50,51,52,53) THEN DateName(month, dateadd(MM,11,'20000101')) 
		--WHEN 5..8 THEN 2
		ELSE null
END		
ФинМесяц
  FROM [dbo].[D_DATES]
  where YEAR([ДатыРасч]) = 2012) tt
  --where Month(Thursday) in (12,1)
  --order by [ДатыРасч]
GO
/****** Object:  View [dbo].[Vw_Ehrmann_adress]    Script Date: 08/10/2015 12:55:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_Ehrmann_adress]
AS
SELECT     MIN(dbo.Kat_kdk.НаимДопХар) AS НаимДопХар, dbo.List_kdk.КодКлн, MIN(dbo.List_kdk.КодДопХар) AS КодДопХар, 
                      dbo.List_kdk.КодГрпДопХар
FROM         dbo.Kat_kdk INNER JOIN
                      dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар INNER JOIN
                      dbo.Tbl_Kdk_code ON dbo.List_kdk.КодГрпДопХар = dbo.Tbl_Kdk_code.Kdk_ID
WHERE     (dbo.Tbl_Kdk_code.Description = 'Адрес магазина 1')
GROUP BY dbo.List_kdk.КодКлн, dbo.List_kdk.КодГрпДопХар
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Kat_kdk"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "List_kdk"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 99
               Right = 383
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Tbl_Kdk_code"
            Begin Extent = 
               Top = 6
               Left = 421
               Bottom = 84
               Right = 572
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 5
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1710
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_adress'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_adress'
GO
/****** Object:  View [dbo].[VIEW9]    Script Date: 08/10/2015 12:55:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW9]
AS
SELECT     RTRIM(CAST(dbo.D_ORG.КлнКод AS char)) + '/0' AS КодКлн_КодАдрДоставки, dbo.D_ORG.КлнКод, dbo.D_ORG.КлнНаим, 
                      dbo.D_ORG.ГрпСотрНаим, dbo.D_ORG.КлнПользКод, dbo.D_ORG.СотрФамилияИмя, dbo.D_ORG.СотрОтчество, dbo.D_ORG.КодГлКлн, 
                      dbo.D_ORG.ГлКлнНаим, dbo.D_ORG.ГрпКлнНаим, dbo.D_ORG.ГородНаим, RTRIM(LTRIM(ISNULL(dbo.CLN_DKL.КлнГрузАдрес, 
                      dbo.CLN_DKL.КлнАдрес))) AS Expr1, NULL AS Expr2, dbo.D_ORG.ТипКлиента
FROM         dbo.D_ORG LEFT OUTER JOIN
                      dbo.CLN_DKL ON dbo.D_ORG.КлнКод = dbo.CLN_DKL.КлнКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[37] 4[25] 2[21] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "D_ORG"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 390
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 6
               Left = 428
               Bottom = 156
               Right = 581
            End
            DisplayFlags = 280
            TopColumn = 1
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 15
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 6210
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW9'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW9'
GO
/****** Object:  View [dbo].[VIEW8]    Script Date: 08/10/2015 12:55:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW8]
AS
SELECT     TOP 100 PERCENT dbo.wremEhrmann.[Код дистрибутора], dbo.wremEhrmann.Дата, dbo.wremEhrmann.[Код товара], dbo.wremEhrmann.Артикул, 
                      ISNULL(dbo.EhrmannKLNnew.Название, dbo.wremEhrmann.КлнНаим) AS Название, dbo.wremEhrmann.КлнНаим AS Клиент, 
                      dbo.EhrmannKLNnew.[Канал сбыта], dbo.EhrmannKLNnew.[Формат магазина], ISNULL(ISNULL(dbo.EhrmannKLNnew.Город, 
                      dbo.KAT_TWN.ГородНаим), dbo.D_ORG.ГородНаим) AS Город, ISNULL(ISNULL(dbo.EhrmannKLNnew.Адрес, dbo.KLN_ADK.АдресДоставки), 
                      ISNULL(dbo.CLN_DKL.КлнГрузАдрес, dbo.CLN_DKL.КлнАдрес)) AS Адрес, dbo.wremEhrmann.[Продажи (штуки)], '' AS [Продажи (короба)], 
                      '' AS [Продажи (поддоны)], dbo.wremEhrmann.[Продажи (рубли с НДС)]
FROM         dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода RIGHT OUTER JOIN
                      dbo.wremEhrmann INNER JOIN
                      dbo.D_ORG ON dbo.wremEhrmann.КлнКод = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.CLN_DKL ON dbo.wremEhrmann.КлнКод = dbo.CLN_DKL.КлнКод ON 
                      dbo.KLN_ADK.КодАдресаДоставки = dbo.wremEhrmann.КодАдрДоставки LEFT OUTER JOIN
                      dbo.EhrmannKLNnew ON dbo.wremEhrmann.КодКлн_КодАдрДоставки = dbo.EhrmannKLNnew.КодКлн_КодАдрДоставки
WHERE     (dbo.D_ORG.ГородНаим LIKE '%Екатеринбург%') OR
                      (ISNULL(dbo.EhrmannKLNnew.Название, dbo.wremEhrmann.КлнНаим) LIKE '%МЕТРО%')
ORDER BY dbo.wremEhrmann.Дата
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "wremEhrmann"
            Begin Extent = 
               Top = 12
               Left = 283
               Bottom = 74
               Right = 497
            End
            DisplayFlags = 280
            TopColumn = 7
         End
         Begin Table = "D_ORG"
            Begin Extent = 
               Top = 0
               Left = 557
               Bottom = 108
               Right = 725
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 122
               Left = 574
               Bottom = 230
               Right = 727
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 93
               Left = 60
               Bottom = 166
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 1
         End
         Begin Table = "EhrmannKLNnew"
            Begin Extent = 
               Top = 6
               Left = 64
               Bottom = 76
               Right = 231
            End
            DisplayFlags = 280
            TopColumn = 6
         End
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 81
               Left = 307
               Bottom = 159
               Right = 458
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 15
         Width = 284
         Width = 1440
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW8'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 5505
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW8'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW8'
GO
/****** Object:  View [dbo].[VIEW7]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW7]
AS
SELECT     dbo.LIST_SKL.ОпНакл, dbo.LIST_SKL.ОпСкл, dbo.LIST_SKL.ОпТип, dbo.LIST_SKL.ОпКлнТип, dbo.KAT_KLN.КлнНаим, dbo.LIST_SKL.ОпКлн
FROM         dbo.[111_HIST_SKL] INNER JOIN
                      dbo.LIST_SKL ON dbo.[111_HIST_SKL].ОпКод = dbo.LIST_SKL.ОпНакл INNER JOIN
                      dbo.KAT_KLN ON dbo.LIST_SKL.ОпКлн = dbo.KAT_KLN.КлнКод
GROUP BY dbo.LIST_SKL.ОпНакл, dbo.LIST_SKL.ОпСкл, dbo.LIST_SKL.ОпТип, dbo.LIST_SKL.ОпКлн, dbo.KAT_KLN.КлнНаим, dbo.LIST_SKL.ОпКлнТип
HAVING      (dbo.LIST_SKL.ОпКлнТип = 2)
GO
/****** Object:  View [dbo].[VIEW6]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW6]
AS
SELECT     dbo.KAT_KLN.КлнКод, dbo.KAT_KLN.КлнНаим, dbo.KLN_ADK.КодАдресаДоставки, dbo.KLN_ADK.АдресДоставки, 
                      dbo.KAT_KLN.КлнКод * 10000 + dbo.KLN_ADK.КодАдресаДоставки AS [Клн_Адрес]
FROM         dbo.KLN_ADK RIGHT OUTER JOIN
                      dbo.KAT_KLN ON dbo.KLN_ADK.КодКлиента = dbo.KAT_KLN.КлнКод
GO
/****** Object:  View [dbo].[VIEW5]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW5]
AS
SELECT     dbo.list_skl1.Col001 AS НомерНакладной, dbo.list_skl1.Col006 AS КодКлиента, dbo.KAT_KLN.КлнНаим AS Клиент, 
                      dbo.kln_adk1.Col002 AS КодАдреса, dbo.kln_adk1.Col001 AS Адрес, dbo.list_skl1.Col043, dbo.kln_adk1.Col003
FROM         dbo.list_skl1 LEFT OUTER JOIN
                      dbo.kln_adk1 ON dbo.list_skl1.Col043 = dbo.kln_adk1.Col002 LEFT OUTER JOIN
                      dbo.KAT_KLN ON dbo.list_skl1.Col006 = dbo.KAT_KLN.КлнКод
WHERE     (NOT (dbo.kln_adk1.Col001 IS NULL))
GO
/****** Object:  View [dbo].[VIEW3]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW3]
AS
SELECT     dbo.F_OPER.ОпКодТов, dbo.D_NAKL.НаклКлн AS ОпКодКлн, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклДата AS ОпДата, 
                      dbo.D_NAKL.НаклДатаРасч AS ОпДатаРасч, dbo.F_OPER.ОпТип, SUM(dbo.F_OPER.ОпКол) AS СумКол, 
                      SUM(dbo.F_OPER.ОпКол * (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2)) AS КолПрих, 
                      SUM(dbo.F_OPER.ОпКол * (1 - (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2))) AS КолРасх, SUM(dbo.F_OPER.ОпСтоим) AS СумСтоим, 
                      SUM(dbo.F_OPER.ОпСтоим * (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2)) AS СтоимПрих, 
                      SUM(dbo.F_OPER.ОпСтоим * (1 - (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2))) AS СтоимРасх
FROM         dbo.F_OPER INNER JOIN
                      dbo.D_NAKL ON dbo.F_OPER.ОпНаклКод = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_OPER.ОпВозвр = 1) AND (dbo.D_NAKL.НаклАВЗ = 0)
GROUP BY dbo.F_OPER.ОпКодТов, dbo.D_NAKL.НаклКлн, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклДата, dbo.D_NAKL.НаклДатаРасч, dbo.F_OPER.ОпТип
GO
/****** Object:  View [dbo].[Vw_KPK_PRICE_SBR_CIT]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_PRICE_SBR_CIT]
AS
SELECT     COUNT(*) AS Cit, Код
FROM         dbo.Tbl_KPK_SBR_Price
GROUP BY Код
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Tbl_KPK_SBR_Price"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 191
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 3
         Width = 284
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_PRICE_SBR_CIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_PRICE_SBR_CIT'
GO
/****** Object:  View [dbo].[Vw_Ehrmann_klient]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_Ehrmann_klient]
AS
SELECT     MIN(dbo.Kat_kdk.НаимДопХар) AS НаимДопХар, dbo.List_kdk.КодКлн, MIN(dbo.List_kdk.КодДопХар) AS КодДопХар, 
                      dbo.List_kdk.КодГрпДопХар
FROM         dbo.Kat_kdk INNER JOIN
                      dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар INNER JOIN
                      dbo.Tbl_Kdk_code ON dbo.List_kdk.КодГрпДопХар = dbo.Tbl_Kdk_code.Kdk_ID
WHERE     (dbo.Tbl_Kdk_code.Description = 'Наименование клиента 1')
GROUP BY dbo.List_kdk.КодКлн, dbo.List_kdk.КодГрпДопХар
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Kat_kdk"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "List_kdk"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 99
               Right = 383
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Tbl_Kdk_code"
            Begin Extent = 
               Top = 6
               Left = 421
               Bottom = 84
               Right = 572
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 5
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_klient'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_klient'
GO
/****** Object:  View [dbo].[Vw_Ehrmann_kanal]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_Ehrmann_kanal]
AS
SELECT     MIN(dbo.Kat_kdk.НаимДопХар) AS НаимДопХар, dbo.List_kdk.КодКлн AS КодКлн, MIN(dbo.List_kdk.КодДопХар) AS КодДопХар, 
                      dbo.List_kdk.КодГрпДопХар AS КодГрпДопХар
FROM         dbo.Kat_kdk INNER JOIN
                      dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар INNER JOIN
                      dbo.Tbl_Kdk_code ON dbo.List_kdk.КодГрпДопХар = dbo.Tbl_Kdk_code.Kdk_ID
WHERE     (dbo.Tbl_Kdk_code.Description = 'Тип клиента (канал сбыта)')
GROUP BY dbo.List_kdk.КодКлн, dbo.List_kdk.КодГрпДопХар
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Kat_kdk"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "List_kdk"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 99
               Right = 383
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Tbl_Kdk_code"
            Begin Extent = 
               Top = 5
               Left = 465
               Bottom = 83
               Right = 616
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 5
         Width = 284
         Width = 3150
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1215
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_kanal'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_kanal'
GO
/****** Object:  View [dbo].[Vw_Ehrmann_gorod]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_Ehrmann_gorod]
AS
SELECT     MIN(dbo.Kat_kdk.НаимДопХар) AS НаимДопХар, dbo.List_kdk.КодКлн, MIN(dbo.List_kdk.КодДопХар) AS КодДопХар, 
                      dbo.List_kdk.КодГрпДопХар
FROM         dbo.Kat_kdk INNER JOIN
                      dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар INNER JOIN
                      dbo.Tbl_Kdk_code ON dbo.List_kdk.КодГрпДопХар = dbo.Tbl_Kdk_code.Kdk_ID
WHERE     (dbo.Tbl_Kdk_code.Description = 'Город магазина 1')
GROUP BY dbo.List_kdk.КодКлн, dbo.List_kdk.КодГрпДопХар
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Kat_kdk"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "List_kdk"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 99
               Right = 383
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Tbl_Kdk_code"
            Begin Extent = 
               Top = 6
               Left = 421
               Bottom = 84
               Right = 572
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 5
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_gorod'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_gorod'
GO
/****** Object:  View [dbo].[Vw_Ehrmann_format]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_Ehrmann_format]
AS
SELECT     dbo.Kat_kdk.НаимДопХар, dbo.List_kdk.КодКлн
FROM         dbo.Kat_kdk INNER JOIN
                      dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар INNER JOIN
                      dbo.Tbl_Kdk_code ON dbo.List_kdk.КодГрпДопХар = dbo.Tbl_Kdk_code.Kdk_ID
WHERE     (dbo.Tbl_Kdk_code.Description = 'Тип торговой точки (формат)')
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Kat_kdk"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "List_kdk"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 99
               Right = 383
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Tbl_Kdk_code"
            Begin Extent = 
               Top = 6
               Left = 421
               Bottom = 84
               Right = 572
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 3
         Width = 284
         Width = 12720
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_format'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_format'
GO
/****** Object:  View [cube].[sharp_hsl]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [cube].[sharp_hsl]
AS
SELECT     INVOICENUMBER, INVOICETYPE, INVOICESKL, SKU, MIN(PercentLife) AS PercentLife
FROM         wms.HIST_SKL_SKULife
WHERE     (NOT (INVOICENUMBER IS NULL)) AND (NOT (INVOICETYPE IS NULL)) AND (NOT (INVOICESKL IS NULL)) AND (NOT (SKU IS NULL))
GROUP BY INVOICENUMBER, INVOICETYPE, INVOICESKL, SKU
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "HIST_SKL_SKULife (wms)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 201
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'cube', @level1type=N'VIEW',@level1name=N'sharp_hsl'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'cube', @level1type=N'VIEW',@level1name=N'sharp_hsl'
GO
/****** Object:  StoredProcedure [dbo].[Set_ABC_to_Tvr]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--E.Fedyakov
--процедура присваивает товару категорию ABC внутри группы товаров

CREATE PROCEDURE [dbo].[Set_ABC_to_Tvr]
AS

DECLARE @Sales MONEY;


select * from [KAT_TVR] where 
(БФ & 1 ) = 0 -- архивный
and	(БФ & 262144) = 0 --запрет отгрузки

SET @Sales = 
(
			SELECT SUM(
					CASE 
						WHEN (h.ОпТипКлн = 2) AND (h.ОпВозвр = 0) AND (h.ОпТип = 2) 
								THEN h.ОпЦена * h.ОпКол 
						WHEN (h.ОпТипКлн = 2) AND (h.ОпВозвр = 1) AND (h.ОпТип = 1) 
								THEN - h.ОпЦена * h.ОпКол 
						ELSE 0 
					END
					) FROM dbo.HIST_SKL h
					INNER JOIN dbo.list_skl s ON s.ОпНаклКод = h.ОпНаклКод
					INNER JOIN [dbo].[KAT_TVR] t ON h.ОпКодТов = t.ТовКод WHERE t.ТовАрт LIKE '%w%'	AND (БФ & 1 ) = 0 -- архивный
																				and	(БФ & 262144) = 0 --запрет отгрузки
																				and s.ОпДатаРасч > DateADD(mm,-1,GetDate())
);

WITH _T
AS
(
SELECT [ТовКод]      
      ,[ТовГрп] 
      ,ТовВид     
      ,
      (SELECT SUM(
					CASE 
						WHEN (h.ОпТипКлн = 2) AND (h.ОпВозвр = 0) AND (h.ОпТип = 2) 
								THEN h.ОпЦена * h.ОпКол 
						WHEN (h.ОпТипКлн = 2) AND (h.ОпВозвр = 1) AND (h.ОпТип = 1) 
								THEN - h.ОпЦена * h.ОпКол 
						ELSE 0 
					END
					) FROM dbo.HIST_SKL h INNER JOIN dbo.list_skl s ON s.ОпНаклКод = h.ОпНаклКод WHERE h.ОпКодТов = t.ТовКод AND s.ОпДатаРасч > DateADD(mm,-1,GetDate())
	  ) ПродажиТов
	  
  FROM [dbo].[KAT_TVR] t WHERE t.ТовАрт LIKE '%w%' AND (БФ & 1 ) = 0 -- архивный
																				and	(БФ & 262144) = 0 --запрет отгрузки
),
_TT_
AS
(
		SELECT 
			[ТовКод]      
      ,[ТовГрп]  
      ,ТовВид 
      ,ПродажиТов
      ,SUM(ПродажиТов) OVER (PARTITION BY ТовВид) ПродажиВид
      ,SUM(ПродажиТов) OVER (PARTITION BY ТовГрп) ПродажиГрп
      
      FROM _t
),
_TT
AS
(
		SELECT 
			[ТовКод]      
      ,[ТовГрп]  
      ,ТовВид 
      ,ПродажиТов
      ,CASE WHEN ПродажиВид = 0 THEN NULL ELSE ПродажиВид END ПродажиВид
      ,CASE WHEN ПродажиГрп = 0 THEN NULL ELSE ПродажиГрп END ПродажиГрп
      
      FROM _tt_
)

SELECT * INTO #t FROM _tt;
CREATE INDEX _ix ON #t ([ТовГрп],ПродажиТов) ;
CREATE  INDEX _ix3 ON #t (ТовВид,ПродажиТов) ;
CREATE INDEX _ix2 ON #t (ПродажиТов);
TRUNCATE TABLE 	dbo.KAT_TVR_ABC	;

WITH _TTT
AS
(
	SELECT 
		[ТовКод]      
      ,[ТовГрп]
      ,ТовВид
      ,ПродажиТов
      , ПродажиВид      
      , ПродажиГрп
      , 
      (
		SELECT SUM(ПродажиТов) FROM #t  t1 WHERE t1.ТовВид = t.ТовВид AND t1.ПродажиТов >= t.ПродажиТов
      )/ПродажиВид НарастДоляВид      
      , 
      (
		SELECT SUM(ПродажиТов) FROM #t  t1 WHERE t1.ТовГрп = t.ТовГрп AND t1.ПродажиТов >= t.ПродажиТов
      )/ПродажиГрп НарастДоляГрп
      , 
      (
		SELECT SUM(ПродажиТов) FROM #t  t1 WHERE t1.ПродажиТов >= t.ПродажиТов
      )/@Sales НарастДоля
      FROM #t t
	
)
, _TTTt
AS
(
	SELECT 
		[ТовКод]  
      , CASE
			WHEN НарастДоляВид <= 0.8 OR (ПродажиТов/ПродажиВид > 0.8) THEN 'A'
			WHEN НарастДоляВид > 0.8 AND НарастДоляВид <= 0.95 THEN 'B'
			WHEN НарастДоляВид > 0.95 THEN 'C'
		END ВидABC
      , CASE
			WHEN НарастДоляГрп <= 0.8 OR (ПродажиТов/ПродажиГрп > 0.8) THEN 'A'
			WHEN НарастДоляГрп > 0.8 AND НарастДоляГрп <= 0.95 THEN 'B'
			WHEN НарастДоляГрп > 0.95 THEN 'C'
		END ГрпABC
	  ,CASE
			WHEN НарастДоля <= 0.8 OR (ПродажиТов/@Sales > 0.8) THEN 'A'
			WHEN НарастДоля > 0.8 AND НарастДоля <= 0.95 THEN 'B'
			WHEN НарастДоля > 0.95 THEN 'C'
		END ABC
			
      FROM _ttt t	
) 


		

INSERT INTO dbo.KAT_TVR_ABC(ТовКод,ABC,ГрпABC,ВидABC)
SELECT [ТовКод],ABC,ГрпABC,ВидABC FROM _tttt;

DROP TABLE #t;
GO
/****** Object:  View [dbo].[VIEW23]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW23]
AS
SELECT     TOP 100 PERCENT dbo.KAT_TVR.ТовКод, dbo.KAT_TVR.ТовАрт, dbo.KAT_TVR.ТовНаим, dbo.TVR_DEF.ТовВесБрутто
FROM         dbo.KAT_TVR INNER JOIN
                      dbo.TVR_DEF ON dbo.KAT_TVR.ТовКод = dbo.TVR_DEF.ТовКод
WHERE     (dbo.TVR_DEF.ТовВесБрутто > 0)
ORDER BY dbo.KAT_TVR.ТовАрт
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 170
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "TVR_DEF"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 140
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 5
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW23'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW23'
GO
/****** Object:  View [dbo].[Grouped_SKL]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--У накладных и возвратных накладных один номер счета фактуры
--Это вспомогательное представление для выборки возвратных накладных
--Евгений Федяков 26.07.2011
CREATE VIEW [dbo].[Grouped_SKL]
AS
select sf.НомерСФ,sf.АвтокодСФ АвтокодСФ1, sf1.АвтокодСФ АвтокодСФ2
from dbo.list_sf sf
inner join dbo.list_sf sf1 on sf.НомерСФ = sf1.НомерСФ
GO
/****** Object:  UserDefinedFunction [dbo].[GetUpkWare]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[GetUpkWare]
(
	@wareid int,
	@level int
	
)
RETURNS nvarchar(255)
AS
BEGIN
	DECLARE @ResultVar int

SELECT @ResultVar =
(
	select x.УпакКод
	from
	(
		select 
			u.*,
			ROW_NUMBER() over (order by u.УпакКоэф) rnk
		from PR_Euras.dbo.KAT_UPK u
		cross APPLY
		(
			select 
				t.[ТовУпак]
				,d.ДопУпак1
				,d.ДопУпак2
				,d.ДопУпак3
				,d.ДопУпак4
			from KAT_TVR t
				left join PR_Euras.dbo.TVR_DEF d on d.ТовКод = t.ТовКод
			where t.ТовКод = @wareid
		) w
		where 
			(w.ТовУпак = u.УпакКод or w.ДопУпак1 = u.УпакКод or w.ДопУпак2 = u.УпакКод or w.ДопУпак3 = u.УпакКод or w.ДопУпак4 = u.УпакКод)
			and u.УпакКод != 0
	) x
	where x.rnk = @level
)

RETURN cast(@ResultVar as nvarchar(255))

END
GO
/****** Object:  StoredProcedure [dbo].[GetSKLTest]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ЕФ 08/04/2011
-- Процедура расчитывает долги по накладным
--TRUNCATE TABLE SKL_with_debt




CREATE PROCEDURE [dbo].[GetSKLTest] 	@КлнКод int = NULL
AS
	--Расчет стоимости накладных и услуг которые отгружались клиенту
	select [ОпНаклКод],ОпКлн,НашаФирма,ОпТип 
		, ROW_NUMBER() OVER (ORDER BY ОпДатаРасч,ОпНакл) ID
		,(CASE WHEN ОпТип = 2 THEN 1 WHEN ОпТип = 1 THEN -1 ELSE 0 END)*
			(
				ISNULL(
						(
						select SUM(ОпЦена * ОпКол)
						FROM hist_skl 
						where l.ОпНаклКод = hist_skl.ОпНаклКод							
						)
					  ,0)
				+
				ISNULL(
						(
						select SUM(УслЦена * УслКол)
						FROM hist_usl 
						where
							l.ОпНакл = hist_usl.УслНомер
							and l.ОпСкл = hist_usl.УслСкл
							and l.ОпТип = hist_usl.УслОпер
						   --l.ОпНаклКод = HIST_USL.НаклКод						
						)
			
				,0)
			) Сумма
		INTO #t
		from list_skl l
	WHERE ОпКлн = @КлнКод AND ОпКлнТип=2 and left(right(dbo.dec2bit(ОпБит), 16), 1)='0'

SELECT * FROM #t

CREATE UNIQUE CLUSTERED  INDEX _ix ON #t(ОпКлн,НашаФирма,ID);


WITH DO
AS
(
SELECT * , 			
			isnull(СУММА,0)+ 
			(isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн and l1.НашаФирма = l2.НашаФирма  ),0)  --
			----Расчет платежей клиента
			+isnull((select 
				SUM((CASE WHEN (ПлатНапр > 2) THEN 1 WHEN (ПлатНапр < 3) THEN -1 ELSE 0 END)*ПлатСумма) 				
			from dkm_base b 
			--inner join DKM_BASI bi on b.ПлатКлнКод = bi.[ДОКодКлн] and b.ПлатКод = bi.[ДОКодПлат]			
			WHERE b.ПлатКлнКод= @КлнКод and b.ПлатТип < 40 and b.ПлатКлнСотр = 1 AND (l1.ОпКлн = b.ПлатКлнКод) 
			AND EXISTS(SELECT * FROM DKM_BASI bi WHERE l1.НашаФирма = bi.НашаФирма AND b.ПлатКлнКод = bi.[ДОКодКлн] and b.ПлатКод = bi.[ДОКодПлат]	)
			),0)
			- isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн and l1.НашаФирма = l2.НашаФирма AND l2.ОпТип = 2 AND l1.ID<=l2.ID),0))					
			_НаклДЗ			
		
		  
		

FROM #t as l1
WHERE ОпТип = 2

)



SELECT do.[ОпНаклКод]
           ,do.[Сумма]                      
,CASE 
	WHEN		
			do._НаклДЗ < do.Сумма THEN _НаклДЗ
	WHEN	
			do._НаклДЗ >= do.Сумма THEN Сумма
	ELSE 0
 END
	НаклДЗ
	, ОпДатаРасч
	, ОпНакл	
 FROM DO 
 INNER JOIN dbo.LIST_SKL ls ON do.ОпНаклКод = ls.ОпНаклКод
 --WHERE _НаклДЗ > 1




Drop table #t


--select * from KAT_KLN where КлнНаим like '%трио%'



--select * from [skl_with_debt]
GO
/****** Object:  StoredProcedure [dbo].[GetSKLAllFirmsDebt_drop_bonus]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ЕФ 08/04/2011
-- Процедура расчитывает долги по накладным, все платежи и долги общей кучей по всем нашим фирмам
--TRUNCATE TABLE SKL_with_debt




CREATE PROCEDURE [dbo].[GetSKLAllFirmsDebt_drop_bonus]
AS
	--Расчет стоимости накладных и услуг которые отгружались клиенту
	select [ОпНаклКод],ОпКлн,ОпТип 
		, ROW_NUMBER() OVER (ORDER BY ОпДатаРасч,ОпНакл) ID
		,(CASE WHEN ОпТип = 2 THEN 1 WHEN ОпТип = 1 THEN -1 ELSE 0 END)*
			(
				ISNULL(
						(
						select SUM(ОпЦена * ОпКол)
						FROM hist_skl 
						where l.ОпНаклКод = hist_skl.ОпНаклКод							
						)
					  ,0)
				+
				ISNULL(
						(
						select SUM(УслЦена * УслКол)
						FROM hist_usl 
						where
							l.ОпНакл = hist_usl.УслНомер
							and l.ОпСкл = hist_usl.УслСкл
							and l.ОпТип = hist_usl.УслОпер
						   --l.ОпНаклКод = HIST_USL.НаклКод						
						)
			
				,0)
			) Сумма
		INTO #t
		from list_skl l
	where ОпКлнТип=2 and left(right(dbo.dec2bit(ОпБит), 16), 1)='0'

CREATE UNIQUE CLUSTERED  INDEX _ix ON #t(ОпКлн,ID);

TRUNCATE TABLE dbo.[skl_with_all_firms_debt];

WITH DO
AS
(
SELECT * , 			
			isnull(СУММА,0)+ 
			(isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн),0)  --
			----Расчет платежей клиента
			+isnull((select 
				SUM((CASE WHEN (ПлатНапр > 2) THEN 1 WHEN (ПлатНапр < 3) THEN -1 ELSE 0 END)*ПлатСумма) 				
			from dkm_base b 			
			where b.ПлатТип < 40 and b.ПлатКлнСотр = 1 AND (l1.ОпКлн = b.ПлатКлнКод) 			
			),0)
			- isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн and l2.ОпТип = 2 AND l1.ID<=l2.ID),0))					
			_НаклДЗ			
		
		  
		

FROM #t as l1
WHERE ОпТип = 2

)



INSERT INTO [dbo].[skl_with_all_firms_debt]
           ([ОпНаклКод]           
           ,[Сумма]                      
           ,[НаклДЗ])

SELECT [ОпНаклКод]
           ,[Сумма]                      
,CASE 
	WHEN		
			_НаклДЗ < Сумма THEN _НаклДЗ
	WHEN	
			_НаклДЗ >= Сумма THEN Сумма
	ELSE 0
 END
	НаклДЗ
	
 FROM DO
 WHERE _НаклДЗ > 1




Drop table #t


--select * from KAT_KLN where КлнНаим like '%трио%'



--select * from [skl_with_debt]
GO
/****** Object:  StoredProcedure [dbo].[GetSKLAllFirmsDebt]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ЕФ 08/04/2011
-- Процедура расчитывает долги по накладным, все платежи и долги общей кучей по всем нашим фирмам
--TRUNCATE TABLE SKL_with_debt




CREATE PROCEDURE [dbo].[GetSKLAllFirmsDebt]
AS
	--Расчет стоимости накладных и услуг которые отгружались клиенту
	select [ОпНаклКод],ОпКлн,ОпТип 
		, ROW_NUMBER() OVER (ORDER BY ОпДатаРасч,ОпНакл) ID
		,(CASE WHEN ОпТип = 2 THEN 1 WHEN ОпТип = 1 THEN -1 ELSE 0 END)*
			(
				ISNULL(
						(
						select SUM(ОпЦена * ОпКол)
						FROM hist_skl 
						where l.ОпНаклКод = hist_skl.ОпНаклКод							
						)
					  ,0)
				+
				ISNULL(
						(
						select SUM(УслЦена * УслКол)
						FROM hist_usl 
						where
							l.ОпНакл = hist_usl.УслНомер
							and l.ОпСкл = hist_usl.УслСкл
							and l.ОпТип = hist_usl.УслОпер
						   --l.ОпНаклКод = HIST_USL.НаклКод						
						)
			
				,0)
			) Сумма
		INTO #t
		from list_skl l
	where ОпКлнТип=2 and left(right(dbo.dec2bit(ОпБит), 16), 1)='0'

CREATE UNIQUE CLUSTERED  INDEX _ix ON #t(ОпКлн,ID);

TRUNCATE TABLE dbo.[skl_with_all_firms_debt];

WITH DO
AS
(
SELECT * , 			
			isnull(СУММА,0)+ 
			(isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн),0)  --
			----Расчет платежей клиента
			+isnull((select 
				SUM((CASE WHEN (ПлатНапр > 2) THEN 1 WHEN (ПлатНапр < 3) THEN -1 ELSE 0 END)*ПлатСумма) 				
			from dkm_base b 			
			where b.ПлатТип < 40 and b.ПлатКлнСотр = 1 AND (l1.ОпКлн = b.ПлатКлнКод) 			
			),0)
			- isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн and l2.ОпТип = 2 AND l1.ID<=l2.ID),0))					
			_НаклДЗ			
		
		  
		

FROM #t as l1
WHERE ОпТип = 2

)



INSERT INTO [dbo].[skl_with_all_firms_debt]
           ([ОпНаклКод]           
           ,[Сумма]                      
           ,[НаклДЗ])

SELECT [ОпНаклКод]
           ,[Сумма]                      
,CASE 
	WHEN		
			_НаклДЗ < Сумма THEN _НаклДЗ
	WHEN	
			_НаклДЗ >= Сумма THEN Сумма
	ELSE 0
 END
	НаклДЗ
	
 FROM DO
 WHERE _НаклДЗ > 1




Drop table #t


--select * from KAT_KLN where КлнНаим like '%трио%'



--select * from [skl_with_debt]
GO
/****** Object:  StoredProcedure [dbo].[GetSKL_drop_Bonus]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ЕФ 08/04/2011
-- Процедура расчитывает долги по накладным
--TRUNCATE TABLE SKL_with_debt




CREATE PROCEDURE [dbo].[GetSKL_drop_Bonus]
AS
	--Расчет стоимости накладных и услуг которые отгружались клиенту
	select [ОпНаклКод],ОпКлн,НашаФирма,ОпТип 
		, ROW_NUMBER() OVER (ORDER BY ОпДатаРасч,ОпНакл) ID
		,(CASE WHEN ОпТип = 2 THEN 1 WHEN ОпТип = 1 THEN -1 ELSE 0 END)*
			(
				ISNULL(
						(
						select SUM(ОпЦена * ОпКол)
						FROM hist_skl 
						where l.ОпНаклКод = hist_skl.ОпНаклКод							
						)
					  ,0)
				+
				ISNULL(
						(
						select SUM(УслЦена * УслКол)
						FROM hist_usl 
						where
							l.ОпНакл = hist_usl.УслНомер
							and l.ОпСкл = hist_usl.УслСкл
							and l.ОпТип = hist_usl.УслОпер
						   --l.ОпНаклКод = HIST_USL.НаклКод						
						)
			
				,0)
			) Сумма
		INTO #t
		from list_skl l
	where ОпКлнТип=2 and left(right(dbo.dec2bit(ОпБит), 16), 1)='0'

CREATE UNIQUE CLUSTERED  INDEX _ix ON #t(ОпКлн,НашаФирма,ID);

TRUNCATE TABLE dbo.[skl_with_debt];

WITH DO
AS
(
SELECT * , 			
			isnull(СУММА,0)+ 
			(isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн and l1.НашаФирма = l2.НашаФирма  ),0)  --
			----Расчет платежей клиента
			+isnull((select 
				SUM((CASE WHEN (ПлатНапр > 2) THEN 1 WHEN (ПлатНапр < 3) THEN -1 ELSE 0 END)*ПлатСумма) 				
			from dkm_base b 
			--inner join DKM_BASI bi on b.ПлатКлнКод = bi.[ДОКодКлн] and b.ПлатКод = bi.[ДОКодПлат]			
			where b.ПлатТип < 40 and b.ПлатКлнСотр = 1 AND (l1.ОпКлн = b.ПлатКлнКод) 
			AND EXISTS(SELECT * FROM DKM_BASI bi WHERE l1.НашаФирма = bi.НашаФирма AND b.ПлатКлнКод = bi.[ДОКодКлн] and b.ПлатКод = bi.[ДОКодПлат]	)
			),0)
			- isnull((SELECT SUM(Сумма) FROM #t as l2 WHERE l1.ОпКлн = l2.ОпКлн and l1.НашаФирма = l2.НашаФирма AND l2.ОпТип = 2 AND l1.ID<=l2.ID),0))					
			_НаклДЗ			
		
		  
		

FROM #t as l1
WHERE ОпТип = 2

)



INSERT INTO [dbo].[skl_with_debt]
           ([ОпНаклКод]           
           ,[Сумма]                      
           ,[НаклДЗ])

SELECT [ОпНаклКод]
           ,[Сумма]                      
,CASE 
	WHEN		
			_НаклДЗ < Сумма THEN _НаклДЗ
	WHEN	
			_НаклДЗ >= Сумма THEN Сумма
	ELSE 0
 END
	НаклДЗ
	
 FROM DO
 WHERE _НаклДЗ > 1




Drop table #t


--select * from KAT_KLN where КлнНаим like '%трио%'



--select * from [skl_with_debt]
GO
/****** Object:  View [dbo].[VIEW2]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW2]
AS
SELECT     dbo.F_OPER.ОпКодТов, dbo.D_NAKL.НаклКлн AS ОпКодКлн, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклДата AS ОпДата, 
                      dbo.D_NAKL.НаклДатаРасч AS ОпДатаРасч, dbo.F_OPER.ОпТип, SUM(dbo.F_OPER.ОпКол) AS СумКол, 
                      SUM(dbo.F_OPER.ОпКол * (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2)) AS КолПрих, 
                      SUM(dbo.F_OPER.ОпКол * (1 - (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2))) AS КолРасх, SUM(dbo.F_OPER.ОпСтоим) AS СумСтоим, 
                      SUM(dbo.F_OPER.ОпСтоим * (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2)) AS СтоимПрих, 
                      SUM(dbo.F_OPER.ОпСтоим * (1 - (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2))) AS СтоимРасх
FROM         dbo.F_OPER INNER JOIN
                      dbo.D_NAKL ON dbo.F_OPER.ОпНаклКод = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_OPER.ОпВозвр = 1) AND (dbo.D_NAKL.НаклАВЗ = 0)
GROUP BY dbo.F_OPER.ОпКодТов, dbo.D_NAKL.НаклКлн, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклДата, dbo.D_NAKL.НаклДатаРасч, dbo.F_OPER.ОпТип
GO
/****** Object:  View [dbo].[VIEW19]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW19]
AS
SELECT     dbo.del_sht.*
FROM         dbo.del_sht LEFT OUTER JOIN
                      dbo.KAT_TVR ON dbo.del_sht.[1N21MI02 08] = dbo.KAT_TVR.ТовАрт
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "del_sht"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 132
               Right = 286
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 324
               Bottom = 189
               Right = 475
            End
            DisplayFlags = 280
            TopColumn = 1
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 4
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW19'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW19'
GO
/****** Object:  View [dbo].[VIEW18]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW18]
AS
SELECT     dbo.KAT_TVR.ТовКод, dbo.del_Droblenie.[Код товара], dbo.del_Droblenie.[Наименование товара], dbo.del_Droblenie.[Кол-во] AS [дробить на], 
                      dbo.del_Droblenie.[min], dbo.del_Droblenie.[max]
FROM         dbo.del_Droblenie LEFT OUTER JOIN
                      dbo.KAT_TVR ON dbo.del_Droblenie.[Код товара] = dbo.KAT_TVR.ТовАрт
WHERE     (NOT (dbo.del_Droblenie.[Кол-во] IS NULL)) AND (NOT (dbo.del_Droblenie.[min] IS NULL)) AND (NOT (dbo.del_Droblenie.[max] IS NULL))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[12] 2[5] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "del_Droblenie"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 230
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 306
               Bottom = 114
               Right = 457
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 7
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW18'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW18'
GO
/****** Object:  View [dbo].[VIEW15]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW15]
AS
SELECT     КодДопХар AS clientgroupid, НаимДопХар AS name
FROM         dbo.Kat_kdk
WHERE     (КодГрДопХар = 2)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Kat_kdk"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 3
         Width = 284
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW15'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW15'
GO
/****** Object:  View [dbo].[VIEW14]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW14]
AS
SELECT     dbo.KAT_KLN.КлнКод AS clientid, dbo.KAT_KLN.КлнНаим AS name, ' ' AS type, dbo.Kat_kdk.КодДопХар AS clientgroupid
FROM         dbo.Kat_kdk RIGHT OUTER JOIN
                      dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар RIGHT OUTER JOIN
                      dbo.KAT_KLN ON dbo.List_kdk.КодКлн = dbo.KAT_KLN.КлнКод
WHERE     (dbo.Kat_kdk.КодГрДопХар = 2)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Kat_kdk"
            Begin Extent = 
               Top = 12
               Left = 607
               Bottom = 139
               Right = 758
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "List_kdk"
            Begin Extent = 
               Top = 23
               Left = 293
               Bottom = 116
               Right = 449
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 172
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW14'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW14'
GO
/****** Object:  View [dbo].[GlClnCodes]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[GlClnCodes]
AS
SELECT     КодГлКлн,КлнКод
FROM         dbo.D_ORG
where d_org.КодГлКлн<>0
GO
/****** Object:  Table [dbo].[hist_pcn]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[hist_pcn](
	[c2_pcn] [bigint] NULL,
	[pc2_dfx] [bigint] NULL,
	[pc2_dfx_normal] [datetime] NULL,
	[pc2_tvr] [int] NULL,
	[pc2_vlt] [int] NULL,
	[pc2_ceno1] [money] NULL,
	[pc2_ceno2] [money] NULL,
	[pc2_ceno3] [money] NULL,
	[pc2_ceno4] [money] NULL,
	[pc2_cenn1] [money] NULL,
	[pc2_cenn2] [money] NULL,
	[pc2_cenn3] [money] NULL,
	[pc2_cenn4] [money] NULL,
	[pc2_nds] [money] NULL,
	[hist_pcnId] [int] IDENTITY(1,1) NOT NULL,
	[nds]  AS ([pc2_nds]/(100)),
	[cenn1]  AS ([pc2_cenn1]*((1)+[pc2_nds]/(100))),
	[cenn2]  AS ([pc2_cenn2]*((1)+[pc2_nds]/(100))),
	[cenn3]  AS ([pc2_cenn3]*((1)+[pc2_nds]/(100))),
	[cenn4]  AS ([pc2_cenn4]*((1)+[pc2_nds]/(100))),
	[ceno1]  AS ([pc2_ceno1]*((1)+[pc2_nds]/(100))),
	[ceno2]  AS ([pc2_ceno2]*((1)+[pc2_nds]/(100))),
	[ceno3]  AS ([pc2_ceno3]*((1)+[pc2_nds]/(100))),
	[ceno4]  AS ([pc2_ceno4]*((1)+[pc2_nds]/(100))),
 CONSTRAINT [PK_hist_pcn] PRIMARY KEY CLUSTERED 
(
	[hist_pcnId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_hist_pcn] ON [dbo].[hist_pcn] 
(
	[c2_pcn] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_cenn1] ON [dbo].[hist_pcn] 
(
	[pc2_cenn1] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_cenn2] ON [dbo].[hist_pcn] 
(
	[pc2_cenn2] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_cenn3] ON [dbo].[hist_pcn] 
(
	[pc2_cenn3] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_cenn4] ON [dbo].[hist_pcn] 
(
	[pc2_cenn4] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_ceno1] ON [dbo].[hist_pcn] 
(
	[pc2_ceno1] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_ceno2] ON [dbo].[hist_pcn] 
(
	[pc2_ceno2] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_ceno3] ON [dbo].[hist_pcn] 
(
	[pc2_ceno3] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_ceno4] ON [dbo].[hist_pcn] 
(
	[pc2_ceno4] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_dfx] ON [dbo].[hist_pcn] 
(
	[pc2_dfx] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_dfx_normal] ON [dbo].[hist_pcn] 
(
	[pc2_dfx_normal] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_tvr] ON [dbo].[hist_pcn] 
(
	[pc2_tvr] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_pc2_vlt] ON [dbo].[hist_pcn] 
(
	[pc2_vlt] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  View [dbo].[Hist_bonus]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*LEFT OUTER JOIN
                      Бонус.dbo.Bon_type AS Bt ON Bn.idBon_type = Bt.id_type*/
CREATE VIEW [dbo].[Hist_bonus]
AS
SELECT     TOP (100) PERCENT dbo.Hist_skl_bon.Stavka, dbo.LIST_SKL.ОпДатаРасч, CAST(dbo.Hist_skl_bon.Stavka / 100 * HS.Продажи * CASE WHEN (HS.ОпВозвр = 0) 
                      THEN 1 WHEN (HS.ОпВозвр = 1) THEN - 1 ELSE 0 END AS MONEY) AS БонПродажи, HS.ОпКод, dbo.Hist_skl_bon.idBon, HS.ОпКодТов, 
                      CAST(HS.Продажи * CASE WHEN (HS.ОпВозвр = 0) THEN 1 WHEN (HS.ОпВозвр = 1) THEN - 1 ELSE 0 END AS MONEY) AS Продажи, dbo.Hist_skl_bon.ОпТовНом, 
                      dbo.Hist_skl_bon.ОпНаклКод, dbo.Hist_skl_bon.idBon_type, dbo.LIST_SKL.ОпКлн, dbo.LIST_SKL.ОпВозврат
FROM         dbo.LIST_SKL RIGHT OUTER JOIN
                      dbo.HIST_SKL AS HS ON dbo.LIST_SKL.ОпНаклКод = HS.ОпНаклКод RIGHT OUTER JOIN
                      dbo.Hist_skl_bon ON HS.ОпНаклКод = dbo.Hist_skl_bon.ОпНаклКод AND HS.ОпТовНом = dbo.Hist_skl_bon.ОпТовНом
WHERE     (HS.Продажи <> 0)
ORDER BY dbo.Hist_skl_bon.ОпНаклКод, dbo.Hist_skl_bon.ОпТовНом
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[27] 4[37] 2[16] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 41
               Left = 847
               Bottom = 371
               Right = 1016
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "HS"
            Begin Extent = 
               Top = 18
               Left = 499
               Bottom = 328
               Right = 678
            End
            DisplayFlags = 280
            TopColumn = 7
         End
         Begin Table = "Hist_skl_bon"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 197
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Hist_bonus'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Hist_bonus'
GO
/****** Object:  View [dbo].[TovRaznUnsold]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[TovRaznUnsold]
AS
SELECT     *
FROM         dbo.TOV_RAZN
WHERE     (Остаток = 1)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "TOV_RAZN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'TovRaznUnsold'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'TovRaznUnsold'
GO
/****** Object:  View [dbo].[TovRaznSold]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[TovRaznSold]
AS
SELECT     *
FROM         dbo.TOV_RAZN
WHERE     (Остаток = 0)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "TOV_RAZN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'TovRaznSold'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'TovRaznSold'
GO
/****** Object:  View [dbo].[LIST_tRans_Total]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[LIST_tRans_Total]
AS
SELECT dbo.HIST_SKL.ОпНаклКод
  --, dbo.HIST_SKL.[ОпКодТов]
  ,SUM(dbo.HIST_SKL.ОпКол * dbo.TVR_DEF.ТовВесБрутто) AS SumBrutto
  , SUM(dbo.HIST_SKL.ОпКол * dbo.TVR_DEF.ТовВесНетто)  AS SumNetto
  , SUM(dbo.HIST_SKL.ОпКол * dbo.TVR_DEF.Объем * 1000) AS SumV
FROM         dbo.HIST_SKL (NOLOCK) LEFT OUTER JOIN
                      dbo.TVR_DEF (NOLOCK) ON dbo.HIST_SKL.ОпКодТов = dbo.TVR_DEF.ТовКод
GROUP BY dbo.HIST_SKL.ОпНаклКод --, dbo.HIST_SKL.[ОпКодТов]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "HIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 245
               Right = 217
            End
            DisplayFlags = 280
            TopColumn = 4
         End
         Begin Table = "TVR_DEF"
            Begin Extent = 
               Top = 6
               Left = 255
               Bottom = 225
               Right = 418
            End
            DisplayFlags = 280
            TopColumn = 19
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 4815
         Alias = 1335
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'LIST_tRans_Total'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'LIST_tRans_Total'
GO
/****** Object:  View [dbo].[cube_Dolg_Tab]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[cube_Dolg_Tab]
AS
SELECT 
		Client as	IdClient,  --ДбтКлнКод
		Debit as		Debit, --ДбтТовар
		Credit as 		Credit,--ДбтПлат
		Saldo as		Saldo, --ДбтСум
		(CASE WHEN Saldo<(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end) as SrokSaldo,
		[Date] as	DateSaldo, --ДбтДатаРасч
		(CASE WHEN Saldo<(0) THEN  -Saldo ELSE (0) end) as Debt,
		(CASE WHEN Saldo<(0) AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)<(16) THEN  -Saldo ELSE (0) end) as To15,
		(CASE WHEN Saldo<(0) AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)>=(16)
                             AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)<(31) THEN  -Saldo ELSE (0) end) as From16To30,
		(CASE WHEN Saldo<(0) AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)>=(31)
							 AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)<(46) THEN  -Saldo ELSE (0) end) as From31To45,
		(CASE WHEN Saldo<(0) AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)>=(46) 
							 AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)<(61) THEN  -Saldo ELSE (0) end) as From46To60,
		(CASE WHEN Saldo<(0) AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)>=(61) THEN  -Saldo ELSE (0) end) as More60,
		(CASE WHEN Saldo<(0) AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)>=(16)
							 AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)<(21) THEN -Saldo ELSE (0) end) as From16To20,
		(CASE WHEN Saldo<(0) AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)>=(21)
							 AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)<(26) THEN  -Saldo ELSE (0) end) as From21To25,
		(CASE WHEN Saldo<(0) AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)>=(26)
							 AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)<(36) THEN  -Saldo ELSE (0) end) as From26To35,
		(CASE WHEN Saldo<(0) AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)>=(36)
							 AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)<(46) THEN  -Saldo ELSE (0) end) as From36To45,
		(CASE WHEN Saldo<(0) AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)>=(46)
							 AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)<(56) THEN  -Saldo ELSE (0) end) as From46To55,	
		(CASE WHEN Saldo<(0) AND (CASE WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) ELSE (0) end)>=(56) THEN  -Saldo ELSE (0) end) as More55,	
		[AvgSaldo] as SumPeriod,--ДбтСумПер
		(SELECT dbo.SLD_KLN.ЛимитКредита FROM dbo.SLD_KLN WHERE t.Client=dbo.SLD_KLN.КлнКод) as LimitCredit,
		(SELECT dbo.SLD_KLN.ДнейКредита FROM dbo.SLD_KLN WHERE t.Client=dbo.SLD_KLN.КлнКод) as srokCredit,
		 ISNULL(DateCode,0)		ДбтДата,
         -Saldo		ДбтСальдо,
         -Credit+Debit	ДбтОборот
FROM [dbo].AvgSaldo t
GO
/****** Object:  View [dbo].[cube_Debit]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* Вид объединяет HIST_SKL и LIST_SKL
 и выделяет данные по ПК
 22.09.07 Выводит только Р и ПВ
*/
CREATE    VIEW [dbo].[cube_Debit]
AS
SELECT     --h.*, 
		h.НаклКод, h.НаклНом, h.НаклСклКод, CAST(h.НаклКлн AS bigint) AS НаклКлн, h.НаклСотр, h.НаклДата, h.НаклДатаРасч,
		h.НаклТип, h.НаклВозвр, h.НаклКол, h.НаклСтоим, h.НаклКодТов, h.ЦенаАльтГрп, h.ЦенаГрп, h.ЦенаКат, h.ТовСкидка,
		h.КлнНаТов, h.КлнНаВид, h.КлнНаГрп, h.ТекЦена, h.СуммаПродажа, h.СуммаПрогноз, h.НДС, h.ЦенаКатУчет, 
		h.СуммаУчет, h.КодКлн_КодАдрДоставки,
	 CASE 
		WHEN (h.СуммаУчет = 0) THEN 'Нулевая учетная цена' 
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет <= 0) 
                      THEN 'Меньше нуля' 
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет > 0) AND ((h.СуммаПрогноз - h.СуммаУчет) 
                      / h.СуммаУчет <= 0.05) THEN 'От 0 до 5' 
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет > 0.05) AND ((h.СуммаПрогноз - h.СуммаУчет) 
                      / h.СуммаУчет <= 0.1) THEN 'От 5 до 10'
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет > 0.1) AND ((h.СуммаПрогноз - h.СуммаУчет) 
                      / h.СуммаУчет <= 0.15) THEN 'От 10 до 15'
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет > 0.15) AND ((h.СуммаПрогноз - h.СуммаУчет) 
                      / h.СуммаУчет <= 0.3) THEN 'От 15 до 30'
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет <= 0.6) AND 
                      ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет > 0.3) THEN 'От 30 до 60' 
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) 
                      / h.СуммаУчет > 0.6) THEN 'Больше 60' 
		END AS ПроцентНаценки 
			
FROM  dbo.M_DEBIT h  
--inner join KLN_ADK k on k.КодАдресаДоставки=
--right(h.КодКлн_КодАдрДоставки,LEN(h.КодКлн_КодАдрДоставки)-charindex('/',h.КодКлн_КодАдрДоставки))
--and k.КодКлиента=h.НаклКлн
GO
/****** Object:  View [dbo].[CrossGlCln]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CrossGlCln]
AS
SELECT     КлнКод, CAST(КлнКод AS varchar(18)) + '_' + CAST(КодГлКлн AS varchar(18)) AS F1
FROM         dbo.D_ORG
WHERE     (КодГлКлн <> 0)
GO
/****** Object:  StoredProcedure [edi].[CreateKonturResponseInvoice]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[CreateKonturResponseInvoice]	
@NumberOrder int = null
as
--declare @NumberOrder int
--set @NumberOrder = 467

set nocount on;

-- !!! внимание переделать  пока не готово
declare @oedinum int;
		
declare oedi_cursor CURSOR FOR 		
--select distinct cast(right(order_num,len(order_num)-2) as int) from @orders
SELECT iddoc from edi.KorusMessages
WHERE DocType = 'ORDER'
and ordsp = 1
and
((@NumberOrder = iddoc) or
(
	(delnot is null or delnot =0) and (@NumberOrder is null)
	
))
;

open oedi_cursor;

FETCH NEXT FROM oedi_cursor 
INTO @oedinum

WHILE @@FETCH_STATUS = 0
BEGIN  

    PRINT @oedinum 
    
    
    
    declare @orders table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						skuid varchar(50),
						nds float				
						); 	
	delete from @orders;						
	declare @osql varchar(max);
	set @osql = '
					SELECT 
						o.HOST_NUMBER,
						o.DOC_NO,
					  od.line,
					  sku.upc upc,
					  od.qty/uomdiv.UOM_DIV qty,
					  uomdiv.Host_id skuid
					  
					FROM orders o
						INNER JOIN order_details od ON o.id = od.order_id
						INNER JOIN  
						(
								  SELECT 
										  s.id
											  ,s.upc 
									FROM wms.sku s
							        
								  union all  
								  SELECT 
							           
									   b.sku_id
										,b.barcode
									FROM wms.sku_barcode b
							  ) sku
				
							ON od.sku_id = sku.id 
						INNER JOIN sku uomdiv ON od.sku_id = uomdiv.id 
					WHERE HOST_NUMBER = ''k-'+cast(@oedinum as varchar(20))+'''				
				'
	
	--order_id OrderResponceNumber-- номер накладной он будет номером ответа на заказа в EDI	
	insert into	@orders(order_num,order_id,line,upc,qty,skuid)
	execute (@osql) at wms
    
    update @orders
    set nds = (select top 1 НДС from kat_tvr t where skuid = cast(t.ТовКод as varchar(50)))
    
    --ЕСЛИ ЗАКАЗ ПЕРЕДАН В СОЛВО, ТО ТОЛЬКО ТОГДА ЕГО ОБРАБАТЫВАЕМ
    IF (EXISTS(SELECT * FROM @orders))
    BEGIN
    
								DECLARE @idoc int
								DECLARE @doc xml
								DECLARE @PartnerIln varchar(15)
								DECLARE @DocType varchar(15)
								(select @doc = body,@PartnerIln = PartnerIln,@DocType = DocType  from edi.KorusMessages km where iddoc = @oedinum); 	
								EXEC sp_xml_preparedocument @idoc OUTPUT, @doc;
								
								
								
								DECLARE @OrderResponseLines xml;
								DECLARE @ordrsp xml;
								
								WITH 
								EDI_PARTIES AS
								(
												SELECT * FROM OPENXML (@idoc, '/Document-Order/Order-Parties',1)
															 WITH (	Buyer			varchar(25)         './Buyer/ILN',
																	Seller			varchar(25)         './Seller/ILN',
																	DeliveryPoint   varchar(25)         './DeliveryPoint/ILN',
																	Invoice			varchar(25)         './Invoice/ILN')
								)
								,
								EDI_ORDER AS
								(
												SELECT * FROM OPENXML (@idoc, '/Document-Order/Order-Lines/Line',1)
															 WITH (LineNumber       int         './Line-Item/LineNumber',
																	ean				varchar(25)	'./Line-Item/EAN',
																	qty				float		'./Line-Item/OrderedQuantity',
																	price			float		'./Line-Item/OrderedUnitNetPrice',
																	BuyerItemCode	varchar(40) './Line-Item/BuyerItemCode')
								)
								,PLAN_TO_SHIPPING AS (
												SELECT 						
													LineNumber,
													ean,
													BuyerItemCode,
													sum(qty) qty,
													max(price) price,
													max(НДС) nds
												 FROM	(
															SELECT 
																--'k-'+cast(@oedinum as varchar(25)) order_num, -- номер заказа
																		
																edio.LineNumber,
																edio.ean,
																edio.BuyerItemCode,
																edio.qty need_qty,
																o.qty,
																edio.price,					
																row_number() over (partition by o.line order by LineNumber) rw,
																o.nds НДС 
															
															FROM  EDI_ORDER  edio
																JOIN @orders o ON cast(right(order_num,len(order_num)-2) as int) = @oedinum and o.upc = edio.ean				
																--JOIN kat_tvr t ON o.skuid = cast(t.ТовКод as varchar(50))
												) tab	WHERE rw = 1
												GROUP BY LineNumber,ean,BuyerItemCode
								)
								,_OrderResponseLines AS
								(
									select	row_number() over (order by ps.LineNumber) LineNumber,
																	--eo.LineNumber OrderLineNumber,
																	ps.ean EAN,
																	BuyerItemCode,																	
																	--eo.qty,																	
																	LTRIM(STR (ISNULL(ps.qty,0) ,20,5)) InvoiceQuantity,
																	'PCE' UnitOfMeasure,
																	LTRIM(STR (ps.price,20,5))	 InvoiceUnitNetPrice,
																	LTRIM(STR(nds,3,2)) TaxRate,
																	LTRIM(STR (ISNULL(ps.qty*ps.price*(nds/100),0) ,20,5))	TaxAmount,
																	LTRIM(STR (ISNULL(ps.qty*ps.price,0) ,20,5)) NetAmount
															 from --EDI_ORDER eo LEFT JOIN 
															 PLAN_TO_SHIPPING ps 
															 --on eo.LineNumber = ps.LineNumber
									
								)
								
								,OrderResponseLines AS
								(select OrderResponseLines = 
								'<Invoice-Lines>'+
													cast((
																													
														
															 --такая фигня нагарожена из-за вложености line  
															 select
															 (select top 1 * 
															 from _OrderResponseLines [Line-Item] 
															 where [Line-Item].LineNumber = [Line].LineNumber FOR XML Auto,TYPE,ELEMENTS)  
															 from _OrderResponseLines [Line] 															 
															 FOR XML Auto,TYPE,ELEMENTS
															 
															 
											 
											 ) as varchar(max))
								+'</Invoice-Lines>')
								,ordrsp AS
								(
								select ordrsp = 
								'<Document-Invoice>
									<Invoice-Header>
										<InvoiceNumber>'+isnull((select top 1 order_id from @orders where not(order_id is null)),'')+'</InvoiceNumber>'+
										'<InvoiceDate>'+convert(varchar(10),getdate(),20)+'</InvoiceDate>'+
										'<InvoiceCurrency>RUB</InvoiceCurrency>'+
										--'<ExpectedDeliveryDate>'+cast( @doc.query('/Document-Order/Order-Header/ExpectedDeliveryDate/text()') as varchar(10))+'</ExpectedDeliveryDate>'+										
										'<DocumentFunctionCode>D</DocumentFunctionCode>'+									
									'</Invoice-Header>'+
									
									'<Invoice-Reference><Order>'+
										'<BuyerOrderNumber>'+cast( @doc.query('/Document-Order/Order-Header/OrderNumber/text()') as varchar(10))+'</BuyerOrderNumber>'+
										'<BuyerOrderDate>'+cast( @doc.query('/Document-Order/Order-Header/OrderDate/text()') as varchar(10))+'</BuyerOrderDate>'+
									'</Order></Invoice-Reference>'+
									
									'<Invoice-Parties>'+
										/*cast( (select @doc.query('Document-Order/Order-Parties/Buyer')) as varchar(max))+
										cast( (select @doc.query('Document-Order/Order-Parties/Seller')) as varchar(max))+
										cast( (select @doc.query('Document-Order/Order-Parties/DeliveryPoint')) as varchar(max))+
										cast( (select @doc.query('Document-Order/Order-Parties/Invoicee')) as varchar(max))+*/
									+'<Buyer>'+
										+'<ILN>'+(select top 1 Buyer from EDI_PARTIES) +'</ILN>'+
										+'<TaxID>'+ISNULL((select top 1 RTRIM(c.ИНН) from EDI_PARTIES p JOIN edi.Kln_GLN k ON p.Buyer = k.GLN JOIN cln_dkl c ON c.КлнКод = k.КлнКод),'') +'</TaxID>'+
									+'</Buyer>'+
									+'<Seller>'
										+'<ILN>'+(select top 1 Seller from EDI_PARTIES) +'</ILN>'+
										+'<TaxID>'+ISNULL((select top 1 RTRIM(c.ИНН) from EDI_PARTIES p JOIN edi.FIRM_GLN k ON p.Seller = k.GLN JOIN cln_dkl c ON c.КлнКод = k.ФирмаКод),'') +'</TaxID>'+										
									'</Seller>'+
									+'<DeliveryPoint><ILN>'+(select top 1 DeliveryPoint from EDI_PARTIES) +'</ILN></DeliveryPoint>'+
									+'<Invoicee><ILN>'+(select top 1 ISNULL(Invoice,Buyer) from EDI_PARTIES) +'</ILN></Invoicee>'+
									  '</Invoice-Parties>'+
									--+replace(cast( (select @doc.query('Document-Order/Order-Parties')) as varchar(max)),'Order-Parties','OrderResponse-Parties')+									
									+cast((select OrderResponseLines from OrderResponseLines) as varchar(max))+
									+'<Invoice-Summary>'+
									--+cast( (select @doc.query('Document-Order/Order-Summary/TotalLines')) as varchar(max))+
									+'<TotalLines>'+cast((select count(*) from _OrderResponseLines) as varchar(10))+'</TotalLines>'+
									+'<TotalNetAmount>'+LTRIM(STR(((select sum(qty*price) from PLAN_TO_SHIPPING)),20,5))+'</TotalNetAmount>'+
									+'<TotalTaxAmount>'+LTRIM(STR(((select sum(qty*price*(nds/100)) from PLAN_TO_SHIPPING)),20,5))+'</TotalTaxAmount>'+
									+'<TotalGrossAmount>'+LTRIM(STR(((select sum(qty*price*(1+(nds/100))) from PLAN_TO_SHIPPING)),20,5))+'</TotalGrossAmount>'+
									+'<Tax-Summary>'+
									+cast((select 
										LTRIM(STR((nds),20,2)) TaxRate,
										LTRIM(STR(sum(qty*price*(nds/100)),20,5)) TaxAmount,
										LTRIM(STR(sum(qty*price),20,5)) TaxableAmount
										  from PLAN_TO_SHIPPING [Tax-Summary-Line]
										  GROUP BY nds
										  FOR XML AUTO,TYPE,ELEMENTS) as varchar(max))+
									+'</Tax-Summary>'+
									+'</Invoice-Summary>'+
								'</Document-Invoice>'
								)
							    
								select @ordrsp = ordrsp from ordrsp; -- XML ГОТОВ ДЛЯ ПЕРЕДАЧИ ПРОВАЙДЕРУ
								--select @ordrsp  
    
    
								exec sp_xml_removedocument @idoc;
    
    
								
								DECLARE @ourfirmiln varchar(15); -- iln нашей фирмы
								SET @ourfirmiln = cast(@doc.query('/Document-Order/Order-Parties/Seller/ILN/text()') as varchar(15));
								DECLARE @login varchar(50);  
								DECLARE @password varchar(50); 
								SELECT @login = KorusLogin, @password = KorusPassword --,@ordrsp 
								FROM
								edi.FIRM_GLN o 
								WHERE gln = @ourfirmiln;				
								
								--ПЕРЕДАЧА ДОКУМЕНТА
								
								
								declare @rr varchar(max);
								
								--по отправке будет свой вариант 
								/*
								select 
								@rr = dbo.Send(								
								@login,
								@password,
								@PartnerIln,
								'DELIVERYNOTE',
								'ECODRU1', 
								'XML', 
								'P', 
								'', 
								@ordrsp,
								5000
								);*/
								
								--print @rr;
								--[edi].[CreateKorusResponseInvoice]	160
								UPDATE  [PR_Euras].[edi].[Kontur]--edi.KorusMessages
								set 
								[DELNOT] = 1,
								--Response = @ordrsp,
								DelnoteXML = @ordrsp
								WHERE [id] = @oedinum
								
																--select @ordrsp,@login,@password
								    
		END;
    
        
    FETCH NEXT FROM oedi_cursor 
INTO @oedinum
END 
CLOSE oedi_cursor;
DEALLOCATE oedi_cursor;




/*declare @s nvarchar(max);
set @s=
'select body.query(x) from
(select *,(''/Document-Order/Order-Lines/Line/Line-Item/LineNumber[/Document-Order/Order-Lines/Line/Line-Item/@EAN=''+skuid+'']'') x
 from edi.KorusMessages km 
				join @orders o on km.iddoc = right(o.order_num,len(o.order_num)-2)
) t;
'
 execute @s;*/
GO
/****** Object:  Table [xmt].[SoftMatrixWare]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[SoftMatrixWare](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Item] [nvarchar](255) NULL,
	[SoftMatrixId] [int] NULL,
 CONSTRAINT [PK_xmt.SoftMatrixWare] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [xmt].[SoftMatrixRetail]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[SoftMatrixRetail](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Item] [nvarchar](255) NULL,
	[SoftMatrixId] [int] NULL,
 CONSTRAINT [PK_xmt.SoftMatrixRetail] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  UserDefinedFunction [dbo].[Vw_KPK_Ostatki_All]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE FUNCTION [dbo].[Vw_KPK_Ostatki_All] ()
RETURNS TABLE AS  return
SELECT dbo.KAT_TVR.ТовКод, - (dbo.Tbl_KPK_Ostatki.Дефицит + dbo.Tbl_KPK_Ostatki.[Заказ поставщику]) AS СвободныйОстаток
FROM         dbo.Tbl_KPK_Ostatki INNER JOIN
                      dbo.KAT_TVR ON dbo.Tbl_KPK_Ostatki.Код = LTRIM(RTRIM(dbo.KAT_TVR.ТовАрт)) 
WHERE     (dbo.KAT_TVR.ТовЦенаРСХ <> 0)
union all
SELECT     dbo.KAT_TVR.ТовКод + 9900000000000 AS ТовКод,dbo.Tbl_KPK_Ostatki_SBR.[Остаток на складе] AS СвободныйОстаток
FROM         dbo.Tbl_KPK_Ostatki_SBR INNER JOIN
                      dbo.KAT_TVR ON dbo.Tbl_KPK_Ostatki_SBR.Код = dbo.KAT_TVR.ТовАрт
GO
/****** Object:  View [dbo].[Vw_KPK_Address_1]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_Address_1]
AS
SELECT     dbo.CLN_DKL.КлнКод, RTRIM(LTRIM(ISNULL(dbo.CLN_DKL.КлнГрузАдрес, dbo.CLN_DKL.КлнАдрес))) AS КлнАдрес, dbo.CLN_DKL.КодГород, 
                      RTRIM(LTRIM(dbo.KAT_TWN.ГородНаим)) AS Город
FROM         dbo.CLN_DKL INNER JOIN
                      dbo.KAT_TWN ON dbo.CLN_DKL.КодГород = dbo.KAT_TWN.КодГород INNER JOIN
                      dbo.KAT_KLN ON dbo.CLN_DKL.КлнКод = dbo.KAT_KLN.КлнКод
WHERE     (NOT (dbo.KAT_KLN.КлнАрхив IN (1, 5)))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 51
               Left = 350
               Bottom = 159
               Right = 503
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 32
               Left = 666
               Bottom = 110
               Right = 817
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 88
               Left = 53
               Bottom = 196
               Right = 204
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 5
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 6210
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Address_1'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Address_1'
GO
/****** Object:  View [dbo].[Vw_F_PRIH_last_100_days_new]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_F_PRIH_last_100_days_new]
AS
SELECT     F_PRIH.*, dbo.LIST_SKL.Основание
FROM         (SELECT     min(dbo.F_OPER.ОпКод) AS ОпКод, dbo.D_NAKL.НаклНомер, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклСклНаим, 
                                              dbo.D_NAKL.НаклКлн AS ОпКодКлн, dbo.D_NAKL.НаклСотр, dbo.D_NAKL.НаклДата AS ОпДата, 
                                              dbo.D_NAKL.НаклДатаРасч AS ОпДатаРасч, dbo.D_NAKL.ОпНаклКод, dbo.F_OPER.ОпКодТов, SUM(dbo.F_OPER.ОпКол) AS ОпКол, 
                                              SUM(dbo.F_OPER.ОпСтоим) AS ОпСтоим, SUM(dbo.F_OPER.ОпВесБрутто) AS ОпВесБрутто, SUM(dbo.F_OPER.ОпКолУпак) 
                                              AS ОпКолУпак, SUM(dbo.F_OPER.ОпВесНетто) AS ОпВесНетто, dbo.F_OPER.ОпВозвр
                       FROM          dbo.F_OPER INNER JOIN
                                              dbo.D_NAKL ON dbo.F_OPER.ОпНаклКод = dbo.D_NAKL.ОпНаклКод
                       WHERE      (dbo.F_OPER.ОпТип = 1 OR
                                              dbo.F_OPER.ОпТип = 3)
                       GROUP BY dbo.D_NAKL.НаклНомер, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклСклНаим, dbo.D_NAKL.НаклКлн, dbo.D_NAKL.НаклСотр, 
                                              dbo.D_NAKL.НаклДата, dbo.D_NAKL.НаклДатаРасч, dbo.D_NAKL.ОпНаклКод, dbo.F_OPER.ОпКодТов, dbo.F_OPER.ОпВозвр) 
                      F_PRIH LEFT OUTER JOIN
                      dbo.LIST_SKL ON F_PRIH.ОпНаклКод = dbo.LIST_SKL.ОпНаклКод
WHERE     (F_PRIH.ОпДатаРасч BETWEEN { fn NOW() } - 100 AND { fn NOW() })
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "F_PRIH"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_F_PRIH_last_100_days_new'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_F_PRIH_last_100_days_new'
GO
/****** Object:  View [dbo].[LIST_ZKZ_bit]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[LIST_ZKZ_bit]
AS
SELECT     ЗкзКод, ЗкзНом, ЗкзГрп, ЗкзДатаРасч, ЗкзДатаЗавершРасч, ЗкзКлн, ЗкзБитФл, ЗкзСкл, ЗкзПризн, ЗкзДопПрз, ЗкзАдр, dbo.Dec2Bit(ЗкзБитФл) 
                      AS ЗкзБитФл_full, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 0), 1) AS bit00, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 1), 1) AS bit01, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 
                      2), 1) AS bit02, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 3), 1) AS bit03, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 4), 1) AS bit04, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 5), 1) 
                      AS bit05, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 6), 1) AS bit06, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 7), 1) AS bit07, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 8), 1) 
                      AS bit08, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 9), 1) AS bit09, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 10), 1) AS bit10, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 11), 1) 
                      AS bit11, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 12), 1) AS bit12, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 13), 1) AS bit13, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 14), 1) 
                      AS bit14, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 15), 1) AS bit15, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 16), 1) AS bit16, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 17), 1) 
                      AS bit17, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 18), 1) AS bit18, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 19), 1) AS bit19, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 20), 1) 
                      AS bit20, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 21), 1) AS bit21, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 22), 1) AS bit22, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 23), 1) 
                      AS bit23, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 24), 1) AS bit24, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 25), 1) AS bit25, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 26), 1) 
                      AS bit26, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 27), 1) AS bit27, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 28), 1) AS bit28, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 29), 1) 
                      AS bit29, LEFT(RIGHT(dbo.Dec2Bit(ЗкзБитФл), 30), 1) AS bit30
FROM         dbo.LIST_ZKZ
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LIST_ZKZ"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 214
               Right = 222
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 4065
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'LIST_ZKZ_bit'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'LIST_ZKZ_bit'
GO
/****** Object:  View [dbo].[Vw_EhrmannReport]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_EhrmannReport]
AS
SELECT     TOP 100 PERCENT dbo.wremEhrmann.[Код дистрибутора], dbo.wremEhrmann.Дата, dbo.wremEhrmann.[Код товара], dbo.wremEhrmann.Артикул, 
                      ISNULL(dbo.EhrmannKLNnew.Название, dbo.wremEhrmann.КлнНаим) AS Название, dbo.wremEhrmann.КлнНаим AS Клиент, 
                      dbo.EhrmannKLNnew.[Канал сбыта], dbo.EhrmannKLNnew.[Формат магазина], ISNULL(ISNULL(dbo.EhrmannKLNnew.Город, 
                      dbo.KAT_TWN.ГородНаим), dbo.D_ORG.ГородНаим) AS Город, ISNULL(ISNULL(dbo.EhrmannKLNnew.Адрес, dbo.KLN_ADK.АдресДоставки), 
                      ISNULL(dbo.CLN_DKL.КлнГрузАдрес, dbo.CLN_DKL.КлнАдрес)) AS Адрес, dbo.wremEhrmann.[Продажи (штуки)], '' AS [Продажи (короба)], 
                      '' AS [Продажи (поддоны)], dbo.wremEhrmann.[Продажи (рубли с НДС)], dbo.D_ORG.ГрпСотрНаим
FROM         dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода RIGHT OUTER JOIN
                      dbo.wremEhrmann INNER JOIN
                      dbo.D_ORG ON dbo.wremEhrmann.КлнКод = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.CLN_DKL ON dbo.wremEhrmann.КлнКод = dbo.CLN_DKL.КлнКод ON 
                      dbo.KLN_ADK.КодАдресаДоставки = dbo.wremEhrmann.КодАдрДоставки LEFT OUTER JOIN
                      dbo.EhrmannKLNnew ON dbo.wremEhrmann.КодКлн_КодАдрДоставки = dbo.EhrmannKLNnew.КодКлн_КодАдрДоставки
ORDER BY dbo.wremEhrmann.Дата
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[16] 4[46] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 114
               Left = 490
               Bottom = 192
               Right = 641
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 174
               Left = 38
               Bottom = 282
               Right = 224
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "wremEhrmann"
            Begin Extent = 
               Top = 18
               Left = 238
               Bottom = 153
               Right = 452
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_ORG"
            Begin Extent = 
               Top = 3
               Left = 482
               Bottom = 111
               Right = 650
            End
            DisplayFlags = 280
            TopColumn = 2
         End
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 71
               Left = 305
               Bottom = 179
               Right = 458
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "EhrmannKLNnew"
            Begin Extent = 
               Top = 66
               Left = 2
               Bottom = 174
               Right = 169
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
        ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_EhrmannReport'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N' Column = 4515
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_EhrmannReport'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_EhrmannReport'
GO
/****** Object:  View [dbo].[Vw_Ehrmann_name2]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_Ehrmann_name2]
AS
SELECT     MIN(dbo.Kat_kdk.НаимДопХар) AS НаимДопХар, dbo.List_kdk.КодКлн, MIN(dbo.List_kdk.КодДопХар) AS КодДопХар, 
                      dbo.List_kdk.КодГрпДопХар
FROM         dbo.Kat_kdk INNER JOIN
                      dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар INNER JOIN
                      dbo.Tbl_Kdk_code ON dbo.List_kdk.КодГрпДопХар = dbo.Tbl_Kdk_code.Kdk_ID
WHERE     (dbo.Tbl_Kdk_code.Description = 'Торговое название 1')
GROUP BY dbo.List_kdk.КодКлн, dbo.List_kdk.КодГрпДопХар
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Kat_kdk"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "List_kdk"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 99
               Right = 383
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Tbl_Kdk_code"
            Begin Extent = 
               Top = 6
               Left = 421
               Bottom = 84
               Right = 572
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_name2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_name2'
GO
/****** Object:  View [dbo].[Vw_Ehrmann_mag]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_Ehrmann_mag]
AS
SELECT     MIN(dbo.Kat_kdk.НаимДопХар) AS НаимДопХар, dbo.List_kdk.КодКлн, MIN(dbo.List_kdk.КодДопХар) AS КодДопХар, 
                      dbo.List_kdk.КодГрпДопХар
FROM         dbo.Kat_kdk INNER JOIN
                      dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар INNER JOIN
                      dbo.Tbl_Kdk_code ON dbo.List_kdk.КодГрпДопХар = dbo.Tbl_Kdk_code.Kdk_ID
WHERE     (dbo.Tbl_Kdk_code.Description = 'Торговое название')
GROUP BY dbo.List_kdk.КодКлн, dbo.List_kdk.КодГрпДопХар
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Kat_kdk"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "List_kdk"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 99
               Right = 383
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Tbl_Kdk_code"
            Begin Extent = 
               Top = 6
               Left = 421
               Bottom = 84
               Right = 572
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 5
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_mag'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_mag'
GO
/****** Object:  StoredProcedure [dbo].[FillPaymentTemper]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--22.11.2011
--ЕФ
--процедура для заполнения таблицы PaymentTemper, в которой хранятся разноски платежей по накладным

CREATE PROCEDURE [dbo].[FillPaymentTemper]
AS

DECLARE @d MONEY,@c MONEY,@k int,@f int;
SET @d = 0;
SET @c = 0;
SET @k = 0;
SET @f = 0;

CREATE TABLE #F_STREAM
(	
	ID			INT,
	ОпНаклКод	INT,
	Клн			INT,
	НашаФирма	INT,
	ДатаРасч	DATE ,
	ОпНакл		INT,
	Деб			MONEY,
	Кр			MONEY,
	СумДеб		MONEY,
	СумКр		MONEY	
	
);
CREATE UNIQUE INDEX _ix ON #F_STREAM(НашаФирма,Клн,ID) include (Деб,Кр);
TRUNCATE TABLE [PaymentTemper];
--drop index _ix on #F_STREAM
WITH PLAT
AS(
				select 	99999999 ОпНаклКод,	
						Клн,
						НашаФирма,
						ПлатДатаРасч ДатаРасч,
						99999999 ОпНакл,
						sum(Деб) Деб,
						sum(Кр) Кр
				from
				(
							select   b.ПлатКлнКод Клн,
								(SELECT TOP 1 bi.НашаФирма FROM DKM_BASI bi WHERE b.ПлатКлнКод = bi.[ДОКодКлн] and b.ПлатКод = bi.[ДОКодПлат]) НашаФирма,
								b.ПлатДатаРасч,				
								((CASE WHEN (ПлатНапр > 2) THEN 1 ELSE 0 END)*ПлатСумма) Деб, 	
								((CASE WHEN (ПлатНапр < 3) THEN 1 ELSE 0 END)*ПлатСумма) Кр				
							from dkm_base b 			
							where b.ПлатТип < 40 and b.ПлатКлнСотр = 1 
				) t			
							group by	Клн,
										НашаФирма,
										ПлатДатаРасч
)
,
 SKL AS
 (
		select [ОпНаклКод],ОпКлн,НашаФирма 
				,ОпДатаРасч
				,ОпНакл
				,(CASE WHEN ОпТип = 2 THEN 1 ELSE 0 END)*
					(
						ISNULL(
								(
								select SUM(ОпЦена * ОпКол)
								FROM hist_skl 
								where l.ОпНаклКод = hist_skl.ОпНаклКод							
								)
							  ,0)
						+
						ISNULL(
								(
								select SUM(УслЦена * УслКол)
								FROM hist_usl 
								where
									l.ОпНакл = hist_usl.УслНомер
									and l.ОпСкл = hist_usl.УслСкл
									and l.ОпТип = hist_usl.УслОпер								   
								)
					
						,0)
					) Деб
				,(CASE WHEN ОпТип = 1 THEN 1 ELSE 0 END)*
					(
						ISNULL(
								(
								select SUM(ОпЦена * ОпКол)
								FROM hist_skl 
								where l.ОпНаклКод = hist_skl.ОпНаклКод							
								)
							  ,0)
						+
						ISNULL(
								(
								select SUM(УслЦена * УслКол)
								FROM hist_usl 
								where
									l.ОпНакл = hist_usl.УслНомер
									and l.ОпСкл = hist_usl.УслСкл
									and l.ОпТип = hist_usl.УслОпер								   					
								)
					
						,0)
					) Кр			
				from list_skl l		
				where ОпКлнТип=2				
)			

INSERT INTO #F_STREAM(
ID,
	ОпНаклКод	,
	Клн			,
	НашаФирма	,
	ДатаРасч	 ,
	ОпНакл		,
	Деб			,
	Кр
)
select row_number() OVER (ORDER BY ДатаРасч,ОпНакл) ID,
	ОпНаклКод	,
	Клн			,
	НашаФирма	,
	ДатаРасч	 ,
	ОпНакл		,
	Деб			,
	Кр			
   from
(select * from plat		
union all
select * from skl) t



/*UPDATE #F_STREAM
SET СумДеб = (select sum(t1.Деб)  from #F_STREAM t1 where t1.клн = #F_STREAM.Клн and t1.НашаФирма = #F_STREAM.НашаФирма and t1.ID<=#F_STREAM.ID )
    ,СумКр = (select sum(t1.Кр)  from #F_STREAM t1 where t1.клн = #F_STREAM.Клн and t1.НашаФирма = #F_STREAM.НашаФирма and t1.ID<=#F_STREAM.ID )*/
UPDATE #F_STREAM
SET @d = СумДеб = (CASE WHEN @f=НашаФирма and @k = Клн THEN @d + Деб ELSE Деб END),
	@c = СумКр = (CASE WHEN @f=НашаФирма and @k = Клн THEN @c + Кр ELSE Кр END),
	@f = НашаФирма,
	@k = Клн    

--select t.id,t.ОпНаклКод,t.Клн,t.НашаФирма,max(t.деб) деб,max(t.кр) кр,sum(t.деб) СумДеб,sum(t.кр) СумКр

----(select sum(t1.Деб)  from #t t1 where t1.клн = t.Клн and t1.НашаФирма = t.НашаФирма and t1.ID<=t.ID ) СумДеб,
----(select sum(t1.Кр)  from #t t1 where t1.клн = t.Клн and t1.НашаФирма = t.НашаФирма and t1.ID<=t.ID ) СумКр
--into #d
--from #t t 
--inner join #t t1 on t1.клн = t.Клн and t1.НашаФирма = t.НашаФирма and t1.ID<=t.ID
--group by t.id,t.ОпНаклКод,t.Клн,t.НашаФирма

CREATE INDEX _ix1 ON #F_STREAM(Клн,НашаФирма,СумДеб) include ([ОпНаклКод],[ДатаРасч],Деб,id) WHERE Деб > 0 ;
CREATE INDEX _ix2 ON #F_STREAM(Клн,НашаФирма,СумКр) include (Кр,id,[ДатаРасч]) WHERE Кр > 0;

--drop index _ix1 on #F_STREAM

INSERT INTO [dbo].[PaymentTemper]
           ([ОпНаклКод]
           ,[ДатаРасч]
           ,[Разнесено]
           ,[СуммПериод])
           
select d.ОпНаклКод, d1.ДатаРасч,--d1.Кр,d1.СумКр,d.СумДеб - d1.СумКр,
(CASE 
WHEN d.СумДеб - d1.СумКр >= 0 THEN    d1.СумКр - (d.СумДеб - d.Деб ) 
ELSE  d.СумДеб - d1.СумКр + d1.Кр 
END) Разнесено,
(CASE 
WHEN d.СумДеб - d1.СумКр >= 0 THEN    d1.СумКр - (d.СумДеб - d.Деб ) 
ELSE  d.СумДеб - d1.СумКр + d1.Кр 
END)*(ABS(DATEDIFF(dd,d.ДатаРасч,d1.ДатаРасч)) ) СуммПериод
--,d1.СумДеб,d1.СумКр,d1.ДатаРасч, d1.Кр + d.СумДеб - d1.СумКр 
from #F_STREAM d
inner join #F_STREAM d1 on d.НашаФирма = d1.НашаФирма and d.Клн = d1.Клн and d.ID <= d1.ID and d1.СумКр - d1.Кр <=d.СумДеб 
--where d.Клн = 24
and d1.Кр > 0 and d.Деб > 0 

drop table #F_STREAM
--drop table #d
GO
/****** Object:  UserDefinedFunction [dbo].[f_history_HIST_SKL]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_history_HIST_SKL]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT     ОпКод, ОпКодТов, ОпКол, ОпТип, ОпЦена, ОпКодУпак, ОпСкл, ОпВозвр, ОпНакл, ОпНаклКод, ОпТипКлн, ОпТовНом, ОпТипКлн_INT, ОпСтоим, 
           ПолнАдресДоставки, ОпКлн, ОпДатаРасч, КодАдрДоставки, ОпСотр, ОпТипSKL, НашаФирма, ОпСтоимИтог, ОпКолИтог, DST, КодТКА, ВесБрутто, ВесНетто, 
           СуммаЦенаУчет, КодТТН, АдресДоставки, Отгрузка, SippingGradientID, Объем, ЦенаТранспОтОбъема, ЦенаТранспОтВеса, ТТН_Адрес, ExistTTN, 
           ДоляТранРсхОбъем, ДоляТранРсхВеса, CASE WHEN ДоляТранРсхОбъем <= 0.15 AND ExistTTN = 1 THEN 0 WHEN ДоляТранРсхОбъем > 0.15 AND 
           ExistTTN = 1 THEN 1 ELSE NULL END AS ГрадацияТранРсхОбъемИд, CASE WHEN ДоляТранРсхВеса <= 0.15 AND 
           ExistTTN = 1 THEN 0 WHEN ДоляТранРсхВеса > 0.15 AND ExistTTN = 1 THEN 1 ELSE NULL END AS ГрадацияТранРсхВесаИд, ЗаводскаяУпаковка, NULL 
           AS КолДней, NULL AS СуммаОстатков, CASE WHEN ОставшийсяСрокГодности >= 10 THEN 10 ELSE ОставшийсяСрокГодности END AS ОставшийсяСрокГодности,
           РасхНаВет, КолВетТов, CAST(NULL AS float) AS zero, АкцияКод, Бонус_1, Бонус_2, Бонус_3, Возврат_ТР, Возврат_Эксп, Транс_Расх
           ,[СуммаПрогноз_Акции_НДС], [СуммаПрогноз_НДС], [СуммаПрогноз_Акции], [СуммаПрогноз], Прогноз_Кол, Прогноз_ЦенаУчет, Прогноз_ЦенаУчет_безНДС,
			0 AS Вычерк ,
			0 as ВычеркСтоим,
			0 as СуммаПрогнозМлн,
			0 as СуммаПрогнозМлн1
FROM         (SELECT     hist_skl.ОпКод, hist_skl.ОпКодТов, hist_skl.ОпКол, hist_skl.ОпТип, hist_skl.ОпЦена, hist_skl.ОпКодУпак, hist_skl.ОпСкл, hist_skl.ОпВозвр, 
                                              hist_skl.ОпНакл, hist_skl.ОпНаклКод, hist_skl.ОпТипКлн, hist_skl.ОпТовНом, CONVERT(int, hist_skl.ОпТипКлн) AS ОпТипКлн_INT, hist_skl.ОпСтоим, 
                                              CAST(hist_skl.ОпКлн AS bigint) * 1000000 + CAST(hist_skl.КодАдрДоставки AS bigint) AS ПолнАдресДоставки, hist_skl.ОпКлн, hist_skl.ОпДатаРасч, 
                                              hist_skl.КодАдрДоставки, hist_skl.ОпСотр, hist_skl.ОпТипSKL, hist_skl.НашаФирма, (CASE WHEN (HIST_SKL.ОпТипКлн = 2) AND 
                                              (HIST_SKL.ОпВозвр = 0) AND (HIST_SKL.ОпТип = 2) THEN HIST_SKL.ОпЦена * HIST_SKL.ОпКол WHEN (HIST_SKL.ОпТипКлн = 2) AND 
                                              (HIST_SKL.ОпВозвр = 1) AND (HIST_SKL.ОпТип = 1) THEN - HIST_SKL.ОпЦена * HIST_SKL.ОпКол ELSE NULL END) AS ОпСтоимИтог, 
                                              (CASE WHEN (HIST_SKL.ОпТипКлн = 2) AND (HIST_SKL.ОпВозвр = 0) AND (HIST_SKL.ОпТип = 2) THEN HIST_SKL.ОпКол WHEN (HIST_SKL.ОпТипКлн = 2)
                                               AND (HIST_SKL.ОпВозвр = 1) AND (HIST_SKL.ОпТип = 1) THEN - HIST_SKL.ОпКол ELSE NULL END) AS ОпКолИтог, CONVERT(VARCHAR, 
                                              hist_skl.ОпКодТов) + '_' + CONVERT(VARCHAR, hist_skl.ОпКлн) + '_' + CONVERT(VARCHAR, hist_skl.КодАдрДоставки) AS КодТКА, hist_skl.DST, 
                                              hist_skl.ВесБрутто, hist_skl.ВесНетто, hist_skl.КодТТН, hist_skl.АдресДоставки, hist_skl.Отгрузка, hist_skl.SippingGradientID, hist_skl.Объем, 
                                              hist_skl.ЦенаТранспОтОбъема, hist_skl.ЦенаТранспОтВеса, checksum(ISNULL(CONVERT(varchar(10), hist_skl.КодТТН), '') 
                                              + ' ' + ISNULL(CAST(hist_skl.ОпКлн AS varchar), '') + ' ' + ISNULL(CAST(hist_skl.КодАдрДоставки AS varchar), '')) AS ТТН_Адрес, 
                                              CASE WHEN КодТТН IS NULL THEN 0 ELSE 1 END AS ExistTTN, 
                                              CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтОбъема / ОпСтоим ELSE 0 END AS ДоляТранРсхОбъем, 
                                              CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтВеса / ОпСтоим ELSE 0 END AS ДоляТранРсхВеса, 
                                              (CASE WHEN Hist_skl.ОпКол >= u.УпакКоэф THEN 1 ELSE 0 END) AS ЗаводскаяУпаковка, (hist_skl.ОпКол * k.ТовЦенаУчет) * (1 + k.НДС / 100) 
                                              AS СуммаЦенаУчет, CAST(FLOOR((CASE WHEN Hist_skl.ОставшийсяСрокГодности < 0 THEN - 10 ELSE Hist_skl.ОставшийсяСрокГодности END) / 10) 
                                              AS INT) AS ОставшийсяСрокГодности, hist_skl.РасхНаВет, hist_skl.КолВетТов, hist_skl.АкцияКод
                                              , Hist_skl.Бонус_1, Hist_skl.Бонус_2, Hist_skl.Бонус_3
				                              , Hist_skl.Возврат_ТР, Hist_skl.Возврат_Эксп, Hist_skl.Транс_Расх
				                              , Hist_skl.[СуммаПрогноз_Акции_НДС], Hist_skl.[СуммаПрогноз_НДС]
				                              , Hist_skl.[СуммаПрогноз_Акции], Hist_skl.[СуммаПрогноз]
				                              , Hist_skl.Прогноз_Кол, Hist_skl.Прогноз_ЦенаУчет, Hist_skl.Прогноз_ЦенаУчет_безНДС
                       FROM          history.[cube.Hist_skl] AS hist_skl
                       LEFT OUTER JOIN dbo.KAT_TVR AS k ON hist_skl.ОпКодТов = k.ТовКод
                       LEFT OUTER JOIN dbo.KAT_UPK AS u ON k.ТовУпак = u.УпакКод
                       WHERE	hist_skl.ОпДатаРасч >= @BegDate and hist_skl.ОпДатаРасч < @EndDate
               ) AS t
);
GO
/****** Object:  UserDefinedFunction [dbo].[f_HIST_USL]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_HIST_USL]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT
dbo.HIST_USL.УслКод, dbo.HIST_USL.УслКол, dbo.HIST_USL.УслЦена, dbo.HIST_USL.УслНомер, dbo.HIST_USL.УслСкл, dbo.HIST_USL.УслОпер, 
dbo.HIST_USL.НаклКод, dbo.HIST_USL.ДатаКод, l.ОпНакл, l.ОпСкл, l.ОпТип, l.ОпДатаИсх, l.ОпКлнТип, l.ОпКлн, l.ОпВозврат, l.ОпСотр,
l.ОпДатаРасч, l.ОпНаклКод, l.ЕстьТовар, l.КодАдрДоставки, l.Основание, l.ДопПрз, l.НашаФирма, l.КодКонтракта, l.НомерПостав,
l.ОпТипПост, l.АвтокодСФ, dbo.HIST_USL.УслЦена * dbo.HIST_USL.УслКол AS Стоим
FROM         dbo.HIST_USL
INNER JOIN dbo.LIST_SKL AS l ON l.ОпНакл = hist_usl.УслНомер AND l.ОпСкл = hist_usl.УслСкл AND l.ОпТип = hist_usl.УслОпер
and l.ОпДатаРасч >= @BegDate and l.ОпДатаРасч < @EndDate
);
GO
/****** Object:  UserDefinedFunction [dbo].[f_DKM_BASE]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_DKM_BASE]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT     b.ПлатКод, b.ПлатНом, b.ПлатНапр, b.ПлатТип, b.ПлатДата, b.ПлатДатаРасч, CONVERT(int, b.ПлатКлнКод) AS ПлатКлнКод, b.ПлатСумма, b.ПлатКодНалог, 
                      b.ПлатДатаОпл, b.ПлатДатаОплРасч, b.ПлатКлнСотр, b.ПлатСчет, b.ПлатРеквизит, b.ПлатАвзНом, bi.НашаФирма, (CASE WHEN (ПлатНапр > 2) 
                      THEN - 1 WHEN (ПлатНапр < 3) THEN 1 ELSE 0 END) * b.ПлатСумма AS ПлатСуммаИтог
FROM         dbo.DKM_BASE AS b INNER JOIN
                          (SELECT DISTINCT ДОКодПлат, НашаФирма, ДОКодКлн
                            FROM          dbo.DKM_BASI) AS bi ON b.ПлатКод = bi.ДОКодПлат
WHERE     (b.ПлатТип < 40) AND (b.ПлатКлнСотр = 1) and (b.ПлатДатаРасч >= @BegDate and b.ПлатДатаРасч < @EndDate)
);
GO
/****** Object:  UserDefinedFunction [dbo].[f_Dim_D_DATES]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_Dim_D_DATES]()
RETURNS TABLE 
AS
RETURN 
(
	SELECT
		ДатыКод
		, ДатыРасч
		, ДатыГод
		, ДатыКвартал
		, ДатыМесяц
		, ДатыДень
		, ДатыНеделя
		, ДатыНеделяДрб
		, ДатыКодНеделя
		, ДатыКодНеделяДрб
		, ЕстьОст
		, Thursday
		, DATEPART(year, ДатыРасч) AS d_Year
		, DATEPART(quarter, ДатыРасч) AS d_Quarter
		, 'Quarter ' + CONVERT(CHAR, DATEPART(quarter, ДатыРасч)) AS str_Quarter
		, DATEPART(month, ДатыРасч) AS d_Month
		, CONVERT(CHAR, DATENAME(month, ДатыРасч)) AS str_Month
		, CONVERT(integer, DATENAME(week, ДатыРасч)) AS d_Week
		, DATENAME(month, ДатыРасч) + ' ' + CONVERT(CHAR, DATENAME(week, ДатыРасч)) AS str_Month_Week
		, CONVERT(CHAR, ДатыРасч, 112) AS str_Date_YYYYMMDD
		, CONVERT(CHAR, DATENAME(day, ДатыРасч)) AS d_Day_in_Month
		, CONVERT(CHAR, ДатыРасч, 104) AS d_Day
		, CONVERT(integer, DATENAME(week, DATEADD(dd, - 1, ДатыРасч))) AS d_Week_PrevDay
		, DATENAME(month, DATEADD(dd, - 1, ДатыРасч)) + ' ' + CONVERT(CHAR, DATENAME(week, DATEADD(dd, - 1, ДатыРасч))) AS str_Month_Week_PrevDay
	FROM  D_DATES
)
GO
/****** Object:  View [dbo].[V_TBL_INC_DIFF]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[V_TBL_INC_DIFF]
AS
SELECT     TOP 100 PERCENT [DATE], LOC_NAKL AS [№ накл.Локис], LOC_SKU_KOD AS [Код Локиса], LOC_SKU AS [Наим-е т-ра], LOC_QTY AS [Кол-во Локис], 
                      SOLVO_QTY AS [Кол-во Солво], QTY_DIFF AS [разница кол-в], SUM_DIFF AS [Сумм-ая разн.], SOLVO_SKU AS [Товар СОЛВО], 
                      SOLVO_NAKL AS [Накл.СОЛВО], loc_skl_id AS [Код склада], loc_skl AS Склад, loc_kln AS [Пост-к Локис], solvo_client AS [Пост-к Солво], 
                      loc_date AS [Дата прих.Локис], solvo_date AS [Дата прих.Солво], SOLVO_SKUCODE AS [Код т-ра Солво], DATE2
FROM         dbo.Tbl_inc_diff
ORDER BY CONVERT(datetime,[DATE],104), ISNULL(LOC_NAKL, SOLVO_NAKL), ISNULL(LOC_SKU_KOD, SOLVO_SKUCODE)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Tbl_inc_diff"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 209
            End
            DisplayFlags = 280
            TopColumn = 21
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1815
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'V_TBL_INC_DIFF'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'V_TBL_INC_DIFF'
GO
/****** Object:  View [dbo].[v_pav_tovotch]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_pav_tovotch]
AS
SELECT     dbo.LIST_SKL.ОпНакл, dbo.LIST_SKL.ОпСкл, dbo.LIST_SKL.ОпТип, dbo.LIST_SKL.ОпКлнТип, dbo.LIST_SKL.ОпВозврат, dbo.LIST_SKL.ОпДатаИсх, 
                      dbo.HIST_SKL.ОпКодТов, dbo.KAT_TVR.ТовНаим, dbo.KAT_TVR.ТовЕИ, dbo.KAT_TVR.ТовАрт, dbo.HIST_SKL.ОпКол, dbo.HIST_SKL.ОпЦена
FROM         dbo.LIST_SKL INNER JOIN
                      dbo.HIST_SKL ON dbo.LIST_SKL.ОпНакл = dbo.HIST_SKL.ОпНакл AND dbo.LIST_SKL.ОпСкл = dbo.HIST_SKL.ОпСкл AND 
                      dbo.LIST_SKL.ОпТип = dbo.HIST_SKL.ОпТип INNER JOIN
                      dbo.KAT_TVR ON dbo.HIST_SKL.ОпКодТов = dbo.KAT_TVR.ТовКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[26] 2[1] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 170
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "HIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 363
               Bottom = 174
               Right = 514
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 552
               Bottom = 114
               Right = 703
            End
            DisplayFlags = 280
            TopColumn = 2
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'v_pav_tovotch'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'v_pav_tovotch'
GO
/****** Object:  View [dbo].[vAddressTypes]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vAddressTypes]
AS
with  
cte as ( SELECT     kdk.КодКлн AS КодАдреса, kdk.КодГрпДопХар, kdk.КодДопХар, a.КодКлиента AS КодКлн, dbo.Kat_kdk.НаимДопХар
FROM         dbo.List_kdk AS kdk INNER JOIN
                      dbo.KLN_ADK AS a ON kdk.КодКлн = a.КодАдресаДоставки AND kdk.mode = 1 INNER JOIN
                      dbo.Kat_kdk ON kdk.КодДопХар = dbo.Kat_kdk.КодДопХар AND kdk.КодГрпДопХар = dbo.Kat_kdk.КодГрДопХар
WHERE     (kdk.КодГрпДопХар = 3) --and kdk.КодКлн = 15100
UNION ALL
SELECT     0 AS КодАдреса, kdk.КодГрпДопХар, kdk.КодДопХар, kdk.КодКлн, Kat_kdk_1.НаимДопХар
FROM         dbo.List_kdk AS kdk INNER JOIN
                      dbo.Kat_kdk AS Kat_kdk_1 ON kdk.КодДопХар = Kat_kdk_1.КодДопХар AND kdk.КодГрпДопХар = Kat_kdk_1.КодГрДопХар
WHERE     (kdk.mode = 0) AND (kdk.КодГрпДопХар = 3)

)
select * from 
(
select *, ROW_NUMBER() over (partition by КодКлн, КодАдреса order by КодДопХар) rw from cte ) t
where rw =1
GO
/****** Object:  View [dbo].[v_VozvrRash]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[v_VozvrRash]
AS
select ОпКодТов,Sum(ОпКол) AS КолРасх,Sum(ОпСтоим) AS СтоимРасх,
НаклКлн,Sum(ОпВесБрутто) AS ВесБруттоРасх,Sum(ОпКолУпак) as КолУпакРасх,
НаклДата,D_NAKL.ОпНаклКод,Sum(ОпВесНетто) AS ВесНеттоРасх
from F_OPER join D_NAKL on F_OPER.ОпНаклКод=D_NAKL.ОпНаклКод
where ОпВозвр=4
group by ОпКодТов,НаклКлн,НаклДата,D_NAKL.ОпНаклКод
GO
/****** Object:  View [dbo].[v_VozvrPrih]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[v_VozvrPrih]
AS
select ОпКодТов,Sum(ОпКол) AS КолПрих,Sum(ОпСтоим) AS СтоимПрих,
НаклКлн,Sum(ОпВесБрутто) AS ВесБруттоПрих,Sum(ОпКолУпак) as КолУпакПрих,
НаклДата,D_NAKL.ОпНаклКод,Sum(ОпВесНетто) AS ВесНеттоПрих
from F_OPER join D_NAKL on F_OPER.ОпНаклКод=D_NAKL.ОпНаклКод
where ОпТип=3 
group by ОпКодТов,НаклКлн,НаклДата,D_NAKL.ОпНаклКод
GO
/****** Object:  View [dbo].[VIEW12]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW12]
AS
SELECT     dbo.KAT_KLN.КлнКод, dbo.KAT_KLN.КлнНаим, dbo.CLN_DKL.КлнНаим AS Expr1, dbo.CLN_DKL.КлнАдрес, dbo.CLN_DKL.КлнГрузАдрес
FROM         dbo.CLN_DKL RIGHT OUTER JOIN
                      dbo.KAT_KLN ON dbo.CLN_DKL.КлнКод = dbo.KAT_KLN.КлнКод
WHERE     (dbo.KAT_KLN.КлнНаим LIKE '%[^a-z]%') AND (dbo.KAT_KLN.КлнНаим LIKE '%[^A-Z]%') AND (dbo.KAT_KLN.КлнНаим LIKE '%[^А-Я]%') AND 
                      (dbo.KAT_KLN.КлнНаим LIKE '%[^а-я]%') AND (dbo.KAT_KLN.КлнНаим LIKE '%[^0-9]%') AND (dbo.KAT_KLN.КлнНаим LIKE '%%')
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 161
               Right = 191
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 6
               Left = 229
               Bottom = 159
               Right = 380
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1680
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW12'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW12'
GO
/****** Object:  View [dbo].[VIEW11]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW11]
AS
SELECT     TOP 100 PERCENT ТовКод, RTRIM(ТовАрт) AS Expr1
FROM         dbo.KAT_TVR
ORDER BY ТовКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 1
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 3
         Width = 284
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW11'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW11'
GO
/****** Object:  View [dbo].[VIEW10]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW10]
AS
SELECT     TOP 100 PERCENT dbo.F_SROK.*, dbo.D_DATES.*
FROM         dbo.F_SROK INNER JOIN
                      dbo.D_DATES ON dbo.F_SROK.ДатаОпер = dbo.D_DATES.ДатыРасч
ORDER BY dbo.D_DATES.ДатыРасч DESC
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "F_SROK"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 158
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_DATES"
            Begin Extent = 
               Top = 6
               Left = 336
               Bottom = 164
               Right = 522
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 19
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1740
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 3105
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW10'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW10'
GO
/****** Object:  View [dbo].[VIEW1]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW1]
AS
SELECT     TOP 100 PERCENT dbo.DKM_BASI.*
FROM         dbo.DKM_BASI
WHERE     (ДОНом LIKE '%/%')
ORDER BY ДОНом
GO
/****** Object:  View [dbo].[V_NAKL_AVZ]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*это накладные связанные с актами взаимозачета*/
CREATE VIEW [dbo].[V_NAKL_AVZ]
AS
SELECT     dbo.D_NAKL.ОпНаклКод
FROM         dbo.DKM_BASE INNER JOIN
                      dbo.DKM_BASI ON dbo.DKM_BASE.ПлатКод = dbo.DKM_BASI.ДОКодПлат INNER JOIN
                      dbo.D_NAKL ON dbo.DKM_BASI.ДОНом = dbo.D_NAKL.НаклНомер AND dbo.DKM_BASI.ДОДатаКод = dbo.D_NAKL.НаклДата
WHERE     (dbo.DKM_BASE.ПлатТип = 22) AND (dbo.DKM_BASE.ПлатНапр = 3)
GO
/****** Object:  View [dbo].[dim_Tvr]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [dbo].[dim_Tvr] as
SELECT  t.ТовКод, t.ТовНаим, t.ТовГрпНаим, t.ТовВидНаим, t.ТовАрт, t.ТовШтрих, t.ТовЕИ,
		t.ТовВесБрутто, t.ТовВесНетто, t.ЕстьОстаток, td.КодПоставщика
FROM    D_TVR AS t LEFT JOIN    TVR_DEF AS td ON t.ТовКод = td.ТовКод
GO
/****** Object:  View [dbo].[dim_OrgAdk]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  view [dbo].[dim_OrgAdk]
as
SELECT do.КодКлн_КодАдрДоставки КодКлн_КодАдрДоставки, CAST(do.КлнКод AS BIGINT) КлнКод, do.КлнНаим, do.ГрпСотрНаим,
	   do.КлнПользКод, do.СотрФамилияИмя, do.СотрОтчество, do.КодГлКлн, do.ГлКлнНаим, do.ГрпКлнНаим, do.ГородНаим,
	   do.КодАдрДоставки, do.АдрДоставки, do.ТипКлиента, do.ПолныйАдрес, do.ПолнАдресХеш,
	   RTRIM(do.КлнНаим)+', '+RTRIM(do.ГородНаим)+', '+RTRIM(do.АдрДоставки) AS Column1,
       CASE WHEN ((KAT_KLN.КлнАрхив & 1) = 0)
            THEN 'Не архивный'
            ELSE 'Архивный' END AS КлнАрхив,
       RTRIM(do.КлнНаим)+', '+RTRIM(do.ГородНаим)+', '+RTRIM(do.АдрДоставки) AS КлнГородАдрес
FROM D_ORGadk do INNER JOIN KAT_KLN ON do.КлнКод = KAT_KLN.КлнКод
UNION
SELECT '0/0' КодКлн_КодАдрДоставки,0 КлнКод,'Нулевой клиент' КлнНаим,NULL ГрпСотрНаим,NULL КлнПользКод,NULL СотрФамилияИмя,
NULL СотрОтчество,NULL КодГлКлн,NULL ГлКлнНаим,'Нулевой клиент группа' ГрпКлнНаим,NULL ГородНаим,NULL КодАдрДоставки,
NULL АдрДоставки,NULL ТипКлиента,NULL ПолныйАдрес,NULL ПолнАдресХеш,NULL Column1,'Нулевой клиент' КлнАрхив, NULL КлнГородАдрес
GO
/****** Object:  View [dbo].[Diadok_lastEvent]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Diadok_lastEvent]
AS
SELECT     id_ivent
FROM         dbo.Diadock
WHERE     (id =
                          (SELECT     MAX(id) AS Expr1
                            FROM          dbo.Diadock AS Diadock_1))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Diadock"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Diadok_lastEvent'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Diadok_lastEvent'
GO
/****** Object:  View [dbo].[Vw_KPK_ClientIndPrice]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_ClientIndPrice]
AS
SELECT dbo.Real_Price_TAB.ТовКод, 
       dbo.Real_Price_TAB.КлнКод AS КодКлн, 
       dbo.Real_Price_Ind_TAB.ind AS ГрпЦен
  FROM dbo.Real_Price_TAB INNER JOIN
       dbo.Real_Price_Ind_TAB ON dbo.Real_Price_TAB.ТовКод = dbo.Real_Price_Ind_TAB.товкод AND 
       dbo.Real_Price_TAB.ЦенаНДС = dbo.Real_Price_Ind_TAB.ЦенаНДС
GO
/****** Object:  View [dbo].[Vw_KPK_Clients_1]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[Vw_KPK_Clients_1]
AS
SELECT     dbo.CLN_DKL.КлнКод, RTRIM(LTRIM(dbo.KAT_KLN.КлнНаим)) AS КлнНаим, RTRIM(LTRIM(dbo.CLN_DKL.КлнНаим)) AS КлнАдрес, '""' AS ИНН, 
                      RTRIM(LTRIM(dbo.D_ORG.ГородНаим)) AS Город, RTRIM(LTRIM(ISNULL(dbo.CLN_DKL.КлнГрузАдрес, dbo.CLN_DKL.КлнАдрес))) AS Адрес, NULL 
                      AS СотрОтчество, dbo.CLN_DKL.МнджКод AS СотрФамилияИмя, RTRIM(LTRIM(dbo.D_ORG.ГрпСотрНаим)) AS ГрпСотрНаим, 
                      RTRIM(LTRIM(dbo.D_ORG.ГрпКлнНаим)) AS ГрпКлнНаим, 'Nдоговора' AS Nдоговора, 0 AS Сальдо, 0 AS ГрпЦен
FROM         dbo.KAT_KLN INNER JOIN
                      dbo.D_ORG ON dbo.KAT_KLN.КлнКод = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.CLN_DKL ON dbo.D_ORG.КлнКод = dbo.CLN_DKL.КлнКод 
where dbo.KAT_KLN.КлнАрхив not in (1,5)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_ORG"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 395
            End
            DisplayFlags = 280
            TopColumn = 2
         End
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 2
               Left = 534
               Bottom = 110
               Right = 687
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_KPK_kat_ppl"
            Begin Extent = 
               Top = 83
               Left = 446
               Bottom = 161
               Right = 597
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 5520
         Alias = 1710
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Clients_1'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Clients_1'
GO
/****** Object:  StoredProcedure [dbo].[Fill_AvgSaldoByFirm_test]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--Автор: Евгений Федяков
--Дата:  2010.11.26
--Процедура делате тотже расчет что и NewSaldoSrok
--Скорость процедуры заметно падает, когда идет расчет по каждому дню
--Время работы 5 мин 13 сек
CREATE PROCEDURE [dbo].[Fill_AvgSaldoByFirm_test]
AS
CREATE TABLE #F_STREAM
(
	Клн			BIGINT NOT NULL,
	Дата		DATE NOT NULL,
	НашаФирма	INT,
	СледДата	DATE,
	Credit		MONEY,
	Debit		MONEY,
	SumCredit	MONEY,
	SumDebit	MONEY,
	DateCode	BIGINT
	
)
TRUNCATE TABLE  dbo.AvgSaldoByFirm_testBit

INSERT INTO #F_STREAM (Клн,Дата,НашаФирма,Credit,Debit)				
select 
Клн, Дата,НашаФирма, 
sum(debit),
sum(credit)
from
(
SELECT 

l.ОпКлн Клн, l.ОпДатаРасч Дата,l.НашаФирма, 
case when l.ОпТип = 1 then h.ОпЦена*h.ОпКол end debit,
case when l.ОпТип = 2 then h.ОпЦена*h.ОпКол end credit

  from LIST_SKL_TEMP l
left join hist_skl h on l.ОпНакл = h.ОпНакл and l.ОпТип = h.ОпТип and l.ОпСкл = h.ОпСкл
left join hist_usl u on l.ОпНакл = u.УслНомер and l.ОпТип = u.УслОпер and l.ОпСкл = u.УслСкл
where l.ОпКлнТип = 2 and left(right(dbo.dec2bit(ОпБит), 16), 1)='0'
and l.ОпКлн in (11156,11014,15026)


UNION ALL

SELECT        
CONVERT(int, b.ПлатКлнКод),
b.ПлатДатаРасч,
bi.НашаФирма,
(CASE WHEN (ПлатНапр < 3) THEN b.ПлатСумма end),
(CASE WHEN (ПлатНапр > 2) THEN b.ПлатСумма END)

FROM            dbo.DKM_BASE AS b INNER JOIN
                             (SELECT DISTINCT ДОКодПлат, НашаФирма, ДОКодКлн
                               FROM            dbo.DKM_BASI) AS bi ON b.ПлатКод = bi.ДОКодПлат
WHERE        (b.ПлатТип < 40) AND (b.ПлатКлнСотр = 1)
and b.ПлатКлнКод in (11156,11014,15026)
) t
group by Клн, Дата,НашаФирма				
				
				
				
CREATE UNIQUE CLUSTERED INDEX ix1 on #F_STREAM(Клн,НашаФирма,Дата)

--Попадают отрицательные числа
UPDATE #F_STREAM
SET Credit = Credit - Debit
WHERE Debit < 0 

UPDATE #F_STREAM
SET Debit = Debit - Credit
WHERE Credit < 0 

UPDATE 	#F_STREAM
SET СледДата	=  	ISNULL((SELECT TOP 1 t1.Дата 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
								AND t1.НашаФирма = #F_STREAM.НашаФирма
								AND t1.Дата > #F_STREAM.Дата)
							,GETDATE()+1)
	,SumCredit	=	ISNULL((SELECT sum(t1.Credit) 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
									AND t1.НашаФирма = #F_STREAM.НашаФирма
									AND t1.Дата <=#F_STREAM.Дата)
							,0)						
	,SumDebit	=	ISNULL((SELECT sum(t1.Debit) 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
									AND t1.НашаФирма = #F_STREAM.НашаФирма
									AND t1.Дата <=#F_STREAM.Дата)
							,0)
						
			

				

INSERT INTO dbo.AvgSaldoByFirm_testBit(
			[Client]
			,[Firm]
		  ,[Credit]
		  ,[Debit]
		  ,[Saldo]
		  ,[Date]
		  ,[AvgSaldo]
		  ,DateCode
			)

SELECT

		Клн				Client
		,t.НашаФирма
      ,MAX([credit])	[Credit]
      ,MAX([debit])		[Debit]
      ,MAX(saldo)		Saldo
      ,(Дата)			[Date]      
      ,SUM(AvgSaldo)	AvgSaldo
      ,MAX(DateCode)	DateCode
      --INTO dbo.AvgSaldo
      
FROM
(
		SELECT		t.Клн
					,t.НашаФирма
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Credit ELSE 0 END Credit
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Debit  ELSE 0 END Debit
				  ,t.SumCredit-t.SumDebit Saldo 
				  ,d.ДатыРасч Дата      
				  ,-((case when tt.debit -tt.sumDebit +t.sumcredit <= 0  then tt.debit * (DATEDIFF(dd,tt.Дата,d.ДатыРасч) + 1)
													  else (tt.sumdebit-t.sumcredit)*(DATEDIFF(dd,tt.Дата,d.ДатыРасч))
				  end)) AvgSaldo
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.DateCode ELSE 0 END DateCode 				  
			  FROM #F_STREAM t			  
					-- поиск записей с которых начинается долг
					INNER JOIN #F_STREAM tt ON tt.Клн = t.Клн and tt.НашаФирма = t.НашаФирма and tt.Дата <= t.Дата 
												and tt.sumdebit >= t.sumcredit --and tt.debit>0		  
					-- формируем записи на каждый день, из-за этого жутко тормазит
					INNER JOIN [dbo].[D_DATES] d ON d.ДатыРасч >= t.Дата AND d.ДатыРасч < t.СледДата -- 
		UNION ALL

		SELECT		t.Клн	
					,t.НашаФирма	
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Credit ELSE 0 END Credit
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Debit  ELSE 0 END Debit
				  ,t.SumCredit-t.SumDebit Saldo 
				  ,d.ДатыРасч Дата  
				  ,((case when tt.credit -tt.sumcredit +t.sumdebit <= 0  then tt.credit * (DATEDIFF(dd,tt.Дата,d.ДатыРасч) ) -- + 1 странно что здесь не нужно прибавлять день
													  else (tt.sumcredit-t.sumdebit)*(DATEDIFF(dd,tt.Дата,d.ДатыРасч) )
				  end)) 
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.DateCode ELSE 0 END DateCode
			  FROM #F_STREAM t  
					-- поиск записей с которых начинается плюс	  
					INNER JOIN #F_STREAM tt on tt.Клн = t.Клн and tt.НашаФирма = t.НашаФирма and tt.Дата <= t.Дата 
										and tt.sumcredit >= t.sumdebit --and tt.credit>0  
					INNER JOIN [dbo].[D_DATES] d ON d.ДатыРасч >= t.Дата AND d.ДатыРасч < t.СледДата


) t  
GROUP BY t.Клн,t.НашаФирма,t.Дата
ORDER BY t.Клн,t.НашаФирма,t.Дата   

--INSERT INTO dbo.AvgSaldoByFirm([Client],[Firm],[Credit],[Debit],[Saldo],[Date],[AvgSaldo],DateCode)
--select [Client],null as [Firm],[Credit],[Debit],[Saldo],[Date],[AvgSaldo],DateCode from dbo.AvgSaldo

DROP TABLE #F_STREAM
GO
/****** Object:  StoredProcedure [dbo].[Fill_AvgSaldoByFirm]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--Автор: Евгений Федяков
--Дата:  2010.11.26
--Процедура делате тотже расчет что и NewSaldoSrok
--Скорость процедуры заметно падает, когда идет расчет по каждому дню
--Время работы 5 мин 13 сек
CREATE PROCEDURE [dbo].[Fill_AvgSaldoByFirm]
AS
CREATE TABLE #F_STREAM
(
	Клн			BIGINT NOT NULL,
	Дата		DATE NOT NULL,
	НашаФирма	INT,
	СледДата	DATE,
	Credit		MONEY,
	Debit		MONEY,
	SumCredit	MONEY,
	SumDebit	MONEY,
	DateCode	BIGINT
	
)
TRUNCATE TABLE  dbo.AvgSaldoByFirm

INSERT INTO #F_STREAM (Клн,Дата,НашаФирма,Credit,Debit)				
select 
Клн, Дата,НашаФирма, 
sum(debit),
sum(credit)
from
(
SELECT 

l.ОпКлн Клн, l.ОпДатаРасч Дата,l.НашаФирма, 
case when l.ОпТип = 1 then h.ОпЦена*h.ОпКол end debit,
case when l.ОпТип = 2 then h.ОпЦена*h.ОпКол end credit

  from list_skl l
left join hist_skl h on l.ОпНакл = h.ОпНакл and l.ОпТип = h.ОпТип and l.ОпСкл = h.ОпСкл
left join hist_usl u on l.ОпНакл = u.УслНомер and l.ОпТип = u.УслОпер and l.ОпСкл = u.УслСкл
where l.ОпКлнТип = 2 and left(right(dbo.dec2bit(ОпБит), 16), 1)='0'


UNION ALL

SELECT        
CONVERT(int, b.ПлатКлнКод),
b.ПлатДатаРасч,
bi.НашаФирма,
(CASE WHEN (ПлатНапр < 3) THEN b.ПлатСумма end),
(CASE WHEN (ПлатНапр > 2) THEN b.ПлатСумма END)

FROM            dbo.DKM_BASE AS b INNER JOIN
                             (SELECT DISTINCT ДОКодПлат, НашаФирма, ДОКодКлн
                               FROM            dbo.DKM_BASI) AS bi ON b.ПлатКод = bi.ДОКодПлат
WHERE        (b.ПлатТип < 40) AND (b.ПлатКлнСотр = 1)
) t
group by Клн, Дата,НашаФирма				
				
				
				
CREATE UNIQUE CLUSTERED INDEX ix1 on #F_STREAM(Клн,НашаФирма,Дата)

--Попадают отрицательные числа
UPDATE #F_STREAM
SET Credit = Credit - Debit
WHERE Debit < 0 

UPDATE #F_STREAM
SET Debit = Debit - Credit
WHERE Credit < 0 

UPDATE 	#F_STREAM
SET СледДата	=  	ISNULL((SELECT TOP 1 t1.Дата 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
								AND t1.НашаФирма = #F_STREAM.НашаФирма
								AND t1.Дата > #F_STREAM.Дата)
							,GETDATE()+1)
	,SumCredit	=	ISNULL((SELECT sum(t1.Credit) 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
									AND t1.НашаФирма = #F_STREAM.НашаФирма
									AND t1.Дата <=#F_STREAM.Дата)
							,0)						
	,SumDebit	=	ISNULL((SELECT sum(t1.Debit) 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
									AND t1.НашаФирма = #F_STREAM.НашаФирма
									AND t1.Дата <=#F_STREAM.Дата)
							,0)
						
			

				

INSERT INTO dbo.AvgSaldoByFirm (
			[Client]
			,[Firm]
		  ,[Credit]
		  ,[Debit]
		  ,[Saldo]
		  ,[Date]
		  ,[AvgSaldo]
		  ,DateCode
			)

SELECT

		Клн				Client
		,t.НашаФирма
      ,MAX([credit])	[Credit]
      ,MAX([debit])		[Debit]
      ,MAX(saldo)		Saldo
      ,(Дата)			[Date]      
      ,SUM(AvgSaldo)	AvgSaldo
      ,MAX(DateCode)	DateCode
      --INTO dbo.AvgSaldo
      
FROM
(
		SELECT	   t.Клн
		          ,t.НашаФирма
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Credit ELSE 0 END Credit
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Debit  ELSE 0 END Debit
				  ,t.SumCredit-t.SumDebit Saldo 
				  ,d.ДатыРасч Дата      
				  ,-((case when tt.debit -tt.sumDebit +t.sumcredit <= 0  then tt.debit * (DATEDIFF(dd,tt.Дата,d.ДатыРасч) + 1)
													  else (tt.sumdebit-t.sumcredit)*(DATEDIFF(dd,tt.Дата,d.ДатыРасч))
				  end)) AvgSaldo
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.DateCode ELSE 0 END DateCode 				  
			  FROM #F_STREAM t			  
					-- поиск записей с которых начинается долг
					INNER JOIN #F_STREAM tt ON tt.Клн = t.Клн and tt.НашаФирма = t.НашаФирма and tt.Дата <= t.Дата 
												and tt.sumdebit >= t.sumcredit --and tt.debit>0		  
					-- формируем записи на каждый день, из-за этого жутко тормазит
					INNER JOIN [dbo].[D_DATES] d ON d.ДатыРасч >= t.Дата AND d.ДатыРасч < t.СледДата -- 
		UNION ALL

		SELECT		t.Клн	
					,t.НашаФирма	
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Credit ELSE 0 END Credit
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Debit  ELSE 0 END Debit
				  ,t.SumCredit-t.SumDebit Saldo 
				  ,d.ДатыРасч Дата  
				  ,((case when tt.credit -tt.sumcredit +t.sumdebit <= 0  then tt.credit * (DATEDIFF(dd,tt.Дата,d.ДатыРасч) ) -- + 1 странно что здесь не нужно прибавлять день
													  else (tt.sumcredit-t.sumdebit)*(DATEDIFF(dd,tt.Дата,d.ДатыРасч) )
				  end)) 
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.DateCode ELSE 0 END DateCode
			  FROM #F_STREAM t  
					-- поиск записей с которых начинается плюс	  
					INNER JOIN #F_STREAM tt on tt.Клн = t.Клн and tt.НашаФирма = t.НашаФирма and tt.Дата <= t.Дата 
										and tt.sumcredit >= t.sumdebit --and tt.credit>0  
					INNER JOIN [dbo].[D_DATES] d ON d.ДатыРасч >= t.Дата AND d.ДатыРасч < t.СледДата


) t  
GROUP BY t.Клн,t.НашаФирма,t.Дата
ORDER BY t.Клн,t.НашаФирма,t.Дата   

--INSERT INTO dbo.AvgSaldoByFirm([Client],[Firm],[Credit],[Debit],[Saldo],[Date],[AvgSaldo],DateCode)
--select [Client],null as [Firm],[Credit],[Debit],[Saldo],[Date],[AvgSaldo],DateCode from dbo.AvgSaldo

DROP TABLE #F_STREAM
GO
/****** Object:  StoredProcedure [dbo].[Fill_t_srok_opl]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--Автор: Евгений Федяков
--Дата:  2010.11.26
--Процедура делате тотже расчет что и NewSaldoSrok
--Скорость процедуры заметно падает, когда идет расчет по каждому дню
--Время работы 5 мин 13 сек
CREATE PROCEDURE [dbo].[Fill_t_srok_opl]
AS
CREATE TABLE #F_STREAM
(
	Клн			BIGINT NOT NULL,
	Дата		DATE NOT NULL,
	НашаФирма	INT,
	СледДата	DATE,
	Credit		MONEY,
	Debit		MONEY,
	SumCredit	MONEY,
	SumDebit	MONEY,
	DateCode	BIGINT
	
)
--TRUNCATE TABLE  dbo.AvgSaldo

INSERT INTO #F_STREAM (Клн,Дата,НашаФирма,Credit,Debit)				
select 
Клн, Дата,НашаФирма, 
sum(debit),
sum(credit)
from
(
SELECT 

l.ОпКлн Клн, l.ОпДатаРасч Дата,l.НашаФирма, 
case when l.ОпТип = 1 then h.ОпЦена*h.ОпКол end debit,
case when l.ОпТип = 2 then h.ОпЦена*h.ОпКол end credit

  from list_skl l
left join hist_skl h on l.ОпНакл = h.ОпНакл and l.ОпТип = h.ОпТип and l.ОпСкл = h.ОпСкл
left join hist_usl u on l.ОпНакл = u.УслНомер and l.ОпТип = u.УслОпер and l.ОпСкл = u.УслСкл
where l.ОпКлнТип = 2


UNION ALL

SELECT        
CONVERT(int, b.ПлатКлнКод),
b.ПлатДатаРасч,
bi.НашаФирма,
(CASE WHEN (ПлатНапр < 3) THEN b.ПлатСумма end),
(CASE WHEN (ПлатНапр > 2) THEN b.ПлатСумма END)

FROM            dbo.DKM_BASE AS b INNER JOIN
                             (SELECT DISTINCT ДОКодПлат, НашаФирма, ДОКодКлн
                               FROM            dbo.DKM_BASI) AS bi ON b.ПлатКод = bi.ДОКодПлат
WHERE        (b.ПлатТип < 40) AND (b.ПлатКлнСотр = 1)
) t
group by Клн, Дата,НашаФирма				
				
				
				
CREATE UNIQUE CLUSTERED INDEX ix1 on #F_STREAM(Клн,НашаФирма,Дата)

--Попадают отрицательные числа
UPDATE #F_STREAM
SET Credit = Credit - Debit
WHERE Debit < 0 

UPDATE #F_STREAM
SET Debit = Debit - Credit
WHERE Credit < 0 

UPDATE 	#F_STREAM
SET СледДата	=  	ISNULL((SELECT TOP 1 t1.Дата 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
								AND t1.НашаФирма = #F_STREAM.НашаФирма
								AND t1.Дата > #F_STREAM.Дата)
							,GETDATE()+1)
	,SumCredit	=	ISNULL((SELECT sum(t1.Credit) 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
									AND t1.НашаФирма = #F_STREAM.НашаФирма
									AND t1.Дата <=#F_STREAM.Дата)
							,0)						
	,SumDebit	=	ISNULL((SELECT sum(t1.Debit) 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
									AND t1.НашаФирма = #F_STREAM.НашаФирма
									AND t1.Дата <=#F_STREAM.Дата)
							,0)
						
			

				

/*INSERT INTO dbo.AvgSaldo(
			[Client]
		  ,[Credit]
		  ,[Debit]
		  ,[Saldo]
		  ,[Date]
		  ,[AvgSaldo]
		  ,DateCode
			)*/

SELECT

		Клн				Client
      ,MAX([credit])	[Credit]
      ,MAX([debit])		[Debit]
      ,MAX(saldo)		Saldo
      ,(Дата)			[Date]      
      ,SUM(AvgSaldo)	AvgSaldo
      ,MAX(DateCode)	DateCode
      --INTO dbo.AvgSaldo
      
FROM
(
		SELECT		t.Клн
					,t.НашаФирма
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Credit ELSE 0 END Credit
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Debit  ELSE 0 END Debit
				  ,t.SumCredit-t.SumDebit Saldo 
				  ,d.ДатыРасч Дата      
				  ,-((case when tt.debit -tt.sumDebit +t.sumcredit <= 0  then tt.debit * (DATEDIFF(dd,tt.Дата,d.ДатыРасч) + 1)
													  else (tt.sumdebit-t.sumcredit)*(DATEDIFF(dd,tt.Дата,d.ДатыРасч))
				  end)) AvgSaldo
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.DateCode ELSE 0 END DateCode 				  
			  FROM #F_STREAM t			  
					-- поиск записей с которых начинается долг
					INNER JOIN #F_STREAM tt ON tt.Клн = t.Клн and tt.НашаФирма = t.НашаФирма and tt.Дата <= t.Дата 
												and tt.sumdebit >= t.sumcredit --and tt.debit>0		  
					-- формируем записи на каждый день, из-за этого жутко тормазит
					INNER JOIN [dbo].[D_DATES] d ON d.ДатыРасч >= t.Дата AND d.ДатыРасч < t.СледДата -- 
		UNION ALL

		SELECT		t.Клн	
					,t.НашаФирма	
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Credit ELSE 0 END Credit
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Debit  ELSE 0 END Debit
				  ,t.SumCredit-t.SumDebit Saldo 
				  ,d.ДатыРасч Дата  
				  ,((case when tt.credit -tt.sumcredit +t.sumdebit <= 0  then tt.credit * (DATEDIFF(dd,tt.Дата,d.ДатыРасч) ) -- + 1 странно что здесь не нужно прибавлять день
													  else (tt.sumcredit-t.sumdebit)*(DATEDIFF(dd,tt.Дата,d.ДатыРасч) )
				  end)) 
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.DateCode ELSE 0 END DateCode
			  FROM #F_STREAM t  
					-- поиск записей с которых начинается плюс	  
					INNER JOIN #F_STREAM tt on tt.Клн = t.Клн and tt.НашаФирма = t.НашаФирма and tt.Дата <= t.Дата 
										and tt.sumcredit >= t.sumdebit --and tt.credit>0  
					INNER JOIN [dbo].[D_DATES] d ON d.ДатыРасч >= t.Дата AND d.ДатыРасч < t.СледДата


) t  
GROUP BY t.Клн,t.НашаФирма,t.Дата
ORDER BY t.Клн,t.НашаФирма,t.Дата   
  
  
--DROP TABLE #F_STREAM
GO
/****** Object:  StoredProcedure [dbo].[Fill_t_dolg_tab]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--Автор: Евгений Федяков
--Дата:  2010.11.26
--Процедура делате тотже расчет что и NewSaldoSrok
--Скорость процедуры заметно падает, когда идет расчет по каждому дню
--Время работы 5 мин 13 сек
CREATE PROCEDURE [dbo].[Fill_t_dolg_tab]
AS
CREATE TABLE #F_STREAM
(
	Клн			BIGINT NOT NULL,
	Дата		DATE NOT NULL,
	СледДата	DATE,
	Credit		MONEY,
	Debit		MONEY,
	SumCredit	MONEY,
	SumDebit	MONEY,
	DateCode	BIGINT
	
)
TRUNCATE TABLE  dbo.AvgSaldo

INSERT INTO #F_STREAM (Клн,Дата,Credit,Debit,DateCode)
SELECT			t.Клн,				
				(SELECT TOP 1 d.ДатыРасч 
						FROM dbo.D_DATES d 
						WHERE t.Дата = d.ДатыКод) -- так план больше нравится
				Дата				
				,SUM(CASE WHEN (Тип%2) = 0 THEN t.Кол ELSE 0 END) Credit
				,SUM(CASE WHEN (Тип%2) = 1 THEN t.Кол ELSE 0 END) Debit				
				,t.Дата
				FROM dbo.F_STREAM t
						--INNER JOIN dbo.D_DATES d ON t.Дата = d.ДатыКод
				GROUP by t.Клн,  t.Дата
				
CREATE UNIQUE CLUSTERED INDEX ix1 on #F_STREAM(Клн,Дата)

--Попадают отрицательные числа
UPDATE #F_STREAM
SET Credit = Credit - Debit
WHERE Debit < 0 

UPDATE #F_STREAM
SET Debit = Debit - Credit
WHERE Credit < 0 

UPDATE 	#F_STREAM
SET СледДата	=  	ISNULL((SELECT TOP 1 t1.Дата 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
								AND t1.Дата > #F_STREAM.Дата)
							,GETDATE()+1)
	,SumCredit	=	ISNULL((SELECT sum(t1.Credit) 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
									AND t1.Дата <=#F_STREAM.Дата)
							,0)						
	,SumDebit	=	ISNULL((SELECT sum(t1.Debit) 
							FROM #F_STREAM t1 							
							WHERE t1.Клн = #F_STREAM.Клн 
									AND t1.Дата <=#F_STREAM.Дата)
							,0)
						
			

				
--INSERT INTO dbo.t_dolg_tab2 (IdClient,[Credit],[Debit],Saldo,DateSaldo,sumPeriod)
INSERT INTO dbo.AvgSaldo(
			[Client]
		  ,[Credit]
		  ,[Debit]
		  ,[Saldo]
		  ,[Date]
		  ,[AvgSaldo]
		  ,DateCode
			)

SELECT

		Клн				Client
      ,MAX([credit])	[Credit]
      ,MAX([debit])		[Debit]
      ,MAX(saldo)		Saldo
      ,(Дата)			[Date]      
      ,SUM(AvgSaldo)	AvgSaldo
      ,MAX(DateCode)	DateCode
      --INTO dbo.AvgSaldo
      
FROM
(
		SELECT		t.Клн		
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Credit ELSE 0 END Credit
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Debit  ELSE 0 END Debit
				  ,t.SumCredit-t.SumDebit Saldo 
				  ,d.ДатыРасч Дата      
				  ,-((case when tt.debit -tt.sumDebit +t.sumcredit <= 0  then tt.debit * (DATEDIFF(dd,tt.Дата,d.ДатыРасч) + 1)
													  else (tt.sumdebit-t.sumcredit)*(DATEDIFF(dd,tt.Дата,d.ДатыРасч))
				  end)) AvgSaldo
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.DateCode ELSE 0 END DateCode 				  
			  FROM #F_STREAM t			  
					-- поиск записей с которых начинается долг
					INNER JOIN #F_STREAM tt ON tt.Клн = t.Клн and tt.Дата <= t.Дата 
												and tt.sumdebit >= t.sumcredit --and tt.debit>0		  
					-- формируем записи на каждый день, из-за этого жутко тормазит
					INNER JOIN [dbo].[D_DATES] d ON d.ДатыРасч >= t.Дата AND d.ДатыРасч < t.СледДата -- 
		UNION ALL

		SELECT		t.Клн		
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Credit ELSE 0 END Credit
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.Debit  ELSE 0 END Debit
				  ,t.SumCredit-t.SumDebit Saldo 
				  ,d.ДатыРасч Дата  
				  ,((case when tt.credit -tt.sumcredit +t.sumdebit <= 0  then tt.credit * (DATEDIFF(dd,tt.Дата,d.ДатыРасч) ) -- + 1 странно что здесь не нужно прибавлять день
													  else (tt.sumcredit-t.sumdebit)*(DATEDIFF(dd,tt.Дата,d.ДатыРасч) )
				  end)) 
				  ,CASE WHEN d.ДатыРасч = t.Дата THEN t.DateCode ELSE 0 END DateCode
			  FROM #F_STREAM t  
					-- поиск записей с которых начинается плюс	  
					INNER JOIN #F_STREAM tt on tt.Клн = t.Клн and tt.Дата <= t.Дата 
										and tt.sumcredit >= t.sumdebit --and tt.credit>0  
					INNER JOIN [dbo].[D_DATES] d ON d.ДатыРасч >= t.Дата AND d.ДатыРасч < t.СледДата


) t  
GROUP BY t.Клн,t.Дата
ORDER BY t.Клн,t.Дата   
  
  
DROP TABLE #F_STREAM
GO
/****** Object:  StoredProcedure [cube].[fill_skl_ost]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--процедура расчитывает недопоставки
--ЕФ
--01,02,2012
CREATE PROCEDURE [cube].[fill_skl_ost]
AS
select h.ОпКодТов, h.ОпСкл, s.ОпДатаРасч, sum(ОпКол) Кол 
into #t
from hist_skl h
inner join list_skl s on h.ОпНаклКод = s.ОпНаклКод
where 
h.ОпТипКлн = 2 
and h.ОпТип = 2
and h.ОпВозвр = 0
group by h.ОпКодТов, h.ОпСкл, s.ОпДатаРасч;

create index _ix on #t(ОпКодТов, ОпСкл, ОпДатаРасч);
truncate table cube.skl_ost;

insert into cube.skl_ost ([Скл]
      ,[Дата]
      ,[ТовКод]
      ,[Остаток]
      ,[ВесБруттоОстатка]
      ,[СуммаЦенаУчетОстатка]
      ,[ОбъемОстатка]
      ,[дефицит]
      ,[ТрехДневныйДефицит])
select  Скл, Дата, ТовКод,Остаток, ВесБруттоОстатка, СуммаЦенаУчетОстатка, ОбъемОстатка
                         , дефицит                         
                         , (CASE WHEN (прод10*3/10 > isnull(Остаток,0)) and прод1<прод10/10 THEN (прод10*3/10 - isnull(Остаток,0)) * УчЦена ELSE NULL END) AS ТрехДневныйДефицит                         
                          from 
(
SELECT        o.Скл, o.ДатаОстатка AS Дата, o.ТовКод, o.Остаток, t.ТовВесБрутто * o.Остаток AS ВесБруттоОстатка,k.ТовЦенаУчет * (1 + k.НДС / 100) УчЦена, (o.Остаток * k.ТовЦенаУчет) * (1 + k.НДС / 100) 
                         AS СуммаЦенаУчетОстатка, t.Объем * o.Остаток AS ОбъемОстатка
                         ,CASE WHEN t .МинОст > isnull(o.Остаток,0) THEN ((t .МинОст - isnull(o.Остаток,0)) * k.ТовЦенаУчет) 
                         * (1 + k.НДС / 100) ELSE NULL END AS дефицит
                         , (
                         select sum(Кол) Кол 							
							from #t t
							where 
							                     
							t.ОпКодТов = o.ТовКод and (o.ДатаОстатка between dateadd(dd,-10,t.ОпДатаРасч) and t.ОпДатаРасч) and t.ОпСкл = o.Скл
                         
                         ) прод10
                         , ttt.Кол прод1
                         
FROM            dbo.KAT_TVR AS k INNER JOIN
						cube.skl_month_remnant AS o ON o.ТовКод = k.ТовКод INNER JOIN
                         dbo.TVR_DEF AS t ON k.ТовКод = t.ТовКод 
                         left join #t ttt on ttt.ОпКодТов = o.ТовКод and (o.ДатаОстатка = ttt.ОпДатаРасч) and ttt.ОпСкл = o.Скл
 ) tt
                          
drop table #t                         
/*where k.ТовАрт = '073w116'
and ДатаОстатка = '20120101'*/
/*CASE WHEN t .МинОст > o.Остаток THEN ((t .МинОст - o.Остаток) * k.ТовЦенаУчет) 
                         * (1 + k.НДС / 100) ELSE NULL END > 0 */
GO
/****** Object:  StoredProcedure [cube].[fill_skl_month_remnant]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [cube].[fill_skl_month_remnant]
as
--процедура заполнения месячных остатков из витрины
RAISERROR (N'<<Загляни во внутрь этой процедуры>>', -- Message text.
           10, -- Severity,
           1, -- State,
           N'abcde'); -- First argument supplies the string.

--truncate table cube.[skl_month_remnant]
insert into
cube.[skl_month_remnant](
	[Скл] ,
	--[Дата] ,
	[ТовКод] ,
	[Остаток] 
)
select  cast([[Measures]].[скл]]] as int)
      --,CONVERT(date,REPLACE([[Measures]].[Дата]]],'.','/'),101)
      ,cast([[Measures]].[ТовКод]]] as int)
      ,cast([[Measures]].[rem]]] as real)
        from openquery(TS99,'WiTH MEMBER a as
SUM(null:[Dates].[Даты Расч].CurrentMember,
2*(Oper.[Oper ID].&[1],[Measures].[Оп Кол]) 
-  [Measures].[Оп Кол]) - (
2*([Dates].[Даты Расч].CurrentMember,Oper.[Oper ID].&[1],[Measures].[Оп Кол]) 
-  ([Dates].[Даты Расч].CurrentMember,[Measures].[Оп Кол])) 
member rem as case when a =0 then null else a end
member measures.[скл] as case when rem =0 then null else [KAT SKL].[Скл].CurrentMember.Properties("Key",typed) end
member measures.[Дата] as case when rem =0 then null else [Dates].[Даты Расч].CurrentMember.Properties("Key",typed) end
member measures.[ТовКод] as case when rem =0 then null else [KAT TVR].[Тов Код].CurrentMember.Properties("Key",typed) end

SELECT NON EMPTY{
measures.[скл],measures.[Дата],measures.[ТовКод],rem} ON 0,
NON EMPTY([KAT SKL].[Скл].[Скл]*[Dates].[Даты Расч].[Даты Расч]*[KAT TVR].[Тов Код].[Тов Код]) DIMENSION PROPERTIES MEMBER_KEY ON 1
FROM 
(select [Dates].[День].&[1] on 0 FROM
(select 
--{[Dates].[Год-Месяц-День].[Месяц].&[2009]&[1]} on 0
{[Dates].[Год].&[2010],[Dates].[Год].&[2011],[Dates].[Год].&[2012]} on 0
from
[PR_Euras]))
--

 ')
GO
/****** Object:  StoredProcedure [dbo].[fill_M_GRPS]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
--Евгений Федяков

CREATE  PROCEDURE [dbo].[fill_M_GRPS] AS
set nocount on

truncate table m_grpcen;


	insert into m_grpcen (ТврКод, грпЦен, Цена) 
	SELECT ТовКод, Грп, Val
FROM 
   (select ТовКод, грп1 [1], грп2 [2], грп3 [3], грп4 [4], грп5 [5], грп6 [6], грп7 [7],грп8 [8], грп9 [9], грп10 [10],
    грп11 [11], грп12 [12], грп13 [13], грп14 [14], грп15 [15], грп16 [16], грп17 [17], 
	грп18 [18], грп19 [19], грп20 [20], грп21 [21], грп22 [22], грп23 [23], грп24 [24], грп25 [25], грп26 [26], грп27 [27],
	грп28 [28], грп29 [29], грп30 [30], грп31 [31], грп32 [32], грп33 [33], грп34 [34], грп35 [35], грп36 [36], грп37 [37],грп38 [38], грп39 [39],
	грп40 [40], грп41 [41], грп42 [42], грп43 [43], грп44 [44], грп45 [45], грп46 [46], грп47 [47], грп48 [48], грп49 [49],
	грп50 [50], грп51 [51], грп52 [52], грп53 [53], грп54 [54], грп55 [55], грп56 [56], грп57 [57], грп58 [58], грп59 [59],
	грп60 [60], грп61 [61], грп62 [62], грп63 [63], грп64 [64]
from TVR_STV) p
UNPIVOT
   (Val FOR Грп IN 
      ( [1],  [2],  [3],  [4],  [5],  [6],  [7],
	 [8],  [9],  [10],  [11],  [12],  [13],  [14],  [15],  [16],  [17], 
	 [18],  [19],  [20],  [21],  [22],  [23],  [24],  [25],  [26],  [27],
	 [28],  [29],  [30],  [31],  [32],  [33],  [34],  [35],  [36],  [37],  [38],  [39]
	 ,  [40],  [41],  [42],  [43],  [44],  [45],  [46],  [47],  [48],  [49]
	 ,  [50],  [51],  [52],  [53],  [54],  [55],  [56],  [57],  [58],  [59]
	 ,  [60],  [61],  [62],  [63],  [64])
)AS unpvt;
GO
/****** Object:  StoredProcedure [dbo].[FillDates]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[FillDates] AS
declare @PrevDate datetime
declare @CurDate datetime
declare @NextDate datetime
declare @Period int
declare @Dates as cursor,@Today as datetime

set @Dates=cursor local for select ДатыРасч from d_dates order by ДатыРасч
open @Dates
fetch next from @Dates into @CurDate
set @PrevDate=@CurDate
while @@FETCH_STATUS=0
  begin
    set @Period=DateDiff(dd,@PrevDate,@CurDate)
    while @Period>1
      begin
        set @NextDate=DateAdd(dd,-@Period+1,@CurDate)
        insert d_dates (ДатыРасч) values (@NextDate)
--PRINT @NextDate
        set @Period=@Period-1
      end
    set @PrevDate=@CurDate
    fetch next from @Dates into @CurDate
  end
  set @Today=CONVERT(datetime,'01.01.'+CAST(Year(GetDate())+1 as char(4)),104)
  set @Period=DateDiff(dd,@PrevDate,@Today)
  while @Period>1
    begin
      set @NextDate=DateAdd(dd,-@Period+1,@Today)
      if (select ДатыРасч from d_dates where ДатыРасч=@NextDate) is NULL
        begin
          insert d_dates (ДатыРасч) values (@NextDate)
        end
--PRINT @NextDate
      set @Period=@Period-1
    end
GO
/****** Object:  View [dbo].[KLN_G]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KLN_G]
AS
SELECT     dbo.KAT_KLN.КлнКод, dbo.SLD_KLN.ГрпЦен
FROM         dbo.KAT_KLN LEFT OUTER JOIN
                      dbo.SLD_KLN ON dbo.KAT_KLN.КлнКод = dbo.SLD_KLN.КлнКод
GO
/****** Object:  View [dbo].[Коды _товаров_внешние]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Коды _товаров_внешние]
AS
SELECT     TOP (100) PERCENT dbo.KAT_TVR.ТовНаим, dbo.zkz_kodp.Код AS [внешний код], dbo.KAT_KLN.КлнНаим, dbo.zkz_kodp.ТовКод + dbo.zkz_kodp.Код AS Expr1, 
                      dbo.KAT_TVR.ТовКод, dbo.KAT_KLN.КлнКод, dbo.KAT_TVR.ТовАрт
FROM         dbo.zkz_kodp INNER JOIN
                      dbo.KAT_TVR ON dbo.zkz_kodp.ТовКод = dbo.KAT_TVR.ТовКод INNER JOIN
                      dbo.KAT_KLN ON dbo.zkz_kodp.КлнКод = dbo.KAT_KLN.КлнКод
WHERE     (dbo.KAT_KLN.КлнНаим LIKE 'Вимм-Билль-Данн%')
ORDER BY dbo.zkz_kodp.ТовКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "zkz_kodp"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 110
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 6
               Left = 452
               Bottom = 125
               Right = 621
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 162
               Left = 296
               Bottom = 281
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 2
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 3075
         Width = 2490
         Width = 2250
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 2490
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Коды _товаров_внешние'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Коды _товаров_внешние'
GO
/****** Object:  View [dbo].[KonturOrderStat]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KonturOrderStat]
AS
SELECT DISTINCT 
                      k.id, k.body.value('(/eDIMessage/order/@number)[1]', 'varchar(max)') AS outnum, k.DocumentDate, k.stamp, k.ordsp, k.DELNOT, k.Box, 
                      CAST(k.body.query('/eDIMessage/order/buyer/organization/name/text()') AS varchar(MAX)) AS torgS, CAST(k.body.query('/eDIMessage/order/buyer/gln/text()') 
                      AS varchar(MAX)) AS GlntorgS, CAST(k.body.query('/eDIMessage/order/deliveryInfo/shipTo/russianAddress/city/text()') AS varchar(MAX)) 
                      + ' ' + CAST(k.body.query('/eDIMessage/order/deliveryInfo/shipTo/russianAddress/street/text()') AS varchar(MAX)) 
                      + ' ' + CAST(k.body.query('/eDIMessage/order/deliveryInfo/shipTo/russianAddress/house/text()') AS varchar(MAX)) AS addresMag, CASE WHEN er.[order] IS NULL 
                      THEN 'нет' WHEN er.[order] IS NOT NULL THEN 'есть' END AS error, k.ordsp_time, 
                      CAST(CAST(k.body.query('/eDIMessage/order/deliveryInfo/requestedDeliveryDateTime/text()') AS varchar(MAX)) AS varchar(10)) AS DataShip, 
                      CASE WHEN CAST(k.body.query('/eDIMessage/order/deliveryInfo/shipTo/organization/name/text()') AS varchar(MAX)) IS NOT NULL AND 
                      len(CAST(k.body.query('/eDIMessage/order/deliveryInfo/shipTo/organization/name/text()') AS varchar(MAX))) 
                      > 2 THEN CAST(k.body.query('/eDIMessage/order/deliveryInfo/shipTo/organization/name/text()') AS varchar(MAX)) 
                      ELSE CAST(k.body.query('/eDIMessage/order/deliveryInfo/shipTo/selfEmployed/fullName/lastName/text()') AS varchar(MAX)) END AS NameMag, 
                      CAST(k.body.query('count(/eDIMessage/order/lineItems/lineItem)') AS varchar(MAX)) AS colstrZ, k.povt_export, k.desadv_time, DATEDIFF(hh, k.stamp, k.ordsp_time) 
                      AS hort, DATEDIFF(hh, k.stamp, k.desadv_time) AS hdes, k.INVOIC_time, k.Desadv.value('(/eDIMessage/despatchAdvice/@number)[1]', 'varchar(max)') AS nackl
FROM         edi.Kontur AS k LEFT OUTER JOIN
                      edi.Kontur_error AS er ON k.id = er.[order]
WHERE     (k.DocumentType = 'Orders') AND (k.stamp > GETDATE() - 90)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "k"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 212
            End
            DisplayFlags = 280
            TopColumn = 21
         End
         Begin Table = "er"
            Begin Extent = 
               Top = 6
               Left = 250
               Bottom = 125
               Right = 419
            End
            DisplayFlags = 280
            TopColumn = 7
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 14
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KonturOrderStat'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KonturOrderStat'
GO
/****** Object:  View [dbo].[KonturEdiBody]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KonturEdiBody]
AS
SELECT     id, body, DocumentDate, ordsp, Box
FROM         edi.Kontur
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Kontur (edi)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 212
            End
            DisplayFlags = 280
            TopColumn = 14
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 2070
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KonturEdiBody'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KonturEdiBody'
GO
/****** Object:  View [dbo].[Kontur_Stat_gen]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Kontur_Stat_gen]
AS
SELECT     'ordsp' AS vid_oper,
		 min(DATEDIFF(hh, k.stamp, k.ordsp_time)) AS min_, 
		 avg(DATEDIFF(hh, k.stamp, k.ordsp_time)) AS avg_, 
		 max(DATEDIFF(hh, k.stamp, k.ordsp_time)) AS max_
FROM         [PR_Euras].[edi].[Kontur] k
WHERE     k.ordsp_time IS NOT NULL AND DATEDIFF(hh, k.stamp, k.ordsp_time)<60 AND DATEDIFF(hh, k.stamp, k.ordsp_time)>0
UNION
SELECT     'desadv', 
			min(DATEDIFF(hh, k.stamp, k.desadv_time)) AS min_hdes, 
			avg(DATEDIFF(hh, k.stamp, k.desadv_time)) AS avg_hdes, 
			max(DATEDIFF(hh, k.stamp, k.desadv_time)) AS max_hdes
FROM         [PR_Euras].[edi].[Kontur] k
WHERE     k.desadv_time IS NOT NULL AND DATEDIFF(hh, k.stamp, k.desadv_time)<60 AND DATEDIFF(hh, k.stamp, k.desadv_time)>0
UNION
SELECT     'desadv-osp', 
			min(DATEDIFF(hh, k.ordsp_time, k.desadv_time)) AS min_hdes_osp, 
			avg(DATEDIFF(hh, k.ordsp_time, k.desadv_time)) AS avg_hdes_osp, 
            max(DATEDIFF(hh, k.ordsp_time, k.desadv_time)) AS max_hdes_osp
FROM         [PR_Euras].[edi].[Kontur] k 
WHERE     k.desadv_time IS NOT NULL AND DATEDIFF(hh, k.ordsp_time, k.desadv_time)<60 AND DATEDIFF(hh, k.ordsp_time, k.desadv_time)>0
UNION
SELECT     'hrecadv-osp', 
			min(DATEDIFF(hh, k.stamp, rec.stamp)) AS min_hrecadv_osp, 
			avg(DATEDIFF(hh, k.stamp, rec.stamp)) AS avg_hrecadv_osp, 
			max(DATEDIFF(hh, k.stamp, rec.stamp)) AS max_hrecadv_osp
FROM         [PR_Euras].[edi].[Kontur] k INNER JOIN
                      [PR_Euras].[edi].[Kontur] rec ON k.RECADV_id = rec.[id]
where DATEDIFF(hh, k.stamp, rec.stamp) <60 AND DATEDIFF(hh, k.stamp, rec.stamp)>0
UNION
SELECT     'hrecadv_desadv', 
			min(DATEDIFF(hh, k.desadv_time, rec.stamp)) AS min_hrecadv_desadv, 
			avg(DATEDIFF(hh, k.desadv_time, rec.stamp)) AS avg_hrecadv_desadv, 
            max(DATEDIFF(hh, k.desadv_time, rec.stamp)) AS max_hrecadv_desadv
FROM         [PR_Euras].[edi].[Kontur] k INNER JOIN
                      [PR_Euras].[edi].[Kontur] rec ON k.RECADV_id = rec.[id]
          WHERE DATEDIFF(hh, k.desadv_time, rec.stamp)<60 AND DATEDIFF(hh, k.desadv_time, rec.stamp)>0
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[11] 4[33] 2[25] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -192
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 16
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1125
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Kontur_Stat_gen'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Kontur_Stat_gen'
GO
/****** Object:  View [dbo].[KLNIndPrice]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KLNIndPrice]
AS
SELECT     ТовКод, 0 AS КодКлн, 0 AS ГрпЦен
FROM         dbo.D_TVR
WHERE     (0 IS NOT NULL) AND (0 <> 0) AND (0 IS NOT NULL) AND (0 <> 0)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "D_TVR"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KLNIndPrice'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KLNIndPrice'
GO
/****** Object:  View [dbo].[KGVT1]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ЕФ 07/04/2011
--Представление возвращает ТТ-Товар разрешенные к отгрузке
CREATE VIEW [dbo].[KGVT1]
AS
SELECT * FROM
(
SELECT 
ROW_NUMBER() OVER (PARTITION BY ТовКод,КлнКод,КодАдресаДоставки ORDER BY kt_tipkln DESC,kt_tip DESC  ) ID,*
FROM
(
			SELECT
					kgvt.*,
					tvr.*,
					kln.*,
					adk.*
			FROM 
			kgvt_tab kgvt 
			INNER JOIN kat_tvr tvr ON 
									( 
										(
											kgvt.kt_tip = 0 AND
											kgvt.kt_gvt = tvr.ТовГрп
										)										
									)
			 LEFT JOIN KAT_KLN kln	ON
									(
										kgvt.kt_tipkln = 0
										AND kgvt.kt_kln = kln.КлнКод
														
									)
			 
			 LEFT JOIN KLN_ADK adk ON 
									(
										(
											kgvt.kt_tipkln = 1
											AND kgvt.kt_kln = adk.КодАдресаДоставки 
										)
										OR
										(
											kgvt.kt_tipkln = 0
											AND adk.КодКлиента = kln.КлнКод										
										)														
									)
			 
			 --WHERE  kt_dst in (1,2) --NOT(kt_tip = 0 and kt_dst = 0)
			 
			 UNION ALL
			 
			 SELECT
					kgvt.*,
					tvr.*,
					kln.*,
					adk.*
			FROM 
			kgvt_tab kgvt 
			INNER JOIN kat_tvr tvr ON 
									( 										
										(
											kgvt.kt_tip = 1 AND
											 kgvt.kt_gvt = tvr.ТовВид
										)										
									)
			 LEFT JOIN KAT_KLN kln	ON
									(
										kgvt.kt_tipkln = 0
										AND kgvt.kt_kln = kln.КлнКод
														
									)
			 
			 LEFT JOIN KLN_ADK adk ON 
									(
										(
											kgvt.kt_tipkln = 1
											AND kgvt.kt_kln = adk.КодАдресаДоставки 
										)
										OR
										(
											kgvt.kt_tipkln = 0
											AND adk.КодКлиента = kln.КлнКод										
										) 														
									)
			 
			 --WHERE kt_dst in (1,2) --NOT(kt_tip = 0 and kt_dst = 0)
			 
			 UNION ALL
			 
			 SELECT
					kgvt.*,
					tvr.*,
					kln.*,
					adk.*
			FROM 
			kgvt_tab kgvt 
			INNER JOIN kat_tvr tvr ON 
									( 										
										(
											kgvt.kt_tip = 2 AND 
											kgvt.kt_gvt = tvr.ТовКод
										)
									)
			 LEFT JOIN KAT_KLN kln	ON
									(
										kgvt.kt_tipkln = 0
										AND kgvt.kt_kln = kln.КлнКод
														
									)
			 
			 LEFT JOIN KLN_ADK adk ON 
									(
										(
											kgvt.kt_tipkln = 1
											AND kgvt.kt_kln = adk.КодАдресаДоставки 
										)
										OR
										(
											kgvt.kt_tipkln = 0
											AND adk.КодКлиента = kln.КлнКод										
										)														
									)
			 
			 --WHERE (kt_dst in (1,2)) --NOT(kt_tip = 0 and kt_dst = 0)
			 
			 UNION ALL
			 
			  SELECT
					null,null,null,null,null,
					tvr.*,
					kln.*,
					adk.*
			FROM 			
			kat_tvr tvr 
			 CROSS JOIN KAT_KLN kln				 
			 LEFT JOIN KLN_ADK adk ON 
									(										
											adk.КодКлиента = kln.КлнКод							
									)
) t
) t
 WHERE ID = 1 --and kt_dst in (1,2)
GO
/****** Object:  View [dbo].[KGVT]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ЕФ 07/04/2011
--Представление возвращает ТТ-Товар разрешенные к отгрузке
-- dst 0-не доступен,1-доступен, 2 - обязателен
CREATE VIEW [dbo].[KGVT]
--WITH SCHEMABINDING 
AS

SELECT

--dst.DstId dst,
--dst.Name,
	COALESCE(at.kt_dst,av.kt_dst,ag.kt_dst,kt.kt_dst,kv.kt_dst,kg.kt_dst
	,1) dst
	, tvr.ТовКод
	, kln.КлнКод
	, adk.КодАдресаДоставки
	, at.kt_dst АдресТовар
	, av.kt_dst АдресВид
	, ag.kt_dst АдресГруппа
	, kt.kt_dst КлиентТовар
	, kv.kt_dst КлиентВид
	, kg.kt_dst КлиентГруппа
--tvr.*,kln.*,adk.*
--,COUNT_BIG(*) cb


FROM dbo.kat_tvr tvr
 CROSS JOIN dbo.KAT_KLN kln
 LEFT JOIN dbo.cln_dkl cln on cln.КлнКод = kln.КлнКод
 LEFT JOIN dbo.KAT_KLN kln2 on cln.Матрица = kln2.КлнКод
 LEFT JOIN dbo.KLN_ADK adk on adk.КодКлиента = kln.КлнКод
 LEFT JOIN dbo.KLN_ADK adk2 on adk.Матрица = adk2.КодАдресаДоставки

LEFT JOIN dbo.kgvt_tab kg ON (kg.kt_tip = 0)--группа 
  AND kg.kt_gvt = tvr.ТовГрп
  AND kg.kt_tipkln = 0
  AND kg.kt_kln = isnull(kln2.КлнКод,kln.КлнКод)

LEFT JOIN dbo.kgvt_tab kv ON (kv.kt_tip = 1)--вид 
  AND kv.kt_gvt = tvr.ТовВид
  AND kv.kt_tipkln = 0
  AND kv.kt_kln = isnull(kln2.КлнКод,kln.КлнКод)

LEFT JOIN dbo.kgvt_tab kt ON (kt.kt_tip = 2)--товар 
  AND kt.kt_gvt = tvr.ТовКод 
  AND kt.kt_tipkln = 0
  AND kt.kt_kln = isnull(kln2.КлнКод,kln.КлнКод)
  
LEFT JOIN dbo.kgvt_tab ag ON (ag.kt_tip = 0)--группа 
  AND ag.kt_gvt = tvr.ТовГрп
  AND ag.kt_tipkln = 1
  AND ag.kt_kln = isnull(adk2.КодАдресаДоставки,adk.КодАдресаДоставки)

LEFT JOIN dbo.kgvt_tab av ON (av.kt_tip = 1)--вид 
  AND av.kt_gvt = tvr.ТовВид
  AND av.kt_tipkln = 1
  AND av.kt_kln = isnull(adk2.КодАдресаДоставки,adk.КодАдресаДоставки)

LEFT JOIN dbo.kgvt_tab at ON (at.kt_tip = 2)--товар 
  AND at.kt_gvt = tvr.ТовКод 
  AND at.kt_tipkln = 1
  AND at.kt_kln = isnull(adk2.КодАдресаДоставки,adk.КодАдресаДоставки)
--right JOIN 
--			(
--				SELECT 0 DstId,'не доступен' Name
--				UNION ALL
--				SELECT 1,'доступен'
--				UNION ALL
--				SELECT 2,'обязателен'
				
--			) dst ON COALESCE(at.kt_dst,av.kt_dst,ag.kt_dst,kt.kt_dst,kv.kt_dst,kg.kt_dst,1) = DstID
--WHERE COALESCE(at.kt_dst,av.kt_dst,ag.kt_dst,kt.kt_dst,kv.kt_dst,kg.kt_dst,1) = 2
GO
/****** Object:  View [dbo].[ТТНТочки]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[ТТНТочки]
AS
SELECT t.НомерТТН, COUNT(DISTINCT CONVERT(VARCHAR,s.ОпКлн) + CONVERT(VARCHAR,s.КодАдрДоставки)) КолТочек

  FROM zkz_nkl z
INNER JOIN dbo.LIST_SKL s ON s.ОпСкл = z.Скл AND s.ОпТип = z.ФлгОпер AND z.Накл = s.ОпНакл
INNER JOIN ttn_dkm t ON t.КодТТН = z.ДокКод
WHERE z.тип = 4
GROUP BY t.НомерТТН


--SELECT * FROM ttn_dkm
GO
/****** Object:  View [dbo].[ТоварыНакладной]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[ТоварыНакладной]
AS
SELECT     dbo.M_DEBIT.НаклКодТов, dbo.D_TVR.ТовАрт, dbo.D_TVR.ТовНаим, dbo.M_DEBIT.НаклКол, dbo.M_DEBIT.НаклСтоим, dbo.M_DEBIT.ЦенаАльтГрп, 
                      dbo.M_DEBIT.ЦенаГрп, dbo.M_DEBIT.ЦенаКат, dbo.M_DEBIT.ТовСкидка, dbo.M_DEBIT.КлнНаТов, dbo.M_DEBIT.КлнНаВид, 
                      dbo.M_DEBIT.КлнНаГрп, dbo.M_DEBIT.ТекЦена, dbo.M_DEBIT.СуммаПродажа, dbo.M_DEBIT.НаклНом, dbo.M_DEBIT.СуммаПрогноз
FROM         dbo.M_DEBIT INNER JOIN
                      dbo.D_TVR ON dbo.M_DEBIT.НаклКодТов = dbo.D_TVR.ТовКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1[50] 4[25] 3) )"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[18] 4[35] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1[75] 4) )"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 8
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "M_DEBIT"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 18
         End
         Begin Table = "D_TVR"
            Begin Extent = 
               Top = 6
               Left = 236
               Bottom = 114
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      PaneHidden = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'ТоварыНакладной'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'ТоварыНакладной'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Orientation', @value=0x00 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'ТоварыНакладной'
GO
/****** Object:  View [dbo].[ТоварБазаNull]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[ТоварБазаNull]
AS
SELECT DISTINCT ОпКодТов
FROM         dbo.HIST_SKL
WHERE     (ОпНаклКод IN
                          (SELECT     ОпНаклКод
                            FROM          dbo.LIST_SKL_dop)) AND (ОпЦенаБаза = 0) OR
                      (ОпЦенаБаза IS NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[12] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "HIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 236
               Bottom = 260
               Right = 415
            End
            DisplayFlags = 280
            TopColumn = 10
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 2325
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'ТоварБазаNull'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'ТоварБазаNull'
GO
/****** Object:  View [edi].[Продажи_ист]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [edi].[Продажи_ист]
AS
SELECT     t.ТовКод, t.ТовНаим, CONVERT(varchar(10), CONVERT(date, dbo.LIST_SKL.ОпДатаРасч)) AS ДатаРасч, dbo.HIST_SKL.ОпКол, dbo.HIST_SKL.ОпЦена, 
                      dbo.HIST_SKL.ОпКол * dbo.HIST_SKL.ОпЦена AS Expr1
FROM         dbo.LIST_SKL RIGHT OUTER JOIN
                      dbo.HIST_SKL ON dbo.LIST_SKL.ОпНаклКод = dbo.HIST_SKL.ОпНаклКод LEFT OUTER JOIN
                      dbo.KAT_TVR AS t ON dbo.HIST_SKL.ОпКодТов = t.ТовКод
WHERE     (dbo.LIST_SKL.ОпТип = 2) AND (dbo.LIST_SKL.ОпВозврат = 0)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 12
               Left = 794
               Bottom = 310
               Right = 963
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "HIST_SKL"
            Begin Extent = 
               Top = 101
               Left = 43
               Bottom = 300
               Right = 222
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "t"
            Begin Extent = 
               Top = 56
               Left = 523
               Bottom = 316
               Right = 674
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'edi', @level1type=N'VIEW',@level1name=N'Продажи_ист'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'edi', @level1type=N'VIEW',@level1name=N'Продажи_ист'
GO
/****** Object:  View [dbo].[m_kln_adk_town]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  VIEW [dbo].[m_kln_adk_town]
AS
select kln_adk.*, kat_twn.ГородНаим,
rtrim(ГородНаим) + ', ' + rtrim(kln_adk.АдресДоставки) as ПолныйАдрес from kln_adk
inner join kat_twn on kln_adk.КодГорода = kat_twn.КодГород
GO
/****** Object:  View [dbo].[M_HIST_SKL_SIGN]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create VIEW [dbo].[M_HIST_SKL_SIGN]
AS
-- Вид добавляет знак к операциям в hist_skl
SELECT 	h.[ОпКод], 
	h.[ОпКодТов],
	h.[ОпКол],
	case
		when l.ОпТип = 1 then ОпКол
		else -ОпКол
	end as ОпКолЗнак, 
	h.[ОпТип], 
	h.[ОпЦена], h.[ОпКодУпак], h.[ОпСкл], h.[ОпВозвр], 
	h.[ОпНакл], h.[ОпНаклКод], h.[ОпТипКлн], h.[ОпТовНом],
	l.[ОпДатаРасч] as ОпДатаРасч

FROM [HIST_SKL] h inner join list_skl l on h.ОпНаклКод = l.ОпНаклКод
GO
/****** Object:  View [dbo].[M_HIST_SKL_NAC]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create VIEW [dbo].[M_HIST_SKL_NAC]
AS
-- Вид добавляет знак к операциям в hist_skl
SELECT 	*
FROM [HIST_SKL_TEMP]
WHERE ОпТипКлн = 2
GO
/****** Object:  View [dbo].[M_HIST_LIST_SKL_NAC]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* Вид объединяет HIST_SKL и LIST_SKL
 и выделяет данные по ПК
 22.09.07 Выводит только Р и ПВ


*/
CREATE VIEW [dbo].[M_HIST_LIST_SKL_NAC]
AS
SELECT     h.*, (h.ОпКол * h.ОпЦена) * (h.ОпТип * 2 - 3) AS ОпСуммаЗн, (h.ОпКол * h.ОпЦена) * (h.ОпТип * 2 - 3) AS ОпСуммаПрихЗн, 
                      RTRIM(CAST(l.ОпКлн AS char)) + '/' + RTRIM(CAST(l.КодАдрДоставки AS char)) AS КодКлн_КодАдрДоставки/*, 
	CASE 
		WHEN (h.ЦенаПрихода = 0) THEN 'Нулевая цена прихода' 
		WHEN (h.ЦенаПрихода <> 0) AND ((h.ОпЦена - h.ЦенаПрихода) / h.ЦенаПрихода <= 0) 
                      THEN 'Меньше нуля' WHEN (h.ЦенаПрихода <> 0) AND ((h.ОпЦена - h.ЦенаПрихода) / h.ЦенаПрихода > 0) AND ((h.ОпЦена - h.ЦенаПрихода) 
                      / h.ЦенаПрихода <= 0.05) THEN 'От 0 до 5' 
		WHEN (h.ЦенаПрихода <> 0) AND ((h.ОпЦена - h.ЦенаПрихода) / h.ЦенаПрихода <= 0.6) AND 
                      ((h.ОпЦена - h.ЦенаПрихода) / h.ЦенаПрихода > 0.05) THEN 'От 5 до 60' 
		WHEN (h.ЦенаПрихода <> 0) AND ((h.ОпЦена - h.ЦенаПрихода) 
                      / h.ЦенаПрихода > 0.60) THEN 'Больше 60' 
		END AS ПроцентНаценки, 
			CASE 	WHEN КодПост = 0 THEN 'Поставщик не указан'
				WHEN КодПост <> 0 THEN
	                          (SELECT     КлнНаим
        	                    FROM          dbo.KAT_KLN
                	            WHERE      КлнКод = h.КодПост)  
			END AS ПоставщикНаСоюз,
			CASE 	WHEN КодГенПост = 0 THEN 'Поставщик не указан'
				WHEN КодГенПост <> 0 THEN
	                          (SELECT     КлнНаим
        	                    FROM          dbo.KAT_KLN_temp
                	            WHERE      КлнКод = h.КодГенПост AND НомерПостав =
                        		(SELECT     Номер
                                        FROM          dbo.GEN_SUPP
                                        WHERE      КодВБазеСоюза = h.КодПост)) 
			END AS ПоставщикНаГенПоставщика,
	case 
		when КодПост = 0 THEN 'Поставщик не указан'
		when (КодПост <> 0) and  (КодПост not in (select КодВБазеСоюза 
				from dbo.GEN_SUPP
                                        WHERE ТипПоставщика = 3)) then 'Поставщики'
		when КодПост in (select КодВБазеСоюза 
				from dbo.GEN_SUPP
                                        WHERE ТипПоставщика = 3) then 'ГенПоставщики'
	   end as ТипПоставщика,
	   case 
		when (КодПост = 0) or  (КодПост not in (select КодВБазеСоюза 
				from dbo.GEN_SUPP
                                        WHERE ТипПоставщика = 3)) THEN 'ГенПоставщик не указан'
		when КодПост in (select КодВБазеСоюза 
				from dbo.GEN_SUPP
                                        WHERE ТипПоставщика = 3) then (SELECT     КлнНаим
                            			FROM          dbo.KAT_KLN
               	            			WHERE      КлнКод = h.КодПост) 
	   end as ГенПоставщики	*/
FROM         dbo.HIST_SKL h INNER JOIN
                      dbo.LIST_SKL l ON h.ОпНаклКод = l.ОпНаклКод AND l.НомерПостав = h.ОпНомерПост
WHERE     (l.ОпКлнТип = 2) AND (l.ОпТип = 1) AND (l.ОпВозврат = 1) AND (h.ОпТипПост = 1) OR
                      (l.ОпКлнТип = 2) AND (l.ОпТип = 2) AND (l.ОпВозврат = 0) AND (h.ОпТипПост = 1)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "h"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 201
            End
            DisplayFlags = 280
            TopColumn = 13
         End
         Begin Table = "l"
            Begin Extent = 
               Top = 6
               Left = 239
               Bottom = 114
               Right = 408
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'M_HIST_LIST_SKL_NAC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'M_HIST_LIST_SKL_NAC'
GO
/****** Object:  View [dbo].[M_HIST_LIST_SKL_FIFO]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* Вид объединяет HIST_SKL и LIST_SKL
 и выделяет данные по ПК
 22.09.07 Выводит только Р и ПВ


*/
--DROP VIEW [dbo].[M_HIST_LIST_SKL_FIFO]
CREATE                        VIEW [dbo].[M_HIST_LIST_SKL_FIFO]
AS
SELECT     h.*, (h.ОпКол * h.ПредЦена) * (h.ОпТип * 2 - 3) AS ОпСуммаЗн, (h.ОпКол * h.ЦенаПрихода) * (h.ОпТип * 2 - 3) AS ОпСуммаПрихЗн, 
                      RTRIM(CAST(h.ОпКлн AS char)) + '/' + RTRIM(CAST(h.КодАдрДоставки AS char)) AS КодКлн_КодАдрДоставки/*, 
	CASE 
		WHEN (h.ЦенаПрихода = 0) THEN 'Нулевая цена прихода' 
		WHEN (h.ЦенаПрихода <> 0) AND ((h.ОпЦена - h.ЦенаПрихода) / h.ЦенаПрихода <= 0) 
                      THEN 'Меньше нуля' WHEN (h.ЦенаПрихода <> 0) AND ((h.ОпЦена - h.ЦенаПрихода) / h.ЦенаПрихода > 0) AND ((h.ОпЦена - h.ЦенаПрихода) 
                      / h.ЦенаПрихода <= 0.05) THEN 'От 0 до 5' 
		WHEN (h.ЦенаПрихода <> 0) AND ((h.ОпЦена - h.ЦенаПрихода) / h.ЦенаПрихода <= 0.6) AND 
                      ((h.ОпЦена - h.ЦенаПрихода) / h.ЦенаПрихода > 0.05) THEN 'От 5 до 60' 
		WHEN (h.ЦенаПрихода <> 0) AND ((h.ОпЦена - h.ЦенаПрихода) 
                      / h.ЦенаПрихода > 0.60) THEN 'Больше 60' 
		END AS ПроцентНаценки, 
			CASE 	WHEN КодПост = 0 THEN 'Поставщик не указан'
				WHEN КодПост <> 0 THEN
	                          (SELECT     КлнНаим
        	                    FROM          dbo.KAT_KLN
                	            WHERE      КлнКод = h.КодПост)  
			END AS ПоставщикНаСоюз,
			CASE 	WHEN КодГенПост = 0 THEN 'Поставщик не указан'
				WHEN КодГенПост <> 0 THEN
	                          (SELECT     КлнНаим
        	                    FROM          dbo.KAT_KLN_temp
                	            WHERE      КлнКод = h.КодГенПост AND НомерПостав =
                        		(SELECT     Номер
                                        FROM          dbo.GEN_SUPP
                                        WHERE      КодВБазеСоюза = h.КодПост)) 
			END AS ПоставщикНаГенПоставщика,
	case 
		when КодПост = 0 THEN 'Поставщик не указан'
		when (КодПост <> 0) and  (КодПост not in (select КодВБазеСоюза 
				from dbo.GEN_SUPP
                                        WHERE ТипПоставщика = 3)) then 'Поставщики'
		when КодПост in (select КодВБазеСоюза 
				from dbo.GEN_SUPP
                                        WHERE ТипПоставщика = 3) then 'ГенПоставщики'
	   end as ТипПоставщика,
	   case 
		when (КодПост = 0) or  (КодПост not in (select КодВБазеСоюза 
				from dbo.GEN_SUPP
                                        WHERE ТипПоставщика = 3)) THEN 'ГенПоставщик не указан'
		when КодПост in (select КодВБазеСоюза 
				from dbo.GEN_SUPP
                                        WHERE ТипПоставщика = 3) then (SELECT     КлнНаим
                            			FROM          dbo.KAT_KLN
               	            			WHERE      КлнКод = h.КодПост) 
	   end as ГенПоставщики	*/
FROM         dbo.HIST_SKL_fifo h 
--INNER JOIN
  --                    dbo.LIST_SKL_TEMP l ON h.ОпНаклКод = l.ОпНаклКод AND l.НомерПостав = h.ОпНомерПост
WHERE     (h.ОпТипКлн = 2) AND (h.ОпТип = 1) AND (h.ОпВозвр = 1) AND (h.ОпТипПост = 1) OR
                      (h.ОпТипКлн = 2) AND (h.ОпТип = 2) AND (h.ОпВозвр = 0) AND (h.ОпТипПост = 1)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "h"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 201
            End
            DisplayFlags = 280
            TopColumn = 24
         End
         Begin Table = "l"
            Begin Extent = 
               Top = 6
               Left = 239
               Bottom = 114
               Right = 408
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'M_HIST_LIST_SKL_FIFO'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'M_HIST_LIST_SKL_FIFO'
GO
/****** Object:  View [dbo].[M_HIST_LIST_SKL]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE    VIEW [dbo].[M_HIST_LIST_SKL]
AS
-- Вид объединяет HIST_SKL и LIST_SKL
SELECT 	l.ОпДатаРасч, l.ОпКлн, 
	l.ОпСкл, l.ОпВозврат,
	h.ОпКодТов,
	h.ОпКол * h.ОпЦена * (h.ОпТип*2 - 3) as ОпСумма,
	RTRIM(CAST(l.ОпКлн AS char)) 
        + '/' + RTRIM(CAST(l.КодАдрДоставки AS char)) AS КодКлн_КодАдрДоставки
FROM HIST_SKL h inner join list_skl l on
	h.ОпНаклКод = l.ОпНаклКод
WHERE l.ОпКлнТип = 2
	and (l.ОпТип = 1 or l.ОпТип = 2)
GO
/****** Object:  View [dbo].[Заказ_Накладная_Сф]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Заказ_Накладная_Сф]
AS
SELECT     zak.ЗкзНом, zak.ЗкзДатаРасч, nakl.ОпНакл, nakl.ОпДатаРасч AS ДатаНаклад, sf.НомерСФ, sf.АвтокодСФ, DATEADD(second, CONVERT(numeric, sf.ДатаСФ), 
                      CONVERT(datetime, '31.12.1969 19:00:00', 104)) AS ДатаСФ, dbo.KLN_ADK.GLN, dbo.KLN_ADK.Наим
FROM         dbo.LIST_SKL AS nakl INNER JOIN
                      dbo.list_sf AS sf ON nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ INNER JOIN
                      dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл INNER JOIN
                      dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод INNER JOIN
                      dbo.KLN_ADK ON nakl.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки
WHERE     (sf.Контрагент = 8538) AND (ABS(DATEDIFF(day, zak.ЗкзДатаРасч, DATEADD(second, CONVERT(numeric, sf.ДатаСФ), CONVERT(datetime, '31.12.1969 19:00:00', 
                      104)))) BETWEEN 0 AND 10)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "nakl"
            Begin Extent = 
               Top = 6
               Left = 261
               Bottom = 158
               Right = 439
            End
            DisplayFlags = 280
            TopColumn = 9
         End
         Begin Table = "sf"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 223
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "znnk"
            Begin Extent = 
               Top = 6
               Left = 477
               Bottom = 125
               Right = 646
            End
            DisplayFlags = 280
            TopColumn = 5
         End
         Begin Table = "zak"
            Begin Extent = 
               Top = 6
               Left = 684
               Bottom = 125
               Right = 877
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 162
               Left = 508
               Bottom = 281
               Right = 703
            End
            DisplayFlags = 280
            TopColumn = 2
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 2055
         Width = 2415
         Width = 1500
         Width = 2370
         Width = 3735
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
   ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Заказ_Накладная_Сф'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'      Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Заказ_Накладная_Сф'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Заказ_Накладная_Сф'
GO
/****** Object:  View [dbo].[hist_skl_dop_sum]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[hist_skl_dop_sum]
AS
SELECT     ОпНаклКод, ОпТовНом, id_type_dop, SUM(summa_dop) AS summa_dop
FROM         dbo.hist_skl_dop
GROUP BY ОпНаклКод, ОпТовНом, id_type_dop
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "hist_skl_dop"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 1
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'hist_skl_dop_sum'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'hist_skl_dop_sum'
GO
/****** Object:  View [dbo].[M_ClientPriceTemp]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE    VIEW [dbo].[M_ClientPriceTemp]
AS
--declare @tmp money
select ТовКод, ТовЦенаРСХ, sld_kln.КлнКод, ГрпЦен
from kat_tvr, kat_kln, sld_kln
where kat_kln.КлнКод=sld_kln.КлнКод
GO
/****** Object:  View [edi].[Kln_GLN_new]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [edi].[Kln_GLN_new]
as
SELECT     КодАдресаДоставки, КодКлиента as КлнКод, GLN, Наим
FROM         KLN_ADK
WHERE     (GLN <> '')
GO
/****** Object:  StoredProcedure [dbo].[Create_hist_skl_dop]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Create_hist_skl_dop] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	/*select --Больше записей
		/*hs.ОпКод
		,1*/
		--hsV.ОпКол * hsV.ОпЦена
		--,ostatok = hs.ОпКол * hs.ОпЦена - hsV.ОпКол * hsV.ОпЦена
		--,ostatok_kol = hs.ОпКол - hsV.ОпКол
		*
	from hist_skl as hs
		--Добавим к накладным продаж линк на возврат
		left join dbo.nkl_link as lnk
		   on lnk.ОпНаклКод2 = hs.ОпНаклКод AND lnk.ОпНаклКод1 IS NOT NULL AND lnk.ОпНаклКод2 IS NOT NULL
	where hs.ОпТип = 1
		and hs.ОпВозвр = 1
		and lnk.ОпНаклКод1 is NULL
	*/
	
	truncate table hist_skl_dop
	
	insert into hist_skl_dop (ОпНаклКод,ОпТовНом,id_type_dop,summa_dop)

	select 
		hs.ОпНаклКод,
		hs.ОпТовНом
		,1  -- Возврат Требование
		,hs.ОпКол * hs.ОпЦена
	from hist_skl as hs
		--Добавим к накладным продаж линк на возврат
	where hs.ОпТип = 1
		and hs.ОпВозвр = 1
		and hs.ОпНаклКод not in (
									select lnk.ОпНаклКод2
									from dbo.nkl_link as lnk
									where lnk.ОпНаклКод1 IS NOT NULL AND lnk.ОпНаклКод2 IS NOT NULL
								)
	union
	select 
		hs.ОпНаклКод,
		hs.ОпТовНом
		,2  -- Возврат Экспедитора
		,hsV.ОпКол * hsV.ОпЦена
	/*	,ostatok = hs.ОпКол * hs.ОпЦена - hsV.ОпКол * hsV.ОпЦена
		,ostatok_kol = hs.ОпКол - hsV.ОпКол
		,**/
	from hist_skl as hs
		--Добавим к накладным продаж линк на возврат
		inner join dbo.nkl_link as lnk on 
				lnk.ОпНаклКод1 = hs.ОпНаклКод AND lnk.ОпНаклКод1 IS NOT NULL AND lnk.ОпНаклКод2 IS NOT NULL
		--Добавим паровоз из возвратных накладных по связям (Накладная и Товар)
		right join hist_skl as hsV on
				lnk.ОпНаклКод2 = hsV.ОпНаклКод and hs.ОпКодТов = hsV.ОпКодТов
	where hs.ОпТип = 2
END
GO
/****** Object:  StoredProcedure [dbo].[Create_hist_skl_bonusV3komp]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		 Глухов ВЮ
-- Create date: 20-08-2014
-- Description:	Создает таблицу связей между фактическими продажами и бонусами
-- Замечание: после корректировки, внести изменения в связанную функцию Create_hist_skl_bonusV3
-- =============================================
CREATE PROCEDURE [dbo].[Create_hist_skl_bonusV3komp] 
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-45,@enddate)
	end

    -- Insert statements for procedure here
	declare @curdate date, @curenddate date
	set @curdate = @startdate
	--set @curenddate = DATEADD(DAY,1,@curdate)


	
	WHILE @curdate/*@curenddate*/ <= @enddate
	BEGIN
	/*	delete from Hist_skl_bon --WITH (TABLOCK)
		where ОпНаклКод in	(
								select ls.ОпНаклКод
								from list_skl as ls
								where --ls.ОпДатаРасч between @startdate and @enddate
									ls.ОпДатаРасч between @curdate and @curdate ---@curenddate
									or ls.ОпДатаРасч is NULL --удалим все неправильные записи, т.е. отсутствующие в list_skl
							)
    -- все удалили в   Create_hist_skl_bonusV3                      
		*/    
		insert into Hist_skl_bon /*WITH (TABLOCK)*/ (ОпНаклКод,ОпТовНом, idBon, idBonTvr,idBon_type, Stavka)
		select 
			hs.ОпНаклКод,
			hs.ОпТовНом,
			tbn0.idBon,
			tbn0.idBonTvr,
			case when tbn0.idBon_type = 1 then 3 else tbn0.idBon_type end idBon_type ,
--- 20141223 переворачиваем знак бонуса VG 
			cast(cast(tbn0.Dolya as money)/10 as NUMERIC(4,2)) Stavka
		from list_skl (NOLOCK) as ls
			inner join KAT_KLN as cl on ls.ОпКлн = cl.КлнКод
			inner join	(--выбирем все записи которые удовлетворяют критерию по торговым точкам БЕЗ ИСКЛЮЧЕНИЙ
							select
								bn.idBon
	                            ,bn.Dolya
							    ,btt.idKLN
								,idTT
								,idKatKL
								,bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
							from [Бонус].[dbo].Bonus (NOLOCK) as bn
								left join [Бонус].[dbo].[Bonus_tt] as btt on bn.idbon = btt.idbon and btt.iskl = 0 --указанные явно и нет (все)
							where
            --- 20141223 берем только записи нужного типа и с нужным процентом   -------
                             (bn.idBon_type       = 1                            ------- 
                            and isnull(bn.Dolya,0) <> 0  )                       -------
            --- 20141223 ---------------------------------------------------------------
							
							) as btt0 on ls.ОпДатаРасч between btt0.date_beg and btt0.date_end
						and
						(
							(btt0.idKLN = ls.ОпКлн and btt0.idTT = 0) --по всему клиенту
							or (btt0.idKLN = ls.ОпКлн and btt0.idTT = ls.КодАдрДоставки) --по торговой точке клиента
							or (btt0.idKLN = 0 and btt0.idTT is NULL and btt0.idKatKL = cl.КлнГрпКод) --по группе клиентов
							or (btt0.idKLN is NULL and btt0.idTT is NULL and btt0.idKatKL is NULL) --все клиенты
						)
			left join	(--уберем корень зла по торговым точкам ТОЛЬКО ИСКЛЮЧЕНИЯ
							select
								bn.idBon
	                            ,bn.Dolya
								,btt.idKLN
								,idTT
								,idKatKL
								,bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
								,TTiskl = '1'
							from [Бонус].[dbo].Bonus (NOLOCK) as bn
								inner join [Бонус].[dbo].[Bonus_tt] (NOLOCK) as btt on bn.idbon = btt.idbon and btt.iskl = 1 --исключения
            --- 20141223 берем только записи нужного типа и с нужным процентом   -------
                            WHERE (bn.idBon_type       = 1                        ------- 
                            and isnull(bn.Dolya,0) <> 0  )                      -------
            --- 20141223 ---------------------------------------------------------------
						) as btt1 on ls.ОпДатаРасч between btt1.date_beg and btt1.date_end
						and btt0.idBon = btt1.idBon
						and
						(
							(btt1.idKLN = ls.ОпКлн and btt1.idTT = 0) --по всему клиенту
							or (btt1.idKLN = ls.ОпКлн and btt1.idTT = ls.КодАдрДоставки) --по торговой точке клиента
							or (btt1.idKLN = 0 and btt1.idTT is NULL and btt1.idKatKL = cl.КлнГрпКод) --по группе клиентов
						)
										--прицепим паровозик из табличной части накладных
			inner join hist_skl (NOLOCK) as hs on hs.ОпНаклКод = ls.ОпНаклКод
			inner join KAT_TVR (NOLOCK) as kt on hs.ОпКодТов = kt.ТовКод
			inner join KAT_GRPT (NOLOCK) as kg on kt.ТовГрп = kg.ГрпКод
			inner join ( --добавим данные по бунусам в которых идет четкое указание по товарам, товарным группам и товарным видам
						 --данные действия произведем по всем Клиентам, Группам клиентов и ТТ указанных в бонусах без исключений
						select 
							bn.idBon,
							bn.idBon_type ,
	                        bn.Dolya,
						--bn.idNFКлнКод, 
							btv.idBonTvr,
							btv.idTVR, 
							btv.idTVRGRP, 
							btv.idTVRVID, 
							'Stavka' =	btp.sign_type *
										case 
											when btv.StavkaBon > 0 
											then btv.StavkaBon
											when bn.StavkaBonDef > 0 and (btv.StavkaBon <= 0 or btv.StavkaBon is NULL)
											then bn.StavkaBonDef
										end,
							bn.date_beg
							,date_end =	case
											when bn.date_end is NULL then @enddate
											else bn.date_end
										end
						from [Бонус].[dbo].Bonus (NOLOCK) as bn
							left join [Бонус].[dbo].Bonus_Tvr (NOLOCK) as btv on bn.idbon = btv.idbon and (btv.iskl = 0 or btv.iskl is NULL)
							left join [Бонус].[dbo].[Bon_type] (NOLOCK) as btp on bn.idBon_type = btp.id_type
						where 
							(bn.StavkaBonDef > 0 or btv.StavkaBon > 0) --выбирем товар где бонус больше 0
							and bn.idNFКлнКод > 0 --уберем программы без указания получателя
							and bn.idBon_Stat = 1 --выбирем только действующие программы
            --- 20141223 берем только записи нужного типа и с нужным процентом   -------
                            and (bn.idBon_type       = 1                        ------- 
                            and isnull(bn.Dolya,0) <> 0  )                      -------
            --- 20141223 ---------------------------------------------------------------
							) as tbn0 on 
							ls.ОпДатаРасч between tbn0.date_beg and tbn0.date_end
							and tbn0.idBon =   btt0.idBon
							and
							(
								(tbn0.idTVR is NULL and tbn0.idTVRVID is NULL and tbn0.idTVRGRP = kt.ТовГрп) --Бонус по Группе
								or (tbn0.idTVR is NULL and tbn0.idTVRVID = kt.ТовВид and ((tbn0.idTVRGRP is NULL) or (tbn0.idTVRGRP is not NULL))) --Бонус по Виду
								or (tbn0.idTVR = hs.ОпКодТов and ((tbn0.idTVRVID is NULL) or (tbn0.idTVRVID is not NULL)) and ((tbn0.idTVRGRP is NULL) or (tbn0.idTVRGRP is not NULL))) --Бонус по Товару
								or (tbn0.idTVR is NULL and tbn0.idTVRVID is NULL and tbn0.idTVRGRP is NULL) --Все товары по Бонусу !!!При отсутствии каких либо исключений
							)
			left join	( --добавим таблицу исключений по товарам
							select 
								bn.idBon, 
								bn.idBon_type ,
                                bn.Dolya,
								btv.idTVR, 
								btv.idTVRGRP, 
								btv.idTVRVID, 
								TVRiskl = '1',
								bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
							from [Бонус].[dbo].Bonus (NOLOCK) as bn
								left join [Бонус].[dbo].Bonus_Tvr (NOLOCK) as btv on bn.idbon = btv.idbon and btv.iskl = 1
							where 
								(bn.StavkaBonDef > 0 or btv.StavkaBon > 0) --выбирем товар где бонус больше 0
								and bn.idNFКлнКод > 0 --уберем программы без указания получателя
								and bn.idBon_Stat = 1 --выбирем только действующие программы
						) as tbn1 on 
						ls.ОпДатаРасч between tbn1.date_beg and tbn1.date_end
						and tbn1.idBon = btt0.idBon
						and
						(
							(tbn1.idTVR is NULL and tbn1.idTVRVID is NULL and tbn1.idTVRGRP = kt.ТовГрп) --Бонус по Группе
							or (tbn1.idTVR is NULL and tbn1.idTVRVID = kt.ТовВид and ((tbn1.idTVRGRP is NULL) or (tbn1.idTVRGRP is not NULL))) --Бонус по Виду
							or (tbn1.idTVR = hs.ОпКодТов and ((tbn1.idTVRVID is NULL) or (tbn1.idTVRVID is not NULL)) and ((tbn1.idTVRGRP is NULL) or (tbn1.idTVRGRP is not NULL))) --Бонус по Товару
						)
		
		where --ls.ОпДатаРасч between @startdate and @enddate
			--ls.ОпДатаРасч between @curdate and @curenddate
			ls.ОпДатаРасч = @curdate
			and btt1.TTiskl is NULL --уберем исключения по (Клиентам, ТТ, Группам)
			and tbn1.TVRiskl is NULL --уберем исключения по Товарам
		
--		print 'Обработали ' + convert(varchar, @curdate) + ','+ CAST(GETDATE() AS VARCHAR(20)) --+ ' : ' + convert(varchar, @curenddate)
		set @curdate = DATEADD(DAY, 1, @curdate)
		--set @curenddate = DATEADD(DAY,1,@curdate)
	END
	--select 'CountRows_DelFrom-Hist_skl_bon' = @@ROWCOUNT-1
	--select 'CountRows_InsertINTO-Hist_skl_bon' = @@ROWCOUNT-1
END
GO
/****** Object:  StoredProcedure [dbo].[Create_hist_skl_bonusV3_test]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ, Глухов ВЮ
-- Create date: 20-08-2014
-- Description:	Создает таблицу связей между фактическими продажами и бонусами
-- =============================================
CREATE PROCEDURE [dbo].[Create_hist_skl_bonusV3_test] 
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-45,@enddate)
	end

    -- Insert statements for procedure here
	declare @curdate date, 
			@curenddate date,
			@iBonId int = null
	set @curdate = @startdate
	--set @curenddate = DATEADD(DAY,1,@curdate)
  
 ---------------------------
  
  declare bonus_cursor CURSOR FOR 		

SELECT idBon from [Бонус].[dbo].Bonus  where idBon=100


open bonus_cursor;

FETCH NEXT FROM bonus_cursor 
INTO @iBonId

WHILE @@FETCH_STATUS = 0
BEGIN  
   
print 'Программа '+ str(@iBonId,5,0)
	set @curdate = @startdate

--------------------------------
	
	WHILE @curdate/*@curenddate*/ <= @enddate
	BEGIN
		delete from Hist_skl_bon_tst --WITH (TABLOCK)
		where ОпНаклКод in	(
								select ls.ОпНаклКод
								from list_skl as ls
								where --ls.ОпДатаРасч between @startdate and @enddate
									ls.ОпДатаРасч between @curdate and @curenddate
									or ls.ОпДатаРасч is NULL --удалим все неправильные записи, т.е. отсутствующие в list_skl
							)
		
		insert into Hist_skl_bon_tst /*WITH (TABLOCK)*/ (ОпНаклКод,ОпТовНом, idBon, idBonTvr,idBon_type, Stavka)
			select 
			hs.ОпНаклКод,
			hs.ОпТовНом,
			tbn0.idBon,
			tbn0.idBonTvr,
			tbn0.idBon_type ,
			tbn0.Stavka
		from list_skl as ls WITH(NOLOCK)
			inner join KAT_KLN as cl on ls.ОпКлн = cl.КлнКод
			inner join	(--выбирем все записи которые удовлетворяют критерию по торговым точкам БЕЗ ИСКЛЮЧЕНИЙ
							select
								bn.idBon
								,btt.idKLN
								,idTT
								,idKatKL
								,bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
							from [Бонус].[dbo].Bonus as bn
								left join [Бонус].[dbo].[Bonus_tt] as btt on bn.idbon = btt.idbon and btt.iskl = 0  --указанные явно и нет (все)
								where bn.idBon = @iBonId
							--where btt.idBon 
								
						) as btt0 on 
						ls.ОпДатаРасч between btt0.date_beg and btt0.date_end
						and
						(
							(btt0.idKLN = ls.ОпКлн and btt0.idTT = 0) --по всему клиенту
							or (btt0.idKLN = ls.ОпКлн and btt0.idTT = ls.КодАдрДоставки) --по торговой точке клиента
							or (btt0.idKLN = 0 and btt0.idTT is NULL and btt0.idKatKL = cl.КлнГрпКод) --по группе клиентов
							or (btt0.idKLN is NULL and btt0.idTT is NULL and btt0.idKatKL is NULL) --все клиенты
						)
			left join	(--уберем корень зла по торговым точкам ТОЛЬКО ИСКЛЮЧЕНИЯ
							select
								bn.idBon
								,btt.idKLN
								,idTT
								,idKatKL
								,bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
								,TTiskl = '1'
							from [Бонус].[dbo].Bonus as bn
								inner join [Бонус].[dbo].[Bonus_tt] as btt on bn.idbon = btt.idbon and btt.iskl = 1 --исключения
								where bn.idBon = @iBonId
						) as btt1 on 
						ls.ОпДатаРасч between btt1.date_beg and btt1.date_end
						and btt0.idBon = btt1.idBon
						and
						(
							(btt1.idKLN = ls.ОпКлн and btt1.idTT = 0) --по всему клиенту
							or (btt1.idKLN = ls.ОпКлн and btt1.idTT = ls.КодАдрДоставки) --по торговой точке клиента
							or (btt1.idKLN = 0 and btt1.idTT is NULL and btt1.idKatKL = cl.КлнГрпКод) --по группе клиентов
						)
			--прицепим паровозик из табличной части накладных
			inner join hist_skl as hs on hs.ОпНаклКод = ls.ОпНаклКод
			inner join KAT_TVR as kt on hs.ОпКодТов = kt.ТовКод
			inner join KAT_GRPT as kg on kt.ТовГрп = kg.ГрпКод
			inner join ( --добавим данные по бунусам в которых идет четкое указание по товарам, товарным группам и товарным видам
						 --данные действия произведем по всем Клиентам, Группам клиентов и ТТ указанных в бонусах без исключений
						select 
							bn.idBon,
							bn.idBon_type ,
							--bn.idNFКлнКод, 
							btv.idBonTvr,
							btv.idTVR, 
							btv.idTVRGRP, 
							btv.idTVRVID, 
							'Stavka' =	btp.sign_type *
										case 
											when btv.StavkaBon > 0 
											then btv.StavkaBon
											when bn.StavkaBonDef > 0 and (btv.StavkaBon <= 0 or btv.StavkaBon is NULL)
											then bn.StavkaBonDef
										end,
							bn.date_beg
							,date_end =	case
											when bn.date_end is NULL then @enddate
											else bn.date_end
										end
						from [Бонус].[dbo].Bonus as bn
							left join [Бонус].[dbo].Bonus_Tvr as btv on bn.idbon = btv.idbon and (btv.iskl = 0 or btv.iskl is NULL)
							left join [Бонус].[dbo].[Bon_type] as btp on bn.idBon_type = btp.id_type
						where 
							 bn.idBon = @iBonId and
							(bn.StavkaBonDef > 0 or btv.StavkaBon > 0) --выбирем товар где бонус больше 0
							and bn.idNFКлнКод > 0 --уберем программы без указания получателя
							and bn.idBon_Stat = 1 --выбирем только действующие программы
							
						) as tbn0 on 
							ls.ОпДатаРасч between tbn0.date_beg and tbn0.date_end
							and tbn0.idBon = btt0.idBon
							and
							(
								(tbn0.idTVR is NULL and tbn0.idTVRVID is NULL and tbn0.idTVRGRP = kt.ТовГрп) --Бонус по Группе
								or (tbn0.idTVR is NULL and tbn0.idTVRVID = kt.ТовВид and ((tbn0.idTVRGRP is NULL) or (tbn0.idTVRGRP is not NULL))) --Бонус по Виду
								or (tbn0.idTVR = hs.ОпКодТов and ((tbn0.idTVRVID is NULL) or (tbn0.idTVRVID is not NULL)) and ((tbn0.idTVRGRP is NULL) or (tbn0.idTVRGRP is not NULL))) --Бонус по Товару
								or (tbn0.idTVR is NULL and tbn0.idTVRVID is NULL and tbn0.idTVRGRP is NULL) --Все товары по Бонусу !!!При отсутствии каких либо исключений
							)
			left join	( --добавим таблицу исключений по товарам
							select 
								bn.idBon, 
								bn.idBon_type ,
								btv.idTVR, 
								btv.idTVRGRP, 
								btv.idTVRVID, 
								TVRiskl = '1',
								bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
							from [Бонус].[dbo].Bonus as bn
								left join [Бонус].[dbo].Bonus_Tvr as btv on bn.idbon = btv.idbon and btv.iskl = 1
							where 
							 bn.idBon = @iBonId and
								(bn.StavkaBonDef > 0 or btv.StavkaBon > 0) --выбирем товар где бонус больше 0
								and bn.idNFКлнКод > 0 --уберем программы без указания получателя
								and bn.idBon_Stat = 1 --выбирем только действующие программы
						) as tbn1 on 
						ls.ОпДатаРасч between tbn1.date_beg and tbn1.date_end
						and tbn1.idBon = btt0.idBon
						and
						(
							(tbn1.idTVR is NULL and tbn1.idTVRVID is NULL and tbn1.idTVRGRP = kt.ТовГрп) --Бонус по Группе
							or (tbn1.idTVR is NULL and tbn1.idTVRVID = kt.ТовВид and ((tbn1.idTVRGRP is NULL) or (tbn1.idTVRGRP is not NULL))) --Бонус по Виду
							or (tbn1.idTVR = hs.ОпКодТов and ((tbn1.idTVRVID is NULL) or (tbn1.idTVRVID is not NULL)) and ((tbn1.idTVRGRP is NULL) or (tbn1.idTVRGRP is not NULL))) --Бонус по Товару
						)
		
		where --ls.ОпДатаРасч between @startdate and @enddate
			--ls.ОпДатаРасч between @curdate and @curenddate
			ls.ОпДатаРасч = @curdate
			and btt1.TTiskl is NULL --уберем исключения по (Клиентам, ТТ, Группам)
			and tbn1.TVRiskl is NULL --уберем исключения по Товарам
		
		print 'Обработали ' + convert(varchar, @curdate) + ','+ CAST(GETDATE() AS VARCHAR(20)) --+ ' : ' + convert(varchar, @curenddate)
		set @curdate = DATEADD(DAY, 1, @curdate)
		--set @curenddate = DATEADD(DAY,1,@curdate)
	END
	--select 'CountRows_DelFrom-Hist_skl_bon' = @@ROWCOUNT-1
	--select 'CountRows_InsertINTO-Hist_skl_bon' = @@ROWCOUNT-1
	
			--END;
    
  print 'Программа завершение '+ str(@iBonId,5,0)
      
    FETCH NEXT FROM bonus_cursor 
   INTO @iBonId
END 
CLOSE bonus_cursor;
DEALLOCATE bonus_cursor;
	
print 'Финиш '
	
END
GO
/****** Object:  View [dbo].[M_FICT_NACL_DOP]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [dbo].[M_FICT_NACL_DOP]
as
SELECT [ОпКодТов], [ОпКол], [ОпТип], [ОпЦена], 
	[ОпКодУпак], [ОпСкл], [ОпВозвр], [ОпНакл], 
	[ОпНаклКод], [ОпТипКлн], [ОпТовНом], [ОпДатаРасч], 
	[ОпОстаток], [ОпКлн],
	ОпКол*ОпЦена*(ОпТип*2 - 3) as ОпСуммаЗн,
	ОпКол*(ОпТип*2 -3) as ОпКолЗн
FROM [dbo].[M_FICT_SKL_DOP]
GO
/****** Object:  View [dbo].[M_FICT_NACL]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  view [dbo].[M_FICT_NACL]
as
SELECT [ОпКодТов], [ОпКол], [ОпТип], [ОпЦена], 
	[ОпКодУпак], [ОпСкл], [ОпВозвр], [ОпНакл], 
	[ОпНаклКод], [ОпТипКлн], [ОпТовНом], [ОпДатаРасч], 
	[ОпОстаток], [ОпКлн],[ОпКолОжид],
	ОпКол*ОпЦена*(ОпТип*2 - 3) as ОпСуммаЗн,
	ОпКол*(ОпТип*2 -3) as ОпКолЗн,
	ОпКолОжид*ОпЦена*(ОпТип*2 - 3) as ОпСуммаЗнОжид,
	ОпКолОжид*(ОпТип*2 -3) as ОпКолЗнОжид
FROM [dbo].[M_FICT_SKL]
GO
/****** Object:  View [dbo].[T_DOLG_TAB]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
--Евгений Федяков
--2010.11.30
--Как оказывается в T_Dolg_tab такиеже данные как и в [F_DEBET_SROK]
--Это представление заменяет таблицу T_Dolg_tab, которую около 40 минут расчитывал NewSaldoSrok.
--Теперь данные расчитываются в [Fill_t_dolg_tab]

----ЕВФ 09.03.2011
-- доработка согласно заданию http://teaming.sea.nexcom.ru/ssf/a/c/p_name/ss_forum/p_action/1/entryId/31528/action/view_folder_entry/binderId/1547
		
CREATE VIEW [dbo].[T_DOLG_TAB]
AS
SELECT 
		Client as	IdClient,
		Debit as		Debit,
		Credit as 		Credit,
		Saldo as		Saldo,		
		(CASE 
			WHEN Saldo<(0) THEN ROUND([AvgSaldo]/Saldo,0)
			ELSE (0) end)
			 
				as		SrokSaldo,
		[Date] as	DateSaldo,
		(CASE 
			WHEN Saldo<(0) THEN  -Saldo 
			ELSE (0) end) 			
				as		Debt,
		(CASE 
			WHEN Saldo<(0) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)<(16) THEN  -Saldo 
			ELSE (0) end)
				as		To15,
		(CASE 
			WHEN Saldo<(0) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)>=(16) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)<(31) 
				THEN  -Saldo 
			ELSE (0) end)
				as		From16To30,
		(CASE 
			WHEN Saldo<(0) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)>=(31) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)<(46) 
				THEN  -Saldo 
			ELSE (0) end)
				as		From31To45,
		(CASE 
			WHEN Saldo<(0) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0) 
						ELSE (0) end)>=(46) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)<(61) 
				THEN  -Saldo 
			ELSE (0) end)
				as		From46To60,
		(CASE 
			WHEN Saldo<(0) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)>=(61)				
				THEN  -Saldo 
			ELSE (0) end)
				as		More60,
				
				
		--ЕФ 09.03.2011
		--доработка согласно заданию http://teaming.sea.nexcom.ru/ssf/a/c/p_name/ss_forum/p_action/1/entryId/31528/action/view_folder_entry/binderId/1547		
		--НАЧАЛО
		(CASE 
			WHEN Saldo<(0) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)>=(16) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)<(21) 
				THEN  -Saldo 
			ELSE (0) end)
				as		From16To20,
		(CASE 
			WHEN Saldo<(0) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)>=(21) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)<(26) 
				THEN  -Saldo 
			ELSE (0) end)
				as		From21To25,
		(CASE 
			WHEN Saldo<(0) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)>=(26) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)<(36) 
				THEN  -Saldo 
			ELSE (0) end)
				as		From26To35,
		(CASE 
			WHEN Saldo<(0) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)>=(36) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)<(46) 
				THEN  -Saldo 
			ELSE (0) end)
				as		From36To45,
		(CASE 
			WHEN Saldo<(0) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)>=(46) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)<(56) 
				THEN  -Saldo 
			ELSE (0) end)
				as		From46To55,	
		(CASE 
			WHEN Saldo<(0) 
				AND (CASE 
						WHEN Saldo<>(0) THEN ROUND([AvgSaldo]/Saldo,0)
						ELSE (0) end)>=(56)				
				THEN  -Saldo 
			ELSE (0) end)
				as		More55,	
		
				
				
		--ЕФ 09.03.2011
		--доработка согласно заданию http://teaming.sea.nexcom.ru/ssf/a/c/p_name/ss_forum/p_action/1/entryId/31528/action/view_folder_entry/binderId/1547		
		--КОНЕЦ
				
				
		[AvgSaldo] as	SumPeriod,
		(SELECT dbo.SLD_KLN.ЛимитКредита FROM dbo.SLD_KLN
				WHERE t.Client=dbo.SLD_KLN.КлнКод)
				as		LimitCredit,


		(SELECT dbo.SLD_KLN.ДнейКредита FROM dbo.SLD_KLN
			WHERE t.Client=dbo.SLD_KLN.КлнКод)
				as		srokCredit
  FROM [dbo].AvgSaldo t
--except  
--  select 
--		idClient,
--		Debit,
--		Credit,
--		Saldo,
--		--as SrokSaldo,
--		DateSaldo,
--		--Debt,
--		SumPeriod
--   from dbo.t_dolg_tab
  
  --select top 100 * from F_SROK
GO
/****** Object:  View [dbo].[kat_tvr_bit]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[kat_tvr_bit]
AS
SELECT     ТовКод, БФ, dbo.Dec2Bit(БФ) AS БФ_full, LEFT(RIGHT(dbo.Dec2Bit(БФ), 0), 1) AS bit00, LEFT(RIGHT(dbo.Dec2Bit(БФ), 1), 1) AS bit01, 
                      LEFT(RIGHT(dbo.Dec2Bit(БФ), 2), 1) AS bit02, LEFT(RIGHT(dbo.Dec2Bit(БФ), 3), 1) AS bit03, LEFT(RIGHT(dbo.Dec2Bit(БФ), 4), 1) AS bit04, 
                      LEFT(RIGHT(dbo.Dec2Bit(БФ), 5), 1) AS bit05, LEFT(RIGHT(dbo.Dec2Bit(БФ), 6), 1) AS bit06, LEFT(RIGHT(dbo.Dec2Bit(БФ), 7), 1) AS bit07, 
                      LEFT(RIGHT(dbo.Dec2Bit(БФ), 8), 1) AS bit08, LEFT(RIGHT(dbo.Dec2Bit(БФ), 9), 1) AS bit09, LEFT(RIGHT(dbo.Dec2Bit(БФ), 10), 1) AS bit10, 
                      LEFT(RIGHT(dbo.Dec2Bit(БФ), 11), 1) AS bit11, LEFT(RIGHT(dbo.Dec2Bit(БФ), 12), 1) AS bit12, LEFT(RIGHT(dbo.Dec2Bit(БФ), 13), 1) AS bit13, 
                      LEFT(RIGHT(dbo.Dec2Bit(БФ), 14), 1) AS bit14, LEFT(RIGHT(dbo.Dec2Bit(БФ), 15), 1) AS bit15, LEFT(RIGHT(dbo.Dec2Bit(БФ), 16), 1) AS bit16, 
                      LEFT(RIGHT(dbo.Dec2Bit(БФ), 17), 1) AS bit17, LEFT(RIGHT(dbo.Dec2Bit(БФ), 18), 1) AS bit18, LEFT(RIGHT(dbo.Dec2Bit(БФ), 19), 1) AS bit19, 
                      LEFT(RIGHT(dbo.Dec2Bit(БФ), 20), 1) AS bit20, LEFT(RIGHT(dbo.Dec2Bit(БФ), 21), 1) AS bit21, LEFT(RIGHT(dbo.Dec2Bit(БФ), 22), 1) AS bit22, 
                      LEFT(RIGHT(dbo.Dec2Bit(БФ), 23), 1) AS bit23, LEFT(RIGHT(dbo.Dec2Bit(БФ), 24), 1) AS bit24, LEFT(RIGHT(dbo.Dec2Bit(БФ), 25), 1) AS bit25, 
                      LEFT(RIGHT(dbo.Dec2Bit(БФ), 26), 1) AS bit26, LEFT(RIGHT(dbo.Dec2Bit(БФ), 27), 1) AS bit27, LEFT(RIGHT(dbo.Dec2Bit(БФ), 28), 1) AS bit28, 
                      LEFT(RIGHT(dbo.Dec2Bit(БФ), 29), 1) AS bit29, LEFT(RIGHT(dbo.Dec2Bit(БФ), 30), 1) AS bit30, ТовАрт
FROM         dbo.KAT_TVR
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 242
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'kat_tvr_bit'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'kat_tvr_bit'
GO
/****** Object:  View [dbo].[list_skl_total_full]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[list_skl_total_full]
AS
SELECT     dbo.LIST_SKL.ОпНаклКод, dbo.LIST_SKL_dop.Zachet AS Expr1
FROM         dbo.LIST_SKL RIGHT OUTER JOIN
                      dbo.LIST_SKL_dop ON dbo.LIST_SKL.ОпНаклКод = dbo.LIST_SKL_dop.ОпНаклКод
WHERE     (dbo.LIST_SKL.ОпВозврат = 0) AND (dbo.LIST_SKL.ОпТип = 1) AND (dbo.LIST_SKL_dop.Zachet IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 263
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LIST_SKL_dop"
            Begin Extent = 
               Top = 6
               Left = 245
               Bottom = 84
               Right = 405
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 27
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'list_skl_total_full'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'list_skl_total_full'
GO
/****** Object:  StoredProcedure [dbo].[Create_hist_skl_bonusV2]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 31-07-2014
-- Description:	Создает таблицу связей между фактическими продажами и бонусами
-- =============================================
CREATE PROCEDURE [dbo].[Create_hist_skl_bonusV2] 
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-45,@enddate)
	end

    -- Insert statements for procedure here
	declare @curdate date, @curenddate date
	set @curdate = @startdate
	--set @curenddate = DATEADD(DAY,1,@curdate)


	
	WHILE @curdate/*@curenddate*/ <= @enddate
	BEGIN
		delete from Hist_skl_bon --WITH (TABLOCK)
		where idHist_skl in	(
								select hbn.idHist_skl
								from Hist_skl_bon as hbn
									left join hist_skl as hs on hbn.idHist_skl = hs.ОпКод
									left join list_skl as ls on hs.ОпНаклКод = ls.ОпНаклКод								
								where --ls.ОпДатаРасч between @startdate and @enddate
									ls.ОпДатаРасч between @curdate and @curenddate
									or ls.ОпДатаРасч is NULL --удалим все неправильные записи, т.е. отсутствующие в list_skl
							)
		
		insert into Hist_skl_bon /*WITH (TABLOCK)*/ (idHist_skl, idBon, idBonTvr, Stavka)
		select 
			hs.ОпКод,
			tbn0.idBon,
			tbn0.idBonTvr,
			tbn0.Stavka
		from list_skl as ls
			inner join KAT_KLN as cl on ls.ОпКлн = cl.КлнКод
			inner join	(--выбирем все записи которые удовлетворяют критерию по торговым точкам БЕЗ ИСКЛЮЧЕНИЙ
							select
								bn.idBon
								,btt.idKLN
								,idTT
								,idKatKL
								,bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
							from [Бонус].[dbo].Bonus as bn
								left join [Бонус].[dbo].[Bonus_tt] as btt on bn.idbon = btt.idbon and btt.iskl = 0 --указанные явно и нет (все)
							--where btt.idBon 
								
						) as btt0 on 
						ls.ОпДатаРасч between btt0.date_beg and btt0.date_end
						and
						(
							(btt0.idKLN = ls.ОпКлн and btt0.idTT = 0) --по всему клиенту
							or (btt0.idKLN = ls.ОпКлн and btt0.idTT = ls.КодАдрДоставки) --по торговой точке клиента
							or (btt0.idKLN = 0 and btt0.idTT is NULL and btt0.idKatKL = cl.КлнГрпКод) --по группе клиентов
							or (btt0.idKLN is NULL and btt0.idTT is NULL and btt0.idKatKL is NULL) --все клиенты
						)
			left join	(--уберем корень зла по торговым точкам ТОЛЬКО ИСКЛЮЧЕНИЯ
							select
								bn.idBon
								,btt.idKLN
								,idTT
								,idKatKL
								,bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
								,TTiskl = '1'
							from [Бонус].[dbo].Bonus as bn
								inner join [Бонус].[dbo].[Bonus_tt] as btt on bn.idbon = btt.idbon and btt.iskl = 1 --исключения
						) as btt1 on 
						ls.ОпДатаРасч between btt1.date_beg and btt1.date_end
						and btt0.idBon = btt1.idBon
						and
						(
							(btt1.idKLN = ls.ОпКлн and btt1.idTT = 0) --по всему клиенту
							or (btt1.idKLN = ls.ОпКлн and btt1.idTT = ls.КодАдрДоставки) --по торговой точке клиента
							or (btt1.idKLN = 0 and btt1.idTT is NULL and btt1.idKatKL = cl.КлнГрпКод) --по группе клиентов
						)
			--прицепим паровозик из табличной части накладных
			inner join hist_skl as hs on hs.ОпНаклКод = ls.ОпНаклКод
			inner join KAT_TVR as kt on hs.ОпКодТов = kt.ТовКод
			inner join KAT_GRPT as kg on kt.ТовГрп = kg.ГрпКод
			inner join ( --добавим данные по бунусам в которых идет четкое указание по товарам, товарным группам и товарным видам
						 --данные действия произведем по всем Клиентам, Группам клиентов и ТТ указанных в бонусах без исключений
						select 
							bn.idBon, 
							--bn.idNFКлнКод, 
							btv.idBonTvr,
							btv.idTVR, 
							btv.idTVRGRP, 
							btv.idTVRVID, 
							'Stavka' =	btp.sign_type *
										case 
											when btv.StavkaBon > 0 
											then btv.StavkaBon
											when bn.StavkaBonDef > 0 and (btv.StavkaBon <= 0 or btv.StavkaBon is NULL)
											then bn.StavkaBonDef
										end,
							bn.date_beg
							,date_end =	case
											when bn.date_end is NULL then @enddate
											else bn.date_end
										end
						from [Бонус].[dbo].Bonus as bn
							left join [Бонус].[dbo].Bonus_Tvr as btv on bn.idbon = btv.idbon and (btv.iskl = 0 or btv.iskl is NULL)
							left join [Бонус].[dbo].[Bon_type] as btp on bn.idBon_type = btp.id_type
						where 
							(bn.StavkaBonDef > 0 or btv.StavkaBon > 0) --выбирем товар где бонус больше 0
							and bn.idNFКлнКод > 0 --уберем программы без указания получателя
							and bn.idBon_Stat = 1 --выбирем только действующие программы
							
						) as tbn0 on 
							ls.ОпДатаРасч between tbn0.date_beg and tbn0.date_end
							and tbn0.idBon = btt0.idBon
							and
							(
								(tbn0.idTVR is NULL and tbn0.idTVRVID is NULL and tbn0.idTVRGRP = kt.ТовГрп) --Бонус по Группе
								or (tbn0.idTVR is NULL and tbn0.idTVRVID = kt.ТовВид and ((tbn0.idTVRGRP is NULL) or (tbn0.idTVRGRP is not NULL))) --Бонус по Виду
								or (tbn0.idTVR = hs.ОпКодТов and ((tbn0.idTVRVID is NULL) or (tbn0.idTVRVID is not NULL)) and ((tbn0.idTVRGRP is NULL) or (tbn0.idTVRGRP is not NULL))) --Бонус по Товару
								or (tbn0.idTVR is NULL and tbn0.idTVRVID is NULL and tbn0.idTVRGRP is NULL) --Все товары по Бонусу !!!При отсутствии каких либо исключений
							)
			left join	( --добавим таблицу исключений по товарам
							select 
								bn.idBon, 
								btv.idTVR, 
								btv.idTVRGRP, 
								btv.idTVRVID, 
								TVRiskl = '1',
								bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
							from [Бонус].[dbo].Bonus as bn
								left join [Бонус].[dbo].Bonus_Tvr as btv on bn.idbon = btv.idbon and btv.iskl = 1
							where 
								(bn.StavkaBonDef > 0 or btv.StavkaBon > 0) --выбирем товар где бонус больше 0
								and bn.idNFКлнКод > 0 --уберем программы без указания получателя
								and bn.idBon_Stat = 1 --выбирем только действующие программы
						) as tbn1 on 
						ls.ОпДатаРасч between tbn1.date_beg and tbn1.date_end
						and tbn1.idBon = btt0.idBon
						and
						(
							(tbn1.idTVR is NULL and tbn1.idTVRVID is NULL and tbn1.idTVRGRP = kt.ТовГрп) --Бонус по Группе
							or (tbn1.idTVR is NULL and tbn1.idTVRVID = kt.ТовВид and ((tbn1.idTVRGRP is NULL) or (tbn1.idTVRGRP is not NULL))) --Бонус по Виду
							or (tbn1.idTVR = hs.ОпКодТов and ((tbn1.idTVRVID is NULL) or (tbn1.idTVRVID is not NULL)) and ((tbn1.idTVRGRP is NULL) or (tbn1.idTVRGRP is not NULL))) --Бонус по Товару
						)
		
		where --ls.ОпДатаРасч between @startdate and @enddate
			--ls.ОпДатаРасч between @curdate and @curenddate
			ls.ОпДатаРасч = @curdate
			and btt1.TTiskl is NULL --уберем исключения по (Клиентам, ТТ, Группам)
			and tbn1.TVRiskl is NULL --уберем исключения по Товарам
		
		print 'Обработали ' + convert(varchar, @curdate) --+ ' : ' + convert(varchar, @curenddate)
		set @curdate = DATEADD(DAY, 1, @curdate)
		--set @curenddate = DATEADD(DAY,1,@curdate)
	END
		
	
	--select 'CountRows_DelFrom-Hist_skl_bon' = @@ROWCOUNT-1
	
	

	--select 'CountRows_InsertINTO-Hist_skl_bon' = @@ROWCOUNT-1
END
GO
/****** Object:  View [vt].[T_AllDebit]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* Расчет общей дебиторской задолженности.*/
CREATE VIEW [vt].[T_AllDebit]
AS
SELECT     TOP 100 PERCENT m.Клн, l.НашаФирма, ISNULL
                          ((SELECT     SUM(Сумма) AS Expr1
                              FROM         dbo.M_TRANS
                              WHERE     (ОпТип = 2) AND (Клн = m.Клн) AND (НашаФирма = l.НашаФирма)), 0) AS Отгружено, ISNULL
                          ((SELECT     SUM(Сумма) AS Expr1
                              FROM         dbo.M_TRANS AS M_TRANS_7
                              WHERE     (ОпТип = 1) AND (Клн = m.Клн) AND (НашаФирма = l.НашаФирма)), 0) AS Возвраты, ISNULL
                          ((SELECT     SUM(Сумма) AS Expr1
                              FROM         dbo.M_TRANS AS M_TRANS_6
                              WHERE     (ОпТип IS NULL) AND (Клн = m.Клн) AND (НашаФирма = l.НашаФирма) AND (ПлатРежим < 3)), 0) AS ПлатежиОтКлиента, ISNULL
                          ((SELECT     SUM(Сумма) AS Expr1
                              FROM         dbo.M_TRANS AS M_TRANS_5
                              WHERE     (ОпТип IS NULL) AND (Клн = m.Клн) AND (НашаФирма = l.НашаФирма) AND (ПлатРежим > 2)), 0) AS ПлатежиКлиенту, ISNULL((ISNULL
                          ((SELECT     SUM(Сумма) AS Expr1
                              FROM         dbo.M_TRANS AS M_TRANS_4
                              WHERE     (ОпТип = 2) AND (Клн = m.Клн) AND (НашаФирма = l.НашаФирма)), 0) - ISNULL
                          ((SELECT     SUM(Сумма) AS Expr1
                              FROM         dbo.M_TRANS AS M_TRANS_3
                              WHERE     (ОпТип = 1) AND (Клн = m.Клн) AND (НашаФирма = l.НашаФирма)), 0)) - (ISNULL
                          ((SELECT     SUM(Сумма) AS Expr1
                              FROM         dbo.M_TRANS AS M_TRANS_2
                              WHERE     (ОпТип IS NULL) AND (Клн = m.Клн) AND (НашаФирма = l.НашаФирма) AND (ПлатРежим < 3)), 0) - ISNULL
                          ((SELECT     SUM(Сумма) AS Expr1
                              FROM         dbo.M_TRANS AS M_TRANS_1
                              WHERE     (ОпТип IS NULL) AND (Клн = m.Клн) AND (НашаФирма = l.НашаФирма) AND (ПлатРежим > 2)), 0)), 0) AS ДЗ, c.КлнНаим AS Клиент, k.КлнНаим
FROM         dbo.M_TRANS AS m LEFT OUTER JOIN
                      dbo.LIST_SKL AS l ON l.ОпНакл = m.Накл AND l.ОпДатаРасч = m.ДатаРасч LEFT OUTER JOIN
                      dbo.KAT_KLN AS k ON k.КлнКод = l.НашаФирма LEFT OUTER JOIN
                      dbo.KAT_KLN AS c ON c.КлнКод = m.Клн
WHERE     (m.ОпТип = 2) AND (k.КлнНаим IS NOT NULL)
GROUP BY k.КлнНаим, m.Клн, c.КлнНаим, l.НашаФирма
ORDER BY ДЗ
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4[30] 2[40] 3) )"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2[64] 3) )"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 5
   End
   Begin DiagramPane = 
      PaneHidden = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "m"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "l"
            Begin Extent = 
               Top = 6
               Left = 252
               Bottom = 125
               Right = 446
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "k"
            Begin Extent = 
               Top = 6
               Left = 484
               Bottom = 125
               Right = 660
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "c"
            Begin Extent = 
               Top = 6
               Left = 698
               Bottom = 125
               Right = 874
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      PaneHidden = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350' , @level0type=N'SCHEMA',@level0name=N'vt', @level1type=N'VIEW',@level1name=N'T_AllDebit'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'vt', @level1type=N'VIEW',@level1name=N'T_AllDebit'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'vt', @level1type=N'VIEW',@level1name=N'T_AllDebit'
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiLOCALPRODFULL]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 29-07-2014
-- Description:	Выводит таблицу продукции по Боржоми
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiLOCALPRODFULL]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	SET NOCOUNT ON;

	select	kt.ТовКод,
			trd.КодПоставщика,
			'arh' = (kt.БФ & 1 )
	from KAT_TVR as kt
		inner join TVR_DEF as trd on trd.ТовКод = kt.ТовКод
		inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод 
	WHERE (kv.ПользКод = '749' or kv.ПользКод = '747')
			--and (kt.БФ & 1 ) = 0  --Tvr не архив
			and (RTRIM(trd.КодПоставщика) != '' and trd.КодПоставщика is not NULL)
	order by kt.ТовКод asc
END
GO
/****** Object:  View [dbo].[F_TVR_COUNT]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create view [dbo].[F_TVR_COUNT]
as
-- Количество обращений к товару
select 	distinct hist_skl.ОпКодТов, count(hist_skl.ОпКодТов) as ТовКол,
	ttn_dkm.НомерТТН, ttn_dkm.ДатаРасч,
	count( distinct(RTRIM(CAST(dbo.D_NAKL.НаклКлн AS char))
	+ '/' + RTRIM(CAST(dbo.D_NAKL.КодАдрДоставки AS char))))
		AS [СуммАдрДост]
--	, d_nakl.НаклНомер
from ttn_nkl
	inner join ttn_dkm on ttn_dkm.КодТТН = ttn_nkl.КодТТН
	inner join d_nakl on d_nakl.НаклСклКод = ttn_nkl.КодСкл
		and d_nakl.НаклНомер = ttn_nkl.НомДок
		and d_nakl.НаклТип = ttn_nkl.ТипОпер
	inner join hist_skl on d_nakl.ОпНаклКод = hist_skl.ОпНаклКод
--where	ttn_dkm.ДатаРасч > '2006-05-01' and ttn_dkm.ДатаРасч < '2006-05-10'
group by hist_skl.ОпКодТов, ttn_dkm.НомерТТН, ttn_dkm.ДатаРасч,
	D_NAKL.НаклКлн, D_NAKL.КодАдрДоставки
--	, d_nakl.НаклНомер
GO
/****** Object:  UserDefinedFunction [dbo].[f_TTN_DKM]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_TTN_DKM]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT
	ttn.ПутЛист, ttn.КодТТН, ttn.ДатаИсх, ttn.Сопр, ttn.Автомоб, ttn.РегНом, ttn.Водит, ttn.НомерТТН, ttn.ПрОтпр,
	ttn.ДатаФактОриг, ttn.ДатаПланОриг, ttn.ДопСвед, ttn.КодГрузоотпр, ttn.КодСотр, ttn.КодВодит, ttn.КодСопр,
	ttn.КодАвто, ttn.КодЗапПоездки, ttn.РегистрНом, ttn.ПользЗанявший, CAST(ttn.НашаФирма AS int) AS НашаФирма,
	ttn.БитФлаги, ttn.КодЗатр, ttn.СуммЗатр, ttn.СуммЗатрНдс, ttn.Валюта, ttn.ДатаКурсаОриг, ttn.ТипОпер, ttn.ДатаРасч,
	ttn.Перевозчик, '' AS ShippingGradient, CASE Сопр WHEN 'Самовывоз' THEN 1 ELSE 0 END AS Самовывоз, 
	CASE СуммЗатр WHEN 0 THEN 1 ELSE 0 END AS [Нулевые транспортные затраты], k.КлнНаим AS ПеревозчикName, 
	CASE ttn.ТипОпер WHEN 1 THEN 'Закупка' WHEN 2 THEN 'Продажа' ELSE NULL END AS ТипОперНазв, 'Есть ТТН' AS [Есть ТТН],
	CASE WHEN EXISTS (SELECT * FROM dbo.zkz_nkl AS z
					  WHERE z.Тип = 4 AND z.ДокКод = ttn.КодТТН) THEN 1 ELSE 0 END AS [Есть накладные по ТТН],
	CASE WHEN EXISTS (SELECT * FROM dbo.zkz_nkl AS z
					  INNER JOIN dbo.hist_skl h ON z.Скл = h.ОпСкл AND z.ФлгОпер = h.ОпТип AND z.Накл = h.ОпНакл
					  INNER JOIN dbo.TVR_DEF t ON h.ОпКодТов = t .ТовКод
					  WHERE z.Тип = 4 AND z.ДокКод = ttn.КодТТН AND (t .ТовВесБрутто <> 0 OR t .Объем <> 0)
					  ) THEN 1 ELSE 0 END AS [Расходы ТТН разнесены по товарам],
	(CASE WHEN EXISTS (SELECT zvk.АвтКодМЛ FROM zvk_dkm
					   INNER JOIN list_zvk ZVK ON zvk.АвтКодЗвк = zvk_dkm.АвтКодЗвкДост
					   WHERE (ТипДок = 4) AND (НомДок = ttn.КодТТН) AND NOT (zvk.АвтКодМЛ IS NULL)
					   GROUP BY zvk.АвтКодМЛ) THEN 'ТТН созадан по МЛ' ELSE 'ТТН не привязана к МЛ' END) AS ПризнакМЛ
FROM dbo.TTN_DKM AS ttn
LEFT OUTER JOIN dbo.KAT_KLN AS k ON k.КлнКод = ttn.КодГрузоотпр
WHERE ttn.ДатаРасч >= @BegDate and ttn.ДатаРасч < @EndDate
--select * FROM dbo.TTN_DKM_ext AS ttn
--WHERE ttn.ДатаРасч between @BegDate and @EndDate
);
GO
/****** Object:  View [dbo].[F_TTN_CLIENT_COUNT]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE       VIEW [dbo].[F_TTN_CLIENT_COUNT]
AS
select  distinct d_nakl.НаклКлн, count(d_nakl.НаклКлн) as КлнКол,
 ttn_dkm.НомерТТН, ttn_dkm.ДатаРасч,
 count( distinct(RTRIM(CAST(dbo.D_NAKL.НаклКлн AS char))
 + '/' + RTRIM(CAST(dbo.D_NAKL.КодАдрДоставки AS char))))
  AS [СуммАдрДост],
 RTRIM(CAST(dbo.D_NAKL.НаклКлн AS char))
  + '/' + RTRIM(CAST(dbo.D_NAKL.КодАдрДоставки AS char))
  AS [КодКлн_КодАдрДоставки]
 --, d_nakl.НаклНомер
from ttn_nkl 
 inner join ttn_dkm on ttn_dkm.КодТТН = ttn_nkl.КодТТН
 inner join d_nakl on d_nakl.НаклСклКод = ttn_nkl.КодСкл
  and d_nakl.НаклНомер = ttn_nkl.НомДок
  and d_nakl.НаклТип = ttn_nkl.ТипОпер
group by d_nakl.НаклКлн, ttn_dkm.НомерТТН, ttn_dkm.ДатаРасч,
 D_NAKL.НаклКлн, D_NAKL.КодАдрДоставки
 --, d_nakl.НаклНомер
GO
/****** Object:  View [dbo].[T_ClientSaleByOurFirm]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[T_ClientSaleByOurFirm]
AS
SELECT     skl.НашаФирма, dbo.M_TRANS.Клн, SUM(dbo.M_TRANS.Сумма) AS Отгрузка
FROM         dbo.M_TRANS INNER JOIN
                      dbo.LIST_SKL skl ON skl.ОпНакл = dbo.M_TRANS.Накл AND skl.ОпДатаРасч = dbo.M_TRANS.ДатаРасч
WHERE     (dbo.M_TRANS.ОпТип = 2)
GROUP BY dbo.M_TRANS.Клн, skl.НашаФирма
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "M_TRANS"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 205
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "skl"
            Begin Extent = 
               Top = 6
               Left = 243
               Bottom = 114
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 4
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'T_ClientSaleByOurFirm'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'T_ClientSaleByOurFirm'
GO
/****** Object:  View [dbo].[T_ClientReturnByOurFirm]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[T_ClientReturnByOurFirm]
AS
SELECT     skl.НашаФирма, dbo.M_TRANS.Клн, SUM(dbo.M_TRANS.Сумма) AS Возвраты
FROM         dbo.M_TRANS INNER JOIN
                      dbo.LIST_SKL skl ON skl.ОпНакл = dbo.M_TRANS.Накл AND skl.ОпДатаРасч = dbo.M_TRANS.ДатаРасч
WHERE     (dbo.M_TRANS.ОпТип = 1)
GROUP BY dbo.M_TRANS.Клн, skl.НашаФирма
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "M_TRANS"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 205
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "skl"
            Begin Extent = 
               Top = 9
               Left = 368
               Bottom = 175
               Right = 553
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 4
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'T_ClientReturnByOurFirm'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'T_ClientReturnByOurFirm'
GO
/****** Object:  View [dbo].[T_ClientPaymentByOurFirm]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[T_ClientPaymentByOurFirm]
AS
SELECT     dkm.НашаФирма, dbo.M_TRANS.Клн, SUM(dbo.M_TRANS.Сумма) AS Платежи
FROM         dbo.M_TRANS INNER JOIN
                      dbo.DKM_BASI dkm ON dkm.ДОКодПлат = dbo.M_TRANS.ПлатКод
WHERE     (dbo.M_TRANS.ОпТип IS NULL)
GROUP BY dbo.M_TRANS.Клн, dkm.НашаФирма
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "M_TRANS"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 205
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "dkm"
            Begin Extent = 
               Top = 6
               Left = 243
               Bottom = 114
               Right = 424
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 4
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'T_ClientPaymentByOurFirm'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'T_ClientPaymentByOurFirm'
GO
/****** Object:  View [dbo].[F_DEBET_SROK]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--Евгений Федяков
--Теперь данные расчитываются в [Fill_t_dolg_tab]
CREATE VIEW [dbo].[F_DEBET_SROK]
AS
SELECT [Debit]		[ДбтТовар]
      ,[Credit]		[ДбтПлат]
      ,[Client]		[ДбтКлнКод]
      ,ISNULL([DateCode],0)		[ДбтДата]
      ,-[Saldo]		[ДбтСальдо]
      ,[AvgSaldo]	[ДбтСумПер]
      ,[Saldo]		[ДбтСум]
      ,-[Credit]+[Debit]	[ДбтОборот]
      ,[Date]		[ДбтДатаРасч]
  FROM [dbo].[AvgSaldo]
GO
/****** Object:  UserDefinedFunction [dbo].[f_cube_skl_month_remnant]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_cube_skl_month_remnant]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
select * from [cube].[skl_ost]
where Дата >= @BegDate and Дата < @EndDate
);
GO
/****** Object:  SqlAssembly [EDIKorusSOAP.XmlSerializers]    Script Date: 08/10/2015 12:56:00 ******/
CREATE ASSEMBLY [EDIKorusSOAP.XmlSerializers]
AUTHORIZATION [dbo]
FROM 
WITH PERMISSION_SET = SAFE
GO
/****** Object:  Table [xmt].[SaleLimitationMatrix]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[SaleLimitationMatrix](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[saleLimitationMatrixId] [bigint] NULL,
	[retailCategory] [nvarchar](255) NOT NULL,
	[ware] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_xmt.SaleLimitationMatrix] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  UserDefinedFunction [dbo].[f_AvgSaldoByFirm]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_AvgSaldoByFirm]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT
		CAST(Client AS int) AS Client, 0 AS Address, Firm, AvgSaldo, Saldo, [Date],
		CASE WHEN (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END)< 16 THEN 0
			 WHEN (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END) >= 16
				  AND (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END) < 21 THEN 1
			 WHEN (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END) >= 21
			      AND (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END) < 26 THEN 2
			 WHEN (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END) >= 26
 			      AND (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END) < 36 THEN 3
		     WHEN (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END) >= 36
			      AND (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END) < 46 THEN 4
			 WHEN (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END) >= 46
			      AND (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END) < 56 THEN 5
			 WHEN (CASE WHEN [Saldo] < (0) THEN ROUND([AvgSaldo] / [Saldo], 0) ELSE (0) END) >= 56 THEN 6 ELSE 6 END AS SrokSaldoID
FROM         dbo.AvgSaldoByFirm
WHERE [Date] >= @BegDate and [Date] < @EndDate
);
GO
/****** Object:  UserDefinedFunction [dbo].[f_Cube_HIST_SKL_old]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_Cube_HIST_SKL_old]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT	ОпКод, ОпКодТов, ОпКол, ОпТип, ОпЦена, ОпКодУпак, ОпСкл, ОпВозвр, ОпНакл, ОпНаклКод, ОпТипКлн, ОпТовНом, ОпТипКлн_INT, ОпСтоим, 
		ПолнАдресДоставки, ОпКлн, ОпДатаРасч, КодАдрДоставки, ОпСотр, ОпТипSKL, НашаФирма, ОпСтоимИтог, ОпКолИтог, dst, КодТКА, ВесБрутто, ВесНетто, 
		СуммаЦенаУчет, КодТТН, АдресДоставки, Отгрузка, SippingGradientID, Объем, ЦенаТранспОтОбъема, ЦенаТранспОтВеса, ТТН_Адрес, ExistTTN, 
		ДоляТранРсхОбъем, ДоляТранРсхВеса, CASE WHEN ДоляТранРсхОбъем <= 0.15 AND ExistTTN = 1 THEN 0 WHEN ДоляТранРсхОбъем > 0.15 AND 
		ExistTTN = 1 THEN 1 ELSE NULL END AS ГрадацияТранРсхОбъемИд, CASE WHEN ДоляТранРсхВеса <= 0.15 AND 
		ExistTTN = 1 THEN 0 WHEN ДоляТранРсхВеса > 0.15 AND ExistTTN = 1 THEN 1 ELSE NULL END AS ГрадацияТранРсхВесаИд, ЗаводскаяУпаковка, NULL 
		AS КолДней, NULL AS СуммаОстатков, CASE WHEN ОставшийсяСрокГодности >= 10 THEN 10 ELSE ОставшийсяСрокГодности END AS ОставшийсяСрокГодности,
		РасхНаВет, КолВетТов, CAST(NULL AS float) AS zero, АкцияКод, ОпБонус
FROM	(SELECT cube.Hist_skl.ОпКод, cube.Hist_skl.ОпКодТов, cube.Hist_skl.ОпКол, cube.Hist_skl.ОпТип, cube.Hist_skl.ОпЦена, cube.Hist_skl.ОпКодУпак, 
				cube.Hist_skl.ОпСкл, cube.Hist_skl.ОпВозвр, cube.Hist_skl.ОпНакл, cube.Hist_skl.ОпНаклКод, cube.Hist_skl.ОпТипКлн, cube.Hist_skl.ОпТовНом, 
				CONVERT(int, HIST_SKL.ОпТипКлн) AS ОпТипКлн_INT, cube.Hist_skl.ОпСтоим,
				CAST(Hist_skl.ОпКлн AS bigint) * 1000000 + CAST(Hist_skl.КодАдрДоставки AS bigint) AS ПолнАдресДоставки, cube.Hist_skl.ОпКлн, cube.Hist_skl.ОпДатаРасч, 
				cube.Hist_skl.КодАдрДоставки, cube.Hist_skl.ОпСотр, cube.Hist_skl.ОпТипSKL, cube.Hist_skl.НашаФирма,
				(CASE WHEN (HIST_SKL.ОпТипКлн = 2) AND (HIST_SKL.ОпВозвр = 0) AND (HIST_SKL.ОпТип = 2) THEN HIST_SKL.ОпЦена * HIST_SKL.ОпКол
  				      WHEN (HIST_SKL.ОпТипКлн = 2) AND (HIST_SKL.ОпВозвр = 1) AND (HIST_SKL.ОпТип = 1) THEN - HIST_SKL.ОпЦена * HIST_SKL.ОпКол
					  ELSE NULL END) AS ОпСтоимИтог, 
				(CASE WHEN (HIST_SKL.ОпТипКлн = 2) AND (HIST_SKL.ОпВозвр = 0) AND (HIST_SKL.ОпТип = 2) THEN HIST_SKL.ОпКол
					  WHEN (HIST_SKL.ОпТипКлн = 2) AND (HIST_SKL.ОпВозвр = 1) AND (HIST_SKL.ОпТип = 1) THEN - HIST_SKL.ОпКол
 					  ELSE NULL END) AS ОпКолИтог,
				CONVERT(VARCHAR, Hist_skl.ОпКодТов) + '_' + CONVERT(VARCHAR, Hist_skl.ОпКлн) + '_' + CONVERT(VARCHAR, Hist_skl.КодАдрДоставки) AS КодТКА,
				Hist_skl.dst, cube.Hist_skl.ВесБрутто, cube.Hist_skl.ВесНетто, cube.Hist_skl.КодТТН, cube.Hist_skl.АдресДоставки, cube.Hist_skl.Отгрузка, 
				cube.Hist_skl.SippingGradientID, cube.Hist_skl.Объем, cube.Hist_skl.ЦенаТранспОтОбъема, cube.Hist_skl.ЦенаТранспОтВеса, 
				checksum(ISNULL(CONVERT(varchar(10), cube.Hist_skl.КодТТН), '') + ' ' + ISNULL(CAST(Hist_skl.ОпКлн AS varchar), '') 
				         + ' ' + ISNULL(CAST(Hist_skl.КодАдрДоставки AS varchar), '')) AS ТТН_Адрес,
				CASE WHEN КодТТН IS NULL THEN 0 ELSE 1 END AS ExistTTN, 
				CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтОбъема / ОпСтоим ELSE 0 END AS ДоляТранРсхОбъем, 
				CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтВеса / ОпСтоим ELSE 0 END AS ДоляТранРсхВеса, 
				(CASE WHEN Hist_skl.ОпКол >= u.УпакКоэф THEN 1 ELSE 0 END) AS ЗаводскаяУпаковка,
				(cube.Hist_skl.ОпКол * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчет, 
				CAST(FLOOR((CASE WHEN cube .Hist_skl.ОставшийсяСрокГодности < 0 THEN - 10 ELSE cube .Hist_skl.ОставшийсяСрокГодности END) / 10) AS INT) 
				AS ОставшийсяСрокГодности, cube.Hist_skl.РасхНаВет, cube.Hist_skl.КолВетТов, cube.Hist_skl.АкцияКод, cube.Hist_skl.ОпБонус
		 FROM	cube.Hist_skl
				LEFT OUTER JOIN dbo.KAT_TVR AS k ON HIST_SKL.ОпКодТов = k.ТовКод
				LEFT OUTER JOIN dbo.KAT_UPK AS u ON k.ТовУпак = u.УпакКод
		 WHERE	(cube.Hist_skl.ОпДатаРасч between @BegDate and @EndDate)
		) AS t
);
GO
/****** Object:  UserDefinedFunction [dbo].[f_Cube_Hist_skl_bonus_test]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_Cube_Hist_skl_bonus_test]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT	ОпКод, ОпКодТов, ОпКол, ОпТип, ОпЦена, ОпКодУпак, ОпСкл, ОпВозвр, ОпНакл, ОпНаклКод, ОпТипКлн, ОпТовНом, ОпТипКлн_INT, ОпСтоим, 
		ПолнАдресДоставки, ОпКлн, ОпДатаРасч, КодАдрДоставки, ОпСотр, ОпТипSKL, НашаФирма, ОпСтоимИтог, ОпКолИтог, dst, КодТКА, ВесБрутто, ВесНетто, 
		СуммаЦенаУчет, КодТТН, АдресДоставки, Отгрузка, SippingGradientID, Объем, ЦенаТранспОтОбъема, ЦенаТранспОтВеса, ТТН_Адрес, ExistTTN, 
		ДоляТранРсхОбъем, ДоляТранРсхВеса, CASE WHEN ДоляТранРсхОбъем <= 0.15 AND ExistTTN = 1 THEN 0 WHEN ДоляТранРсхОбъем > 0.15 AND 
		ExistTTN = 1 THEN 1 ELSE NULL END AS ГрадацияТранРсхОбъемИд, CASE WHEN ДоляТранРсхВеса <= 0.15 AND 
		ExistTTN = 1 THEN 0 WHEN ДоляТранРсхВеса > 0.15 AND ExistTTN = 1 THEN 1 ELSE NULL END AS ГрадацияТранРсхВесаИд, ЗаводскаяУпаковка, NULL 
		AS КолДней, NULL AS СуммаОстатков, CASE WHEN ОставшийсяСрокГодности >= 10 THEN 10 ELSE ОставшийсяСрокГодности END AS ОставшийсяСрокГодности,
		РасхНаВет, КолВетТов, CAST(NULL AS float) AS zero, АкцияКод, Бонус_1, Бонус_2, Бонус_3, Возврат
FROM	(SELECT cube.Hist_skl_bonus_test.ОпКод, cube.Hist_skl_bonus_test.ОпКодТов, cube.Hist_skl_bonus_test.ОпКол, cube.Hist_skl_bonus_test.ОпТип, cube.Hist_skl_bonus_test.ОпЦена, cube.Hist_skl_bonus_test.ОпКодУпак, 
				cube.Hist_skl_bonus_test.ОпСкл, cube.Hist_skl_bonus_test.ОпВозвр, cube.Hist_skl_bonus_test.ОпНакл, cube.Hist_skl_bonus_test.ОпНаклКод, cube.Hist_skl_bonus_test.ОпТипКлн, cube.Hist_skl_bonus_test.ОпТовНом, 
				CONVERT(int, Hist_skl_bonus_test.ОпТипКлн) AS ОпТипКлн_INT, cube.Hist_skl_bonus_test.ОпСтоим,
				CAST(Hist_skl_bonus_test.ОпКлн AS bigint) * 1000000 + CAST(Hist_skl_bonus_test.КодАдрДоставки AS bigint) AS ПолнАдресДоставки, cube.Hist_skl_bonus_test.ОпКлн, cube.Hist_skl_bonus_test.ОпДатаРасч, 
				cube.Hist_skl_bonus_test.КодАдрДоставки, cube.Hist_skl_bonus_test.ОпСотр, cube.Hist_skl_bonus_test.ОпТипSKL, cube.Hist_skl_bonus_test.НашаФирма,
				(CASE WHEN (Hist_skl_bonus_test.ОпТипКлн = 2) AND (Hist_skl_bonus_test.ОпВозвр = 0) AND (Hist_skl_bonus_test.ОпТип = 2) THEN Hist_skl_bonus_test.ОпЦена * Hist_skl_bonus_test.ОпКол
  				      WHEN (Hist_skl_bonus_test.ОпТипКлн = 2) AND (Hist_skl_bonus_test.ОпВозвр = 1) AND (Hist_skl_bonus_test.ОпТип = 1) THEN - Hist_skl_bonus_test.ОпЦена * Hist_skl_bonus_test.ОпКол
					  ELSE NULL END) AS ОпСтоимИтог, 
				(CASE WHEN (Hist_skl_bonus_test.ОпТипКлн = 2) AND (Hist_skl_bonus_test.ОпВозвр = 0) AND (Hist_skl_bonus_test.ОпТип = 2) THEN Hist_skl_bonus_test.ОпКол
					  WHEN (Hist_skl_bonus_test.ОпТипКлн = 2) AND (Hist_skl_bonus_test.ОпВозвр = 1) AND (Hist_skl_bonus_test.ОпТип = 1) THEN - Hist_skl_bonus_test.ОпКол
 					  ELSE NULL END) AS ОпКолИтог,
				CONVERT(VARCHAR, Hist_skl_bonus_test.ОпКодТов) + '_' + CONVERT(VARCHAR, Hist_skl_bonus_test.ОпКлн) + '_' + CONVERT(VARCHAR, Hist_skl_bonus_test.КодАдрДоставки) AS КодТКА,
				Hist_skl_bonus_test.dst, cube.Hist_skl_bonus_test.ВесБрутто, cube.Hist_skl_bonus_test.ВесНетто, cube.Hist_skl_bonus_test.КодТТН, cube.Hist_skl_bonus_test.АдресДоставки, cube.Hist_skl_bonus_test.Отгрузка, 
				cube.Hist_skl_bonus_test.SippingGradientID, cube.Hist_skl_bonus_test.Объем, cube.Hist_skl_bonus_test.ЦенаТранспОтОбъема, cube.Hist_skl_bonus_test.ЦенаТранспОтВеса, 
				checksum(ISNULL(CONVERT(varchar(10), cube.Hist_skl_bonus_test.КодТТН), '') + ' ' + ISNULL(CAST(Hist_skl_bonus_test.ОпКлн AS varchar), '') 
				         + ' ' + ISNULL(CAST(Hist_skl_bonus_test.КодАдрДоставки AS varchar), '')) AS ТТН_Адрес,
				CASE WHEN КодТТН IS NULL THEN 0 ELSE 1 END AS ExistTTN, 
				CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтОбъема / ОпСтоим ELSE 0 END AS ДоляТранРсхОбъем, 
				CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтВеса / ОпСтоим ELSE 0 END AS ДоляТранРсхВеса, 
				(CASE WHEN Hist_skl_bonus_test.ОпКол >= u.УпакКоэф THEN 1 ELSE 0 END) AS ЗаводскаяУпаковка,
				(cube.Hist_skl_bonus_test.ОпКол * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчет, 
				CAST(FLOOR((CASE WHEN cube .Hist_skl_bonus_test.ОставшийсяСрокГодности < 0 THEN - 10 ELSE cube .Hist_skl_bonus_test.ОставшийсяСрокГодности END) / 10) AS INT) 
				AS ОставшийсяСрокГодности, cube.Hist_skl_bonus_test.РасхНаВет, cube.Hist_skl_bonus_test.КолВетТов, cube.Hist_skl_bonus_test.АкцияКод
				, k.ТовГрп, k.ТовВид, Бонус_1, Бонус_2, Бонус_3, Возврат
		 FROM	cube.Hist_skl_bonus_test
				LEFT OUTER JOIN dbo.KAT_TVR AS k ON Hist_skl_bonus_test.ОпКодТов = k.ТовКод
				LEFT OUTER JOIN dbo.KAT_UPK AS u ON k.ТовУпак = u.УпакКод
		 WHERE	(cube.Hist_skl_bonus_test.ОпДатаРасч between @BegDate and @EndDate)
		) AS t
);
GO
/****** Object:  UserDefinedFunction [dbo].[f_Cube_Hist_skl_20140826]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_Cube_Hist_skl_20140826]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT	ОпКод, ОпКодТов, ОпКол, ОпТип, ОпЦена, ОпКодУпак, ОпСкл, ОпВозвр, ОпНакл, ОпНаклКод, ОпТипКлн, ОпТовНом, ОпТипКлн_INT, ОпСтоим, 
		ПолнАдресДоставки, ОпКлн, ОпДатаРасч, КодАдрДоставки, ОпСотр, ОпТипSKL, НашаФирма, ОпСтоимИтог, ОпКолИтог, dst, КодТКА, ВесБрутто, ВесНетто, 
		СуммаЦенаУчет, КодТТН, АдресДоставки, Отгрузка, SippingGradientID, Объем, ЦенаТранспОтОбъема, ЦенаТранспОтВеса, ТТН_Адрес, ExistTTN, 
		ДоляТранРсхОбъем, ДоляТранРсхВеса, CASE WHEN ДоляТранРсхОбъем <= 0.15 AND ExistTTN = 1 THEN 0 WHEN ДоляТранРсхОбъем > 0.15 AND 
		ExistTTN = 1 THEN 1 ELSE NULL END AS ГрадацияТранРсхОбъемИд, CASE WHEN ДоляТранРсхВеса <= 0.15 AND 
		ExistTTN = 1 THEN 0 WHEN ДоляТранРсхВеса > 0.15 AND ExistTTN = 1 THEN 1 ELSE NULL END AS ГрадацияТранРсхВесаИд, ЗаводскаяУпаковка, NULL 
		AS КолДней, NULL AS СуммаОстатков, CASE WHEN ОставшийсяСрокГодности >= 10 THEN 10 ELSE ОставшийсяСрокГодности END AS ОставшийсяСрокГодности,
		РасхНаВет, КолВетТов, CAST(NULL AS float) AS zero, АкцияКод, Бонус_1, Бонус_2, Бонус_3, Возврат_ТР, Возврат_Эксп, Транс_Расх
		,[СуммаПрогноз_Акции_НДС], [СуммаПрогноз_НДС], [СуммаПрогноз_Акции], [СуммаПрогноз], Прогноз_Кол, Прогноз_ЦенаУчет, Прогноз_ЦенаУчет_безНДС
FROM	(SELECT cube.Hist_skl.ОпКод, cube.Hist_skl.ОпКодТов, cube.Hist_skl.ОпКол, cube.Hist_skl.ОпТип, cube.Hist_skl.ОпЦена, cube.Hist_skl.ОпКодУпак, 
				cube.Hist_skl.ОпСкл, cube.Hist_skl.ОпВозвр, cube.Hist_skl.ОпНакл, cube.Hist_skl.ОпНаклКод, cube.Hist_skl.ОпТипКлн, cube.Hist_skl.ОпТовНом, 
				CONVERT(int, Hist_skl.ОпТипКлн) AS ОпТипКлн_INT, cube.Hist_skl.ОпСтоим,
				CAST(Hist_skl.ОпКлн AS bigint) * 1000000 + CAST(Hist_skl.КодАдрДоставки AS bigint) AS ПолнАдресДоставки, cube.Hist_skl.ОпКлн, cube.Hist_skl.ОпДатаРасч, 
				cube.Hist_skl.КодАдрДоставки, cube.Hist_skl.ОпСотр, cube.Hist_skl.ОпТипSKL, cube.Hist_skl.НашаФирма,
				(CASE WHEN (Hist_skl.ОпТипКлн = 2) AND (Hist_skl.ОпВозвр = 0) AND (Hist_skl.ОпТип = 2) THEN Hist_skl.ОпЦена * Hist_skl.ОпКол
  				      WHEN (Hist_skl.ОпТипКлн = 2) AND (Hist_skl.ОпВозвр = 1) AND (Hist_skl.ОпТип = 1) THEN - Hist_skl.ОпЦена * Hist_skl.ОпКол
					  ELSE NULL END) AS ОпСтоимИтог, 
				(CASE WHEN (Hist_skl.ОпТипКлн = 2) AND (Hist_skl.ОпВозвр = 0) AND (Hist_skl.ОпТип = 2) THEN Hist_skl.ОпКол
					  WHEN (Hist_skl.ОпТипКлн = 2) AND (Hist_skl.ОпВозвр = 1) AND (Hist_skl.ОпТип = 1) THEN - Hist_skl.ОпКол
 					  ELSE NULL END) AS ОпКолИтог,
				CONVERT(VARCHAR, Hist_skl.ОпКодТов) + '_' + CONVERT(VARCHAR, Hist_skl.ОпКлн) + '_' + CONVERT(VARCHAR, Hist_skl.КодАдрДоставки) AS КодТКА,
				Hist_skl.dst, cube.Hist_skl.ВесБрутто, cube.Hist_skl.ВесНетто, cube.Hist_skl.КодТТН, cube.Hist_skl.АдресДоставки, cube.Hist_skl.Отгрузка, 
				cube.Hist_skl.SippingGradientID, cube.Hist_skl.Объем, cube.Hist_skl.ЦенаТранспОтОбъема, cube.Hist_skl.ЦенаТранспОтВеса, 
				checksum(ISNULL(CONVERT(varchar(10), cube.Hist_skl.КодТТН), '') + ' ' + ISNULL(CAST(Hist_skl.ОпКлн AS varchar), '') 
				         + ' ' + ISNULL(CAST(Hist_skl.КодАдрДоставки AS varchar), '')) AS ТТН_Адрес,
				CASE WHEN КодТТН IS NULL THEN 0 ELSE 1 END AS ExistTTN, 
				CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтОбъема / ОпСтоим ELSE 0 END AS ДоляТранРсхОбъем, 
				CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтВеса / ОпСтоим ELSE 0 END AS ДоляТранРсхВеса, 
				(CASE WHEN Hist_skl.ОпКол >= u.УпакКоэф THEN 1 ELSE 0 END) AS ЗаводскаяУпаковка,
				(cube.Hist_skl.ОпКол * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчет, 
				CAST(FLOOR((CASE WHEN cube .Hist_skl.ОставшийсяСрокГодности < 0 THEN - 10 ELSE cube .Hist_skl.ОставшийсяСрокГодности END) / 10) AS INT) 
				AS ОставшийсяСрокГодности, cube.Hist_skl.РасхНаВет, cube.Hist_skl.КолВетТов, cube.Hist_skl.АкцияКод
				, (CASE WHEN (Hist_skl.ОпТипКлн = 2) AND (Hist_skl.ОпВозвр = 0) AND (Hist_skl.ОпТип = 2) THEN cube.Hist_skl.Бонус_1
  				        WHEN (Hist_skl.ОпТипКлн = 2) AND (Hist_skl.ОпВозвр = 1) AND (Hist_skl.ОпТип = 1) THEN - cube.Hist_skl.Бонус_1
					    ELSE NULL END) AS Бонус_1
				, (CASE WHEN (Hist_skl.ОпТипКлн = 2) AND (Hist_skl.ОпВозвр = 0) AND (Hist_skl.ОпТип = 2) THEN cube.Hist_skl.Бонус_2
  				        WHEN (Hist_skl.ОпТипКлн = 2) AND (Hist_skl.ОпВозвр = 1) AND (Hist_skl.ОпТип = 1) THEN - cube.Hist_skl.Бонус_2
					    ELSE NULL END) AS Бонус_2
				, (CASE WHEN (Hist_skl.ОпТипКлн = 2) AND (Hist_skl.ОпВозвр = 0) AND (Hist_skl.ОпТип = 2) THEN cube.Hist_skl.Бонус_3
  				        WHEN (Hist_skl.ОпТипКлн = 2) AND (Hist_skl.ОпВозвр = 1) AND (Hist_skl.ОпТип = 1) THEN - cube.Hist_skl.Бонус_3
					    ELSE NULL END) AS Бонус_3
				, cube.Hist_skl.Возврат_ТР, cube.Hist_skl.Возврат_Эксп, cube.Hist_skl.Транс_Расх
				, cube.Hist_skl.[СуммаПрогноз_Акции_НДС], cube.Hist_skl.[СуммаПрогноз_НДС], cube.Hist_skl.[СуммаПрогноз_Акции]
				, cube.Hist_skl.[СуммаПрогноз], cube.Hist_skl.Прогноз_Кол, cube.Hist_skl.Прогноз_ЦенаУчет, cube.Hist_skl.Прогноз_ЦенаУчет_безНДС
		 FROM	cube.Hist_skl
				LEFT OUTER JOIN dbo.KAT_TVR AS k ON Hist_skl.ОпКодТов = k.ТовКод
				LEFT OUTER JOIN dbo.KAT_UPK AS u ON k.ТовУпак = u.УпакКод
		 WHERE	(cube.Hist_skl.ОпДатаРасч >= @BegDate and cube.Hist_skl.ОпДатаРасч < @EndDate)
		) AS t
);
GO
/****** Object:  UserDefinedFunction [dbo].[f_Cube_Hist_skl]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_Cube_Hist_skl]
( @BegDate DATE , @EndDate DATE )
RETURNS TABLE AS
RETURN 
( 
SELECT * FROM cube.f_cube_buffer (NOLOCK) CHS
		 WHERE CHS.ОпДатаРасч BETWEEN @BegDate and @EndDate --	(CHS.ОпДатаРасч >= @BegDate and CHS.ОпДатаРасч < @EndDate)
		
)
GO
/****** Object:  View [dbo].[DEL_NOTE_ROWS_VIEW]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[DEL_NOTE_ROWS_VIEW]
AS
SELECT     LTRIM(STR(dbo.HIST_SKL.ОпНаклКод)) + '_' + LTRIM(STR(dbo.HIST_SKL.ОпТип)) + '_' + LTRIM(STR(dbo.HIST_SKL.ОпСкл)) AS Custom_Key, 
                      dbo.HIST_SKL.ОпКодТов AS Sale_Part_Code, dbo.HIST_SKL.ОпКол AS Sale_Part_Quantity, dbo.KAT_TVR.ТовЕИ AS Unit_Name, 
                      dbo.KAT_SKL.СклНаим AS Warehouse_Name, dbo.LIST_SKL.ОпКлн AS Customer_Code
FROM         dbo.HIST_SKL INNER JOIN
                      dbo.LIST_SKL ON dbo.HIST_SKL.ОпНаклКод = dbo.LIST_SKL.ОпНаклКод AND dbo.HIST_SKL.ОпТип = dbo.LIST_SKL.ОпТип AND 
                      dbo.HIST_SKL.ОпСкл = dbo.LIST_SKL.ОпСкл AND dbo.HIST_SKL.ОпТипКлн = dbo.LIST_SKL.ОпКлнТип INNER JOIN
                      dbo.KAT_SKL ON dbo.HIST_SKL.ОпСкл = dbo.KAT_SKL.СклКод INNER JOIN
                      dbo.KAT_TVR ON dbo.HIST_SKL.ОпКодТов = dbo.KAT_TVR.ТовКод
WHERE     (DATEDIFF(dd, dbo.LIST_SKL.ОпДатаРасч, GETDATE()) < 7) AND (dbo.LIST_SKL.ОпТип = 2) AND (dbo.LIST_SKL.ОпКлнТип = 2)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "HIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 191
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 2
         End
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 207
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_SKL"
            Begin Extent = 
               Top = 6
               Left = 434
               Bottom = 99
               Right = 585
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 623
               Bottom = 114
               Right = 774
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'DEL_NOTE_ROWS_VIEW'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'DEL_NOTE_ROWS_VIEW'
GO
/****** Object:  View [dbo].[DEL_NOTE_HEAD_VIEW]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[DEL_NOTE_HEAD_VIEW]
AS
SELECT     ОпКлн AS Customer_Code, КодАдрДоставки AS Trade_Point_Code, ОпНакл AS Delivery_Note, ОпДатаРасч AS Del_Note_Ship_Day, DATEDIFF(dd, 
                      ОпДатаРасч, GETDATE()) AS Past_Ship_Day, LTRIM(STR(ОпНаклКод)) + '_' + LTRIM(STR(ОпТип)) + '_' + LTRIM(STR(ОпСкл)) AS Custom_Key
FROM         dbo.LIST_SKL
WHERE     (DATEDIFF(dd, ОпДатаРасч, GETDATE()) < 7) AND (ОпТип = 2) AND (dbo.LIST_SKL.ОпКлнТип = 2)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'DEL_NOTE_HEAD_VIEW'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'DEL_NOTE_HEAD_VIEW'
GO
/****** Object:  View [dbo].[F_PRIH]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[F_PRIH]
AS
SELECT     dbo.F_OPER.ОпКод, dbo.D_NAKL.НаклНомер, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклСклНаим, dbo.D_NAKL.НаклКлн AS ОпКодКлн, 
                      dbo.D_NAKL.НаклСотр, dbo.D_NAKL.НаклДата AS ОпДата, dbo.D_NAKL.НаклДатаРасч AS ОпДатаРасч, dbo.D_NAKL.ОпНаклКод, 
                      dbo.F_OPER.ОпКодТов, dbo.F_OPER.ОпКол, dbo.F_OPER.ОпСтоим, dbo.F_OPER.ОпВесБрутто, dbo.F_OPER.ОпКолУпак, 
                      dbo.F_OPER.ОпВесНетто, dbo.F_OPER.ОпВозвр
FROM         dbo.F_OPER INNER JOIN
                      dbo.D_NAKL ON dbo.F_OPER.ОпНаклКод = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_OPER.ОпТип = 1) OR
                      (dbo.F_OPER.ОпТип = 3)
GO
/****** Object:  View [dbo].[del_Vw_EhrmannReportAll]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[del_Vw_EhrmannReportAll]
AS
SELECT     TOP 100 PERCENT dbo.wremEhrmann.[Код дистрибутора], dbo.wremEhrmann.Дата, dbo.wremEhrmann.[Код товара], dbo.wremEhrmann.Артикул, 
                      ISNULL(dbo.EhrmannKLNnew.Название, dbo.wremEhrmann.КлнНаим) AS Название, dbo.wremEhrmann.КлнНаим AS Клиент, 
                      ISNULL(dbo.EhrmannKLNnew.[Канал сбыта], dbo.wremEhrmann.КаналСбыта) AS [Канал сбыта], ISNULL(dbo.EhrmannKLNnew.[Формат магазина], 
                      dbo.wremEhrmann.ФорматМагазина) AS [Формат магазина], ISNULL(ISNULL(dbo.EhrmannKLNnew.Город, dbo.KAT_TWN.ГородНаим), 
                      dbo.D_ORG.ГородНаим) AS Город, ISNULL(ISNULL(dbo.EhrmannKLNnew.Адрес, dbo.KLN_ADK.АдресДоставки), 
                      ISNULL(dbo.CLN_DKL.КлнГрузАдрес, dbo.CLN_DKL.КлнАдрес)) AS Адрес, dbo.wremEhrmann.[Продажи (штуки)], '' AS [Продажи (короба)], 
                      '' AS [Продажи (поддоны)], dbo.wremEhrmann.[Продажи (рубли с НДС)], dbo.D_ORG.ГрпСотрНаим
FROM         dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода RIGHT OUTER JOIN
                      dbo.wremEhrmann INNER JOIN
                      dbo.D_ORG ON dbo.wremEhrmann.КлнКод = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.CLN_DKL ON dbo.wremEhrmann.КлнКод = dbo.CLN_DKL.КлнКод ON 
                      dbo.KLN_ADK.КодАдресаДоставки = dbo.wremEhrmann.КодАдрДоставки LEFT OUTER JOIN
                      dbo.EhrmannKLNnew ON dbo.wremEhrmann.КодКлн_КодАдрДоставки = dbo.EhrmannKLNnew.КодКлн_КодАдрДоставки
ORDER BY dbo.wremEhrmann.Дата
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 84
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 413
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "wremEhrmann"
            Begin Extent = 
               Top = 6
               Left = 451
               Bottom = 114
               Right = 665
            End
            DisplayFlags = 280
            TopColumn = 10
         End
         Begin Table = "D_ORG"
            Begin Extent = 
               Top = 84
               Left = 38
               Bottom = 192
               Right = 206
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 114
               Left = 244
               Bottom = 222
               Right = 397
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "EhrmannKLNnew"
            Begin Extent = 
               Top = 114
               Left = 435
               Bottom = 222
               Right = 649
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 16
         Width = 284
         Width = 1440' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'del_Vw_EhrmannReportAll'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 5505
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'del_Vw_EhrmannReportAll'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'del_Vw_EhrmannReportAll'
GO
/****** Object:  View [dbo].[del_Vw_Ehrmann_tmp]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[del_Vw_Ehrmann_tmp]
AS
SELECT     КлнНаим, КлнКод,
                          (SELECT     dbo.Kat_kdk.НаимДопХар
                            FROM          dbo.Kat_kdk INNER JOIN
                                                   dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар
                            WHERE      (dbo.List_kdk.КодГрпДопХар = 7) AND (dbo.List_kdk.КодКлн = dbo.Kat_kln.КлнКод)) AS ForMag,
                          (SELECT     dbo.Kat_kdk.НаимДопХар
                            FROM          dbo.Kat_kdk INNER JOIN
                                                   dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар
                            WHERE      (dbo.List_kdk.КодГрпДопХар = 6) AND (dbo.List_kdk.КодКлн = dbo.Kat_kln.КлнКод)) AS KanalMag,
                          (SELECT     dbo.Kat_kdk.НаимДопХар
                            FROM          dbo.Kat_kdk INNER JOIN
                                                   dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар
                            WHERE      (dbo.List_kdk.КодГрпДопХар = 8) AND (dbo.List_kdk.КодКлн = dbo.Kat_kln.КлнКод)) AS NaimMag,
                          (SELECT     dbo.Kat_kdk.НаимДопХар
                            FROM          dbo.Kat_kdk INNER JOIN
                                                   dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар
                            WHERE      (dbo.List_kdk.КодГрпДопХар = 22) AND (dbo.List_kdk.КодКлн = dbo.Kat_kln.КлнКод)) AS NaimMagEhr,
                          (SELECT     dbo.Kat_kdk.НаимДопХар
                            FROM          dbo.Kat_kdk INNER JOIN
                                                   dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар
                            WHERE      (dbo.List_kdk.КодГрпДопХар = 9) AND (dbo.List_kdk.КодКлн = dbo.Kat_kln.КлнКод)) AS NaimKlnEhr,
                          (SELECT     dbo.Kat_kdk.НаимДопХар
                            FROM          dbo.Kat_kdk INNER JOIN
                                                   dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар
                            WHERE      (dbo.List_kdk.КодГрпДопХар = 20) AND (dbo.List_kdk.КодКлн = dbo.Kat_kln.КлнКод)) AS GorodEhr,
                          (SELECT     dbo.Kat_kdk.НаимДопХар
                            FROM          dbo.Kat_kdk INNER JOIN
                                                   dbo.List_kdk ON dbo.Kat_kdk.КодДопХар = dbo.List_kdk.КодДопХар
                            WHERE      (dbo.List_kdk.КодГрпДопХар = 21) AND (dbo.List_kdk.КодКлн = dbo.Kat_kln.КлнКод)) AS AdresEhr
FROM         dbo.KAT_KLN
WHERE     (КлнКод = 8202)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[42] 4[12] 2[21] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 2
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 10
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      PaneHidden = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'del_Vw_Ehrmann_tmp'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'del_Vw_Ehrmann_tmp'
GO
/****** Object:  View [dbo].[ML_LIST_SKL_Zatr]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[ML_LIST_SKL_Zatr]
AS
  SELECT DISTINCT ml.АвтокодМЛ,
       ml.ДатаРасч Дата,
       ml.ЗатратыФакт ЗатратыФакт,
       ml.ЗатратыПлан ЗатратыПлан,
       hs.ОпНаклКод
FROM (
       SELECT [АвтокодМЛ],
		      Cast (ДатаРасч as date) ДатаРасч,
              [ЗатратаПлан1] [ЗатратыПлан],
              [ЗатратаФакт1] [ЗатратыФакт]
       FROM [dbo].[list_mlst] (NOLOCK) where АвтокодМЛ > 0
       UNION ALL
       SELECT [АвтокодМЛ],
		      Cast (ДатаРасч as date) ДатаРасч,
              [ЗатратаПлан2] [ЗатратыПлан],
              [ЗатратаФакт2] [ЗатратыФакт]
       FROM [dbo].[list_mlst](NOLOCK) where 1=0 AND АвтокодМЛ > 0
       UNION ALL
       SELECT [АвтокодМЛ],
		      Cast (ДатаРасч as date) ДатаРасч,
              [ЗатратаПлан3] [ЗатратыПлан],
              [ЗатратаФакт3] [ЗатратыФакт]
       FROM [dbo].[list_mlst] (NOLOCK) where 1=0 AND АвтокодМЛ > 0
       UNION ALL
       SELECT [АвтокодМЛ],
		      Cast (ДатаРасч as date) ДатаРасч,
              [ЗатратаПлан4] [ЗатратыПлан],
              [ЗатратаФакт4] [ЗатратыФакт]
       FROM [dbo].[list_mlst] (NOLOCK) where 1=0 AND АвтокодМЛ > 0
       UNION ALL
       SELECT [АвтокодМЛ],
		      Cast (ДатаРасч as date) ДатаРасч,
              [ЗатратаПлан5] [ЗатратыПлан],
              [ЗатратаФакт5] [ЗатратыФакт]
       FROM [dbo].[list_mlst] (NOLOCK) where 1=0 AND АвтокодМЛ > 0
     ) ml
     INNER JOIN 
     (
       SELECT zvk.АвтКодМЛ,
              НомДок
       FROM zvk_dkm (NOLOCK)
            INNER JOIN list_zvk ZVK on zvk.АвтКодЗвк = zvk_dkm.АвтКодЗвкДост
            --WHERE (ТипДок = 4)
       GROUP BY zvk.АвтКодМЛ,
                НомДок
     ) AS ttndkm ON ttndkm.АвтКодМЛ = ml.АвтокодМЛ
     --INNER JOIN TTN_DKM AS ttn ON ttn.КодТТН = ttndkm.НомДок
     INNER JOIN 
     (
       SELECT MAX(ДокКод) AS ДокКод,
              Скл,
              ФлгОпер,
              Накл,
              MAX(ДокКод) AS Зкз
              --SELECT MAX(CASE WHEN тип = 4 THEN ДокКод END) AS ДокКод, Скл, ФлгОпер, Накл, MAX(CASE WHEN тип = 0 THEN ДокКод END) AS Зкз
              FROM zkz_nkl (NOLOCK) AS z 
            --WHERE (Тип IN (4))
       GROUP BY Накл,
                Скл,
                ФлгОпер
     ) AS zkz_nkl ON zkz_nkl.ДокКод = ttndkm.НомДок
     INNER JOIN HIST_SKL (NOLOCK) AS hs ON hs.ОпСкл = zkz_nkl.Скл AND hs.ОпТип = zkz_nkl.ФлгОпер AND zkz_nkl.Накл = hs.ОпНакл
GO
/****** Object:  StoredProcedure [cube].[makecalendar]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Глухов В.Ю.
-- Create date: 20141230
-- Description:	заполняет таблицу для кубов
-- =============================================
CREATE PROCEDURE [cube].[makecalendar]

AS
DECLARE @mindate SMALLDATETIME
DECLARE @maxdate SMALLDATETIME

SELECT @mindate = MIN( ОпДатаРасч)
      ,@maxdate = DATEADD(dd,12,GETDATE()) FROM dbo.LIST_SKL 
--      ,@maxdate = MAX(ОпДатаРасч) FROM dbo.LIST_SKL 
-- было до 20141121 @mindate = CAST(CONVERT(CHAR(10),MIN(frmdate),127) AS SMALLDATETIME)      

--DELETE FROM cube.Dates_auto

set language 'русский'
SET DATEFIRST 1
WHILE @mindate<=@maxdate
  BEGIN
    
    IF NOT EXISTS (SELECT ДатыРасч FROM cube.Dates_auto  WHERE ДатыРасч = @mindate )
    BEGIN
     INSERT INTO cube.Dates_auto (ДатыРасч) VALUES (@mindate)  -- резерв
		--- EXEC	[dbo].[spOlapMakeStockOneDay] @mindate 
		---PRINT 'Добавили '+ CAST(@mindate AS VARCHAR(20))
	END
    SELECT @mindate = DATEADD ( day , 1,@mindate )
  END

MERGE cube.Dates AS target
USING (SELECT ДатыКод,ДатыРасч FROM cube.Dates_auto) AS source (ДатыКод,ДатыРасч)
ON target.ДатыРасч=source.ДатыРасч
WHEN NOT MATCHED THEN	
	    INSERT (ДатыКод,ДатыРасч)
	    VALUES (source.ДатыКод, source.ДатыРасч);
GO
/****** Object:  StoredProcedure [dbo].[DelDoubledSotrNakl]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[DelDoubledSotrNakl] AS
declare @Doubled as cursor 
declare @FI char(32),@Podr char(30),@Code bigint, @IsDFetch int
declare @Sotr as cursor
declare @SFI char(32),@SPodr char(30), @SCode bigint, @IsSFetch int
declare @UniqueNum int

set @Doubled=cursor local dynamic for 
select СотрФамилияИмя,ГрпСотрНаим from d_sotrnakl
group by СотрФамилияИмя,ГрпСотрНаим
having Count(СотрКод)>1

set @Sotr=cursor local static for 
select СотрФамилияИмя,ГрпСотрНаим from d_sotrnakl

set @UniqueNum=1
open @Doubled
fetch next from @Doubled into  @FI,@Podr
set @IsDFetch = @@FETCH_STATUS
while @IsDFetch = 0
  begin   
    open @Sotr
    fetch next from @Sotr into @SFI,@SPodr
    set @IsSFetch = @@FETCH_STATUS  
    while @IsSFetch=0
       begin
         if @SFI=@FI and @SPodr=@Podr
           begin
             update d_sotrnakl set Повтор=СотрКод where СотрФамилияИмя=@SFI and ГрпСотрНаим=@SPodr
             set @UniqueNum=@UniqueNum+1
           end
           fetch next from @Sotr into @SFI,@SPodr
           set @IsSFetch = @@FETCH_STATUS 
       end
    close @Sotr
    fetch next from @Doubled into @FI,@Podr
    set @IsDFetch = @@FETCH_STATUS
  end
GO
/****** Object:  View [dbo].[M_Debit_New]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* Вид объединяет HIST_SKL и LIST_SKL
 и выделяет данные по ПК
 22.09.07 Выводит только Р и ПВ


*/
create    VIEW [dbo].[M_Debit_New]
AS
SELECT     h.*, 
	 CASE 
		WHEN (h.СуммаУчет = 0) THEN 'Нулевая учетная цена' 
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет <= 0) 
                      THEN 'Меньше нуля' 
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет > 0) AND ((h.СуммаПрогноз - h.СуммаУчет) 
                      / h.СуммаУчет <= 0.05) THEN 'От 0 до 5' 
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет > 0.05) AND ((h.СуммаПрогноз - h.СуммаУчет) 
                      / h.СуммаУчет <= 0.1) THEN 'От 5 до 10'
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет > 0.1) AND ((h.СуммаПрогноз - h.СуммаУчет) 
                      / h.СуммаУчет <= 0.15) THEN 'От 10 до 15'
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет > 0.15) AND ((h.СуммаПрогноз - h.СуммаУчет) 
                      / h.СуммаУчет <= 0.3) THEN 'От 15 до 30'
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет <= 0.6) AND 
                      ((h.СуммаПрогноз - h.СуммаУчет) / h.СуммаУчет > 0.3) THEN 'От 30 до 60' 
		WHEN (h.СуммаУчет <> 0) AND ((h.СуммаПрогноз - h.СуммаУчет) 
                      / h.СуммаУчет > 0.6) THEN 'Больше 60' 
		END AS ПроцентНаценки 
			
FROM  dbo.M_DEBIT h
GO
/****** Object:  UserDefinedFunction [dbo].[Relationships]    Script Date: 08/10/2015 12:56:00 ******/
CREATE FUNCTION [dbo].[Relationships](@Name [nvarchar](4000), @Password [nvarchar](4000), @Timeout [int])
RETURNS [nvarchar](max) WITH EXECUTE AS CALLER
AS 
EXTERNAL NAME [EDIKorusSOAP].[UserDefinedFunctions].[Relationships]
GO
/****** Object:  Table [xmt].[Retail]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[Retail](
	[retailId] [nvarchar](255) NOT NULL,
	[name] [nvarchar](255) NULL,
	[inn] [nvarchar](255) NULL,
	[kpp] [nvarchar](255) NULL,
	[city] [nvarchar](255) NULL,
	[address] [nvarchar](255) NULL,
	[category] [nvarchar](255) NULL,
	[longitude] [float] NULL,
	[latitude] [float] NULL,
	[client] [int] NULL,
 CONSTRAINT [PK_xmt.Retail] PRIMARY KEY CLUSTERED 
(
	[retailId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[F_Zakup]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_Zakup]
AS
SELECT     dbo.F_OPER.ОпКод, dbo.D_NAKL.НаклНомер, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклСклНаим, dbo.D_NAKL.НаклКлн AS ОпКодКлн, 
                      dbo.D_NAKL.НаклСотр, dbo.D_NAKL.НаклДата AS ОпДата, dbo.D_NAKL.НаклДатаРасч AS ОпДатаРасч, dbo.D_NAKL.ОпНаклКод, 
                      dbo.F_OPER.ОпКодТов, dbo.F_OPER.ОпКол * (5 - dbo.F_OPER.ОпТип * 2) / 3 AS Expr1, dbo.F_OPER.ОпСтоим * (5 - dbo.F_OPER.ОпТип * 2) 
                      / 3 AS Expr2, dbo.F_OPER.ОпВесБрутто * (5 - dbo.F_OPER.ОпТип * 2) / 3 AS Expr3, dbo.F_OPER.ОпКолУпак * (5 - dbo.F_OPER.ОпТип * 2) 
                      / 3 AS Expr4, dbo.F_OPER.ОпВесНетто * (5 - dbo.F_OPER.ОпТип * 2) / 3 AS Expr5, ISNULL(dbo.F_OPER.ОпВозвр, 0) AS Expr6, dbo.D_NAKL.НаклТип, 
                      dbo.D_NAKL.НаклКод, dbo.F_OPER.ОпТип, RTRIM(CAST(dbo.D_NAKL.НаклКлн AS char)) + '/' + RTRIM(CAST(dbo.D_NAKL.КодАдрДоставки AS char)) 
                      AS КодКлн_КодАдрДоставки, dbo.D_NAKL.КодАдрДоставки
FROM         dbo.F_OPER INNER JOIN
                      dbo.D_NAKL ON dbo.F_OPER.ОпНаклКод = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_OPER.ОпТип = 1) OR
                      (dbo.F_OPER.ОпТип = 4)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "F_OPER"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_NAKL"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_Zakup'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_Zakup'
GO
/****** Object:  View [dbo].[F_Vozvr1]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_Vozvr1]
AS
SELECT     dbo.F_OPER.ОпКод, dbo.D_NAKL.НаклНомер, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклСклНаим, dbo.D_NAKL.НаклКлн AS ОпКодКлн, 
                      dbo.D_NAKL.НаклСотр, dbo.D_NAKL.НаклДата AS ОпДата, dbo.D_NAKL.НаклДатаРасч AS ОпДатаРасч, dbo.D_NAKL.ОпНаклКод, 
                      dbo.F_OPER.ОпКодТов, dbo.F_OPER.ОпКол, dbo.F_OPER.ОпСтоим, dbo.F_OPER.ОпВесБрутто, dbo.F_OPER.ОпКолУпак, dbo.F_OPER.ОпВесНетто, 
                      dbo.F_OPER.ОпВозвр, dbo.D_NAKL.НаклТип, dbo.D_NAKL.НаклКод, dbo.F_OPER.ОпТип, RTRIM(CAST(dbo.D_NAKL.НаклКлн AS char)) 
                      + '/' + RTRIM(CAST(dbo.D_NAKL.КодАдрДоставки AS char)) AS КодКлн_КодАдрДоставки, dbo.D_NAKL.КодАдрДоставки
FROM         dbo.F_OPER INNER JOIN
                      dbo.D_NAKL ON dbo.F_OPER.ОпНаклКод = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_OPER.ОпВозвр = 1)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "F_OPER"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_NAKL"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_Vozvr1'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_Vozvr1'
GO
/****** Object:  View [dbo].[F_VOZVR]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  VIEW [dbo].[F_VOZVR]
AS
SELECT     dbo.F_OPER.ОпКодТов, dbo.D_NAKL.НаклКлн AS ОпКодКлн, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклДата AS ОпДата, 
                      dbo.D_NAKL.НаклДатаРасч AS ОпДатаРасч, dbo.F_OPER.ОпТип, SUM(dbo.F_OPER.ОпКол) AS СумКол, 
                      SUM(dbo.F_OPER.ОпКол * (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2)) AS КолПрих, 
                      SUM(dbo.F_OPER.ОпКол * (1 - (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2))) AS КолРасх, SUM(dbo.F_OPER.ОпСтоим) AS СумСтоим, 
                      SUM(dbo.F_OPER.ОпСтоим * (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2)) AS СтоимПрих, 
                      SUM(dbo.F_OPER.ОпСтоим * (1 - (dbo.F_OPER.ОпТип - ABS(dbo.F_OPER.ОпТип / 2) * 2))) AS СтоимРасх
FROM         dbo.F_OPER INNER JOIN
                      dbo.D_NAKL ON dbo.F_OPER.ОпНаклКод = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_OPER.ОпВозвр = 1)
-- AND (dbo.D_NAKL.НаклАВЗ = 0)
GROUP BY dbo.F_OPER.ОпКодТов, dbo.D_NAKL.НаклКлн, dbo.D_NAKL.НаклСклКод, dbo.D_NAKL.НаклДата, dbo.D_NAKL.НаклДатаРасч, dbo.F_OPER.ОпТип
GO
/****** Object:  View [dbo].[F_USLRASH]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[F_USLRASH]
AS
SELECT     dbo.F_USL.УслКод, dbo.F_USL.УслСкл, dbo.F_USL.УслКол, dbo.F_USL.УслЦена, dbo.F_USL.УслНакл, 
                      dbo.D_NAKL.НаклДата AS УслДата, dbo.F_USL.УслОпер, dbo.F_USL.УслНомер,D_NAKL.НаклКлн AS УслКлн
FROM         dbo.F_USL INNER JOIN
                      dbo.D_NAKL ON dbo.F_USL.УслНакл = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_USL.УслОпер = 2)
GO
/****** Object:  View [dbo].[F_USLPRIH]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[F_USLPRIH]
AS
SELECT     dbo.F_USL.УслКод, dbo.F_USL.УслСкл, dbo.F_USL.УслКол, dbo.F_USL.УслЦена, dbo.F_USL.УслНакл, 
                      dbo.D_NAKL.НаклДата AS УслДата, dbo.F_USL.УслОпер, dbo.F_USL.УслНомер, D_NAKL.НаклКлн AS УслКлн
FROM         dbo.F_USL INNER JOIN
                      dbo.D_NAKL ON dbo.F_USL.УслНакл = dbo.D_NAKL.ОпНаклКод
WHERE     (dbo.F_USL.УслОпер = 1)
GO
/****** Object:  UserDefinedFunction [dbo].[f_plan_HIST_SKL]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_plan_HIST_SKL]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
select * from [Plan].[Hist_skl]
where ОпДатаРасч >= @BegDate and ОпДатаРасч < @EndDate
);
GO
/****** Object:  View [dbo].[F_TVR_COUNT_WITH_ATTR]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* Количество обращений к товару
, f_oper.ОпВесБрутто,
	f_oper.ОпКолУпак
	, d_nakl.НаклНомер*/
CREATE VIEW [dbo].[F_TVR_COUNT_WITH_ATTR]
AS
SELECT DISTINCT 
                      dbo.HIST_SKL.ОпКодТов, COUNT(dbo.HIST_SKL.ОпКодТов) AS ТовКол, dbo.TTN_DKM.НомерТТН, dbo.TTN_DKM.ДатаРасч, 
                      COUNT(DISTINCT RTRIM(CAST(dbo.D_NAKL.НаклКлн AS char)) + '/' + RTRIM(CAST(dbo.D_NAKL.КодАдрДоставки AS char))) AS СуммАдрДост, 
                      SUM(dbo.F_OPER.ОпВесБрутто) AS Вес, SUM(dbo.F_OPER.ОпКолУпак) AS Количество
FROM         dbo.TTN_NKL INNER JOIN
                      dbo.TTN_DKM ON dbo.TTN_DKM.КодТТН = dbo.TTN_NKL.КодТТН INNER JOIN
                      dbo.D_NAKL ON dbo.D_NAKL.НаклСклКод = dbo.TTN_NKL.КодСкл AND dbo.D_NAKL.НаклНомер = dbo.TTN_NKL.НомДок AND 
                      dbo.D_NAKL.НаклТип = dbo.TTN_NKL.ТипОпер INNER JOIN
                      dbo.HIST_SKL ON dbo.D_NAKL.ОпНаклКод = dbo.HIST_SKL.ОпНаклКод INNER JOIN
                      dbo.F_OPER ON dbo.D_NAKL.ОпНаклКод = dbo.F_OPER.ОпНаклКод AND dbo.HIST_SKL.ОпКодТов = dbo.F_OPER.ОпКодТов
GROUP BY dbo.HIST_SKL.ОпКодТов, dbo.TTN_DKM.НомерТТН, dbo.TTN_DKM.ДатаРасч, dbo.D_NAKL.НаклКлн, dbo.D_NAKL.КодАдрДоставки
GO
/****** Object:  View [dbo].[F_PRIH_TM]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE   VIEW [dbo].[F_PRIH_TM]
AS
SELECT     
 dbo.HIST_SKL.ОпКод, 
 dbo.LIST_SKL.ОпНакл as НаклНомер, 
 dbo.KAT_SKL.СклКод as НаклСклКод, dbo.KAT_SKL.СклНаим as НаклСклНаим, 
 case 
	when dbo.LIST_SKL.ОпКлн=0 then 999999999
	else dbo.LIST_SKL.ОпКлн
 end AS ОпКодКлн, 
 dbo.LIST_SKL.ОпСотр as НаклСотр, dbo.D_DATES.ДатыКод AS ОпДата, 
 dbo.LIST_SKL.ОпДатаРасч AS ОпДатаРасч, dbo.LIST_SKL.ОпНаклКод, 
 dbo.HIST_SKL.ОпКодТов, dbo.HIST_SKL.ОпКол, 
 dbo.HIST_SKL.ОпКол*dbo.HIST_SKL.ОпЦена as ОпСтоим,
 dbo.HIST_SKL.ОпКол*dbo.TVR_DEF.ТовВесБрутто as ОпВесБрутто, 
 dbo.HIST_SKL.ОпКол/dbo.KAT_UPK.УпакКоэф as ОпКолУпак, 
 dbo.HIST_SKL.ОпКол*dbo.TVR_DEF.ТовВесНетто as ОпВесНетто, 
case
 when dbo.HIST_SKL.ОпВозвр = 1 then dbo.HIST_SKL.ОпВозвр
end as ОпВозвр
FROM         --dbo.F_OPER 
dbo.LIST_SKL
inner join dbo.HIST_SKL on dbo.LIST_SKL.ОпНаклКод=dbo.HIST_SKL.ОпНаклКод
left join dbo.TVR_DEF on dbo.HIST_SKL.ОпКодТов=dbo.TVR_DEF.ТовКод
left join dbo.KAT_TVR on dbo.HIST_SKL.ОпКодТов=dbo.KAT_TVR.ТовКод
left join dbo.KAT_UPK on (dbo.KAT_TVR.ТовУпак=dbo.KAT_UPK.УпакКод
	and  kat_upk.УпакКоэф>0)
inner join dbo.KAT_SKL on dbo.KAT_SKL.СклКод = dbo.LIST_SKL.ОпСкл
inner join dbo.D_DATES on dbo.D_DATES.ДатыРасч = dbo.LIST_SKL.ОпДатаРасч
WHERE     (dbo.LIST_SKL.ОпТип = 1) 
and (dbo.LIST_SKL.ОпКлнТип = 2)
GO
/****** Object:  StoredProcedure [dbo].[MT_SET_DETAILS2a]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Холмогорова А.А.(доработано Ефремов )
-- Create date: 20-05-2015
-- Description:	Части документа Mr.Ricco
-- =============================================
create PROCEDURE [dbo].[MT_SET_DETAILS2a] 
	-- Add the parameters for the stored procedure here
	 @startdate date = NULL,
    	    @enddate date = NULL,
    	    @pdid bigint = NULL
	
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;




BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	
	select pdid,prdobj,sum(pamount) pamount,pcost,pcost_rub,psum,sum(psum_rub) psum_rub,ftype,rscl
from(
	select distinct 'pdid' = convert(varchar(16),l.ОпНаклКод),
			'prdobj' = convert(varchar(16),h.ОпКодТов),
			'pamount' =convert(int, case when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 then (-1)*h.ОпКол else h.ОпКол end),
			'pcost' = convert(varchar(10),null),
			'pcost_rub' = convert(varchar(16),h.ОпЦена),
			'psum' = convert(varchar(16),null),
			'psum_rub' = case when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 then (-1)*h.ОпКол else h.ОпКол end*h.ОпЦена,
			'ftype' =convert(varchar(2), 0),
			case when l.ОпСкл in (110, 111, 128, 129) then '1'
			  when l.ОпСкл in (65, 113) then '2'
			  when l.ОпСкл in (102, 103) then '3' end rscl
		
	from dbo.LIST_SKL as l
				left join dbo.KAT_KLN kl on l.ОпКлн=kl.КлнКод
				left join dbo.CLN_DKL cld on cld.КлнКод = kl.КлнКод 
				left join dbo.KLN_ADK ka on ka.КодАдресаДоставки = l.КодАдрДоставки
				inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
				INNER JOIN dbo.zkz_nkl AS znnk ON l.ОпНакл = znnk.Накл
	where	cast(L.ОпДатаРасч as date) BETWEEN @startDate and @endDate 
			--and l.ОпНаклКод=@pdid
			and l.ОпНаклКод in
					(
					select b.ОпНаклКод
					from (
							select 
								l.ОпНаклКод	 
								,'type_oper' = 
								case 
									when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
									then 2
									when l.ОпВозврат=0 and l.ОпТип=1 --приход от поставщика
									then 1
									when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
									then 3
									when l.ОпТип=3                                    --списание
									then 4
									when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
									then 31
									when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
									then 6
									when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
									then 6
									else NULL
								end 
							from LIST_SKL as l
									inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
              						INNER JOIN dbo.KAT_TVR kt ON H.ОпКодТов=Kt.ТовКод
              						inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
							where cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
									and Kt.ТовГрп in (311)  
									and (Kt.БФ & 1 ) = 0  --Tvr не архив
									and trd.КодПоставщика not like ''
                                    and  l.ОпКлн not in (14161,16855,16709,1848,16037,14476) --наши фирмы 
									and  l.ОпКлн not in (19358,19359,19360) --исключен клиент Найдено-потеряно 25/12/12
									and l.ОпКлнТип!=4 --исключаю движение м/у внутренними складами пп/рп 26/12/12
									--and l.ОпСкл in  (@sklad) 
						) as b
					WHERE b.type_oper in (2) --, 3, 4, 6)
					group by b.ОпНаклКод
					) 
					) tt2
		group by  pdid,prdobj,pcost,pcost_rub,psum,ftype,rscl


	
	
END
END
GO
/****** Object:  StoredProcedure [dbo].[MT_SET_DETAILS2]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Холмогорова А.А.(доработано Ефремов )
-- Create date: 20-05-2015
-- Description:	Части документа Mr.Ricco
-- =============================================
CREATE PROCEDURE [dbo].[MT_SET_DETAILS2] 
	-- Add the parameters for the stored procedure here
	 @startdate date = NULL,
    	    @enddate date = NULL,
    	    @pdid bigint = NULL
	
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;




BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	if @pdid is null
	
	
	select pdid,prdobj,sum(pamount) pamount,pcost,pcost_rub,psum,sum(psum_rub) psum_rub,ftype
from(	
	select distinct 'pdid' = convert(varchar(16),l.ОпНаклКод),
			'prdobj' = convert(varchar(16),h.ОпКодТов),
			'pamount' =convert(int, case when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 then (-1)*h.ОпКол else h.ОпКол end),
			'pcost' = convert(varchar(10),null),
			'pcost_rub' = convert(varchar(16),h.ОпЦена),
			'psum' = convert(varchar(16),null),
			'psum_rub' = case when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 then (-1)*h.ОпКол else h.ОпКол end*h.ОпЦена,
			'ftype' =convert(varchar(2), 0)
		
	from dbo.LIST_SKL as l
				left join dbo.KAT_KLN kl on l.ОпКлн=kl.КлнКод
				left join dbo.CLN_DKL cld on cld.КлнКод = kl.КлнКод 
				left join dbo.KLN_ADK ka on ka.КодАдресаДоставки = l.КодАдрДоставки
				inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
				INNER JOIN dbo.zkz_nkl AS znnk ON l.ОпНакл = znnk.Накл
	where	cast(L.ОпДатаРасч as date) BETWEEN @startDate and @endDate 
			and l.ОпНаклКод in (select b.ОпНаклКод 
								from (select l.ОпНаклКод	
											,'type_oper' = case 
															when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
															then 0
															when l.ОпВозврат=0 and l.ОпТип=1 and l.ОпКлнТип=2 --приход от поставщика
															then 1
															when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
															then 2
															when l.ОпТип=3                                    --списание
															then 3
															when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
															then 4
															when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
															then 5
															when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
															then 6
															else ''	end
									from LIST_SKL as l
									inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
              						INNER JOIN dbo.KAT_TVR kt ON H.ОпКодТов=Kt.ТовКод
              						inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
									where cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
										and Kt.ТовГрп in (311) 
										and  l.ОпКлн not in (19358,19359,19360) --исключен клиент Найдено-потеряно 25/12/12
										and l.ОпКлнТип!=4 --исключаю движение м/у внутренними складами пп/рп 26/12/12
										and l.ОпСкл in (110, 111, 128, 129, 65, 113, 102, 103, 116, 127, 115, 61) ) as b
								WHERE b.type_oper in (0 ) -- нужны только отгрузки , 1, 2, 4)
								group by b.ОпНаклКод)
								) temp1	
		group by pdid,prdobj,pcost,pcost_rub,psum,ftype	

	--order by L.ОпНаклКод asc
	
	else
	select pdid,prdobj,sum(pamount) pamount,pcost,pcost_rub,psum,sum(psum_rub) psum_rub,ftype
from(
	select distinct 'pdid' = convert(varchar(16),l.ОпНаклКод),
			'prdobj' = convert(varchar(16),h.ОпКодТов),
			'pamount' =convert(int, case when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 then (-1)*h.ОпКол else h.ОпКол end),
			'pcost' = convert(varchar(10),null),
			'pcost_rub' = convert(varchar(16),h.ОпЦена),
			'psum' = convert(varchar(16),null),
			'psum_rub' = case when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 then (-1)*h.ОпКол else h.ОпКол end*h.ОпЦена,
			'ftype' =convert(varchar(2), 0)
		
	from dbo.LIST_SKL as l
				left join dbo.KAT_KLN kl on l.ОпКлн=kl.КлнКод
				left join dbo.CLN_DKL cld on cld.КлнКод = kl.КлнКод 
				left join dbo.KLN_ADK ka on ka.КодАдресаДоставки = l.КодАдрДоставки
				inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
				INNER JOIN dbo.zkz_nkl AS znnk ON l.ОпНакл = znnk.Накл
	where	cast(L.ОпДатаРасч as date) BETWEEN @startDate and @endDate 
			and l.ОпНаклКод=@pdid
			and l.ОпНаклКод in (select b.ОпНаклКод 
								from (select l.ОпНаклКод	
											,'type_oper' = case 
															when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
															then 0
															when l.ОпВозврат=0 and l.ОпТип=1 and l.ОпКлнТип=2 --приход от поставщика
															then 1
															when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
															then 2
															when l.ОпТип=3                                    --списание
															then 3
															when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
															then 4
															when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
															then 5
															when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
															then 6
															else ''	end
									from LIST_SKL as l
									inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
              						INNER JOIN dbo.KAT_TVR kt ON H.ОпКодТов=Kt.ТовКод
              						inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
									where cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
										and Kt.ТовГрп in (311) 
										and  l.ОпКлн not in (19358,19359,19360) --исключен клиент Найдено-потеряно 25/12/12
										and l.ОпКлнТип!=4 --исключаю движение м/у внутренними складами пп/рп 26/12/12
										and l.ОпСкл in (110, 111, 128, 129, 65, 113, 102, 103, 116, 127, 115, 61) ) as b
								WHERE b.type_oper in (0 ) -- нужны только отгрузки , 1, 2, 4)
								group by b.ОпНаклКод)
								) temp1	
		group by pdid,prdobj,pcost,pcost_rub,psum,ftype	

	
	
END
END
GO
/****** Object:  StoredProcedure [dbo].[MT_SET_CURRENT_RES2]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Холмогорова А.А. (доработано Ефремов)
-- Create date: 19-05-2015
-- Description:	Остатки Mr.Ricco
-- =============================================
CREATE PROCEDURE [dbo].[MT_SET_CURRENT_RES2]
	-- Add the parameters for the stored procedure here
	---declare
	@startdate date = NULL,
	@enddate date = NULL
	--@ourfirm int = null --16855 'ЮграСервисПродукт'             
	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	if(@enddate is NULL or @enddate= '1900-01-01')
	begin
		set @enddate = CAST(dateadd(day,0, getdate()) AS DATE)
	end
	
	print  @startdate
	if(@startdate is NULL or @enddate= '1900-01-01')
	begin
		set @startdate = CAST(dateadd(day,0, '20130101') AS DATE)
	end
	
	--if(@ourfirm is NULL)
	--begin
	--	set @ourfirm =16855
	--end

SELECT cast ( Kt.ТовКод as varchar(25)) rdistrobj 
		, cast (SUM((CASE WHEN HIST_SKL.ОпТип = 1 THEN 1 ELSE -1 END)*HIST_SKL.ОпКол) as int)  vamount
		--,CAST (нашафирма as int) rscl
		,case when HIST_SKL.ОпСкл in (110, 111, 128, 129) then '1'
			  when HIST_SKL.ОпСкл in (65, 113) then '2'
			  when HIST_SKL.ОпСкл in (102, 103) then '3' end rscl
		
	FROM HIST_SKL 
	
	INNER JOIN KAT_TVR kt ON  HIST_SKL.ОпКодТов=Kt.ТовКод
	INNER JOIN LIST_SKL ON HIST_SKL.ОпНаклКод=LIST_SKL.ОпНаклКод
	
	WHERE kt.ТовГрп = 311
		AND (HIST_SKL.ОпСкл IN  (110, 111, 128, 129, 65, 113, 102, 103))  
		AND (cast(LIST_SKL.ОпДатаРасч as date) between @startdate and @enddate)
		--AND нашафирма=@ourfirm
	
	GROUP BY Kt.ТовКод
	--,CAST (нашафирма as int)
			,case when HIST_SKL.ОпСкл in (110, 111, 128, 129) then '1'
			  when HIST_SKL.ОпСкл in (65, 113) then '2'
			  when HIST_SKL.ОпСкл in (102, 103) then '3' end 

	order by 1

end
GO
/****** Object:  StoredProcedure [dbo].[MT_SET_CLN]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Ефремов АЮ
-- Create date: 26-05-2015
-- Description:	Справочник клиентов Mr.Ricco 
-- =============================================
CREATE PROCEDURE [dbo].[MT_SET_CLN] 
	-- Add the parameters for the stored procedure here
 	@startdate date = NULL,
	@enddate date = NULL
--@startdate date ='2013-01-01', -- NULL,
--	@enddate date = '2013-12-31' 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-14,@enddate)
	end
	
    declare @city varchar(20) = 'Екатеринбург'
	
	declare @dt varchar(14) = convert(varchar(20), cast(GETDATE() as date), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	select 
	--'OL_ID'  = 0,
	'vadress'  = cast (cld.КлнАдрес as varchar(150)  ),
	'vinn' = cast (coalesce(cld.ИНН, '-') as varchar(25)),
	'ftype'=cast (2 as int),
		'vkod' = cast (coalesce(convert(varchar,cl.КлнКод) + '.' + convert(varchar,tm.КодАдресаДоставки), convert(varchar,cl.КлнКод) + '/0') as varchar(18)), 
		--'SubType_ID' = 0, 'Area_ID' = 0, 
		'vname' = REPLACE(RTRIM(cl.[КлнНаим]),'''','') + '//' + case 

							when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL and LEFT (tm.АдресДоставки,3) !='ул.'
							then RTRIM(tm.АдресДоставки) 
							when RTRIM(twn.ГородНаим) != '' and RTRIM(twn.ГородНаим) is not NULL
							then RTRIM(twn.ГородНаим) + ' г., ' + case 
																	when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
																	then RTRIM(tm.АдресДоставки)
																	else RTRIM(tm.Наим)
																end
							else RTRIM(twn2.ГородНаим) + ' г., ' +
								case 
									when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
									then RTRIM(tm.АдресДоставки)
									else RTRIM(tm.Наим)
								end
						end
		,
		'rvkod' = cast (cl.КлнКод as varchar(18))
		--'Trade_Name' = REPLACE(RTRIM(cl.[КлнНаим]),'''',''),				
		--'Deliv_Addr' =	case 
		----небольшая переделка от 30/01/15
		--					when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL and LEFT (tm.АдресДоставки,3) !='ул.'
		--					then RTRIM(tm.АдресДоставки) 
		--					when RTRIM(twn.ГородНаим) != '' and RTRIM(twn.ГородНаим) is not NULL
		--					then RTRIM(twn.ГородНаим) + ' г., ' + case 
		--															when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
		--															then RTRIM(tm.АдресДоставки)
		--															else RTRIM(tm.Наим)
		--														end
		--					else RTRIM(twn2.ГородНаим) + ' г., ' +
		--						case 
		--							when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
		--							then RTRIM(tm.АдресДоставки)
		--							else RTRIM(tm.Наим)
		--						end
		--				end
		
	from KLN_ADK as tm
	inner join KAT_KLN as cl on cl.КлнКод = tm.КодКлиента
	left join CLN_DKL as cld on cl.КлнКод = cld.КлнКод
	--left join KAT_PPL as sotr on tm.МнджКод = sotr.СотрКод
	left join kat_twn as twn on twn.КодГород = tm.КодГорода
	left join kat_twn as twn2 on twn2.КодГород = cld.КодГород
	where	(RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL) and 
			tm.КодАдресаДоставки in (select distinct(l.КодАдрДоставки)
									from dbo.LIST_SKL as l
				            			INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
              							INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            			(Kt.ТовГрп in ((311))) and
					            			((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
	            							(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
            								(l.ОпТип = 3) or										 --списание
            								(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            								(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            								(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2)) --исключаем поставщик приход, возврат
            						) 
	union
	select 
	'vadress'  = cast (cld.КлнАдрес as varchar(150)  ),
	'vinn' =cast (  coalesce(cld.ИНН, '-') as varchar(25)  ),
	'ftype'=cast (1 as int),
	'vkod' = cast (cl.КлнКод as varchar(18)),
	'vname' = cast ( coalesce(REPLACE(RTRIM(cl.[КлнНаим]),'''',''), REPLACE(RTRIM(cld.КлнНаим),'''',''))as varchar(150) ), 
	'rvkod' = null	
	from KAT_KLN as cl 
		left join CLN_DKL as cld on cl.КлнКод = cld.КлнКод
		left join kat_twn as twn2 on twn2.КодГород = cld.КодГород
	where 	((RTRIM(cld.КлнАдрес) != '' and RTRIM(cld.КлнАдрес) is not NULL) and (RTRIM(cld.КлнГрузАдрес) != '' and RTRIM(cld.КлнГрузАдрес) is not NULL)) and
			cl.КлнКод in (select distinct(l.ОпКлн)
									from dbo.LIST_SKL as l
				            			INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
              							INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            			(Kt.ТовГрп in (311)) 
					            			and l.КодАдрДоставки = 0 and 
					            			((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
	            							(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
            								(l.ОпТип = 3) or										 --списание
            								(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            								(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            								(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2)) --исключаем поставщик приход, возврат
		        					)
	order by 4 asc
END
GO
/****** Object:  Table [dbo].[KAT_PPL]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KAT_PPL](
	[СотрФамилия] [char](16) NULL,
	[СотрКод] [int] NOT NULL,
	[СотрИмя] [char](12) NULL,
	[СотрОтчество] [char](16) NULL,
	[СотрПодр] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  View [dbo].[M_TvrOst_DOP]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE   view [dbo].[M_TvrOst_DOP]
as
select ДатаОст, КодСкл, КодТов, ТовОст,
	РасхДень, ДнейОст, ABCGroup,
case
	when ДнейОст < 3 then 'Меньше 3' 
	when ДнейОст >= 3 and ДнейОст <= 7 then 'От 3 до 7'
	when ДнейОст > 7 and ДнейОст <= 14 then 'От 7 до 14'
	when ДнейОст > 14 and ДнейОст <= 21 then 'От 14 до 21'
	when ДнейОст > 21 and ДнейОст <= 28 then 'От 21 до 28'
	when ДнейОст > 28 then 'Больше 28'
	else 'Непонятно'
end as ДиапазонОст,
case
	when РасхДень = 0 then 'Нулевой тренд'
	else 'Ненулевой тренд'
end as ЗначениеТренда
from tov_ost_dop
GO
/****** Object:  View [dbo].[M_TvrOst]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE     view [dbo].[M_TvrOst]
as
select ДатаОст, КодСкл, КодТов, ТовОст,
	РасхДень, ДнейОст, ABCGroup, ДнейОстОжид,
case
	when ДнейОст < 3 then 'Меньше 3' 
	when ДнейОст >= 3 and ДнейОст <= 7 then 'От 3 до 7'
	when ДнейОст > 7 and ДнейОст <= 14 then 'От 7 до 14'
	when ДнейОст > 14 and ДнейОст <= 21 then 'От 14 до 21'
	when ДнейОст > 21 and ДнейОст <= 28 then 'От 21 до 28'
	when ДнейОст > 28 then 'Больше 28'
	else 'Непонятно'
end as ДиапазонОст,
case
	when ДнейОстОжид < 3 then 'Меньше 3' 
	when ДнейОстОжид >= 3 and ДнейОстОжид <= 7 then 'От 3 до 7'
	when ДнейОстОжид > 7 and ДнейОстОжид <= 14 then 'От 7 до 14'
	when ДнейОстОжид > 14 and ДнейОстОжид <= 21 then 'От 14 до 21'
	when ДнейОстОжид > 21 and ДнейОстОжид <= 28 then 'От 21 до 28'
	when ДнейОстОжид > 28 then 'Больше 28'
	else 'Непонятно'
end as ДиапазонОстОжидаемый,
case
	when РасхДень = 0 then 'Нулевой тренд'
	else 'Ненулевой тренд'
end as ЗначениеТренда
from tov_ost
GO
/****** Object:  View [dbo].[F_PLATRASH_testSrok]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_PLATRASH_testSrok]
AS
SELECT     ПлатКод, ПлатНом, ПлатНапр, ПлатТип, ПлатДата, ПлатКлнКод, ПлатСумма
FROM         dbo.F_PLAT_testSrok
WHERE     (ПлатНапр = 3) OR
                      (ПлатНапр = 4)
GO
/****** Object:  View [dbo].[F_PLATRASH]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_PLATRASH]
AS
SELECT     ПлатКод, ПлатНом, ПлатНапр, ПлатТип, ПлатДата, ПлатКлнКод, ПлатСумма
FROM         dbo.F_PLAT
WHERE     (ПлатНапр = 3) OR
                      (ПлатНапр = 4)
GO
/****** Object:  View [dbo].[F_PLATPRIH_testSrok]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_PLATPRIH_testSrok]
AS
SELECT     ПлатКод, ПлатНом, ПлатНапр, ПлатТип, ПлатДата, ПлатКлнКод, ПлатСумма
FROM         dbo.F_PLAT_testSrok
WHERE     (ПлатНапр = 1 OR
                      ПлатНапр = 2)
GO
/****** Object:  View [dbo].[F_PLATPRIH]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_PLATPRIH]
AS
SELECT     ПлатКод, ПлатНом, ПлатНапр, ПлатТип, ПлатДата, ПлатКлнКод, ПлатСумма
FROM         dbo.F_PLAT
WHERE     (ПлатНапр = 1 OR
                      ПлатНапр = 2)
GO
/****** Object:  View [dbo].[dg_TovRefsEx]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* Количество обращений к товару
, f_oper.ОпВесБрутто,
	f_oper.ОпКолУпак
	, d_nakl.НаклНомер*/
CREATE   VIEW [dbo].[dg_TovRefsEx]
AS
SELECT DISTINCT 
                      dbo.m_debit.НаклКодТов, COUNT(dbo.m_debit.НаклКодТов) AS ТовКол, dbo.TTN_DKM.НомерТТН, dbo.TTN_DKM.ДатаРасч, 
                      COUNT(DISTINCT RTRIM(CAST(dbo.D_NAKL.НаклКлн AS char)) + '/' + RTRIM(CAST(dbo.D_NAKL.КодАдрДоставки AS char))) AS СуммАдрДост, 
                      SUM(dbo.F_OPER.ОпВесБрутто) AS Вес, SUM(dbo.F_OPER.ОпКолУпак) AS Количество,
		      SUM(dbo.m_debit.СуммаПрогноз) as СуммаПрогноз , SUM(dbo.m_debit.СуммаУчет) as СуммаУчет,
		      SUM(dbo.m_debit.СуммаПродажа) as СуммаПродажа
FROM         dbo.TTN_NKL INNER JOIN
                      dbo.TTN_DKM ON dbo.TTN_DKM.КодТТН = dbo.TTN_NKL.КодТТН INNER JOIN
                      dbo.D_NAKL ON dbo.D_NAKL.НаклСклКод = dbo.TTN_NKL.КодСкл AND dbo.D_NAKL.НаклНомер = dbo.TTN_NKL.НомДок AND 
                      dbo.D_NAKL.НаклТип = dbo.TTN_NKL.ТипОпер INNER JOIN
                      dbo.m_debit ON dbo.D_NAKL.ОпНаклКод = dbo.m_debit.НаклКод INNER JOIN
                      dbo.F_OPER ON dbo.D_NAKL.ОпНаклКод = dbo.F_OPER.ОпНаклКод AND dbo.m_debit.НаклКодТов = dbo.F_OPER.ОпКодТов
GROUP BY dbo.m_debit.НаклКодТов, dbo.TTN_DKM.НомерТТН, dbo.TTN_DKM.ДатаРасч, dbo.D_NAKL.НаклКлн, dbo.D_NAKL.КодАдрДоставки
GO
/****** Object:  View [dbo].[KPK_RealPrice]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE    VIEW [dbo].[KPK_RealPrice]
AS
/* Вид расчитывает реальную цену товара для клиентов Mobiteam с учетом всех скидок 
и групп цен */
select КлнКод, ТовКод,
	--ТовЦенаРСХ, ГрпЦен, АльтГрпЦен, ЦенаПоГруппеЦен, ЦенаПоАльтГруппеЦен,
	--ТоварнаяСкидка, КлнНаТовар, КлнНаВид, КлнНаГруппу,
	case
		/* Если назначена группа цен */
		when ЦенаПоАльтГруппеЦен <> 0 and ЦенаПоАльтГруппеЦен is not null then
			case
				when КлнНаТовар<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаГруппу/100)
				when ТоварнаяСкидка<>0 then ЦенаПоАльтГруппеЦен*(1-ТоварнаяСкидка/100)
				else ЦенаПоАльтГруппеЦен
			end
		when ЦенаПоГруппеЦен <> 0 and ЦенаПоГруппеЦен is not null then
			case
				when КлнНаТовар<>0 then ЦенаПоГруппеЦен*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ЦенаПоГруппеЦен*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ЦенаПоГруппеЦен*(1-КлнНаГруппу/100)
				when ТоварнаяСкидка<>0 then ЦенаПоГруппеЦен*(1-ТоварнаяСкидка/100)
				else ЦенаПоГруппеЦен
			end
		else
			case
				when КлнНаТовар<>0 then ТовЦенаРСХ*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ТовЦенаРСХ*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ТовЦенаРСХ*(1-КлнНаГруппу/100)
				when ТоварнаяСкидка<>0 then ТовЦенаРСХ*(1-ТоварнаяСкидка/100)
				else ТовЦенаРСХ
			end
	end as РеальнаяЦена
from 
(
select distinct KPK_Table.КлнКод as КлнКод, kat_tvr.ТовКод as ТовКод,
	kat_tvr.ТовЦенаРСХ, sld_kln.ГрпЦен,
	(select top 1 ЦенГрп 
	from cenp_tab
	where cenp_tab.КлнКод=KPK_Table.КлнКод and
	cenp_tab.ТовКод=kat_tvr.ТовКод 
	) as АльтГрпЦен,
	/* Группа цен */
	(select top 1 Цена from m_grpcen where ТврКод=ТовКод 
		and m_grpcen.ГрпЦен=sld_kln.ГрпЦен) as ЦенаПоГруппеЦен,
	/* Альтернативная группа цен */
	(select top 1 Цена from m_grpcen, cenp_tab
		where m_grpcen.ТврКод=kat_tvr.ТовКод and
		cenp_tab.КлнКод=KPK_Table.КлнКод and
		cenp_tab.ТовКод=kat_tvr.ТовКод and
		m_grpcen.ГрпЦен=cenp_tab.ЦенГрп
		) as ЦенаПоАльтГруппеЦен,
	/* Товарная скидка */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=kat_tvr.ТовКод
		and skd_tab.СкдТип=1) as ТоварнаяСкидка,
	/* Клиентская на товар */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=KPK_Table.КлнКод
		and skd_tab.СкдДоп=kat_tvr.ТовКод
		and skd_tab.СкдТип=6) as КлнНаТовар,
	/* Клиентская на вид */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=KPK_Table.КлнКод
		and skd_tab.СкдДоп=kat_tvr.ТовВид
		and skd_tab.СкдТип=7) as КлнНаВид,
	/* Клиентская на группу */
	(select top 1 СкдПрц1 from SKD_TAB where skd_tab.СкдКод=KPK_Table.КлнКод
		and skd_tab.СкдДоп=kat_tvr.ТовГрп
		and skd_tab.СкдТип=0) as КлнНаГруппу
from kat_tvr, KPK_Table, sld_kln 
where KPK_Table.КлнКод=sld_kln.КлнКод
and kat_tvr.ТовАрт like '%w%'
--and KPK_Table.КлнКод = 4433
)
Y
GO
/****** Object:  View [dbo].[TotalKlnSaldo]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--Общее Сальдо по клиенту
--ЕФ
--20111129
CREATE VIEW [dbo].[TotalKlnSaldo]
AS
select 
k.КлнКод,
SUM(
		(CASE WHEN l.ОпТип = 2 THEN 1 WHEN l.ОпТип = 1 THEN -1 ELSE 0 END)*
		(
			(h.ОпЦена * h.ОпКол)+ (hu.УслЦена * hu.УслКол)
		)
)
+ 
SUM(
		(CASE WHEN (b.ПлатНапр > 2) THEN 1 WHEN (b.ПлатНапр < 3) THEN -1 ELSE 0 END)*
		b.ПлатСумма
	) Saldo

from kat_kln k
		left outer join list_skl l	on l.ОпКлн = k.КлнКод
		left outer join hist_skl h on l.ОпНаклКод = h.ОпНаклКод	
		left outer join hist_usl hu on l.ОпНакл = hu.УслНомер
							and l.ОпСкл = hu.УслСкл
							and l.ОпТип = hu.УслОпер
		left outer join dkm_base b on 	b.ПлатТип < 40 and b.ПлатКлнСотр = 1 AND (k.КлнКод = b.ПлатКлнКод) 						
group by k.КлнКод
GO
/****** Object:  View [dbo].[WRITETABLE_KAT_TVR_ABC]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* ЕФ
 представление позволяет сохранять данные только по одному полю АБС
 сделано для измерения "товары" куба "СоюзЕвразия"
select ВидКод from KAT_VIDT
		group by ВидКод
		having COUNT(*)>1*/
CREATE VIEW [dbo].[WRITETABLE_KAT_TVR_ABC] AS
SELECT     t.ТовКод, t.ТовНаим, t.ТовГрп, t.ТовВид, t.ТовАрт, t.ТовЕИ, t.ТовУпак, t.ТовЦенаРСХ, t.НДС, t.ТовЦенаУчет, t.ABC AS _abc, 
                      CASE WHEN [ТовАрт] LIKE '%w%' THEN 0 ELSE 1 END AS Архв, td.ТовВесБрутто, td.ТовВесНетто, a.ABC, a.ГрпABC, a.ВидABC, grp.ГрпНаим, v.ВидНаим, 
                      td.МинОст, td.Объем, td.КодПоставщика, td.Закуп, u.УпакКоэф
FROM         dbo.KAT_TVR AS t LEFT OUTER JOIN
                      dbo.KAT_GRPT AS grp ON t.ТовГрп = grp.ГрпКод LEFT OUTER JOIN
                      dbo.KAT_VIDT AS v ON t.ТовВид = v.ВидКод LEFT OUTER JOIN
                      dbo.KAT_TVR_ABC AS a ON t.ТовКод = a.ТовКод LEFT OUTER JOIN
                      dbo.TVR_DEF AS td ON td.ТовКод = t.ТовКод LEFT OUTER JOIN
                      dbo.KAT_UPK u ON t.ТовУпак = u.УпакКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "t"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "grp"
            Begin Extent = 
               Top = 6
               Left = 245
               Bottom = 95
               Right = 414
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "v"
            Begin Extent = 
               Top = 96
               Left = 245
               Bottom = 200
               Right = 414
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "td"
            Begin Extent = 
               Top = 28
               Left = 718
               Bottom = 326
               Right = 887
            End
            DisplayFlags = 280
            TopColumn = 18
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WRITETABLE_KAT_TVR_ABC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WRITETABLE_KAT_TVR_ABC'
GO
/****** Object:  StoredProcedure [edi].[LastKonturResponse]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [edi].[LastKonturResponse]

AS
BEGIN
						 declare @id int
						 declare @body varchar(max)
                          SELECT @id= max (id)--top 1[body] 
                          FROM  [PR_Euras].[edi].[Kontur]  where [ordsp] =1 and DELNOT != 1
                          select [body] FROM  [PR_Euras].[edi].[Kontur]  where id =@id
                          update [PR_Euras].[edi].[Kontur]  set [DELNOT] =1
                          FROM  [PR_Euras].[edi].[Kontur] where id =@id
                          return @body
END
GO
/****** Object:  StoredProcedure [dbo].[testInsert]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[testInsert]
@a as int, @b as int
as
begin
INSERT INTO [cube].[bonusInfo]
([ОпБонусКод],[ОпТип],[ТовКод],[bonId],[bonType],[bonStavka])
VALUES (@a,null,@b,null,null,null)

end
GO
/****** Object:  View [dbo].[Test1]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Test1]
AS
SELECT 

*

,(SELECT TOP 1 kg.kt_dst FROM kgvt_tab kg WHERE 
								(
									(kg.kt_tip = 0--группа						 
									AND kg.kt_gvt = tvr.ТовГрп)
									OR
									(kg.kt_tip = 1--						 
									AND kg.kt_gvt = tvr.ТовВид)
									OR
									(kg.kt_tip = 2--						 
									AND kg.kt_gvt = tvr.ТовКод)
								)
								AND
								(
									(kg.kt_tipkln = 0
									AND kg.kt_kln = kln.КлнКод)
									/*OR
									(kg.kt_tipkln = 0
									AND kg.kt_kln = adk.КодАдресаДоставки
									)*/
								)
ORDER BY kg.kt_tip,kg.kt_tipkln	DESC							
) kt_dst								
FROM kat_tvr tvr 
CROSS JOIN KAT_KLN kln
--CROSS JOIN KLN_ADK adk
GO
/****** Object:  View [dbo].[tvr_vid]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[tvr_vid]
AS
SELECT     TOP 100 PERCENT dbo.KAT_TVR.ТовВид, dbo.D_TVR.ТовВидНаим
FROM         dbo.KAT_TVR LEFT OUTER JOIN
                      dbo.D_TVR ON dbo.KAT_TVR.ТовКод = dbo.D_TVR.ТовКод
GROUP BY dbo.D_TVR.ТовВидНаим, dbo.KAT_TVR.ТовВид
ORDER BY dbo.KAT_TVR.ТовВид
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 72
               Bottom = 114
               Right = 223
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_TVR"
            Begin Extent = 
               Top = 7
               Left = 472
               Bottom = 115
               Right = 623
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'tvr_vid'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'tvr_vid'
GO
/****** Object:  View [dbo].[v_DolgDpt]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_DolgDpt]
AS
SELECT     TOP 100 PERCENT dbo.KAT_PDR.ПдрКод, dbo.D_ORG.ГрпСотрНаим, ABS(SUM(dbo.DOLG.ДолгСумма)) AS ОтделСумма, 
                      ABS(SUM(dbo.DOLG.ДолгСумма * dbo.DOLG.ДолгСрок)) AS ОтделСуммаПер
FROM         dbo.DOLG INNER JOIN
                      dbo.D_ORG ON dbo.DOLG.ДолгКлн = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.KAT_PDR ON dbo.D_ORG.ГрпСотрНаим = dbo.KAT_PDR.ПдрНаим INNER JOIN
                      dbo.DOLG_SELMGR ON dbo.D_ORG.СотрФамилияИмя = dbo.DOLG_SELMGR.ВбрСотрНаим
GROUP BY dbo.KAT_PDR.ПдрКод, dbo.D_ORG.ГрпСотрНаим
GO
/****** Object:  View [dbo].[v_DolgCln]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_DolgCln]
AS
SELECT     TOP 100 PERCENT dbo.D_ORG.КлнКод, dbo.D_ORG.КлнНаим, dbo.D_ORG.СотрФамилияИмя, dbo.D_ORG.ГрпСотрНаим, 
                      ABS(SUM(dbo.DOLG.ДолгСумма)) AS КлнСумма, ABS(SUM(dbo.DOLG.ДолгСумма * dbo.DOLG.ДолгСрок)) AS КлнСуммаПер
FROM         dbo.DOLG INNER JOIN
                      dbo.D_ORG ON dbo.DOLG.ДолгКлн = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.DOLG_SELMGR ON dbo.D_ORG.СотрФамилияИмя = dbo.DOLG_SELMGR.ВбрСотрНаим
GROUP BY dbo.D_ORG.КлнКод, dbo.D_ORG.КлнНаим, dbo.D_ORG.СотрФамилияИмя, dbo.D_ORG.ГрпСотрНаим
GO
/****** Object:  View [dbo].[v_DbtPrih]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_DbtPrih]
AS
SELECT     dbo.F_STREAM.Клн, dbo.F_STREAM.Дата, SUM(dbo.F_STREAM.Кол) AS СуммаПрих
FROM         dbo.F_STREAM INNER JOIN
                      dbo.D_DATES ON dbo.F_STREAM.Дата = dbo.D_DATES.ДатыКод
WHERE     (dbo.F_STREAM.Тип = 2) OR
                      (dbo.F_STREAM.Тип = 4) OR
                      (dbo.F_STREAM.Тип = 6)
GROUP BY dbo.F_STREAM.Клн, dbo.F_STREAM.Дата
GO
/****** Object:  View [dbo].[v_ClnPrihOnly]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[v_ClnPrihOnly]
AS
SELECT     Клн
FROM         dbo.F_STREAM
WHERE (Тип=2 or Тип=4 or Тип=6)
and Клн not in
(SELECT     Клн
FROM         dbo.F_STREAM
WHERE Тип=1 or Тип=3 or Тип=5
GROUP BY Клн) 
GROUP BY Клн
GO
/****** Object:  View [dbo].[UslDaysClnSum1]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[UslDaysClnSum1]
AS
SELECT     dbo.hist_usl.ДатаКод, dbo.hist_usl.УслОпер, SUM(dbo.hist_usl.УслКол * dbo.hist_usl.УслЦена) AS УслСтоим, 
                      dbo.LIST_SKL.ОпКлн AS КлнКод
FROM         dbo.hist_usl INNER JOIN
                      dbo.LIST_SKL ON dbo.hist_usl.НаклКод = dbo.LIST_SKL.ОпНаклКод
WHERE list_skl.ЕстьТовар=0
GROUP BY dbo.hist_usl.ДатаКод, dbo.LIST_SKL.ОпКлн, dbo.hist_usl.УслОпер
GO
/****** Object:  View [dbo].[UslDaysClnSum]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[UslDaysClnSum]
AS
SELECT     dbo.hist_usl.ДатаКод, dbo.hist_usl.УслОпер, SUM(dbo.hist_usl.УслКол * dbo.hist_usl.УслЦена) AS УслСтоим, 
                      dbo.LIST_SKL.ОпКлн AS КлнКод
FROM         dbo.hist_usl INNER JOIN
                      dbo.LIST_SKL ON dbo.hist_usl.НаклКод = dbo.LIST_SKL.ОпНаклКод
--WHERE list_skl.ЕстьТовар=0
GROUP BY dbo.hist_usl.ДатаКод, dbo.LIST_SKL.ОпКлн, dbo.hist_usl.УслОпер
GO
/****** Object:  Table [dbo].[UserReports]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserReports](
	[UserID] [int] NOT NULL,
	[ReportID] [int] NOT NULL,
 CONSTRAINT [PK_UserReports] PRIMARY KEY CLUSTERED 
(
	[UserID] ASC,
	[ReportID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  UserDefinedFunction [dbo].[UpdatedPrihcleanSum]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[UpdatedPrihcleanSum]
(
@date datetime
,@Kod bigint
,@kol float
)

/*

select * from dbo.[UpdatedPrihcleanSum]('20100203',1110,1000) order by ОпДатаРасч

*/
RETURNS TABLE 
AS
RETURN 
(
	select Код,ОпКодТов,СумКол, ОпДата,ОпДатаРасч,
(
(select SUM(СумКол) from f_prihclean p1 where p1.ОпКодТов = p.ОпКодТов and p1.ОпДатаРасч>= p.ОпДатаРасч and p1.ОпДатаРасч<=@date) - @kol) NewVal

from f_prihclean  p
where 
p.ОпКодТов = @kod
and
p.ОпДатаРасч<=@date
and
СумКол > 0
and
(СумКол>=(select SUM(СумКол) from f_prihclean p1 where p1.ОпКодТов = p.ОпКодТов and p1.ОпДатаРасч>= p.ОпДатаРасч and p1.ОпДатаРасч<=@date) - @kol)
)
GO
/****** Object:  View [dbo].[SKU_BARCODE]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[SKU_BARCODE]
AS
SELECT     Skucode, upc, Skuid
FROM         wms.SKU_BARCODE AS SKU_BARCODE_1
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "SKU_BARCODE_1"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 110
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SKU_BARCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SKU_BARCODE'
GO
/****** Object:  View [dbo].[SKU_BAR_NOT_NULL]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[SKU_BAR_NOT_NULL]
AS
SELECT     TOP (1000) Skucode, upc, Skuid
FROM         wms.SKU_BARCODE AS SKU_BARCODE_1
WHERE     (NOT (upc IS NULL))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "SKU_BARCODE_1"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SKU_BAR_NOT_NULL'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SKU_BAR_NOT_NULL'
GO
/****** Object:  StoredProcedure [dbo].[InsertDebet]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[InsertDebet] @ClnParam as bigint, @DateParam as bigint,@SaldoParam as money
  AS
insert f_debet (ДбтКлнКод,ДбтДата,ДбтСальдо,ДбтЗаполнение) values (@ClnParam,@DateParam,@SaldoParam,1)
GO
/****** Object:  StoredProcedure [history].[InsertDboToHistory]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--Процедура для сохранения плетежей,услуг и нкаладных в History
CREATE PROCEDURE [history].[InsertDboToHistory]
AS
truncate table [history].[DKM_BASE];
truncate table [history].[DKM_BASI];
truncate table history.HIST_SKL;
truncate table history.HIST_USL;
truncate table history.list_skl;

insert [history].[DKM_BASE]
(
		[ПлатКод]
      ,[ПлатНом]
      ,[ПлатНапр]
      ,[ПлатТип]
      ,[ПлатДата]
      ,[ПлатДатаРасч]
      ,[ПлатКлнКод]
      ,[ПлатСумма]
      ,[ПлатКодНалог]
      ,[ПлатДатаОпл]
      ,[ПлатДатаОплРасч]
      ,[ПлатКлнСотр]
      ,[ПлатСчет]
      ,[ПлатРеквизит]
      ,[ПлатАвзНом]	
)
SELECT [ПлатКод]
      ,[ПлатНом]
      ,[ПлатНапр]
      ,[ПлатТип]
      ,[ПлатДата]
      ,[ПлатДатаРасч]
      ,[ПлатКлнКод]
      ,[ПлатСумма]
      ,[ПлатКодНалог]
      ,[ПлатДатаОпл]
      ,[ПлатДатаОплРасч]
      ,[ПлатКлнСотр]
      ,[ПлатСчет]
      ,[ПлатРеквизит]
      ,[ПлатАвзНом]
  FROM dbo.[DKM_BASE]
  
  
  
INSERT history.[DKM_BASI]  
(
	[ДОКод]
      ,[ДОНом]
      ,[ДОКодПлат]
      ,[ДОТип]
      ,[ДОНаим]
      ,[ДОСумма]
      ,[ДОДата]
      ,[ДОДатаРасч]
      ,[ДОКонтракт]
      ,[ДОПризнак]
      ,[ДОКлнСотр]
      ,[ДОКодКлн]
      ,[ДОДатаОпл]
      ,[ДОДатаОплРасч]
      ,[ДОДатаКод]
      ,[ДОТипПечати]
      ,[ДОКодПодр]
      ,[НашаФирма]	
)
  SELECT [ДОКод]
      ,[ДОНом]
      ,[ДОКодПлат]
      ,[ДОТип]
      ,[ДОНаим]
      ,[ДОСумма]
      ,[ДОДата]
      ,[ДОДатаРасч]
      ,[ДОКонтракт]
      ,[ДОПризнак]
      ,[ДОКлнСотр]
      ,[ДОКодКлн]
      ,[ДОДатаОпл]
      ,[ДОДатаОплРасч]
      ,[ДОДатаКод]
      ,[ДОТипПечати]
      ,[ДОКодПодр]
      ,[НашаФирма]
  FROM dbo.[DKM_BASI]

INSERT [history].[HIST_SKL]
(	[ОпКод]
      ,[ОпКодТов]
      ,[ОпКол]
      ,[ОпТип]
      ,[ОпЦена]
      ,[ОпКодУпак]
      ,[ОпСкл]
      ,[ОпВозвр]
      ,[ОпНакл]
      ,[ОпНаклКод]
      ,[ОпТипКлн]
      ,[ОпТовНом]    
      
)  
SELECT [ОпКод]
      ,[ОпКодТов]
      ,[ОпКол]
      ,[ОпТип]
      ,[ОпЦена]
      ,[ОпКодУпак]
      ,[ОпСкл]
      ,[ОпВозвр]
      ,[ОпНакл]
      ,[ОпНаклКод]
      ,[ОпТипКлн]
      ,[ОпТовНом]      
  FROM dbo.[HIST_SKL]


INSERT [history].[HIST_USL]
(	[УслКод]
      ,[УслКол]
      ,[УслЦена]
      ,[УслНомер]
      ,[УслСкл]
      ,[УслОпер]
      ,[НаклКод]
      ,[ДатаКод]
 ) 
SELECT [УслКод]
      ,[УслКол]
      ,[УслЦена]
      ,[УслНомер]
      ,[УслСкл]
      ,[УслОпер]
      ,[НаклКод]
      ,[ДатаКод]
  FROM dbo.[HIST_USL]
  
  
INSERT [history].[list_skl]
(
[ОпНакл]
      ,[ОпСкл]
      ,[ОпТип]
      ,[ОпДатаИсх]
      ,[ОпКлнТип]
      ,[ОпКлн]
      ,[ОпВозврат]
      ,[ОпСотр]
      ,[ОпДатаРасч]      
      ,[ЕстьТовар]
      ,[КодАдрДоставки]
      ,[Основание]
      ,[ДопПрз]
      ,[НашаФирма]
      ,[КодКонтракта]
      ,[НомерПостав]
      ,[ОпТипПост]
      ,[АвтокодСФ]
)  
SELECT [ОпНакл]
      ,[ОпСкл]
      ,[ОпТип]
      ,[ОпДатаИсх]
      ,[ОпКлнТип]
      ,[ОпКлн]
      ,[ОпВозврат]
      ,[ОпСотр]
      ,[ОпДатаРасч]      
      ,[ЕстьТовар]
      ,[КодАдрДоставки]
      ,[Основание]
      ,[ДопПрз]
      ,[НашаФирма]
      ,[КодКонтракта]
      ,[НомерПостав]
      ,[ОпТипПост]
      ,[АвтокодСФ]
  FROM dbo.[list_skl]
GO
/****** Object:  StoredProcedure [dbo].[InsertClnTmp]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[InsertClnTmp] @ClnParam as int
  AS
insert clntmp (Клн) values (@ClnParam)
GO
/****** Object:  StoredProcedure [dbo].[InsertBeginnerPayment]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--+ дебитор, - кредитор 

--ЕФ 14,02,2012
--Вставка исторических данных нужна была для корректного расчета долгов
--вместо исторических данных для расчета долгов луче использовать входящее сальдо
--Добавляется платежь из входящего сальда процедура InsertBeginnerPayment

CREATE procedure [dbo].[InsertBeginnerPayment]
as
begin tran

declare @d date;--дата до которой удаляются все накладные и платежи
set @d = '20101231';--'20101231';--'20090930';--'20110228'; --28.02.11
declare @dd int;--дата до которой удаляются все накладные и платежи
set @dd =  DATEDIFF(second,CONVERT(datetime,'31.12.1969 19:00:00',104),@d);
select 
-1*Row_number() over (order by КлнКод, НашаФирма)   ПлатКод
,
case when s.НачСальдо>0 then 1 else 3 end ПлатНапр --0-платеж сделал клиент
,0 ПлатТип  --
,1 ПлатКлнСотр
,s.КлнКод ПлатКлнКод
,abs(s.НачСальдо) ПлатСумма --+ дебитор, - кредитор 
,s.НашаФирма
--,Cast('20090930' as date) ПлатДатаРасч
--,* 
into #t
 from sld_firm s
where НачСальдо <> 0 and НашаФирма <> 0 


insert into [dbo].[DKM_BASE]
(ПлатНом,ПлатКод,ПлатНапр,ПлатТип,ПлатКлнСотр,ПлатКлнКод,ПлатСумма,ПлатДатаРасч,ПлатДатаОплРасч,ПлатДата,ПлатДатаОпл)
select ПлатКод,ПлатКод,ПлатНапр,ПлатТип,ПлатКлнСотр,ПлатКлнКод,ПлатСумма,@d,@d,@dd,@dd
from #t

insert into [dbo].[DKM_BASI]
(ДОКод,[ДОКодКлн],НашаФирма,[ДОКодПлат],[ДОДатаОплРасч],[ДОДатаОпл])
select ПлатКод,ПлатКлнКод,НашаФирма,ПлатКод,@d,@dd
from #t

drop table #t


delete 
--select * 
from list_skl
where DATEADD(second,[ОпДатаИсх],CONVERT(datetime,'31.12.1969 19:00:00',104)) < @d

delete 
--select *
from dkm_base
where DATEADD(second,ПлатДатаОпл,CONVERT(datetime,'31.12.1969 19:00:00',104))<@d


commit tran
--rollback tran
/*
delete from [dbo].[DKM_BASE]
where ПлатКод < 0

delete from [dbo].[DKM_BASI]
where ДОКод < 0

*/
GO
/****** Object:  View [dbo].[sklgrp_remnant]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[sklgrp_remnant]
AS
SELECT     SK.ТовКод, SUM(SK.Остаток) AS Остаток, SK.ДатаОстатка, KSG.NmGrpSkl, SK.Скл
FROM         cube.skl_month_remnant AS SK INNER JOIN
                      dbo.KAT_SKL AS KS ON SK.Скл = KS.СклКод INNER JOIN
                      dbo.kat_grps AS KSG ON KS.СклГрп = KSG.idGrpSkl
GROUP BY SK.ТовКод, SK.ДатаОстатка, KSG.NmGrpSkl, SK.Скл
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "SK"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 223
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KSG"
            Begin Extent = 
               Top = 29
               Left = 499
               Bottom = 222
               Right = 659
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KS"
            Begin Extent = 
               Top = 6
               Left = 236
               Bottom = 211
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 4545
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'sklgrp_remnant'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'sklgrp_remnant'
GO
/****** Object:  View [dbo].[v_DolgSaldo1]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_DolgSaldo1]
AS
SELECT     dbo.F_DEBET.ДбтКлнКод AS Клн, MAX(dbo.D_DATES.ДатыРасч) AS Дата
FROM         dbo.F_DEBET INNER JOIN
                      dbo.D_DATES ON dbo.F_DEBET.ДбтДата = dbo.D_DATES.ДатыКод
WHERE     (dbo.F_DEBET.ДбтЗаполнение = 0) 
and dbo.D_DATES.ДатыРасч<=(SELECT FDate from DolgParam)
GROUP BY dbo.F_DEBET.ДбтКлнКод
GO
/****** Object:  StoredProcedure [dbo].[UniqueTableCopy]    Script Date: 08/10/2015 12:56:00 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[UniqueTableCopy] 
@currentBase as varchar(50)
AS
--Копирование данных из таблиц по списку-------------
-----------------------------------------------------
declare @SQLstring as varchar(2000)
declare @findIdentity as int

--переменная для имени таблицы
declare @UniqueTable as varchar(50)

--создаем курсор на список таблиц подлежащих копированию
DECLARE TableList CURSOR
FORWARD_ONLY 
FOR
select [Table] from dbo.[0_Unique_tables]
FOR READ ONLY

--открываем курсор
OPEN TableList

--записываем в @UniqueTable имя первой таблицы
FETCH NEXT FROM TableList
INTO @UniqueTable

WHILE @@FETCH_STATUS=0
 BEGIN
  --Очищаем таблицу в Prodresurs_6 и копируем её из обрабатываемой базы
  set @SQLstring='truncate table ' + DB_NAME(DB_ID()) + '.dbo.' + Ltrim(Rtrim(@UniqueTable))
  exec dbo.sp_sqlexec @SQLstring
  --проверяем наличие полей IDENTITY и устанавливаем IDENTITY_INSERT
  set @findIdentity=(select COUNT(*) from syscolumns
		       where id=OBJECT_ID( Ltrim(Rtrim(@UniqueTable)) ) AND (autoval is not null))
  if @findIdentity>0
     set @SQLstring='set IDENTITY_INSERT ' + DB_NAME(DB_ID()) + '.dbo.' + Ltrim(Rtrim(@UniqueTable)) + '  ON'
  else
     set @SQLstring=''

--  exec dbo.sp_sqlexec @SQLstring
  set @SQLstring=@SQLstring +' insert into ' + DB_NAME(DB_ID()) + '.dbo.' + Ltrim(Rtrim(@UniqueTable))
  set @SQLstring=@SQLstring + ' (' + dbo.TableFieldsString(Ltrim(Rtrim(@UniqueTable))) + ')'
  set @SQLstring=@SQLstring + ' select'
  set @SQLstring=@SQLstring + ' ' + dbo.TableFieldsString(Ltrim(Rtrim(@UniqueTable)))
  set @SQLstring=@SQLstring + ' from ' + Ltrim(Rtrim(@currentBase)) + '.dbo.' + Ltrim(Rtrim(@UniqueTable))
  exec dbo.sp_sqlexec @SQLstring
  FETCH NEXT FROM TableList
  INTO @UniqueTable
 END
--закрываем курсор
CLOSE TableList
DEALLOCATE TableList
GO
/****** Object:  View [dbo].[TovPosition]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[TovPosition]
AS
SELECT     ТовКод, ТовНаим, CASE WHEN ТовАрт LIKE '%z%' THEN 'Товарная позиция по Z' ELSE 'Товарная позиция' END AS ТовПозиция, ТовАрт
FROM         dbo.KAT_TVR
GO
/****** Object:  View [dbo].[v_DolgNakl]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_DolgNakl]
AS
SELECT     dbo.DOLG.ДолгНакл, dbo.DOLG.ДолгКлн, dbo.D_ORG.СотрФамилияИмя AS СотрФИ, dbo.D_ORG.ГрпСотрНаим, dbo.DOLG.ДолгДата, 
                      ABS(dbo.DOLG.ДолгСумма) AS ДолгСумма1, ABS(dbo.DOLG.ДолгНаклСумма) AS ДолгНаклСумма1, ABS(dbo.DOLG.ДолгСрок) AS ДолгСрок1
FROM         dbo.DOLG INNER JOIN
                      dbo.D_ORG ON dbo.DOLG.ДолгКлн = dbo.D_ORG.КлнКод
GO
/****** Object:  StoredProcedure [dbo].[InsertTovTmp]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[InsertTovTmp] @TovParam as int
  AS
insert tovtmp (КодТов) values (@TovParam)
GO
/****** Object:  StoredProcedure [dbo].[InsertRaznoska]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[InsertRaznoska] @TovParam as int, @DateParam as datetime
  AS
delete from TmpClean
insert TmpClean (КодТов,Дата) values (@TovParam,@DateParam)
GO
/****** Object:  StoredProcedure [dbo].[InsertOst]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[InsertOst] @TovParam as bigint, @SklParam int, @KolParam as money,@FDate as datetime, @LDate as datetime
  AS
insert into f_ost (ОстТов,ОстСкл,ОстДата,ОстКол) 
  select @TovParam,@SklParam,ДатыКод,@KolParam from d_dates where ДатыРасч>@FDate and ДатыРасч<@LDate

--insert f_ost (ОстТов,ОстСкл,ОстДата,ОстКол) values (@TovParam,@SklParam,@DateParam,@KolParam)
GO
/****** Object:  StoredProcedure [dbo].[InsertHistoryData]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--begin tran

-- Евгений Федяков 13.10.2011
-- Вставка исторических данных, от этого нужно будет отказаться

--ЕФ 14,02,2012
--Вставка исторических данных нужна была для корректного расчета долгов
--вместо исторических данных для расчета долгов луче использовать входящее сальдо
--Добавляется платежь из входящего сальда
CREATE PROCEDURE [dbo].[InsertHistoryData]
As



/*begin tran

select 
-1*Row_number() over (order by КлнКод, НашаФирма)   ПлатКод
,0 ПлатНапр --0-платеж сделал клиент
,0 ПлатТип  --
,1 ПлатКлнСотр
,s.КлнКод ПлатКлнКод
,-s.НачСальдо ПлатСумма
,s.НашаФирма
,Cast('20090930' as date) ПлатДатаРасч
--,* 
into #t
 from sld_firm s
where НачСальдо <> 0 and НашаФирма <> 0 


insert into [dbo].[DKM_BASE]
(ПлатКод,ПлатНапр,ПлатТип,ПлатКлнСотр,ПлатКлнКод,ПлатСумма,ПлатДатаРасч)
select ПлатКод,ПлатНапр,ПлатТип,ПлатКлнСотр,ПлатКлнКод,ПлатСумма,ПлатДатаРасч
from #t

insert into [dbo].[DKM_BASI]
(ДОКод,[ДОКодКлн],НашаФирма,[ДОКодПлат])
select ПлатКод,ПлатКлнКод,НашаФирма,ПлатКод
from #t

drop table #t

commit tran*/





insert into dbo.hist_skl
(
	   [ОпКодТов]
      ,[ОпКол]
      ,[ОпТип]
      ,[ОпЦена]
      ,[ОпКодУпак]
      ,[ОпСкл]
      ,[ОпВозвр]
      ,[ОпНакл]
      ,[ОпНаклКод]
      ,[ОпТипКлн]
      ,[ОпТовНом]
)
select [ОпКодТов]
      ,[ОпКол]
      ,[ОпТип]
      ,[ОпЦена]
      ,[ОпКодУпак]
      ,[ОпСкл]
      ,[ОпВозвр]
      ,[ОпНакл]
      ,[ОпНаклКод]
      ,[ОпТипКлн]
      ,[ОпТовНом] from history.hist_skl
      
      
insert into dbo.list_skl
(
	[ОпНакл]
      ,[ОпСкл]
      ,[ОпТип]
      ,[ОпДатаИсх]
      ,[ОпКлнТип]
      ,[ОпКлн]
      ,[ОпВозврат]
      ,[ОпСотр]
      ,[ОпДатаРасч]
      --,[ОпНаклКод]
      ,[ЕстьТовар]
      ,[КодАдрДоставки]
      ,[Основание]
      ,[ДопПрз]
      ,[НашаФирма]
      ,[КодКонтракта]
      --,[НомерПостав]
      --,[ОпТипПост]
      ,[АвтокодСФ]	
)      
SELECT [ОпНакл]
      ,[ОпСкл]
      ,[ОпТип]
      ,[ОпДатаИсх]
      ,[ОпКлнТип]
      ,[ОпКлн]
      ,[ОпВозврат]
      ,[ОпСотр]
      ,[ОпДатаРасч]
      --,[ОпНаклКод]
      ,[ЕстьТовар]
      ,[КодАдрДоставки]
      ,[Основание]
      ,[ДопПрз]
      ,[НашаФирма]
      ,[КодКонтракта]
      --,[НомерПостав]
      --,[ОпТипПост]
      ,[АвтокодСФ]
  FROM [history].[list_skl]




insert into dbo.[HIST_USL]
(
		[УслКод]
      ,[УслКол]
      ,[УслЦена]
      ,[УслНомер]
      ,[УслСкл]
      ,[УслОпер]
      ,[НаклКод]
      ,[ДатаКод]
)
SELECT [УслКод]
      ,[УслКол]
      ,[УслЦена]
      ,[УслНомер]
      ,[УслСкл]
      ,[УслОпер]
      ,[НаклКод]
      ,[ДатаКод]
  FROM [history].[HIST_USL]


insert into dbo.[DKM_BASE]
(
	[ПлатКод]
      ,[ПлатНом]
      ,[ПлатНапр]
      ,[ПлатТип]
      ,[ПлатДата]
      ,[ПлатДатаРасч]
      ,[ПлатКлнКод]
      ,[ПлатСумма]
      ,[ПлатКодНалог]
      ,[ПлатДатаОпл]
      ,[ПлатДатаОплРасч]
      ,[ПлатКлнСотр]
      ,[ПлатСчет]
      ,[ПлатРеквизит]
      ,[ПлатАвзНом]	
)

SELECT [ПлатКод]
      ,[ПлатНом]
      ,[ПлатНапр]
      ,[ПлатТип]
      ,[ПлатДата]
      ,[ПлатДатаРасч]
      ,[ПлатКлнКод]
      ,[ПлатСумма]
      ,[ПлатКодНалог]
      ,[ПлатДатаОпл]
      ,[ПлатДатаОплРасч]
      ,[ПлатКлнСотр]
      ,[ПлатСчет]
      ,[ПлатРеквизит]
      ,[ПлатАвзНом]
  FROM [history].[DKM_BASE]

insert into dbo.[DKM_BASI]
(
	[ДОКод]
      ,[ДОНом]
      ,[ДОКодПлат]
      ,[ДОТип]
      ,[ДОНаим]
      ,[ДОСумма]
      ,[ДОДата]
      ,[ДОДатаРасч]
      ,[ДОКонтракт]
      ,[ДОПризнак]
      ,[ДОКлнСотр]
      ,[ДОКодКлн]
      ,[ДОДатаОпл]
      ,[ДОДатаОплРасч]
      ,[ДОДатаКод]
      ,[ДОТипПечати]
      ,[ДОКодПодр]
      ,[НашаФирма]	
)
SELECT [ДОКод]
      ,[ДОНом]
      ,[ДОКодПлат]
      ,[ДОТип]
      ,[ДОНаим]
      ,[ДОСумма]
      ,[ДОДата]
      ,[ДОДатаРасч]
      ,[ДОКонтракт]
      ,[ДОПризнак]
      ,[ДОКлнСотр]
      ,[ДОКодКлн]
      ,[ДОДатаОпл]
      ,[ДОДатаОплРасч]
      ,[ДОДатаКод]
      ,[ДОТипПечати]
      ,[ДОКодПодр]
      ,[НашаФирма]
  FROM [history].[DKM_BASI]



      
      
--rollback tran
GO
/****** Object:  StoredProcedure [dbo].[InsertDolg]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[InsertDolg] @pCln as int, @pCode as bigint, @pNum as int,@pData as datetime,@pSaldo as money,@pNaklSum as money,@pNaklDolg as money
  AS
insert dolg (ДолгКлн,ДолгНакл,ДолгНаклНомер,ДолгДата,ДолгСальдо,ДолгНаклСумма,ДолгСумма) values (@pCln,@pCode,@pNum,@pData,ABS(@pSaldo),ABS(@pNaklSum),ABS(@pNaklDolg))
GO
/****** Object:  StoredProcedure [dbo].[CampinaGetSALOUTH]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 16-06-2014
-- Alter date:	09-09-2014
-- Description:	Вывод таблицы-списка документов SALOUTH (Фактические продажи) для SalesWork поставщик Campina
-- =============================================
CREATE PROCEDURE [dbo].[CampinaGetSALOUTH]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
--@startdate date ='2013-01-01', -- NULL,
--	@enddate date = '2013-12-31' 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	select 
		'Merch_ID' = '0',
		'Date' = cast(l.ОпДатаРасч as date),
		'Ol_Code' = case when l.ОпТип != 3 then convert(varchar(40), l.ОпКлн) + '/' + coalesce(convert(varchar(40), ka.КодАдресаДоставки), '0') else '0' end,
		'Order_No'	= '0',
		'Invoice_No' = l.ОпНаклКод,
		'Status' = '2',
		'DateTo' = cast(l.ОпДатаРасч as date),
		'Param1' = '1',
		'VatCalcMod' = '0',
		'PrintCheck' = '0',
		'PrintOrder' = '0',
		'DTLM' = @dt,
		'PrnChkOnly' = '0',
		'Doc_Type' = case
			when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
			then 2
			when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
			then 3
  			when l.ОпТип=3                                    --списание
  			then 4
  			when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
	  		then 6
  			when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
  			then 6
	  		else NULL
  			end,
  		'WAREH_CODE' = case 
				when l.ОпСкл = 65 or l.ОпСкл = 113 then 'SE_T'
				when l.ОпСкл = 102 or l.ОпСкл = 103 or l.ОпСкл = 127 or l.ОпСкл = 116 then 'SE_S'
				when l.ОпСкл = 110 or l.ОпСкл = 111  or l.ОпСкл = 128 or l.ОпСкл = 129 or l.ОпСкл = 61 or l.ОпСкл = 75  then 'SE_E'
			end
	from dbo.LIST_SKL as l
				left join dbo.KAT_KLN kl on l.ОпКлн=kl.КлнКод
				left join dbo.CLN_DKL cld on cld.КлнКод = kl.КлнКод 
				left join dbo.KLN_ADK ka on ka.КодАдресаДоставки = l.КодАдрДоставки
	where	cast(L.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
			l.ОпНаклКод in
				(
				select b.ОпНаклКод
				from (
						select 
							l.ОпНаклКод	 
							,'type_oper' = 
							case 
								when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
								then 2
								when l.ОпВозврат=0 and l.ОпТип=1 --приход от поставщика
								then 1
								when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
								then 3
								when l.ОпТип=3                                    --списание
								then 4
								when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
								then 31
								when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
								then 6
								when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
								then 6
								else NULL
							end 
						from LIST_SKL as l
								inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
              					INNER JOIN dbo.KAT_TVR kt ON H.ОпКодТов=Kt.ТовКод
              					inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
						where cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
								and Kt.ТовГрп in (174, 289) 
								and (Kt.БФ & 1 ) = 0  --Tvr не архив
								and trd.КодПоставщика not like ''
								and  l.ОпКлн not in (19358,19359,19360) --исключен клиент Найдено-потеряно 25/12/12
									and l.ОпКлнТип!=4 --исключаю движение м/у внутренними складами пп/рп 26/12/12
									and l.ОпСкл in -- (102, 103, 65, 110, 111)
									(  SELECT [СклКод] FROM [PR_Euras].[dbo].[KAT_SKL] where [СклГрп] in (1,3,5)) --фильтр по группе скдадов 25/12/12
					) as b
				WHERE b.type_oper in (2, 3, 4, 6)
				group by b.ОпНаклКод
			)

	order by L.ОпНаклКод asc
END
GO
/****** Object:  StoredProcedure [dbo].[CampinaGetSALINLD]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 16-06-2014
-- Description:	Вывод таблицы SALINLD (Поступления - табличная часть) для SalesWork поставщик Campina
-- =============================================
CREATE PROCEDURE [dbo].[CampinaGetSALINLD]
	-- Add the parameters for the stored procedure here
@startdate date = NULL,
	@enddate date = NULL
--@startdate date ='2013-01-01', -- NULL,
--	@enddate date = '2013-12-31' 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	select 
		'VAT' = kt.НДС,
		'LocalCode' = kt.ТовКод,
		'Price' = SUM(ROUND(h.[ОпЦена]/( 1+ ( kt.[НДС]/100 )), 4)),--ROUND(h.[ОпКол]*(h.[ОпЦена]/( 1+ ( kt.[НДС]/100 ))),4), -- Стоимость ( Без НДС )
		'Qty' = SUM(case
					when l.ОпТип = 1
						then 1
					when l.ОпТип = 2
						then -1
					else -1
				end
				* h.ОпКол),
		'Invoice_No' = l.ОпНаклКод,
		--'Lot_id' = '',
		'DTLM' = @dt,
		'Status' = '2'
	from dbo.LIST_SKL as l
			inner join dbo.HIST_SKL as h on l.ОпНаклКод = h.ОпНаклКод
			inner join dbo.KAT_TVR as kt on h.ОпКодТов = kt.ТовКод
			inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
	where	cast(L.ОпДатаРасч as date) BETWEEN @startDate and @endDate
			and (Kt.ТовГрп in (174, 289))
			and (Kt.БФ & 1 ) = 0  --Tvr не архив
			and trd.КодПоставщика not like ''
			and l.ОпНаклКод in
				(select b.ОпНаклКод
				from (
						select 
							l.ОпНаклКод	 
							,'type_oper' = 
							case 
								when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
								then 2
								when l.ОпВозврат=0 and l.ОпТип=1 --приход от поставщика
								then 1
								when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
								then 31
								when l.ОпТип=3                                    --списание
								then 4
								when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
								then 3
								when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
								then 6
								when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
								then 6
								else NULL
							end 
						from LIST_SKL as l
								inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
              					INNER JOIN dbo.KAT_TVR kt ON H.ОпКодТов=Kt.ТовКод
              					inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
						where cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
								and Kt.ТовГрп in (174, 289) 
								and (Kt.БФ & 1 ) = 0  --Tvr не архив
								and trd.КодПоставщика not like ''
								and l.ОпСкл in (102, 103, 65, 110, 111,128,129)
					) as b
				WHERE b.type_oper in (1, 3)
				group by b.ОпНаклКод)
	group by kt.ТовКод,l.ОпНаклКод,kt.НДС
END
GO
/****** Object:  StoredProcedure [dbo].[CampinaGetSALINH]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 09-09-2014
-- Description:	Вывод таблицы-списка документов SALINH (Приходы) для SalesWork поставщик Campina
-- =============================================
CREATE PROCEDURE [dbo].[CampinaGetSALINH]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
--@startdate date ='2013-01-01', -- NULL,
--	@enddate date = '2013-12-31' 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end

    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	select 
		'Date' = convert(varchar, cast(l.ОпДатаРасч as date)),
		'Invoice_No' = l.ОпНаклКод,
		'Status' = '2',
		'VatCalcMod' = '0',
		'DTLM' = @dt,
		'Doc_Type' = case
			when l.ОпВозврат=0 and l.ОпТип=1 --приход от поставщика
			then 1
			when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
			then 3
  			else ''
  			end,
  		'WAREH_CODE' = case 
				when l.ОпСкл = 65 then 'SE_T'
				when l.ОпСкл = 102 or l.ОпСкл = 103 then 'SE_S'
				when l.ОпСкл = 110 or l.ОпСкл = 111 or l.ОпСкл=128 or l.ОпСкл = 129 then 'SE_E'
			end
  		--'CUSTDOC_NO' = l.Основание
	from LIST_SKL as l
				left join dbo.KAT_KLN kl on l.ОпКлн=kl.КлнКод
				left join dbo.CLN_DKL cd on cd.КлнКод = kl.КлнКод 
				left join dbo.KLN_ADK ka on ka.КодАдресаДоставки=l.КодАдрДоставки
	where	cast(L.ОпДатаРасч as date) BETWEEN @startDate and @endDate
			and l.ОпНаклКод in
				(
				select b.ОпНаклКод
				from (
						select 
							l.ОпНаклКод	 
							,'type_oper' = 
							case 
								when l.ОпВозврат=0 and l.ОпКлнТип=2 and l.ОпТип=2 --отгрузка клиенту 
								then 10
								when l.ОпВозврат=0 and l.ОпТип=1 --приход от поставщика
								then 1
								when l.ОпВозврат=1 and l.ОпТип=1 and l.ОпКлнТип=2 -- возврат от клиента
								then 12
								when l.ОпТип=3                                    --списание
								then 13
								when l.ОпВозврат=1 and l.ОпТип=2 --возврат поставщику
								then 3
								when l.ОпТип=2 and l.ОпКлнТип=4 and l.ОпВозврат=0  --расход на другой склад
								then 15
								when l.ОпТип=1 and l.ОпКлнТип=4 and l.ОпВозврат=0  --приход с др склада
								then 16
								else ''
							end 
						from LIST_SKL as l
								inner join HIST_SKL h ON l.ОпНаклКод=H.ОпНаклКод
              					INNER JOIN dbo.KAT_TVR kt ON H.ОпКодТов=Kt.ТовКод
              					inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
						where cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
								and Kt.ТовГрп in (174, 289) 
								and (Kt.БФ & 1 ) = 0  --Tvr не архив
								and trd.КодПоставщика not like ''
								and l.ОпСкл in (102, 103, 65, 110, 111,128,129)
					) as b
				WHERE b.type_oper in (1, 3)
				group by b.ОпНаклКод)
			
	order by L.ОпНаклКод asc
END
GO
/****** Object:  StoredProcedure [dbo].[CampinaGetPARCOMP]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 11-06-2014
-- Description:	Вывод таблицы PARCOMP (Юр.лица) для SalesWork поставщик Campina
-- =============================================
CREATE PROCEDURE [dbo].[CampinaGetPARCOMP]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
--@startdate date ='2013-01-01', -- NULL,
--	@enddate date = '2013-12-31' 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end

	declare @dt varchar(14)

	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)--(case when LEN(@hh)<2 then ('0'+@hh) else @hh end) +':'+(case when LEN(@mm)<2 then ('0'+@mm) else @mm end)

	select 'PComp_Code' = cl.КлнКод, 
		'PC_Name' = cl.КлнНаим, 
		'DTLM' = @dt,
		'Status' = '2'
	from KAT_KLN as cl 
		--inner join KLN_ADK as tm on cl.КлнКод = tm.КодКлиента
		inner join (select distinct l.КодАдрДоставки, l.ОпКлн
									from dbo.LIST_SKL as l
			            				INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
	              						INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            			(Kt.ТовГрп in (174, 289))
					) as tt on cl.КлнКод = tt.ОпКлн  
	/*where 	tm.КодАдресаДоставки in (select distinct(l.КодАдрДоставки)
									from dbo.LIST_SKL as l
			            				INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
	              						INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            			(Kt.ТовГрп in (174, 289))
		        					)
		    or cl.КлнКод in (select distinct(l.ОпКлн)
									from dbo.LIST_SKL as l
			            				INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
	              						INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
					            			and (Kt.ТовГрп in (174, 289))
					            			and (l.КодАдрДоставки = 0)
		        					)*/
	group by cl.КлнКод, cl.КлнНаим
	order by cl.КлнКод asc
END
GO
/****** Object:  StoredProcedure [dbo].[CampinaGetOUTLETS]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 11-06-2014
-- Description:	Вывод таблицы OUTLETS (Торговые точки) для SalesWork поставщик Campina
-- =============================================
CREATE PROCEDURE [dbo].[CampinaGetOUTLETS]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
--@startdate date ='2013-01-01', -- NULL,
--	@enddate date = '2013-12-31' 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-14,@enddate)
	end
	
    declare @city varchar(20) = 'Екатеринбург'
	
	declare @dt varchar(14) = convert(varchar(20), cast(GETDATE() as date), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	select 'OL_ID'  = 0,
		'OL_Code' = coalesce(convert(varchar,cl.КлнКод) + '/' + convert(varchar,tm.КодАдресаДоставки), convert(varchar,cl.КлнКод) + '/0'), 
		'SubType_ID' = 0, 'Area_ID' = 0, 
		'Name' = REPLACE(RTRIM(cl.[КлнНаим]),'''','') + ', ' + RTRIM(cl.КлнФс),
		'Trade_Name' = REPLACE(RTRIM(cl.[КлнНаим]),'''',''),
		'Director' = '-',
		'Address' = case 
							when RTRIM(twn.ГородНаим) != '' and RTRIM(twn.ГородНаим) is not NULL
							then RTRIM(twn.ГородНаим) + ' г., ' + case 
																	when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
																	then RTRIM(tm.АдресДоставки)
																	else RTRIM(cld.КлнАдрес)
																end
							else RTRIM(twn2.ГородНаим) + ' г., ' +
								case 
									when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
									then RTRIM(tm.АдресДоставки)
									else RTRIM(cld.КлнАдрес)
								end
						end,
					--coalesce(twn.ГородНаим + ' г., ' + rtrim(tm.АдресДоставки), @city + ' г., ' + rtrim(cld.КлнАдрес)),
		'Deliv_Addr' =	case 
		--небольшая переделка от 30/01/15
							when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL and LEFT (tm.АдресДоставки,3) !='ул.'
							then RTRIM(tm.АдресДоставки) 
							when RTRIM(twn.ГородНаим) != '' and RTRIM(twn.ГородНаим) is not NULL
							then RTRIM(twn.ГородНаим) + ' г., ' + case 
																	when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
																	then RTRIM(tm.АдресДоставки)
																	else RTRIM(tm.Наим)
																end
							else RTRIM(twn2.ГородНаим) + ' г., ' +
								case 
									when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
									then RTRIM(tm.АдресДоставки)
									else RTRIM(tm.Наим)
								end
						end,
						--coalesce(RTRIM(twn.ГородНаим), RTRIM(twn2.ГородНаим)) + ' г., ' + coalesce(RTRIM(tm.АдресДоставки), RTRIM(tm.Наим)),
		'Telephone' = '-',
		'FAX' = '-',
		'EMail' = '-',
		'Accountant' = '-',
		'Acc_Phone' = '-',
		'M_Manage' = '-',
		'MM_Phone' = '-',
		'P_Manager' = '-',
		'Open_Time' = '00:00',
		'Close_Time' = '00:00',
		'Break_From' = '00:00',
		'Break_To' = '00:00',
		'ZKPO' = '-',
		'IPN' = coalesce(cld.ИНН, '-'),
		'VATN' = '-',
		'RR' = '-',
		'BankCode' = '-',
		'BankName' = '-',
		'BankAddr' = '-',
		'DTLM' = @dt,
		'Owner_ID' = '0',--case when tm.МнджКод != '' or tm.МнджКод != NULL then (RTRIM(sotr.СотрФамилия) + ' ' + RTRIM(sotr.СотрИмя) + ' ' + RTRIM(sotr.СотрОтчество)) else '0' end 'Owner_ID',
		'Status' = case when tm.АдресАрхив != '-1' then '2' else '9' end,
		'PComp_Code' = cl.КлнКод,
		'Lic_Usage' = '0' /*заполнять значением 0*/
	from KLN_ADK as tm
	inner join KAT_KLN as cl on cl.КлнКод = tm.КодКлиента
	left join CLN_DKL as cld on cl.КлнКод = cld.КлнКод
	--left join KAT_PPL as sotr on tm.МнджКод = sotr.СотрКод
	left join kat_twn as twn on twn.КодГород = tm.КодГорода
	left join kat_twn as twn2 on twn2.КодГород = cld.КодГород
	where	(RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL) and 
			tm.КодАдресаДоставки in (select distinct(l.КодАдрДоставки)
									from dbo.LIST_SKL as l
				            			INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
              							INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            			(Kt.ТовГрп in (174, 289)) and
					            			((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
	            							(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
            								(l.ОпТип = 3) or										 --списание
            								(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            								(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            								(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2)) --исключаем поставщик приход, возврат
            						) 
	union
	select 
		'OL_ID'  = 0,
		'OL_Code' = convert(varchar(40), cl.КлнКод) + '/' + convert(varchar(40), 0), 
		'SubType_ID' = 0, 
		'Area_ID' = 0, 
		'Name' = coalesce(REPLACE(RTRIM(cl.[КлнНаим]),'''',''), REPLACE(RTRIM(cld.КлнНаим),'''','')) + ', ' + RTRIM(cl.КлнФс),
		'Trade_Name' = coalesce(REPLACE(RTRIM(cl.[КлнНаим]),'''',''), REPLACE(RTRIM(cld.КлнНаим),'''','')),
		'Director' = '-',
		'Address' = case 
							when RTRIM(twn2.ГородНаим) != '' and RTRIM(twn2.ГородНаим) is not NULL
								then  RTRIM(twn2.ГородНаим) + ' г., ' + case 
																			when RTRIM(cld.КлнАдрес) != '' and RTRIM(cld.КлнАдрес) is not NULL
																			then RTRIM(cld.КлнАдрес)
																			else RTRIM(cld.КлнГрузАдрес)
																		end
							else @city  + ' г., ' + case 
														when RTRIM(cld.КлнАдрес) != '' and RTRIM(cld.КлнАдрес) is not NULL
														then RTRIM(cld.КлнАдрес)
														else RTRIM(cld.КлнГрузАдрес)
													end
						end,
					--coalesce(twn.ГородНаим + ' г., ' + rtrim(tm.АдресДоставки), @city + ' г., ' + rtrim(cld.КлнАдрес)),
		'Deliv_Addr' =	case 
							when RTRIM(twn2.ГородНаим) != '' and RTRIM(twn2.ГородНаим) is not NULL
								then  RTRIM(twn2.ГородНаим) + ' г., ' + case 
																			when RTRIM(cld.КлнАдрес) != '' and RTRIM(cld.КлнАдрес) is not NULL
																			then RTRIM(cld.КлнАдрес)
																			else RTRIM(cld.КлнГрузАдрес)
																		end
							else @city  + ' г., ' + case 
														when RTRIM(cld.КлнАдрес) != '' and RTRIM(cld.КлнАдрес) is not NULL
														then RTRIM(cld.КлнАдрес)
														else RTRIM(cld.КлнГрузАдрес)
													end
						end,
						--coalesce(RTRIM(twn.ГородНаим), RTRIM(twn2.ГородНаим)) + ' г., ' + coalesce(RTRIM(tm.АдресДоставки), RTRIM(tm.Наим)),
		--'Address' = coalesce(@city + ' г., ' + rtrim(cld.КлнАдрес), '-'),
		--'Deliv_Addr' = coalesce(@city + ' г., ' + rtrim(cld.КлнАдрес), '-'),
		'Telephone' = '-',
		'FAX' = '-',
		'EMail' = '-',
		'Accountant' = '-',
		'Acc_Phone' = '-',
		'M_Manage' = '-',
		'MM_Phone' = '-',
		'P_Manager' = '-',
		'Open_Time' = '00:00',
		'Close_Time' = '00:00',
		'Break_From' = '00:00',
		'Break_To' = '00:00',
		'ZKPO' = '-',
		'IPN' = coalesce(cld.ИНН, '-'),
		'VATN' = '-',
		'RR' = '-',
		'BankCode' = '-',
		'BankName' = '-',
		'BankAddr' = '-',
		'DTLM' = @dt,
		'Owner_ID' = '0',
		'Status' = '2', --case when tm.АдресАрхив != '-1' then '2' else '9' end,
		'PComp_Code' = cl.КлнКод,
		'Lic_Usage' = '0' /*заполнять значением 0*/
	from KAT_KLN as cl 
		left join CLN_DKL as cld on cl.КлнКод = cld.КлнКод
		left join kat_twn as twn2 on twn2.КодГород = cld.КодГород
	where 	((RTRIM(cld.КлнАдрес) != '' and RTRIM(cld.КлнАдрес) is not NULL) and (RTRIM(cld.КлнГрузАдрес) != '' and RTRIM(cld.КлнГрузАдрес) is not NULL)) and
			cl.КлнКод in (select distinct(l.ОпКлн)
									from dbo.LIST_SKL as l
				            			INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
              							INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            			(Kt.ТовГрп in (174, 289)) 
					            			and l.КодАдрДоставки = 0 and 
					            			((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
	            							(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
            								(l.ОпТип = 3) or										 --списание
            								(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            								(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            								(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2)) --исключаем поставщик приход, возврат
		        					)
	order by cl.КлнКод asc
END
GO
/****** Object:  StoredProcedure [dbo].[CampinaGetLOCLPROD2]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Ефремов
-- Create date: 16-06-2014
-- Description:	Вывод таблицы LPRODDET (Каталог товаров) для SalesWork поставщик Campina для проверки данных
-- =============================================
CREATE PROCEDURE [dbo].[CampinaGetLOCLPROD2]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
 
	select 
		'LocalCode' = nk.ТовКод,
		'TovArt -no out' =nk.ТовАрт,
		--'Code' = case 
		--			when trd.ТовВесНетто < 130 and u.УпакКоэф = 24
		--			then 'S' + trd.КодПоставщика
		--			else REPLACE(trd.КодПоставщика, 'М', 'M')
		--		 end,
		--старые требования по кодировке к йгуртам префикс s
		'Code' = REPLACE(trd.КодПоставщика, 'М', 'M'),
		'Name' = nk.ТовНаим,
		'ShortName' = '',
		'Weight' =	case 
						when nk.ТовКод = '1069363747' --не хватает количества знаков после запятой в ЛО, поэтому делаю программно
						then '0.25250'
						else trd.ТовВесНетто
					end,
		'Pack_Qty' = u.УпакКоэф,
		'IsMix' = '0',
		'Status' =	case 
						when (nk.БФ & 1 ) = 0
						then '2'
						else '9'
					end,
		'DTLM' = @dt
	from KAT_TVR as nk
		inner join TVR_DEF as trd on nk.ТовКод = trd.ТовКод
		left join KAT_UPK as u on nk.ТовУпак = u.УпакКод
		--left join SKU_BARCODE as sb on sb.SKUCODE = nk.ТовАрт
	where ТовГрп in (174, 289)
		--and (nk.БФ & 1 ) = 0  --Tvr не архив
		and trd.КодПоставщика not like ''
	order by nk.ТовГрп asc, nk.ТовАрт asc
END
GO
/****** Object:  StoredProcedure [dbo].[CampinaGetLOCLPROD]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 16-06-2014
-- Description:	Вывод таблицы LPRODDET (Каталог товаров) для SalesWork поставщик Campina
-- =============================================
CREATE PROCEDURE [dbo].[CampinaGetLOCLPROD]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
 
	select 
		'LocalCode' = nk.ТовКод,
		--'Code' = case 
		--			when trd.ТовВесНетто < 130 and u.УпакКоэф = 24
		--			then 'S' + trd.КодПоставщика
		--			else REPLACE(trd.КодПоставщика, 'М', 'M')
		--		 end,
		--старые требования по кодировке к йгуртам префикс s
		'Code' = REPLACE(trd.КодПоставщика, 'М', 'M'),
		'Name' = nk.ТовНаим,
		'ShortName' = '',
		'Weight' =	case 
						when nk.ТовКод = '1069363747' --не хватает количества знаков после запятой в ЛО, поэтому делаю программно
						then '0.25250'
						else trd.ТовВесНетто
					end,
		'Pack_Qty' = u.УпакКоэф,
		'IsMix' = '0',
		'Status' =	case 
						when (nk.БФ & 1 ) = 0
						then '2'
						else '9'
					end,
		'DTLM' = @dt
	from KAT_TVR as nk
		inner join TVR_DEF as trd on nk.ТовКод = trd.ТовКод
		left join KAT_UPK as u on nk.ТовУпак = u.УпакКод
		--left join SKU_BARCODE as sb on sb.SKUCODE = nk.ТовАрт
	where ТовГрп in (174, 289)
		--and (nk.БФ & 1 ) = 0  --Tvr не архив
		and trd.КодПоставщика not like ''
	order by nk.ТовГрп asc, nk.ТовАрт asc
END
GO
/****** Object:  StoredProcedure [dbo].[CampinaGetARSTOCK]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 16-06-2014
-- Description:	Вывод таблицы ARTSTOCK (Остатки) для SalesWorks поставщик Campina
-- =============================================
CREATE PROCEDURE [dbo].[CampinaGetARSTOCK]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
	--@startdate date ='2013-01-01', -- NULL,
	--@enddate date = '2013-12-31' 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-14,@enddate)
	end

    declare @dt varchar(14), @curdate date
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	set @curdate = @startdate
	
	declare @t table (
		[WAREH_CODE] varchar(10) NULL,
		[LOCALCODE] int NULL,
		[STOCK] float NULL,
		[DATE] varchar(20) NULL,
		[DTLM] varchar(14) NULL)

	
	WHILE @curdate <= @enddate
	BEGIN
		insert into @t (WAREH_CODE, LOCALCODE, STOCK, [DATE]) 
		select tmp.WAREH_CODE, tmp.LOCALCODE, SUM(tmp.STOCK), tmp.[DATE] --, tmp.[DTLM]
		from 
			(select  
				'WAREH_CODE' = convert(varchar,case 
								when pr_n.skl = 65 then 'SE_T'
								when pr_n.skl = 102 or pr_n.skl = 103 then 'SE_S'
								when pr_n.skl = 110 or pr_n.skl = 111 or pr_n.skl = 128 or pr_n.skl = 129 then 'SE_E'
							   end),
				'LOCALCODE' = pr_n.kod_tov,
				'STOCK' = isnull(pr_n.kolvo, 0),
				'DATE' = convert(varchar(20), @curdate, 104)--,
				--'DTLM' = @dt
	
			FROM (SELECT sklt.ОпСкл as skl, Kt.ТовКод as kod_tov
						,SUM((CASE WHEN HIST_SKL.ОпТип = 1 THEN 1 ELSE -1 END)*HIST_SKL.ОпКол) as kolvo
				FROM HIST_SKL 
						INNER JOIN KAT_TVR as kt ON  HIST_SKL.ОпКодТов=Kt.ТовКод
						INNER JOIN LIST_SKL as sklt ON HIST_SKL.ОпНаклКод=sklt.ОпНаклКод
						inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
				WHERE Kt.ТовГрп in (174, 289)
						and (Kt.БФ & 1 ) = 0  --Tvr не архив
						and trd.КодПоставщика not like ''
						and (cast(sklt.ОпДатаРасч as date) < @curdate)
						and sklt.ОпСкл in (102, 103, 65, 110, 111,128)
				GROUP BY sklt.ОпСкл, Kt.ТовКод, kt.ТовНаим) PR_n 
			) as tmp
		group by tmp.WAREH_CODE, tmp.LOCALCODE, tmp.[DATE]
		
		set @curdate = DATEADD(DAY, 1, @curdate)
	END
	
	update @t set [DTLM] = @dt
	
	select *
	from @t
END
GO
/****** Object:  View [cube].[D_ORGadk]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [cube].[D_ORGadk]
as
SELECT [КодКлн_КодАдрДоставки]
      ,[КлнКод]
      ,[КлнНаим]
      ,[ГрпСотрНаим]
      ,[КлнПользКод]
      ,[СотрФамилияИмя]
      ,[СотрОтчество]
      ,[КодГлКлн]
      ,[ГлКлнНаим]
      ,[ГрпКлнНаим]
      ,[ГородНаим]
      ,[КодАдрДоставки]
      ,[АдрДоставки]
      ,[ТипКлиента]
      ,[ПолныйАдрес]
      ,[ПолнАдресХеш]
  FROM [dbo].[D_ORGadk]
GO
/****** Object:  View [dbo].[M_NAKL_TTN]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  VIEW [dbo].[M_NAKL_TTN]
AS
select d_nakl.НаклНомер, d_nakl.НаклДатаРасч, ttn_dkm.НомерТТН,
	 ttn_dkm.ДатаРасч, d_nakl.НаклСклНаим from ttn_nkl
inner join ttn_dkm on ttn_nkl.КодТТН = ttn_dkm.КодТТН
inner join d_nakl on d_nakl.НаклСклКод = ttn_nkl.КодСкл
	and d_nakl.НаклНомер = ttn_nkl.НомДок
	and d_nakl.НаклТип = ttn_nkl.ТипОпер
where (select count(*) from ttn_nkl
		where d_nakl.НаклСклКод = ttn_nkl.КодСкл
		and d_nakl.НаклНомер = ttn_nkl.НомДок
		and d_nakl.НаклТип = ttn_nkl.ТипОпер) > 1
GO
/****** Object:  StoredProcedure [dbo].[DolgNaklSums]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[DolgNaklSums] 
@pCln int, @pMgr char(30), @pDept char(32)
AS
delete from DOLG_NAKL
INSERT DOLG_NAKL
SELECT     dbo.DOLG.ДолгНакл, dbo.DOLG.ДолгНаклНомер,dbo.DOLG.ДолгКлн, dbo.D_ORG.СотрФамилияИмя AS СотрФИ, 
dbo.D_ORG.ГрпСотрНаим, dbo.DOLG.ДолгДата, 
ABS(dbo.DOLG.ДолгСумма) AS ДолгСумма, ABS(dbo.DOLG.ДолгНаклСумма) AS ДолгНаклСумма, 
ABS(dbo.DOLG.ДолгСрок) AS ДолгСрок
FROM  dbo.DOLG INNER JOIN dbo.D_ORG ON dbo.DOLG.ДолгКлн = dbo.D_ORG.КлнКод
WHERE ДолгКлн=@pCln and СотрФамилияИмя=@pMgr and ГрпСотрНаим=@pDept
GO
/****** Object:  StoredProcedure [dbo].[DolgDeptSums_old]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[DolgDeptSums_old]
@pSum money, @pSrok int 
AS
delete from DOLG_DEPT
INSERT DOLG_DEPT
SELECT     TOP 100 PERCENT dbo.KAT_PDR.ПдрКод, dbo.D_ORG.ГрпСотрНаим, ABS(SUM(dbo.DOLG.ДолгСумма)) AS ОтделСумма, 
                      ABS(SUM(dbo.DOLG.ДолгСумма * dbo.DOLG.ДолгСрок)) AS ОтделСуммаПер
FROM         dbo.DOLG INNER JOIN
                      dbo.D_ORG ON dbo.DOLG.ДолгКлн = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.KAT_PDR ON dbo.D_ORG.ГрпСотрНаим = dbo.KAT_PDR.ПдрНаим INNER JOIN
                      dbo.DOLG_SELMGR ON dbo.D_ORG.СотрФамилияИмя = dbo.DOLG_SELMGR.ВбрСотрНаим
WHERE ABS(ДолгСумма)>=@pSum and ABS(ДолгСрок)>=@pSrok
GROUP BY dbo.KAT_PDR.ПдрКод, dbo.D_ORG.ГрпСотрНаим
GO
/****** Object:  StoredProcedure [dbo].[DolgDeptSums]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[DolgDeptSums]
@pSum money, @pSrok int 
AS
delete from DOLG_DEPT
INSERT DOLG_DEPT
SELECT     TOP 100 PERCENT dbo.KAT_PDR.ПдрКод, dbo.D_ORG.ГрпСотрНаим, ABS(SUM(dbo.DOLG.ДолгСумма)) AS ОтделСумма, 
                      ABS(SUM(dbo.DOLG.ДолгСумма * dbo.DOLG.ДолгСрок)) AS ОтделСуммаПер
FROM         dbo.DOLG INNER JOIN
                      dbo.D_ORG ON dbo.DOLG.ДолгКлн = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.KAT_PDR ON dbo.D_ORG.ГрпСотрНаим = dbo.KAT_PDR.ПдрНаим INNER JOIN
                      dbo.DOLG_SELMGR ON dbo.D_ORG.СотрФамилияИмя = dbo.DOLG_SELMGR.ВбрСотрНаим
WHERE ABS(ДолгСумма)>=@pSum and ABS(ДолгСрок)>=@pSrok
GROUP BY dbo.KAT_PDR.ПдрКод, dbo.D_ORG.ГрпСотрНаим
GO
/****** Object:  StoredProcedure [dbo].[DolgClnSums]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[DolgClnSums]
  @pSum money, @pSrok int
 AS
delete from DOLG_CLN
insert DOLG_CLN
SELECT   TOP 100 PERCENT dbo.D_ORG.КлнКод, dbo.D_ORG.КлнНаим, dbo.D_ORG.СотрФамилияИмя, dbo.D_ORG.ГрпСотрНаим, 
                      ABS(SUM(dbo.DOLG.ДолгСумма)) AS КлнСумма, ABS(SUM(dbo.DOLG.ДолгСумма * dbo.DOLG.ДолгСрок)) AS КлнСуммаПер
FROM         dbo.DOLG INNER JOIN
                      dbo.D_ORG ON dbo.DOLG.ДолгКлн = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.DOLG_SELMGR ON dbo.D_ORG.СотрФамилияИмя = dbo.DOLG_SELMGR.ВбрСотрНаим
where ABS(ДолгСумма)>=@pSum and ABS(ДолгСрок)>=@pSrok 
GROUP BY dbo.D_ORG.КлнКод, dbo.D_ORG.КлнНаим, dbo.D_ORG.СотрФамилияИмя, dbo.D_ORG.ГрпСотрНаим
GO
/****** Object:  StoredProcedure [dbo].[CalcOst]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[CalcOst] AS
declare @Ost as cursor 
declare @OTov bigint, @ODate bigint, @OSklad int,@ODateReal datetime
declare @OstKol numeric (18,3),@OKol numeric (18,3)

declare @CurKol numeric (18,3)
declare @IsOFetch decimal
declare @CurTov bigint,@CurSklad bigint

update f_ost set ОстКол=0

set @CurTov=0
set @CurSklad=0
set @CurKol=0

set @Ost=cursor for select f_ost.ОстТов,f_ost.ОстСкл, f_ost.ОстДата,d_dates.ДатыРасч,
ОстКол,ОстКолТек
from f_ost join d_dates on f_ost.ОстДата=d_dates.ДатыКод 
order by f_ost.ОстТов,f_ost.ОстСкл,d_dates.ДатыРасч

open @Ost
fetch next from @Ost into @OTov, @OSklad, @ODate, @ODateReal,@OstKol,@OKol

set @IsOFetch = @@FETCH_STATUS
if @IsOFetch=0
  begin
    set @CurTov=@OTov
    set @CurSklad=@OSklad
  end
while @IsOFetch = 0
  begin
    if @CurTov=@OTov and @CurSklad=@OSklad
--старый разрез
      begin
--вычислим остаток суммированием старого остатка с новыми данными
        set @CurKol= @CurKol + @OKol
--запомним очередной остаток
        update f_ost set ОстКол=@CurKol where ОстТов=@OTov and ОстСкл=@OSklad and ОстДата=@ODate
--          where current of @Ost    
      end
    else
      begin
--новый разрез обнулим тек остатки
        set @CurKol=0
--запомним новый разрез
        set @CurTov=@OTov
        set @CurSklad=@OSklad 
--вычислим новые остатки
        set @CurKol= @OKol
--пишем новые остатки
        update f_ost set ОстКол=@CurKol where ОстТов=@OTov and ОстСкл=@OSklad and ОстДата=@ODate
--          where current of @Ost    
      end
    fetch next from @Ost into @OTov, @OSklad, @ODate, @ODateReal, @OstKol, @OKol
    set @IsOFetch = @@FETCH_STATUS
  end
GO
/****** Object:  StoredProcedure [dbo].[CalcKrt]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[CalcKrt] AS
declare @CurHex as varchar(8)
declare @CurDgt as bigint
declare @Val as cursor
declare @VObject as int,@VKarta as char(1800)
declare @Count as integer, @CurList as integer
declare @Column as integer

set @Val=cursor for select КЗОбъект,КЗКарта from krt_val where КЗКодЗп=1
open @Val
fetch next from @Val into @VObject,@VKarta
while (@@FETCH_STATUS=0)
  begin
    set @Count=25
    set @CurHex=RTrim(LTrim(SubString(@VKarta,@Count,2)))
    set @CurDgt=dbo.TransHex2Int(@CurHex)
    if @CurDgt>0
      begin        
        select @CurList=КртКод from d_krt where ЛстКод=1 and ЛЗКод=@CurDgt
        insert f_krt (КртКлн,КртКод) values(@VObject,@CurList)
      end
    set @Count=@Count+2
    set @Column=2
    while(@Column<10)
      begin
        set @CurHex=RTrim(LTrim(SubString(@VKarta,@Count,8)))
        set @CurDgt=dbo.TransHex2Int(@CurHex)
        if @CurDgt>0
          begin        
            select @CurList=КртКод from d_krt where ЛстКод=@Column and ЛЗКод=@CurDgt
            insert f_krt (КртКлн,КртКод) values(@VObject,@CurList)
          end
        set @Count=@Count+8
        set @Column=@Column+1
      end
    fetch next from @Val into @VObject,@VKarta
  end
GO
/****** Object:  StoredProcedure [dbo].[calcDebetSaldo]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[calcDebetSaldo] AS
declare @Debet as cursor 
declare @ClnCode bigint, @Date datetime, @Tov money, @Plat money, @Saldo money
declare @CurCln bigint, @CurSum money
set DATEFIRST 1
set @CurCln=0
set @CurSum=0
set @Debet=cursor for select ДбтКлнКод,ДбтДата,ДбтТовар,ДбтПлат,ДбтСальдо
from F_DEBET join d_dates on f_debet.ДбтДата=d_dates.ДатыКод
order by ДбтКлнКод,ДатыРасч
open @Debet
fetch next from @Debet into @ClnCode,@Date,@Tov,@Plat,@Saldo
while @@FETCH_STATUS=0
  begin
    if @CurCln<>@ClnCode
      begin
        set @CurCln=@ClnCode
        update F_DEBET SET ДбтСальдо=@Tov+@Plat WHERE ДбтКлнКод=@ClnCode AND ДбтДата=@Date
        set @CurSum=@Tov+@Plat
      end
    else
      begin
        update F_DEBET SET ДбтСальдо=@CurSum+@Tov+@Plat WHERE ДбтКлнКод=@ClnCode AND ДбтДата=@Date
        set @CurSum=@CurSum+@Tov+@Plat
      end
    fetch next from @Debet into @ClnCode,@Date,@Tov,@Plat,@Saldo
  end
GO
/****** Object:  StoredProcedure [dbo].[CalcDateDimension]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE procedure [dbo].[CalcDateDimension] as
declare @Dates as cursor 
declare @FWeek varchar(5),@LWeek varchar(5)
declare @FDay datetime,@LDay datetime
declare @State integer,@CurDate datetime
declare @Day int, @Month int,@Year int,@Week char(16),@WeekPart char(16), @WeekCode bigint,@WeekPartCode bigint,@Code bigint
declare @WeekCount int,@WeekPartCount int
declare @StrDate varchar(16)
set DATEFIRST 1
set @WeekCount=1
set @WeekPartCount=1
set @Dates=cursor for select ДатыДень,ДатыМесяц,ДатыГод,ДатыНеделя,ДатыНеделяДрб,ДатыКодНеделя,ДатыКодНеделяДрб from D_DATES
group by ДатыГод,ДатыМесяц,ДатыДень,ДатыНеделя,ДатыНеделяДрб,ДатыКодНеделя,ДатыКодНеделяДрб
open @Dates
fetch next from @Dates into @Day,@Month,@Year,@Week,@WeekPart,@WeekCode,@WeekPartCode
while @@FETCH_STATUS=0
  begin
    set @StrDate=CAST(@Day as char(2))+'.'+CAST(@Month as char(2))+'.'+CAST(@Year as char(4))
    set @CurDate=CONVERT(datetime,@StrDate,104)
    set @FDay=DATEADD(dd,-DATEPART(dw,@CurDate)+1,@CurDate)
    set @LDay=DATEADD(dd,7-DATEPART(dw,@CurDate),@CurDate)
    set @FWeek=CAST(DatePart(dd,@FDay) AS varchar)+'.'+CAST(DatePart(mm,@FDay) AS varchar)
    set @LWeek=CAST(DatePart(dd,@LDay) AS varchar)+'.'+CAST(DatePart(mm,@LDay) AS varchar)        
    if DATEPART(mm,@FDay)<>DATEPART(mm,@LDay)
      begin
        if DATEPART(mm,@FDay)=@Month
          begin
            set @State=1
          end
        else
          begin
            set @State=2
          end
      end
    else
      begin
        set @State=0
      end
    set @WeekPartCount=DatePart(yyyy,@FDay)*100000+DatePart(mm,@FDay)*1000+DatePart(dd,@FDay)*10+@State
    set @WeekCount=DatePart(yyyy,@FDay)*10000+DatePart(mm,@FDay)*100+DatePart(dd,@FDay)
    if @State=0
      begin
         update D_DATES set ДатыНеделяДрб=@FWeek+'_'+@LWeek, ДатыНеделя=@FWeek+'_'+@LWeek,ДатыКодНеделя=@WeekCount,ДатыКодНеделяДрб=@WeekPartCount
            from D_DATES where ДатыГод=@Year and ДатыМесяц=@Month and ДатыДень=@Day
      end
    else
      begin
         update D_DATES set ДатыНеделяДрб=@FWeek+'_'+@LWeek+'_'+CAST(@State as varchar), ДатыНеделя=@FWeek+'_'+@LWeek,ДатыКодНеделя=@WeekCount,ДатыКодНеделяДрб=@WeekPartCount
            from D_DATES where ДатыГод=@Year and ДатыМесяц=@Month and ДатыДень=@Day
      end    
    fetch next from @Dates into @Day,@Month,@Year,@Week,@WeekPart,@WeekCode,@WeekPartCode
  end
GO
/****** Object:  StoredProcedure [dbo].[calculate_KGVT]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[calculate_KGVT]
as
truncate table calculated_kgvt;

insert into calculated_kgvt
select 
[dst]
      ,[ТовКод]
      ,[КлнКод]
      ,isnull([КодАдресаДоставки],0)
      
 from kgvt
where dst in (2/*,1*/) --dst 0-не доступен,1-доступен, 2 - обязателен
GO
/****** Object:  StoredProcedure [dbo].[CalcDebetSrokFast]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[CalcDebetSrokFast] AS
declare @Saldo as cursor 
declare @SCln bigint, @SDate bigint, @SSaldo money,@SDateReal datetime
declare @PStream as cursor
declare @PKol money, @PDate bigint, @PDateReal datetime, @PType int
declare @IsP int, @IsS int
declare @SumPer money,@Sum money, @Ost money
declare @IsRec int
declare @PrevCln bigint,@PrevSaldo money
declare @CurSum money
--declare @CurSrok int

set DATEFIRST 1
set @PrevCln=0
set @PrevSaldo=Null
set @IsRec=0
set @Saldo=cursor fast_forward for select ДбтКлнКод,ДбтДата,ДатыРасч,ДбтСальдо
from F_DEBET_SROK join d_dates on f_debet_srok.ДбтДата=d_dates.ДатыКод
order by ДбтКлнКод,ДатыРасч
open @Saldo
fetch next from @Saldo into @SCln,@SDate,@SDateReal,@SSaldo
set @IsS=@@FETCH_STATUS
--цикл по сальдо в порядке клиентов,дат
while @IsS=0
  begin
    set @Ost=Abs(@SSaldo)
    if (@SCln<>@PrevCln or @PrevSaldo<>@SSaldo)
--разрез сменился-вычислим предисторию 
      begin 
        if CURSOR_STATUS('variable','@PStream')>=0
          begin
            close @PStream
          end
        if (@SSaldo<>0)
          begin
            if (@SSaldo<0)
              begin
                set @PStream=cursor fast_forward for select Дата,ДатыРасч,Кол from f_stream
                  join d_dates on f_stream.Дата=d_dates.ДатыКод
                  where (Тип=2 or Тип=4 or Тип=6) and Клн=@SCln and ДатыРасч<=@SDateReal
                  order by ДатыРасч desc
              end
            else if (@SSaldo>0)
              begin
                set @PStream=cursor  fast_forward for select Дата,ДатыРасч,Кол from f_stream
                  join d_dates on f_stream.Дата=d_dates.ДатыКод
                  where (Тип=1 or Тип=3 or Тип=5) and Клн=@SCln and ДатыРасч<=@SDateReal
                  order by ДатыРасч desc
              end 
            open @PStream
            fetch next from @PStream into @PDate,@PDateReal,@PKol
            set @IsP=@@FETCH_STATUS
         end
       else
--гипотет случай нулевого сальдо
         begin
            set @IsP=-1
            set @PDate=0
            set @PDateReal=0
            set @PKol=0
         end   
       set @PrevCln=@SCln
       set @PrevSaldo=@SSaldo
--найдем составляющие сальдо в данном разрезе
        set @SumPer=0
        set @Sum=0
        delete from f_debet_srok_supp
        set @CurSum=0
--        set @CurSrok=1
--если сальдо отриц-ищем последние приходы на его сумм
        if (@SSaldo<>0)
          begin        
            while (@Ost>0)
              begin
                if Abs(@PKol)>=Abs(@Ost)
                  begin
                    insert f_debet_srok_supp (ЧастьСальдо,ДатаЧастиСальдо,СрокДоИзмСальдо) values(@Ost,@PDateReal,datediff(dd,@PDateReal,@SDateReal))
                    select  @CurSum=Abs(Sum(ЧастьСальдо)),@SumPer=Abs(Sum(ЧастьСальдо*СрокДоИзмСальдо)) from f_debet_srok_supp
                    set @SumPer=@SumPer+@CurSum
                    set @Sum=Abs(@CurSum)
--                    set @SumPer=@SumPer+Abs(@Ost)*DateDiff(d,@PDateReal,@SDateReal)
--                    set @Sum=@Sum+Abs(@Ost)
                    set @Ost=0
                  end
                else
                  begin
                    insert f_debet_srok_supp (ЧастьСальдо,ДатаЧастиСальдо,СрокДоИзмСальдо) values(@PKol,@PDateReal,datediff(dd,@PDateReal,@SDateReal))
                    select @CurSum=Abs(Sum(ЧастьСальдо)),@SumPer=Abs(Sum(ЧастьСальдо*СрокДоИзмСальдо)) from f_debet_srok_supp
                    set @SumPer=@SumPer+@CurSum
                    set @Sum=Abs(@CurSum)
--                    set @SumPer=@SumPer+Abs(@PKol)*DateDiff(d,@PDateReal,@SDateReal)
--                    set @Sum=@Sum+Abs(@PKol)
                    set @Ost=Abs(@Ost)-Abs(@PKol)
                 end
                 fetch next from @PStream into @PDate,@PDateReal,@PKol              
                 set @IsP=@@FETCH_STATUS
                 if (@IsP<>0) set @Ost=-0
                 set @IsRec=1 
              end
          end
        else
          begin
            set @IsRec=0 
          end
      end
--старый разрез-считаем сумму
    else
      begin
----        set @SumPer=@SumPer+Abs(@PKol)*DateDiff(d,@PDateReal,@SDateReal)
--        select @CurSum=Sum(ЧастьСальдо),@SumPer=Sum(ЧастьСальдо*СрокДоИзмСальдо) from f_debet_srok_supp
--        set @SumPer=@SumPer+@CurSrok*@CurSum
--        set @Sum=@Sum+@PKol
        set @SumPer=@SumPer+Abs(@SSaldo)
        set @Sum=Abs(@SSaldo)
--        set @CurSrok=@CurSrok+1         
      end 
    if (@IsRec=1)
      begin
        update f_debet_srok set ДбтСумПер=@SumPer,ДбтСум=@Sum from f_debet_srok
          where ДбтКлнКод=@SCln and ДбтДата=@SDate
      end
    fetch next from @Saldo into @SCln,@SDate,@SDateReal,@SSaldo
    set @IsS=@@FETCH_STATUS
  end
GO
/****** Object:  StoredProcedure [dbo].[calcDebetSaldoSrok]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[calcDebetSaldoSrok] AS
declare @Debet as cursor 
declare @ClnCode bigint, @Date bigint, @Tov money, @Plat money, @Saldo money
declare @CurCln bigint, @CurSum money
set DATEFIRST 1
set @CurCln=0
set @CurSum=0
set @Debet=cursor for select ДбтКлнКод,ДбтДата,ДбтТовар,ДбтПлат,ДбтСальдо
from F_DEBET_SROK join d_dates on f_debet_srok.ДбтДата=d_dates.ДатыКод
order by ДбтКлнКод,ДатыРасч
open @Debet
fetch next from @Debet into @ClnCode,@Date,@Tov,@Plat,@Saldo
while @@FETCH_STATUS=0
  begin
    if @CurCln<>@ClnCode
      begin
        set @CurCln=@ClnCode
        update F_DEBET_SROK SET ДбтСальдо=@Tov-@Plat WHERE ДбтКлнКод=@ClnCode AND ДбтДата=@Date
        set @CurSum=@Tov-@Plat
      end
    else
      begin
        update F_DEBET_SROK SET ДбтСальдо=@CurSum+@Tov-@Plat WHERE ДбтКлнКод=@ClnCode AND ДбтДата=@Date
        set @CurSum=@CurSum+@Tov-@Plat
      end
    fetch next from @Debet into @ClnCode,@Date,@Tov,@Plat,@Saldo
  end
GO
/****** Object:  View [dbo].[v_DolgSaldo2]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_DolgSaldo2]
AS
SELECT     dbo.v_DolgSaldo1.Клн, dbo.v_DolgSaldo1.Дата, dbo.D_DATES.ДатыКод AS ДатаКод
FROM         dbo.v_DolgSaldo1 INNER JOIN
                      dbo.D_DATES ON dbo.v_DolgSaldo1.Дата = dbo.D_DATES.ДатыРасч
GO
/****** Object:  StoredProcedure [dbo].[DolgMgrSums_old]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[DolgMgrSums_old] 
@pSum money, @pSrok int
AS
delete from DOLG_MGR
insert DOLG_MGR
SELECT     TOP 100 PERCENT dbo.KAT_PPL.СотрКод, dbo.D_ORG.СотрФамилияИмя, dbo.D_ORG.ГрпСотрНаим, ABS(SUM(dbo.DOLG.ДолгСумма)) 
                      AS МнджСумма, ABS(SUM(dbo.DOLG.ДолгСумма * dbo.DOLG.ДолгСрок)) AS МнджСуммаПер
FROM         dbo.DOLG INNER JOIN
                      dbo.D_ORG ON dbo.DOLG.ДолгКлн = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.KAT_PPL ON RTRIM(LTRIM(dbo.KAT_PPL.СотрФамилия)) + ' ' + RTRIM(LTRIM(dbo.KAT_PPL.СотрИмя)) 
                      = RTRIM(LTRIM(dbo.D_ORG.СотрФамилияИмя)) INNER JOIN
                      dbo.DOLG_SELMGR ON dbo.D_ORG.СотрФамилияИмя = dbo.DOLG_SELMGR.ВбрСотрНаим
WHERE ABS(ДолгСумма)>=@pSum and ABS(ДолгСрок)>=@pSrok
GROUP BY dbo.KAT_PPL.СотрКод, dbo.D_ORG.СотрФамилияИмя, dbo.D_ORG.ГрпСотрНаим
GO
/****** Object:  StoredProcedure [dbo].[DolgMgrSums]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[DolgMgrSums] 
@pSum money, @pSrok int
AS
delete from DOLG_MGR
insert DOLG_MGR
SELECT     TOP 100 PERCENT dbo.KAT_PPL.СотрКод, dbo.D_ORG.СотрФамилияИмя, dbo.D_ORG.ГрпСотрНаим, ABS(SUM(dbo.DOLG.ДолгСумма)) 
                      AS МнджСумма, ABS(SUM(dbo.DOLG.ДолгСумма * dbo.DOLG.ДолгСрок)) AS МнджСуммаПер
FROM         dbo.DOLG INNER JOIN
                      dbo.D_ORG ON dbo.DOLG.ДолгКлн = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.KAT_PPL ON RTRIM(LTRIM(dbo.KAT_PPL.СотрФамилия)) + ' ' + RTRIM(LTRIM(dbo.KAT_PPL.СотрИмя)) 
                      = RTRIM(LTRIM(dbo.D_ORG.СотрФамилияИмя)) INNER JOIN
                      dbo.DOLG_SELMGR ON dbo.D_ORG.СотрФамилияИмя = dbo.DOLG_SELMGR.ВбрСотрНаим
WHERE ABS(ДолгСумма)>=@pSum and ABS(ДолгСрок)>=@pSrok
GROUP BY dbo.KAT_PPL.СотрКод, dbo.D_ORG.СотрФамилияИмя, dbo.D_ORG.ГрпСотрНаим
GO
/****** Object:  StoredProcedure [dbo].[InsertDebetSrokAllQueryInsert]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[InsertDebetSrokAllQueryInsert] @DCln as int,@FDate as datetime,@LDate as datetime,@PrevSaldo as money,@PrevSP as money,@PrevS as money
  AS 
insert into f_debet_srok (ДбтКлнКод,ДбтДата,ДбтСальдо,ДбтСумПер,ДбтСум) 
  select @DCln,ДатыКод,@PrevSaldo,@PrevSP,@PrevS from d_dates where ДатыРасч>@FDate and ДатыРасч<@LDate
GO
/****** Object:  View [edi].[SKU_BARCODE]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [edi].[SKU_BARCODE]
AS
SELECT    t.ТовКод, sb.SKUCODE, sb.UPC, t.ТовНаим
FROM         dbo.KAT_TVR AS t INNER JOIN
                      dbo.SKU_BARCODE AS sb ON t.ТовАрт = sb.SKUCODE
  union                    
SELECT     t.ТовКод, sb.SKUCODE,altSh.ШК,  t.ТовНаим
FROM         dbo.KAT_TVR AS t INNER JOIN
                      dbo.SKU_BARCODE AS sb ON t.ТовАрт = sb.SKUCODE
                      INNER JOIN dbo.tvr_ksh altSh  on  t.ТовКод=altSh.ТовКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "t"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "sb"
            Begin Extent = 
               Top = 6
               Left = 245
               Bottom = 110
               Right = 414
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'edi', @level1type=N'VIEW',@level1name=N'SKU_BARCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'edi', @level1type=N'VIEW',@level1name=N'SKU_BARCODE'
GO
/****** Object:  View [dbo].[v_F_VOZVR_F_RASH]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* */
/* Мезенцев А.В. 03.08.04 выборка из видов F_VOZVR и F_RASH */
/* */ 
CREATE VIEW [dbo].[v_F_VOZVR_F_RASH] AS
SELECT 
dbo.F_VOZVR.ОпКодТов as "КодТов",
dbo.F_VOZVR.ОпКодКлн as "КодКлн",
dbo.F_VOZVR.ОпДата as "ДатаКод",
dbo.F_VOZVR.ОпДатаРасч as "ДатаРасч",

0 as "КолПрих",
0 as "СтоимПрих",
0 as "ДопПризнак",
0 as "ДопПоле",
(-1)*dbo.F_VOZVR.КолПрих as "КолПрихМинус",
(-1)*dbo.F_VOZVR.СтоимПрих as "СтоимПрихМинус"
FROM
dbo.F_VOZVR
WHERE
(dbo.F_VOZVR.ОпДатаРасч BETWEEN 
    CONVERT(DATETIME, '2004-01-01 00:00:00', 102) AND 
    CONVERT(DATETIME, '2004-07-26 00:00:00', 102))AND
(dbo.F_VOZVR.КолПрих<>0)AND
(dbo.F_VOZVR.СтоимПрих<>0)
UNION
SELECT 
dbo.F_RASH.ОпКодТов as "КодТов",
dbo.F_RASH.ОпКодКлн as "КодКлн",
dbo.F_RASH.ОпДата as "ДатаКод",
dbo.F_RASH.ОпДатаРасч as "ДатаРасч",

dbo.F_RASH.ОпКол as "КолПрихМинус",
dbo.F_RASH.ОпСтоим as "СтоимПрихМинус",
0 as "ДопПризнак",
0 as "ДопПоле",

0 as "КолПрихМинус",
0 as "СтоимПрихМинус"
FROM
dbo.F_RASH
WHERE
(dbo.F_RASH.ОпДатаРасч BETWEEN 
    CONVERT(DATETIME, '2004-01-01 00:00:00', 102) AND 
    CONVERT(DATETIME, '2004-07-26 00:00:00', 102)) AND
(dbo.F_RASH.ОпКол<>0)AND
(dbo.F_RASH.ОпСтоим<>0)
GO
/****** Object:  View [dbo].[v_DolgMgr]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_DolgMgr]
AS
SELECT     TOP 100 PERCENT dbo.KAT_PPL.СотрКод, dbo.D_ORG.СотрФамилияИмя, dbo.D_ORG.ГрпСотрНаим, ABS(SUM(dbo.DOLG.ДолгСумма)) 
                      AS МнджСумма, ABS(SUM(dbo.DOLG.ДолгСумма * dbo.DOLG.ДолгСрок)) AS МнджСуммаПер
FROM         dbo.DOLG INNER JOIN
                      dbo.D_ORG ON dbo.DOLG.ДолгКлн = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.KAT_PPL ON RTRIM(LTRIM(dbo.KAT_PPL.СотрФамилия)) + ' ' + RTRIM(LTRIM(dbo.KAT_PPL.СотрИмя)) 
                      = RTRIM(LTRIM(dbo.D_ORG.СотрФамилияИмя)) INNER JOIN
                      dbo.DOLG_SELMGR ON dbo.D_ORG.СотрФамилияИмя = dbo.DOLG_SELMGR.ВбрСотрНаим
GROUP BY dbo.KAT_PPL.СотрКод, dbo.D_ORG.СотрФамилияИмя, dbo.D_ORG.ГрпСотрНаим
GO
/****** Object:  StoredProcedure [edi].[Update_Order_Rec]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[Update_Order_Rec]	--119	

as


  update  kOr
  set  kOr.RECADV_id =  k.[id],  kOr.[RECADV]=k.[body]
 /* SELECT  k.[id] recadv_id 
      , k.body.value('(/eDIMessage/receivingAdvice/originOrder/@number)[1]', 'varchar(max)') AS outnum
      , k.Box 
      ,stz.[id] order_id    
      ,k.[body] bdesadv
      ,kOr.[body] border
      ,stz.[ordsp_time]
      , k.body.value('(/eDIMessage/receivingAdvice/@date)[1]', 'date') AS DataRecadv -- 'varchar(max)'*/
     -- , DATEDIFF(dd,cast (k.[stamp] as date ), k.body.value('(/eDIMessage/receivingAdvice/@date)[1]', 'date')) AS hdes
  FROM [PR_Euras].[edi].[Kontur] k
  inner join [PR_Euras].[dbo].[KonturOrderStat] stz on  k.body.value('(/eDIMessage/receivingAdvice/originOrder/@number)[1]', 'varchar(max)') =stz.[outnum]
  and k.Box=stz.Box
  inner join [PR_Euras].[edi].[Kontur] kOr on stz.[id]=kOr.[id]
  where k.[DocumentType] ='Recadv'
  and abs(DATEDIFF(dd,k.[stamp]  , k.body.value('(/eDIMessage/receivingAdvice/@date)[1]', 'date')))<5
  and k.[stamp] between dateadd(day,-10,getdate()) and dateadd(day,1,getdate())
  and abs(DATEDIFF(dd,stz.[ordsp_time] , k.body.value('(/eDIMessage/receivingAdvice/@date)[1]', 'date')))<10
  and kOr.[stamp] between dateadd(day,-10,getdate()) and dateadd(day,1,getdate())
  and kOr.RECADV is null
GO
/****** Object:  StoredProcedure [xmt].[KPDAgent]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [xmt].[KPDAgent]
 @_dateBegin date =  '2014-12-01'
 ,@_dateEnd   date =  '2014-12-19'
 ,@_UserID  nvarchar(50) = 'main\robot'
 ,@_pdr int = 15
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	declare @pdr int = @_pdr;
	declare @dateBegin date = @_dateBegin;
	declare @dateEnd date = @_dateEnd;
	declare @UserID nvarchar(50) = @_UserID;
	
	--insert into @pdr select * from @_pdr;
	
	--select * from @pdr
/**/
select z0.*
,z3.[Посещений с заказом]
,z2.SKU
,z3.[Сумма заказов]
,z4.[Сумма возвратов]
,z5.[Сумма накладных по заказам]
,z6.[Сумма прихода денег]
,ltrim(rtrim(d.ПдрНаим)) [Отдел]
,p.СотрПодр
,z7.SKUPdr,
(
 select
count(distinct o.Article)
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
left join [EdiAll].[xmt].OrderAndReturn o on o.documentId = d.documentId and o.prefix = d.prefix
inner join PR_Euras.dbo.KAT_PPL p0 on p0.СотрКод = s.salesAgentId
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
and d.docType = 'ORDER'
and p0.СотрПодр in (@pdr)
and s.salesAgentId in 
(
select distinct ur.МнгКод
from PR_Euras.dbo.M_USER_R ur 
inner join PR_Euras.dbo.M_USER u on u.ПользКод = ur.ПользКод
where u.LoginName = @UserID
)
) SKUAll

 from
(
select
s.salesAgentId
,s.[name] [ФИО]
--,d1.*
,count(distinct d.retail + ' ' + cast(cast(d.created as date) as nvarchar(50))) [Посещений]
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
group by s.salesAgentId, s.name
) z0
left join 
(
select
s.salesAgentId
,count(distinct d.retail + ' ' + cast(cast(d.created as date) as nvarchar(50))) [Посещений с заказом]
,sum(d.documentSum) [Сумма заказов]
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
where d.docType = 'ORDER'
and d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
group by s.salesAgentId, s.name
) z3 on z3.salesAgentId = z0.salesAgentId
left join 
(
select
s.salesAgentId
,sum(d.documentSum) [Сумма возвратов]
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
where d.docType = 'RETURN'
and d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
group by s.salesAgentId, s.name
) z4 on z4.salesAgentId = z0.salesAgentId
left join
(
select t1.ОпСотр, 
sum(h.ОпКол*h.ОпЦена) [Сумма накладных по заказам]
from PR_Euras.dbo.list_skl t1
inner join PR_Euras.dbo.hist_skl h on h.ОпНаклКод=t1.ОпНаклКод and h.ОпТип=2
where t1.ОпДатаРасч>= @dateBegin and t1.ОпДатаРасч <= dateadd(d, 1, @dateEnd)
group by t1.ОпСотр
)  z5 on z5.ОпСотр = z0.salesAgentId
left join
(
SELECT sa.salesAgentId, 
sum(b.ПлатСумма) [Сумма прихода денег]
  FROM [EdiAll].[xmt].[SalesAgent] sa
  left join [PR_Euras].[dbo].[adk_grpt] g on g.СотрКод = sa.salesAgentId
  left join  PR_Euras.dbo.kln_adk a on a.КодАдресаДоставки = g.КодАдресаДоставки
inner join [PR_Euras].[dbo].dkm_base b on b.ПлатКлнКод = a.КодКлиента and b.ПлатТип < 40
                       and b.ПлатКлнСотр = 1 and b.ПлатНапр > 2
                       and b.ПлатДатаРасч>=@dateBegin and b.ПлатДатаРасч<=dateadd(d, 1, @dateEnd)
group by sa.salesAgentId                       
)  z6 on z6.salesAgentId = z0.salesAgentId


left join
(
 select
s.salesAgentId
,count(distinct o.Article) SKU
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
left join [EdiAll].[xmt].OrderAndReturn o on o.documentId = d.documentId and o.prefix = d.prefix
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
and d.docType = 'ORDER'
group by s.salesAgentId, s.name
) z2 on z2.salesAgentId = z0.salesAgentId
inner join PR_Euras.dbo.KAT_PPL p on p.СотрКод = z0.salesAgentId

left join
(
 select
count(distinct o.Article) SKUPdr,
p0.СотрПодр
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
left join [EdiAll].[xmt].OrderAndReturn o on o.documentId = d.documentId and o.prefix = d.prefix
inner join PR_Euras.dbo.KAT_PPL p0 on p0.СотрКод = s.salesAgentId
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
and d.docType = 'ORDER'
group by p0.СотрПодр
) z7 on z7.СотрПодр = p.СотрПодр

left join PR_Euras.dbo.KAT_PDR d on d.ПдрКод = p.СотрПодр
where 
p.СотрПодр in (@pdr) and 
z0.salesAgentId in 
(
select distinct ur.МнгКод
from PR_Euras.dbo.M_USER_R ur 
inner join PR_Euras.dbo.M_USER u on u.ПользКод = ur.ПользКод
where u.LoginName = @UserID
)
order by p.СотрПодр, z0.[ФИО]
/**/
END
GO
/****** Object:  StoredProcedure [dbo].[DelSpisaniePrih2]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
--Создал Евгений Федяков
--Вместо процедуры DelSpisaniePrih с целью ускорить время работы



CREATE PROCEDURE [dbo].[DelSpisaniePrih2] AS
declare @Vozvrat as cursor
declare @VTov int,@VKol decimal(10,3),@VDateKod bigint,@VDate datetime
declare @IsVFetch int,@IsPFetch int 
declare @cur1 bigint, @cur2 bigint, @cur1_date datetime, @cur2_date datetime, @tmp bigint
set @cur1=0
truncate table watch


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[f_prihclean]')
            AND name = N'iF_prihclean') DROP INDEX iF_prihclean ON f_prihclean
CREATE CLUSTERED INDEX iF_prihclean ON f_prihclean (ОпКодТов,ОпДатаРасч,Код)




set @Vozvrat=cursor local FAST_FORWARD READ_ONLY
for select f_spis.ОпКодТов,f_spis.ОпКол, f_spis.ОпДата,f_spis.ОпДатаРасч
from f_spis --for update
set nocount on;
open @Vozvrat
fetch next from @Vozvrat into  @VTov,@VKol,@VDateKod,@VDate
set @IsVFetch = @@FETCH_STATUS
while @IsVFetch = 0
  begin 
    --print @VTov
	set @cur1 = @cur1 + 1
	set @cur2=0
	set @cur1_date=getdate()
	insert into watch(cur_1, cur_1_date, cur_2, cur_2_date) values (@cur1, @cur1_date, @cur2, null)
    IF(select SUM(СумКол) from f_prihclean p1 where p1.ОпКодТов = @VTov and p1.ОпДатаРасч<=@vdate)-@vkol < 0     
      begin
        insert RAZN_ERR (ТовКод,Ошибка) values (@VTov,'Не прошла чистка прих')
      end
    
    
    update f_prihclean 
    --set f_prihclean.СумКол = (case when (select SUM(СумКол) from f_prihclean p1 where p1.ОпКодТов = @VTov and p1.ОпДатаРасч<=@vdate and p1.Код>=f_prihclean.Код)- @vkol > 0 
				--				   then (select SUM(СумКол) from f_prihclean p1 where p1.ОпКодТов = @VTov and p1.ОпДатаРасч<=@vdate and p1.Код>=f_prihclean.Код)- @vkol 
				--				   else 0 end)
	set f_prihclean.СумКол = dbo.f_prihcleanSumKol(@VTov, @VDate, f_prihclean.Код , @VKol)
    where f_prihclean.ОпКодТов = @VTov
		  and f_prihclean.ОпДатаРасч<=@vdate
--		  and СумКол > 0
--		  and (СумКол>(select SUM(СумКол) from f_prihclean p1
--		               where p1.ОпКодТов = @VTov and p1.ОпДатаРасч<=@vdate and p1.Код>=f_prihclean.Код) - @vkol)
		  and СумКол>dbo.f_prihcleanSumKol(@VTov, @VDate, f_prihclean.Код , @VKol)

     fetch next from @Vozvrat into @VTov,@VKol,@VDateKod,@VDate
    set @IsVFetch = @@FETCH_STATUS
  end
CLOSE @Vozvrat;
DEALLOCATE @Vozvrat;
GO
/****** Object:  StoredProcedure [dbo].[DelSpisaniePrih]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[DelSpisaniePrih] AS
declare @Prih as cursor 
declare @PTov int,@PKol decimal(10,3),@PDateKod bigint,@PDate datetime
declare @Vozvrat as cursor
declare @VTov int,@VKol decimal(10,3),@VDateKod bigint,@VDate datetime
declare @IsVFetch int,@IsPFetch int 

set @Vozvrat=cursor local dynamic for select f_spis.ОпКодТов,f_spis.ОпКол, f_spis.ОпДата,f_spis.ОпДатаРасч
from f_spis for update

set @Prih=cursor local dynamic scroll for select f_prihclean.ОпКодТов,f_prihclean.СумКол, 
f_prihclean.ОпДата,f_prihclean.ОпДатаРасч
from f_prihclean join TmpClean on f_prihclean.ОпКодТов=TmpClean.КодТов
where f_prihclean.СумКол>0  and f_prihclean.ОпДатаРасч<=TmpClean.Дата
for update

open @Vozvrat
fetch next from @Vozvrat into  @VTov,@VKol,@VDateKod,@VDate
set @IsVFetch = @@FETCH_STATUS
while @IsVFetch = 0
  begin   
--PRINT @VCode
    exec InsertRaznoska @TovParam=@VTov, @DateParam=@VDate 
    if CURSOR_STATUS ('variable','@Prih')>=0
      begin
        close @Prih
      end 
    open @Prih
    fetch last from @Prih into @PTov,@PKol,@PDateKod,@PDate
    set @IsPFetch = @@FETCH_STATUS 
    while @VKol>0 and @IsPFetch=0
       begin
         if @VKol <= @PKol
           begin                    
             update f_prihclean set СумКол=СумКол-@VKol where current of @Prih
             set @VKol=0 
           end  
         else
            begin
               update f_prihclean set СумКол=0 where current of @Prih
               set @VKol=@VKol - @PKol
            end
         fetch prior from @Prih into @PTov,@PKol,@PDateKod,@PDate
         set @IsPFetch = @@FETCH_STATUS 
       end
    if @VKol<>0
      begin
        insert RAZN_ERR (ТовКод,Ошибка) values (@VTov,'Не прошла чистка прих')
      end
--    update F_PRIHCLEAN set Кол=0 where current of @Vozvrat
    delete from TmpClean
    fetch next from @Vozvrat into @VTov,@VKol,@VDateKod,@VDate
    set @IsVFetch = @@FETCH_STATUS
  end

--select * into  f_prihclean1 from f_prihclean;
GO
/****** Object:  View [dbo].[ML_TOTAL]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[ML_TOTAL]
AS
(

SELECT 
  ml.АвтокодМЛ ,
  ml.Дата ,
  ml.ЗатратыФакт  ,
  ml.ЗатратыПлан  ,
  SUM(ltt.SumBrutto) AS MBrutto,
  SUM(ltt.SumNetto) AS MNetto,
  SUM(ltt.SumV) AS SumV,
  cast(CASE WHEN SUM(ltt.SumBrutto) <> 0 THEN ml.ЗатратыФакт/ SUM(ltt.SumBrutto) ELSE 0 END as money) AS PriceBrutto,
  cast(CASE WHEN SUM(ltt.SumBrutto) <> 0 THEN ml.ЗатратыПлан/ SUM(ltt.SumBrutto) ELSE 0 END as money) AS PriceBruttoPlan,
  cast(CASE WHEN SUM(ltt.SumNetto) <> 0 THEN ml.ЗатратыФакт/ SUM(ltt.SumNetto) ELSE 0 END as money) AS PriceNetto,
  cast(CASE WHEN SUM(ltt.SumNetto) <> 0 THEN ml.ЗатратыПлан/ SUM(ltt.SumNetto) ELSE 0 END as money) AS PriceNettoPlan,
  cast(CASE WHEN SUM(ltt.SumV) <> 0 THEN ml.ЗатратыФакт/ SUM(ltt.SumV) ELSE 0 END as money) AS PriceV,
  cast(CASE WHEN SUM(ltt.SumV) <> 0 THEN ml.ЗатратыПлан/ SUM(ltt.SumV) ELSE 0 END as money) AS PriceVPlan
FROM
  dbo.LIST_tRans_Total ltt
  LEFT OUTER JOIN dbo.ML_LIST_SKL_Zatr ml ON (ltt.[ОпНаклКод] = ml.[ОпНаклКод])
   --  WHERE ml.АвтокодМЛ=52211 --AND ltt.ОпНаклКод=2436251102
     GROUP BY ml.АвтокодМЛ, ml.Дата,ml.ЗатратыФакт, ml.ЗатратыПлан
/* что-то не так - много записей Глухов 20141202
SELECT ml.АвтокодМЛ,
       ml.ДатаРасч Дата,
       ml.ЗатратыФакт ЗатратыФакт,
       ml.ЗатратыПлан ЗатратыПлан,
       SUM(ltt.SumBrutto) MBrutto,
       SUM(ltt.SumNetto) MNetto,
       SUM(ltt.SumV) SumV,
       cast(CASE WHEN SUM(ltt.SumBrutto)<>0 THEN ml.ЗатратыФакт/SUM(ltt.SumBrutto) ELSE 0 END as money) PriceBrutto,
       cast(CASE WHEN SUM(ltt.SumBrutto)<>0 THEN ml.ЗатратыПлан/SUM(ltt.SumBrutto) ELSE 0 END as money) PriceBruttoPlan,
       cast(CASE WHEN SUM(ltt.SumNetto)<>0 THEN ml.ЗатратыФакт/SUM(ltt.SumNetto) ELSE 0 END as money) PriceNetto,
       cast(CASE WHEN SUM(ltt.SumNetto)<>0 THEN ml.ЗатратыПлан/SUM(ltt.SumNetto) ELSE 0 END as money) PriceNettoPlan,
       cast(CASE WHEN SUM(ltt.SumV)<>0 THEN ml.ЗатратыФакт/SUM(ltt.SumV) ELSE 0 END as money) PriceV,
       cast(CASE WHEN SUM(ltt.SumV)<>0 THEN ml.ЗатратыПлан/SUM(ltt.SumV) ELSE 0 END as money) PriceVPlan
FROM (
       SELECT [АвтокодМЛ],
		      Cast (ДатаРасч as date) ДатаРасч,
              [ЗатратаПлан1] [ЗатратыПлан],
              [ЗатратаФакт1] [ЗатратыФакт]
       FROM [dbo].[list_mlst]
       UNION ALL
       SELECT [АвтокодМЛ],
		      Cast (ДатаРасч as date) ДатаРасч,
              [ЗатратаПлан2] [ЗатратыПлан],
              [ЗатратаФакт2] [ЗатратыФакт]
       FROM [dbo].[list_mlst] where 1=0
       UNION ALL
       SELECT [АвтокодМЛ],
		      Cast (ДатаРасч as date) ДатаРасч,
              [ЗатратаПлан3] [ЗатратыПлан],
              [ЗатратаФакт3] [ЗатратыФакт]
       FROM [dbo].[list_mlst] where 1=0
       UNION ALL
       SELECT [АвтокодМЛ],
		      Cast (ДатаРасч as date) ДатаРасч,
              [ЗатратаПлан4] [ЗатратыПлан],
              [ЗатратаФакт4] [ЗатратыФакт]
       FROM [dbo].[list_mlst] where 1=0
       UNION ALL
       SELECT [АвтокодМЛ],
		      Cast (ДатаРасч as date) ДатаРасч,
              [ЗатратаПлан5] [ЗатратыПлан],
              [ЗатратаФакт5] [ЗатратыФакт]
       FROM [dbo].[list_mlst] where 1=0
     ) ml
     INNER JOIN 
     (
       SELECT zvk.АвтКодМЛ,
              НомДок
       FROM zvk_dkm
            INNER JOIN list_zvk ZVK on zvk.АвтКодЗвк = zvk_dkm.АвтКодЗвкДост
            --WHERE (ТипДок = 4)
       GROUP BY zvk.АвтКодМЛ,
                НомДок
     ) AS ttndkm ON ttndkm.АвтКодМЛ = ml.АвтокодМЛ
     --INNER JOIN TTN_DKM AS ttn ON ttn.КодТТН = ttndkm.НомДок
     INNER JOIN 
     (
       SELECT MAX(ДокКод) AS ДокКод,
              Скл,
              ФлгОпер,
              Накл,
              MAX(ДокКод) AS Зкз
              --SELECT MAX(CASE WHEN тип = 4 THEN ДокКод END) AS ДокКод, Скл, ФлгОпер, Накл, MAX(CASE WHEN тип = 0 THEN ДокКод END) AS Зкз
              FROM zkz_nkl AS z
            --WHERE (Тип IN (4))
       GROUP BY Накл,
                Скл,
                ФлгОпер
     ) AS zkz_nkl ON zkz_nkl.ДокКод = ttndkm.НомДок
     INNER JOIN HIST_SKL AS hs ON hs.ОпСкл = zkz_nkl.Скл AND hs.ОпТип = zkz_nkl.ФлгОпер AND zkz_nkl.Накл = hs.ОпНакл
   --  JOIN LIST_SKL AS ls ON ls.ОпСкл = zkz_nkl.Скл AND ls.ОпТип = zkz_nkl.ФлгОпер AND zkz_nkl.Накл = ls.ОпНакл
     INNER JOIN list_trans_total ltt ON hs.ОпНаклКод = ltt.ОпНаклКод
     GROUP BY ml.АвтокодМЛ, ml.ДатаРасч,ml.ЗатратыФакт, ml.ЗатратыПлан
*/
)
GO
/****** Object:  View [dbo].[F_PRIH_SumOnTovar]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[F_PRIH_SumOnTovar]
AS
SELECT     MIN(ОпКод) AS ОпКод, НаклНомер, НаклСклКод, НаклСклНаим, ОпКодКлн, НаклСотр, ОпДата, ОпДатаРасч, ОпНаклКод, ОпКодТов, SUM(ОпКол)
                       AS ОпКол, SUM(ОпСтоим) AS ОпСтоим, SUM(ОпВесБрутто) AS ОпВесБрутто, SUM(ОпКолУпак) AS ОпКолУпак, SUM(ОпВесНетто) AS ОпВесНетто, 
                      ОпВозвр
FROM         dbo.F_PRIH
GROUP BY НаклНомер, НаклСклКод, НаклСклНаим, ОпКодКлн, НаклСотр, ОпДата, ОпДатаРасч, ОпНаклКод, ОпКодТов, ОпВозвр
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[25] 2[16] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "F_PRIH"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 238
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 4
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_PRIH_SumOnTovar'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'F_PRIH_SumOnTovar'
GO
/****** Object:  View [dbo].[F_TVR_COUNT_REPORT]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  view [dbo].[F_TVR_COUNT_REPORT]
as
select ОпКодТов as АвтокодТовара, 
	d_tvr.ТовНаим,
	d_tvr.ТовАрт as КодТовара,
	count(ТовКол) as КолОбращений,
	d_tvr.ТовГрпНаим,
	d_tvr.ТовВидНаим,
--	tvr_def.ТовЗонаХран,
	kat_tpz.ХарактНаим as [Зона хранения]
from f_tvr_count
	inner join d_tvr on d_tvr.ТовКод = f_tvr_count.ОпКодТов
	right outer join tvr_def on f_tvr_count.ОпКодТов = tvr_def.ТовКод
	right outer join kat_tpz on tvr_def.ТовЗонаХран = kat_tpz.КодХаракт
where 
--	ДатаРасч > '2006-05-01' and ДатаРасч < '2006-05-5' and
	kat_tpz.Тип = 1
group by ОпКодТов,
	d_tvr.ТовНаим,
	d_tvr.ТовГрпНаим,
	d_tvr.ТовВидНаим,
	d_tvr.ТовАрт,
	tvr_def.ТовЗонаХран,
	kat_tpz.ХарактНаим
GO
/****** Object:  Table [xmt].[RetailCheckList]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[RetailCheckList](
	[id] [bigint] IDENTITY(1,1) NOT NULL,
	[retailCheckListId] [bigint] NULL,
	[retail] [nvarchar](255) NULL,
	[checkList] [int] NULL,
 CONSTRAINT [PK_RetailCheckList_1] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[del_Vw_EhrmannReportByMonth]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[del_Vw_EhrmannReportByMonth]
AS
SELECT     Название, Клиент, Город, Адрес, [Канал сбыта], [Формат магазина], MONTH(Дата) AS Месяц, ГрпСотрНаим, SUM([Продажи (штуки)]) 
                      AS [Продажи (шт)], SUM([Продажи (рубли с НДС)]) AS [Продажи (руб)]
FROM         dbo.Vw_EhrmannReport
GROUP BY Название, Клиент, Город, Адрес, [Канал сбыта], [Формат магазина], MONTH(Дата), ГрпСотрНаим
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[38] 4[27] 2[16] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Vw_EhrmannReport"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 161
               Right = 270
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 11
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 2385
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'del_Vw_EhrmannReportByMonth'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'del_Vw_EhrmannReportByMonth'
GO
/****** Object:  StoredProcedure [dbo].[EhrmannReport_vv]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[EhrmannReport_vv] @actualDateStr varchar(20) = NULL AS
declare @lowDate as smalldatetime
declare @highDate as smalldatetime
declare @hlam as int
declare @actualDate as smalldatetime
--Вычисляем диапазон дат соответствующий предыдущей неделе по отношению
-- к текущей дате либо к дате заданной в @actualDateStr
set @actualDate=CONVERT(smalldatetime, ISNULL(@actualDateStr,GETDATE()),104)
set @hlam=@@DATEFIRST+DATEPART(weekday,@actualDate)-1
if @hlam>7 set @hlam=@hlam-7
set @highDate=@actualDate-@hlam
set @highDate=CAST( CONVERT(char(10),@highDate,102) as smalldatetime)
set @lowDate=@highDate-6
set @lowDate='20100901'
set @highDate='20100914'
--Очищаем временную таблицу с данными для отчета, оставшуюся с предыдущего запуска
truncate table wremEhrmann

--Вставляем во временную таблицу все данные по отгрузкам Эрманн за указанный период по всем клиентам
INSERT INTO wremEhrmann
SELECT	'0000700234'  AS [Код дистрибутора],
	dbo.D_DATES.ДатыРасч AS Дата,
	dbo.D_TVR.ТовКод AS [Код товара],
	dbo.D_TVR.ТовНаим AS Артикул, 
	dbo.KAT_KLN.КлнНаим,
	dbo.F_RASH_Vozvr.ОпСтоим AS [Продажи (рубли с НДС)],
	dbo.F_RASH_Vozvr.ОпКол AS [Продажи (штуки)],
	dbo.D_TVR.ТовВидНаим, 
	dbo.KAT_KLN.КлнКод,
	NULL,
	dbo.F_RASH_Vozvr.КодКлн_КодАдрДоставки,
	dbo.D_ORGadk.КодАдрДоставки,
	dbo.D_ORGadk.[ТипКлиента],
	null,
	dbo.F_RASH_Vozvr.НаклСклНаим as Склад

FROM	dbo.D_TVR INNER JOIN
            dbo.F_RASH_Vozvr ON dbo.D_TVR.ТовКод = dbo.F_RASH_Vozvr.ОпКодТов INNER JOIN
            dbo.D_DATES ON dbo.F_RASH_Vozvr.ОпДата = dbo.D_DATES.ДатыКод INNER JOIN
            dbo.KAT_KLN ON dbo.F_RASH_Vozvr.ОпКодКлн = dbo.KAT_KLN.КлнКод INNER JOIN
            dbo.D_ORGadk ON dbo.D_ORGadk.КодКлн_КодАдрДоставки = dbo.F_RASH_Vozvr.КодКлн_КодАдрДоставки
WHERE  
 ( dbo.D_DATES.ДатыРасч BETWEEN @lowDate AND @highDate )
	AND
	( (dbo.D_TVR.ТовВидНаим LIKE '%EHRMANN%')
	 OR
	  (dbo.D_TVR.ТовВидНаим LIKE '%Эрман%') 
	 OR
	  (dbo.D_TVR.ТовВидНаим LIKE '%Альпенл%') 
               )
GO
/****** Object:  StoredProcedure [dbo].[EhrmannReport_v2]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[EhrmannReport_v2] @actualDateStr varchar(20) = NULL AS
declare @lowDate as smalldatetime
declare @highDate as smalldatetime
declare @hlam as int
declare @actualDate as smalldatetime
--Вычисляем диапазон дат соответствующий предыдущей неделе по отношению
-- к текущей дате либо к дате заданной в @actualDateStr
set @actualDate=CONVERT(smalldatetime, ISNULL(@actualDateStr,GETDATE()),104)
set @hlam=@@DATEFIRST+DATEPART(weekday,@actualDate)-1
if @hlam>7 set @hlam=@hlam-7
set @highDate=@actualDate-@hlam
set @highDate=CAST( CONVERT(char(10),@highDate,102) as smalldatetime)
set @lowDate=@highDate-6
set @lowDate='20100901'
set @highDate='20100914'

--Очищаем временную таблицу с данными для отчета, оставшуюся с предыдущего запуска
truncate table wremEhrmann

--Вставляем во временную таблицу все данные по отгрузкам Эрманн за указанный период по всем клиентам
INSERT INTO wremEhrmann
SELECT	'0000700234' AS [Код дистрибутора],
	dbo.D_DATES.ДатыРасч AS Дата,
	dbo.D_TVR.ТовКод AS [Код товара],
	dbo.D_TVR.ТовНаим AS Артикул, 
	dbo.KAT_KLN.КлнНаим,
	dbo.F_RASH.ОпСтоим AS [Продажи (рубли с НДС)],
	dbo.F_RASH.ОпКол AS [Продажи (штуки)],
	dbo.D_TVR.ТовВидНаим, 
	dbo.KAT_KLN.КлнКод,
	NULL,
	dbo.F_RASH.КодКлн_КодАдрДоставки,
	dbo.D_ORGadk.КодАдрДоставки,
	dbo.D_ORGadk.[ТипКлиента],
	null,
	dbo.F_RASH.НаклСклНаим as Склад

FROM	dbo.D_TVR INNER JOIN
            dbo.F_RASH ON dbo.D_TVR.ТовКод = dbo.F_RASH.ОпКодТов INNER JOIN
            dbo.D_DATES ON dbo.F_RASH.ОпДата = dbo.D_DATES.ДатыКод INNER JOIN
            dbo.KAT_KLN ON dbo.F_RASH.ОпКодКлн = dbo.KAT_KLN.КлнКод INNER JOIN
            dbo.D_ORGadk ON dbo.D_ORGadk.КодКлн_КодАдрДоставки = dbo.F_RASH.КодКлн_КодАдрДоставки
WHERE  
 ( dbo.D_DATES.ДатыРасч BETWEEN @lowDate AND @highDate )
	AND
	( (dbo.D_TVR.ТовВидНаим LIKE '%EHRMANN%')
	 OR
	  (dbo.D_TVR.ТовВидНаим LIKE '%Эрман%') 
	 OR
	  (dbo.D_TVR.ТовВидНаим LIKE '%Альпенл%') 
               )
GO
/****** Object:  StoredProcedure [dbo].[EhrmannReport]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[EhrmannReport] @actualDateStr varchar(20) = NULL AS
declare @lowDate as smalldatetime
declare @highDate as smalldatetime
declare @hlam as int
declare @actualDate as smalldatetime
--Вычисляем диапазон дат соответствующий предыдущей неделе по отношению
-- к текущей дате либо к дате заданной в @actualDateStr
set @actualDate=CONVERT(smalldatetime, ISNULL(@actualDateStr,GETDATE()),104)
set @hlam=@@DATEFIRST+DATEPART(weekday,@actualDate)-1
if @hlam>7 set @hlam=@hlam-7
set @highDate=@actualDate-@hlam
set @highDate=CAST( CONVERT(char(10),@highDate,102) as smalldatetime)
set @lowDate=@highDate-6
--set @lowDate='20060701'
--set @highDate='20060731'
--Очищаем временную таблицу с данными для отчета, оставшуюся с предыдущего запуска
truncate table wremEhrmann

--Вставляем во временную таблицу все данные по отгрузкам Эрманн за указанный период по всем клиентам
INSERT INTO wremEhrmann
SELECT	'0000700234' AS [Код дистрибутора],
	dbo.D_DATES.ДатыРасч AS Дата,
	dbo.D_TVR.ТовКод AS [Код товара],
	dbo.D_TVR.ТовНаим AS Артикул, 
	dbo.KAT_KLN.КлнНаим,
	dbo.F_RASH.ОпСтоим AS [Продажи (рубли с НДС)],
	dbo.F_RASH.ОпКол AS [Продажи (штуки)],
	dbo.D_TVR.ТовВидНаим, 
	dbo.KAT_KLN.КлнКод,
	NULL,
	dbo.F_RASH.КодКлн_КодАдрДоставки,
	dbo.D_ORGadk.КодАдрДоставки,
	dbo.D_ORGadk.[ТипКлиента],
	NULL -- здесь нужно будет подставить формат магазина
FROM	dbo.D_TVR INNER JOIN
            dbo.F_RASH ON dbo.D_TVR.ТовКод = dbo.F_RASH.ОпКодТов INNER JOIN
            dbo.D_DATES ON dbo.F_RASH.ОпДата = dbo.D_DATES.ДатыКод INNER JOIN
            dbo.KAT_KLN ON dbo.F_RASH.ОпКодКлн = dbo.KAT_KLN.КлнКод INNER JOIN
            dbo.D_ORGadk ON dbo.D_ORGadk.КодКлн_КодАдрДоставки = dbo.F_RASH.КодКлн_КодАдрДоставки
WHERE  
 ( dbo.D_DATES.ДатыРасч BETWEEN @lowDate AND @highDate )
	AND
	( (dbo.D_TVR.ТовВидНаим LIKE '%EHRMANN%')
	 OR
	  (dbo.D_TVR.ТовВидНаим LIKE '%Эрман%') )

--Производим замену имен клиентов на имя головных клиентов для клиентов ООП
UPDATE wremEhrmann
SET wremEhrmann.КлнНаим=isnull(dbo.D_ORG.ГлКлнНаим,wremEhrmann.КлнНаим),
    wremEhrmann.КлнКод=dbo.D_ORG.КодГлКлн
FROM wremEhrmann RIGHT JOIN dbo.D_ORG ON wremEhrmann.КлнКод = dbo.D_ORG.КлнКод
Where dbo.D_ORG.ГрпСотрНаим like 'Отдел продаж ООП%' AND (dbo.D_ORG.КодГлКлн<>0 and (not (dbo.D_ORG.КодГлКлн is null)))
GO
/****** Object:  Table [xmt].[SalesAgentPlan]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[SalesAgentPlan](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[salesAgentPlanId] [bigint] NULL,
	[salesAgent] [nvarchar](255) NOT NULL,
	[retail] [nvarchar](255) NOT NULL,
	[visitDate] [date] NOT NULL,
 CONSTRAINT [PK_xmt.SalesAgentPlan] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[T_AllDebt12]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*Глухов 20150204
Представление заменяет таблицу
skl_with_debt12 заполняется [GetSKL12], которая отрабатывает за значительно короткое время
[dbo].[T_AllDebt]*/
CREATE VIEW [dbo].[T_AllDebt12]
AS
SELECT
skl.ОпКлн AS ClientID, skl.НашаФирма AS OurFirmID, f.Name AS OurFirm, c.МнджКод AS ManagerID,
kp.СотрФамилия + ' ' + kp.СотрИмя AS Manager, 
k.КлнНаим AS Client, pk.КлнНаим AS ClientParent, debt.Сумма AS InvoiceSum, debt.НаклДЗ AS InvoiceDebt,
skl.ОпНакл AS InvoiceNumber, skl.ОпДатаРасч AS InvoiceDate, 0 AS DebtSum,
p.СотрФамилия + ' ' + p.СотрИмя AS InvoiceManager, DATEDIFF(day, skl.ОпДатаРасч, GETDATE()) AS DebtDays, 
skl.ОпСотр AS InvoiceManagerID, pdr.ПдрНаим AS department, a.АдресДоставки, skl.Бонус, k.[КлнГрпКод]
FROM         dbo.skl_with_debt12 AS debt
INNER JOIN dbo.LIST_SKL AS skl ON debt.ОпНаклКод = skl.ОпНаклКод
LEFT OUTER JOIN dbo.OurFirms AS f ON skl.НашаФирма = f.id
LEFT OUTER JOIN dbo.KLN_ADK AS a ON a.КодАдресаДоставки = skl.КодАдрДоставки
LEFT OUTER JOIN dbo.KAT_KLN AS k ON k.КлнКод = skl.ОпКлн
LEFT OUTER JOIN dbo.CLN_DKL AS c ON c.КлнКод = k.КлнКод
LEFT OUTER JOIN dbo.KAT_KLN AS pk ON pk.КлнКод = c.КодГлКлн
LEFT OUTER JOIN dbo.KAT_PPL AS p ON p.СотрКод = skl.ОпСотр
LEFT OUTER JOIN dbo.KAT_PPL AS kp ON kp.СотрКод = c.МнджКод
LEFT OUTER JOIN dbo.KAT_PDR AS pdr ON pdr.ПдрКод = kp.СотрПодр
GO
/****** Object:  View [dbo].[T_AllDebt_temp]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*ЕФ 24,10,2011
Представление заменяет таблицу
skl_with_debt заполняется [GetSKL], которая отрабатывает за значительно короткое время
[dbo].[T_AllDebt]*/
CREATE VIEW [dbo].[T_AllDebt_temp]
AS
SELECT     skl.ОпКлн AS ClientID, skl.НашаФирма AS OurFirmID, f.Name AS OurFirm, c.МнджКод AS ManagerID, kp.СотрФамилия + ' ' + kp.СотрИмя AS Manager, 
                      k.КлнНаим AS Client, pk.КлнНаим AS ClientParent, debt.Сумма AS InvoiceSum, debt.НаклДЗ AS InvoiceDebt, skl.ОпНакл AS InvoiceNumber, 
                      skl.ОпДатаРасч AS InvoiceDate, 0 AS DebtSum, p.СотрФамилия + ' ' + p.СотрИмя AS InvoiceManager, DATEDIFF(day, skl.ОпДатаРасч, GETDATE()) AS DebtDays, 
                      skl.ОпСотр AS InvoiceManagerID, pdr.ПдрНаим AS department, a.АдресДоставки, skl.Бонус
FROM         dbo.skl_with_debt_temp AS debt
INNER JOIN dbo.LIST_SKL_old AS skl ON debt.ОпНаклКод = skl.ОпНаклКод and left(right(dbo.dec2bit(skl.ОпБит), 16), 1)='0'
LEFT OUTER JOIN dbo.OurFirms AS f ON skl.НашаФирма = f.id
LEFT OUTER JOIN dbo.KLN_ADK AS a ON a.КодАдресаДоставки = skl.КодАдрДоставки
LEFT OUTER JOIN dbo.KAT_KLN AS k ON k.КлнКод = skl.ОпКлн
LEFT OUTER JOIN dbo.CLN_DKL AS c ON c.КлнКод = k.КлнКод
LEFT OUTER JOIN dbo.KAT_KLN AS pk ON pk.КлнКод = c.КодГлКлн
LEFT OUTER JOIN dbo.KAT_PPL AS p ON p.СотрКод = skl.ОпСотр
LEFT OUTER JOIN dbo.KAT_PPL AS kp ON kp.СотрКод = c.МнджКод
LEFT OUTER JOIN dbo.KAT_PDR AS pdr ON pdr.ПдрКод = kp.СотрПодр
GO
/****** Object:  View [dbo].[T_AllDebt_ALLFirms]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--ЕФ 29,11,2011
--Представление заменяет таблицу
--skl_with_all_firms_debt заполняется [GetSKL], которая отрабатывает за значительно короткое время
--Расчет по всем фирмам как в с одной
CREATE VIEW [dbo].[T_AllDebt_ALLFirms]
AS
SELECT skl.ОпКлн [ClientID]
      ,skl.НашаФирма [OurFirmID]
      ,f.Name [OurFirm]
      ,c.МнджКод [ManagerID]
      ,kp.СотрФамилия + ' '+kp.СотрИмя [Manager]
      ,k.КлнНаим [Client]
      ,pk.КлнНаим [ClientParent]
      ,debt.Сумма [InvoiceSum]
      ,debt.НаклДЗ [InvoiceDebt]
      ,skl.ОпНакл [InvoiceNumber]
      ,skl.ОпДатаРасч [InvoiceDate]
      ,0 [DebtSum]
      ,p.СотрФамилия + ' '+p.СотрИмя [InvoiceManager]
      ,DATEDIFF(day, skl.ОпДатаРасч , GETDATE()) [DebtDays]
      ,skl.ОпСотр [InvoiceManagerID]
      ,pdr.ПдрНаим department
  FROM 
  dbo.skl_with_all_firms_debt debt
  inner join dbo.list_skl skl on debt.ОпНаклКод = skl.ОпНаклКод
  inner join dbo.ourfirms f on skl.НашаФирма = f.id
  inner join dbo.kat_kln k on k.КлнКод = skl.ОпКлн
  inner join dbo.cln_dkl c on c.КлнКод = k.КлнКод
  left join dbo.kat_kln pk on pk.КлнКод = c.КодГлКлн
  inner join dbo.kat_ppl p on p.СотрКод = skl.ОпСотр
  inner join dbo.kat_ppl kp on kp.СотрКод = c.МнджКод
  inner join dbo.KAT_PDR pdr on pdr.ПдрКод = kp.СотрПодр
  
  --[dbo].[T_AllDebt]
GO
/****** Object:  View [dbo].[T_AllDebt]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*ЕФ 24,10,2011
Представление заменяет таблицу
skl_with_debt заполняется [GetSKL], которая отрабатывает за значительно короткое время
[dbo].[T_AllDebt]*/
CREATE VIEW [dbo].[T_AllDebt]
AS
SELECT
skl.ОпКлн AS ClientID, skl.НашаФирма AS OurFirmID, f.Name AS OurFirm, c.МнджКод AS ManagerID,
kp.СотрФамилия + ' ' + kp.СотрИмя AS Manager, 
k.КлнНаим AS Client, pk.КлнНаим AS ClientParent, debt.Сумма AS InvoiceSum, debt.НаклДЗ AS InvoiceDebt,
skl.ОпНакл AS InvoiceNumber, skl.ОпДатаРасч AS InvoiceDate, 0 AS DebtSum,
p.СотрФамилия + ' ' + p.СотрИмя AS InvoiceManager, DATEDIFF(day, skl.ОпДатаРасч, GETDATE()) AS DebtDays, 
skl.ОпСотр AS InvoiceManagerID, pdr.ПдрНаим AS department, a.АдресДоставки, skl.Бонус, k.[КлнГрпКод]
FROM         dbo.skl_with_debt AS debt
INNER JOIN dbo.LIST_SKL AS skl ON debt.ОпНаклКод = skl.ОпНаклКод
LEFT OUTER JOIN dbo.OurFirms AS f ON skl.НашаФирма = f.id
LEFT OUTER JOIN dbo.KLN_ADK AS a ON a.КодАдресаДоставки = skl.КодАдрДоставки
LEFT OUTER JOIN dbo.KAT_KLN AS k ON k.КлнКод = skl.ОпКлн
LEFT OUTER JOIN dbo.CLN_DKL AS c ON c.КлнКод = k.КлнКод
LEFT OUTER JOIN dbo.KAT_KLN AS pk ON pk.КлнКод = c.КодГлКлн
LEFT OUTER JOIN dbo.KAT_PPL AS p ON p.СотрКод = skl.ОпСотр
LEFT OUTER JOIN dbo.KAT_PPL AS kp ON kp.СотрКод = c.МнджКод
LEFT OUTER JOIN dbo.KAT_PDR AS pdr ON pdr.ПдрКод = kp.СотрПодр
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[53] 4[14] 2[22] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "debt"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "skl"
            Begin Extent = 
               Top = 34
               Left = 450
               Bottom = 330
               Right = 619
            End
            DisplayFlags = 280
            TopColumn = 6
         End
         Begin Table = "f"
            Begin Extent = 
               Top = 102
               Left = 38
               Bottom = 180
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 114
               Left = 227
               Bottom = 222
               Right = 413
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "k"
            Begin Extent = 
               Top = 180
               Left = 38
               Bottom = 288
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "c"
            Begin Extent = 
               Top = 222
               Left = 227
               Bottom = 330
               Right = 381
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "pk"
            Begin Extent = 
               Top = 288
               Left = 38
               Bottom = 396
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'T_AllDebt'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'End
         Begin Table = "p"
            Begin Extent = 
               Top = 330
               Left = 227
               Bottom = 438
               Right = 381
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "kp"
            Begin Extent = 
               Top = 396
               Left = 38
               Bottom = 504
               Right = 192
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "pdr"
            Begin Extent = 
               Top = 438
               Left = 230
               Bottom = 516
               Right = 381
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'T_AllDebt'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'T_AllDebt'
GO
/****** Object:  View [dbo].[list_skl_totals]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[list_skl_totals]
AS
SELECT     dbo.LIST_SKL.ОпНаклКод, dbo.hist_skl_totals.Продажи, dbo.hist_skl_totals.ПродажиБаза, dbo.hist_skl_totals.ПродажиДельта, dbo.LIST_SKL.ОпНакл, 
                      dbo.LIST_SKL.ОпСкл, dbo.LIST_SKL.ОпТип, dbo.LIST_SKL.ОпДатаИсх, dbo.LIST_SKL.ОпКлнТип, dbo.LIST_SKL.ОпКлн, dbo.LIST_SKL.ОпВозврат, 
                      dbo.LIST_SKL.ОпСотр, dbo.LIST_SKL.ОпДатаРасч, dbo.LIST_SKL.ЕстьТовар, dbo.LIST_SKL.КодАдрДоставки, dbo.LIST_SKL.Основание, dbo.LIST_SKL.ДопПрз, 
                      dbo.LIST_SKL.НашаФирма, dbo.LIST_SKL.КодКонтракта, dbo.LIST_SKL.НомерПостав, dbo.LIST_SKL.ОпТипПост, dbo.LIST_SKL.АвтокодСФ, 
                      dbo.LIST_SKL.НомНаклНашФ, dbo.LIST_SKL.НомНаклКонтр, dbo.LIST_SKL.Бонус, dbo.LIST_SKL.ОпБит, dbo.KLN_ADK.КодКлиента AS КодКлиентаПолуч
FROM         dbo.LIST_SKL LEFT OUTER JOIN
                      dbo.hist_skl_totals ON dbo.LIST_SKL.ОпНаклКод = dbo.hist_skl_totals.ОпНаклКод LEFT OUTER JOIN
                      dbo.KLN_ADK ON dbo.LIST_SKL.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки
WHERE     (dbo.LIST_SKL.ОпТип = 1) AND (dbo.LIST_SKL.ОпВозврат = 0) AND (dbo.hist_skl_totals.ПродажиБаза IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[28] 4[33] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 240
               Bottom = 216
               Right = 409
            End
            DisplayFlags = 280
            TopColumn = 10
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 6
               Left = 447
               Bottom = 114
               Right = 633
            End
            DisplayFlags = 280
            TopColumn = 3
         End
         Begin Table = "hist_skl_totals"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 246
               Right = 202
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 28
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'list_skl_totals'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N' = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'list_skl_totals'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'list_skl_totals'
GO
/****** Object:  View [dbo].[copy_klientkpk]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[copy_klientkpk]
AS
SELECT     dbo.Vw_KPK_Clients_1.КлнКод, dbo.Vw_KPK_Clients_1.КлнНаим, ISNULL(dbo.KLN_ADK.АдресДоставки, dbo.Vw_KPK_Clients_1.КлнАдрес) 
                      AS КлнАдрес, dbo.Vw_KPK_Clients_1.ИНН, ISNULL(dbo.KAT_TWN.ГородНаим, dbo.Vw_KPK_Clients_1.Город) AS Город, 
                      dbo.Vw_KPK_Clients_1.Адрес, dbo.Vw_KPK_Clients_1.СотрОтчество, dbo.Vw_KPK_Clients_1.СотрФамилияИмя, 
                      dbo.Vw_KPK_Clients_1.ГрпСотрНаим, dbo.Vw_KPK_Clients_1.ГрпКлнНаим, dbo.Vw_KPK_Clients_1.Nдоговора, dbo.Vw_KPK_Clients_1.Сальдо, 
                      dbo.Vw_KPK_Clients_1.ГрпЦен, RTRIM(LTRIM(RTRIM(CAST(dbo.Vw_KPK_Clients_1.КлнКод AS varchar)) 
                      + '/' + ISNULL(LTRIM(CAST(dbo.KLN_ADK.КодАдресаДоставки AS varchar)), '0'))) AS КодКлн_КодАдрДоставки
FROM         dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода RIGHT OUTER JOIN
                      dbo.Vw_KPK_Clients_1 ON dbo.KLN_ADK.КодКлиента = dbo.Vw_KPK_Clients_1.КлнКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 84
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 413
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_KPK_Clients_1"
            Begin Extent = 
               Top = 6
               Left = 451
               Bottom = 114
               Right = 619
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'copy_klientkpk'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'copy_klientkpk'
GO
/****** Object:  View [dbo].[M_DEBIT_View]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--Евгений Федяков
--20101206
--Представление заменяет весь расчет на шаге ProdRes_65
--Представление часто используется в расчетах кубов, поэтому покачто его нужно сохранять в таблице.
CREATE VIEW [dbo].[M_DEBIT_View]
AS
SELECT [НаклКод]
      ,[НаклНом]
      ,[НаклСклКод]
      ,[НаклКлн]
      ,[НаклСотр]
      ,[НаклДата]
      ,[НаклДатаРасч]
      ,[НаклТип]
      ,[НаклВозвр]
      ,[НаклКол]
      ,[НаклСтоим]
      ,[НаклКодТов]
      ,[ЦенаАльтГрп]
      ,[ЦенаГрп]
      ,[ЦенаКат]
      ,[ТовСкидка]
      ,[КлнНаТов]
      ,[КлнНаВид]
      ,[КлнНаГрп]
      ,ТекЦена = (CASE
						WHEN (ТекЦена > 3*ЦенаКатУчет and НаклСтоим > 0 and ТекЦена >= 900) THEN ЦенаКатУчет
						ELSE ТекЦена
					END
				)
      ,([НаклСтоим]) [СуммаПродажа]
      ,([НаклКол] * [ТекЦена]) [СуммаПрогноз]
      ,[НДС]
      ,[ЦенаКатУчет]
      ,([ЦенаКатУчет] * [НаклКол]) [СуммаУчет]
      ,[КодКлн_КодАдрДоставки]
FROM
(



		SELECT [НаклКод]
			  ,[НаклНом]
			  ,[НаклСклКод]
			  ,[НаклКлн]
			  ,[НаклСотр]
			  ,[НаклДата]
			  ,[НаклДатаРасч]
			  ,[НаклТип]
			  ,[НаклВозвр]
			  ,[НаклКол]
			  ,[НаклСтоим]
			  ,[НаклКодТов]
			  ,[ЦенаАльтГрп]
			  ,[ЦенаГрп]
			  ,[ЦенаКат]
			  ,[ТовСкидка]
			  ,[КлнНаТов]
			  ,[КлнНаВид]
			  ,[КлнНаГрп]
			  ,ТекЦена = (CASE
								WHEN ((ТекЦена > ЦенаКатУчет * 10) AND (ЦенаКатУчет > 0)) THEN ЦенаКатУчет
								ELSE ТекЦена
							END
						)
			  --,[СуммаПродажа]
			  --,[СуммаПрогноз]
			  ,[НДС]
			  ,[ЦенаКатУчет]
			  --,[СуммаУчет]
			  ,[КодКлн_КодАдрДоставки]
		FROM
		(
					SELECT 
							[НаклКод]
						  ,[НаклНом]
						  ,[НаклСклКод]
						  ,[НаклКлн]
						  ,[НаклСотр]
						  ,[НаклДата]
						  ,[НаклДатаРасч]
						  ,[НаклТип]
						  ,[НаклВозвр]
						  ,[НаклКол]
						  ,[НаклСтоим]
						  ,[НаклКодТов]
						  ,[ЦенаАльтГрп]
						  ,[ЦенаГрп]
						  ,[ЦенаКат]
						  ,[ТовСкидка]
						  ,[КлнНаТов]
						  ,[КлнНаВид]
						  ,[КлнНаГрп]
						  ,ТекЦена = 
									(case
										/* Если назначена группа цен */
										when ЦенаАльтГрп <> 0 and ЦенаАльтГрп is not null then
											case
												when КлнНаТов<>0 then ЦенаАльтГрп*(1-КлнНаТов/100)
												when КлнНаВид<>0 then ЦенаАльтГрп*(1-КлнНаВид/100)
												when КлнНаГрп<>0 then ЦенаАльтГрп*(1-КлнНаГрп/100)
									--			when ТовСкидка<>0 then ЦенаАльтГрп*(1-ТовСкидка/100)
												else ЦенаАльтГрп
											end
										when ЦенаГрп <> 0 and ЦенаГрп is not null then
											case
												when КлнНаТов<>0 then ЦенаГрп*(1-КлнНаТов/100)
												when КлнНаВид<>0 then ЦенаГрп*(1-КлнНаВид/100)
												when КлнНаГрп<>0 then ЦенаГрп*(1-КлнНаГрп/100)
									--			when ТовСкидка<>0 then ЦенаГрп*(1-ТовСкидка/100)
												else ЦенаГрп
											end
										else
											case
												when КлнНаТов<>0 then ЦенаКат*(1-КлнНаТов/100)
												when КлнНаВид<>0 then ЦенаКат*(1-КлнНаВид/100)
												when КлнНаГрп<>0 then ЦенаКат*(1-КлнНаГрп/100)
									--			when ТовСкидка<>0 then ЦенаКат*(1-ТовСкидка/100)
												else ЦенаКат
											end
									end)
						  --,[СуммаПродажа]
						  --,[СуммаПрогноз]
						  ,[НДС]
						  ,[ЦенаКатУчет]
						  --,[СуммаУчет]
						  ,[КодКлн_КодАдрДоставки] 
					FROM
					(

							SELECT ОпНаклКод НаклКод, НаклСклКод НаклСклКод
									,ОпКодКлн НаклКлн
									,НаклСотр НаклСотр
									,ОпДата НаклДата
									,ОпДатаРасч НаклДатаРасч
									,НаклТип НаклТип
									,ОпВозвр НаклВозвр
									,ОпКол НаклКол
									,ОпСтоим НаклСтоим
									,ОпКодТов НаклКодТов
									,НаклНомер НаклНом
									,КодКлн_КодАдрДоставки
									,НДС
									,ТовЦенаРСХ*(1+НДС/100) ЦенаКат
									,ТовЦенаУчет*(1+НДС/100) ЦенаКатУчет
									,ЦенаАльтГрп = 
													(select top 1 Цена from m_grpcen, cenp_tab
														where 
														m_grpcen.ТврКод = f_rash.ОпКодТов and
														cenp_tab.КлнКод = f_rash.ОпКодКлн and
														cenp_tab.ТовКод = f_rash.ОпКодТов and
														m_grpcen.ГрпЦен = cenp_tab.ЦенГрп and
														Цена is not null
													)*(1+НДС/100)
									, ЦенаГрп = 
													(select top 1 Цена from m_grpcen, sld_kln 
														where 
														m_grpcen.ТврКод = f_rash.ОпКодТов and
														sld_kln.КлнКод = f_rash.ОпКодКлн and
														m_grpcen.ГрпЦен = sld_kln.ГрпЦен
													)*(1+НДС/100)

									, ТовСкидка = 
													(select top 1 СкдПрц1 
														from SKD_TAB 
														where 
															skd_tab.СкдКод = f_rash.ОпКодТов
															and skd_tab.СкдТип = 1
													--		and skd_tab.СкдПрц1 is not null
													)
									, КлнНаТов = 
													(select top 1 СкдПрц1 
														from SKD_TAB 
														where
															skd_tab.СкдКод = f_rash.ОпКодКлн
															and skd_tab.СкдДоп = f_rash.ОпКодТов
															and skd_tab.СкдТип = 6
													--		and СкдПрц1 is not null
													)
									, КлнНаВид = 
													(select top 1 СкдПрц1 
														from SKD_TAB, kat_tvr
														where 
															skd_tab.СкдКод = f_rash.ОпКодКлн
															and skd_tab.СкдДоп = kat_tvr.ТовВид
															and kat_tvr.ТовКод = f_rash.ОпКодТов
															and skd_tab.СкдТип = 7
													--		and skd_tab.скдПрц1 is not null
													)
									, КлнНаГрп = 
													(select top 1 СкдПрц1 
														from SKD_TAB, kat_tvr
														where 
															skd_tab.СкдКод = f_rash.ОпКодКлн
															and skd_tab.СкдДоп = kat_tvr.ТовГрп
															and kat_tvr.ТовКод=f_rash.ОпКодТов
															and skd_tab.СкдТип = 0
													--		and skd_tab.скдПрц1 is not null
													)
							from f_rash 
									INNER JOIN kat_tvr ON kat_tvr.ТовКод=f_rash.ОпКодТов
							
					) t
		) tt
) ttt
GO
/****** Object:  StoredProcedure [dbo].[Create_hist_skl_bonusV3]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ, Глухов ВЮ
-- Create date: 20-08-2014
-- Description:	Создает таблицу связей между фактическими продажами и бонусами
-- Замечание: после корректировки, внести изменения в связанную функцию Create_hist_skl_bonusV3komp
-- =============================================
CREATE PROCEDURE [dbo].[Create_hist_skl_bonusV3] 
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-45,@enddate)
	end

    -- Insert statements for procedure here
	declare @curdate date, @curenddate date
	set @curdate = @startdate
	--set @curenddate = DATEADD(DAY,1,@curdate)


	
	WHILE @curdate/*@curenddate*/ <= @enddate
	BEGIN
		delete from Hist_skl_bon  --(NOLOCK) --WITH (TABLOCK)
		where ОпНаклКод in	(
								select ls.ОпНаклКод
								from list_skl (NOLOCK) as ls
								where --ls.ОпДатаРасч between @startdate and @enddate
									ls.ОпДатаРасч between @curdate and @curdate ---@curenddate
									or ls.ОпДатаРасч is NULL --удалим все неправильные записи, т.е. отсутствующие в list_skl
							)
		
		insert into Hist_skl_bon /*WITH (TABLOCK)*/ (ОпНаклКод,ОпТовНом, idBon, idBonTvr,idBon_type, Stavka)
		select 
			hs.ОпНаклКод,
			hs.ОпТовНом,
			tbn0.idBon,
			tbn0.idBonTvr,
			tbn0.idBon_type ,
			tbn0.Stavka
		from list_skl (NOLOCK) as ls
			inner join KAT_KLN as cl on ls.ОпКлн = cl.КлнКод
			inner join	(--выбирем все записи которые удовлетворяют критерию по торговым точкам БЕЗ ИСКЛЮЧЕНИЙ
							select
								bn.idBon
								,btt.idKLN
								,idTT
								,idKatKL
								,bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
							from [Бонус].[dbo].Bonus (NOLOCK) as bn
								left join [Бонус].[dbo].[Bonus_tt] (NOLOCK) as btt on bn.idbon = btt.idbon and btt.iskl = 0 --указанные явно и нет (все)
							--where btt.idBon 
								
						) as btt0 on 
						ls.ОпДатаРасч between btt0.date_beg and btt0.date_end
						and
						(
							(btt0.idKLN = ls.ОпКлн and btt0.idTT = 0) --по всему клиенту
							or (btt0.idKLN = ls.ОпКлн and btt0.idTT = ls.КодАдрДоставки) --по торговой точке клиента
							or (btt0.idKLN = 0 and btt0.idTT is NULL and btt0.idKatKL = cl.КлнГрпКод) --по группе клиентов
							or (btt0.idKLN is NULL and btt0.idTT is NULL and btt0.idKatKL is NULL) --все клиенты
						)
			left join	(--уберем корень зла по торговым точкам ТОЛЬКО ИСКЛЮЧЕНИЯ
							select
								bn.idBon
								,btt.idKLN
								,idTT
								,idKatKL
								,bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
								,TTiskl = '1'
							from [Бонус].[dbo].Bonus (NOLOCK) as bn
								inner join [Бонус].[dbo].[Bonus_tt] (NOLOCK) as btt on bn.idbon = btt.idbon and btt.iskl = 1 --исключения
						) as btt1 on 
						ls.ОпДатаРасч between btt1.date_beg and btt1.date_end
						and btt0.idBon = btt1.idBon
						and
						(
							(btt1.idKLN = ls.ОпКлн and btt1.idTT = 0) --по всему клиенту
							or (btt1.idKLN = ls.ОпКлн and btt1.idTT = ls.КодАдрДоставки) --по торговой точке клиента
							or (btt1.idKLN = 0 and btt1.idTT is NULL and btt1.idKatKL = cl.КлнГрпКод) --по группе клиентов
						)
			--прицепим паровозик из табличной части накладных
			inner join hist_skl (NOLOCK) as hs on hs.ОпНаклКод = ls.ОпНаклКод
			inner join KAT_TVR (NOLOCK) as kt on hs.ОпКодТов = kt.ТовКод
			inner join KAT_GRPT (NOLOCK) as kg on kt.ТовГрп = kg.ГрпКод
			inner join ( --добавим данные по бунусам в которых идет четкое указание по товарам, товарным группам и товарным видам
						 --данные действия произведем по всем Клиентам, Группам клиентов и ТТ указанных в бонусах без исключений
						select 
							bn.idBon,
							bn.idBon_type ,
							--bn.idNFКлнКод, 
							btv.idBonTvr,
							btv.idTVR, 
							btv.idTVRGRP, 
							btv.idTVRVID, 
							'Stavka' =	btp.sign_type *
										case 
											when btv.StavkaBon > 0 
											then btv.StavkaBon
											when bn.StavkaBonDef > 0 and (btv.StavkaBon <= 0 or btv.StavkaBon is NULL)
											then bn.StavkaBonDef
										end,
							bn.date_beg
							,date_end =	case
											when bn.date_end is NULL then @enddate
											else bn.date_end
										end
						from [Бонус].[dbo].Bonus as bn
							left join [Бонус].[dbo].Bonus_Tvr as btv on bn.idbon = btv.idbon and (btv.iskl = 0 or btv.iskl is NULL)
							left join [Бонус].[dbo].[Bon_type] as btp on bn.idBon_type = btp.id_type
						where 
							(bn.StavkaBonDef > 0 or btv.StavkaBon > 0) --выбирем товар где бонус больше 0
							and bn.idNFКлнКод > 0 --уберем программы без указания получателя
							and bn.idBon_Stat = 1 --выбирем только действующие программы
							
						) as tbn0 on 
							ls.ОпДатаРасч between tbn0.date_beg and tbn0.date_end
							and tbn0.idBon = btt0.idBon
							and
							(
								(tbn0.idTVR is NULL and tbn0.idTVRVID is NULL and tbn0.idTVRGRP = kt.ТовГрп) --Бонус по Группе
								or (tbn0.idTVR is NULL and tbn0.idTVRVID = kt.ТовВид and ((tbn0.idTVRGRP is NULL) or (tbn0.idTVRGRP is not NULL))) --Бонус по Виду
								or (tbn0.idTVR = hs.ОпКодТов and ((tbn0.idTVRVID is NULL) or (tbn0.idTVRVID is not NULL)) and ((tbn0.idTVRGRP is NULL) or (tbn0.idTVRGRP is not NULL))) --Бонус по Товару
								or (tbn0.idTVR is NULL and tbn0.idTVRVID is NULL and tbn0.idTVRGRP is NULL) --Все товары по Бонусу !!!При отсутствии каких либо исключений
							)
			left join	( --добавим таблицу исключений по товарам
							select 
								bn.idBon, 
								bn.idBon_type ,
								btv.idTVR, 
								btv.idTVRGRP, 
								btv.idTVRVID, 
								TVRiskl = '1',
								bn.date_beg
								,date_end =	case
												when bn.date_end is NULL then @enddate
												else bn.date_end
											end
							from [Бонус].[dbo].Bonus (NOLOCK) as bn
								left join [Бонус].[dbo].Bonus_Tvr as btv on bn.idbon = btv.idbon and btv.iskl = 1
							where 
								(bn.StavkaBonDef > 0 or btv.StavkaBon > 0) --выбирем товар где бонус больше 0
								and bn.idNFКлнКод > 0 --уберем программы без указания получателя
								and bn.idBon_Stat = 1 --выбирем только действующие программы
						) as tbn1 on 
						ls.ОпДатаРасч between tbn1.date_beg and tbn1.date_end
						and tbn1.idBon = btt0.idBon
						and
						(
							(tbn1.idTVR is NULL and tbn1.idTVRVID is NULL and tbn1.idTVRGRP = kt.ТовГрп) --Бонус по Группе
							or (tbn1.idTVR is NULL and tbn1.idTVRVID = kt.ТовВид and ((tbn1.idTVRGRP is NULL) or (tbn1.idTVRGRP is not NULL))) --Бонус по Виду
							or (tbn1.idTVR = hs.ОпКодТов and ((tbn1.idTVRVID is NULL) or (tbn1.idTVRVID is not NULL)) and ((tbn1.idTVRGRP is NULL) or (tbn1.idTVRGRP is not NULL))) --Бонус по Товару
						)
		
		where --ls.ОпДатаРасч between @startdate and @enddate
			--ls.ОпДатаРасч between @curdate and @curenddate
			ls.ОпДатаРасч = @curdate
			and btt1.TTiskl is NULL --уберем исключения по (Клиентам, ТТ, Группам)
			and tbn1.TVRiskl is NULL --уберем исключения по Товарам

		print 'Обработали основные    ' + convert(varchar, @curdate) + ','+ CAST(GETDATE() AS VARCHAR(20)) --+ ' : ' + convert(varchar, @curenddate)
		-- 20141223 обработка компенсационных бонусов
        EXEC [dbo].[Create_hist_skl_bonusV3komp] 	@curdate,@curdate

		print 'Обработали компенсации ' + convert(varchar, @curdate) + ','+ CAST(GETDATE() AS VARCHAR(20)) --+ ' : ' + convert(varchar, @curenddate)
		set @curdate = DATEADD(DAY, 1, @curdate)
		--set @curenddate = DATEADD(DAY,1,@curdate)
	END
	--select 'CountRows_DelFrom-Hist_skl_bon' = @@ROWCOUNT-1
	--select 'CountRows_InsertINTO-Hist_skl_bon' = @@ROWCOUNT-1
END
GO
/****** Object:  StoredProcedure [dbo].[Нарзан_продажи]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		ХолмогороваА, ГлуховВ
-- Create date: 20140925
-- Description:	Вывод таблицы Нарзан_продажи
-- =============================================



CREATE PROCEDURE [dbo].[Нарзан_продажи]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = cast(GETDATE() as date)
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-7,@enddate)
	end

		select 
		'6679032356' [ИНН_дистрибьютора]
		,'667901001' [КПП_дистрибьютора]
		,cast(list_skl.ОпДатаРасч as date) [Дата_продажи]  
		,list_skl.ОпНакл [Документ_продажи]
		,k1.КлнКод [Код_контрагента]
		,k1.КлнНаим+''+АдресДоставки [Наименование_контрагента_и_адрес_доставки]
		,kat_tvr.ТовКод [Код_товара]
		,kat_tvr.ТовНаим [Наименование товара]
		,case when LIST_SKL.ОпТип=1 AND LIST_SKL.ОпВозврат=1 then (-1)*sum(h.ОпКол) else sum(h.ОпКол) end [Количество]
		,h.ОпЦена [Цена_с_НДС]
		,sum(h.ОпКол)*h.ОпЦена [Сумма_с_НДС]
		,kp.СотрФамилия+''+kp.СотрИмя+''+kp.СотрОтчество [ФИО_Торгового_представителя]
		from PR_Euras.dbo.LIST_SKL 
					left JOIN PR_Euras.dbo.HIST_SKL h ON  PR_Euras.dbo.LIST_SKL.ОпНаклКод=h.ОпНаклКод
					left JOIN PR_Euras.dbo.KAT_TVR ON h.ОпКодТов= PR_Euras.dbo.KAT_TVR.ТовКод
					left join PR_Euras.dbo.KAT_KLN k1 on  PR_Euras.dbo.LIST_SKL.ОпКлн=k1.КлнКод
					inner join PR_Euras.dbo.CLN_DKL d1 on k1.КлнКод=d1.КлнКод
					left join PR_Euras.dbo.KAT_KLN k2 on d1.КодГлКлн=k2.КлнКод
					left join PR_Euras.dbo.KAT_PPL kp on d1.МнджКод=kp.СотрКод
					LEFT JOIN PR_Euras.dbo.KLN_ADK a ON a.КодАдресаДоставки =  PR_Euras.dbo.LIST_SKL.КодАдрДоставки
					left join PR_Euras.dbo.KAT_TWN tv1 on a.КодГорода=tv1.КодГород
					left join PR_Euras.dbo.KAT_TWN tv2 on d1.КодГород=tv2.КодГород  
					left join PR_Euras.dbo.KAT_TWN tv3 on d1.КодГородГруз=tv3.КодГород
		     
					left outer join PR_Euras.dbo.KAT_PDR AS pdrk ON pdrk.ПдрКод = kp.СотрПодр
					left join PR_Euras.dbo.KAT_GRPK AS grpk ON k1.КлнГрпКод = grpk.ГрпКод 
					left join PR_Euras.dbo.KAT_VIDT kv on kv.ВидКод=KAT_TVR.ТовВид
					left join PR_Euras.dbo.D_TVR dt on dt.ТовКод = PR_Euras.dbo.KAT_TVR.ТовКод
		WHERE (KAT_TVR.ТовГрп=70)
			and PR_Euras.dbo.LIST_SKL.ОпСкл in (110, 111, 65, 113, 102, 103) --(92,93,88,65,75,110,111)
			AND (PR_Euras.dbo.LIST_SKL.ОпКлнТип=2) 
			AND ((LIST_SKL.ОпТип=2 AND LIST_SKL.ОпВозврат=0) or (PR_Euras.dbo.LIST_SKL.ОпТип=1 AND PR_Euras.dbo.LIST_SKL.ОпВозврат=1))
			AND (cast(PR_Euras.dbo.LIST_SKL.ОпДатаРасч as date) between Cast(@startDate as date) and Cast(@endDate as date))

		group by /*'123456'
		,'654321'
		,*/cast(list_skl.ОпДатаРасч as date)
		,list_skl.ОпНакл 
		,k1.КлнКод 
		,k1.КлнНаим+''+АдресДоставки
		,kat_tvr.ТовКод
		,kat_tvr.ТовНаим
		,h.ОпЦена
		,kp.СотрФамилия+''+kp.СотрИмя+''+kp.СотрОтчество
		,LIST_SKL.ОпТип
		,LIST_SKL.ОпВозврат

END
GO
/****** Object:  View [dbo].[KLN_G_TVR]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KLN_G_TVR]
AS
SELECT     dbo.KAT_TVR.ТовКод, dbo.KAT_TVR.ТовГрп, dbo.KAT_TVR.ТовВид, dbo.KAT_TVR.ТовЦенаРСХ, dbo.KLN_G.КлнКод, dbo.KLN_G.ГрпЦен
FROM         dbo.KLN_G CROSS JOIN
                      dbo.KAT_TVR
GO
/****** Object:  View [dbo].[Заказы_Номера Перекресток]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*WHERE     (ЗкзКлн = 8538)*/
CREATE VIEW [dbo].[Заказы_Номера Перекресток]
AS
SELECT     CASE WHEN PATINDEX('%-%', zak.ЗкзНом) > 0 THEN (SUBSTRING(zak.ЗкзНом, (PATINDEX('%-%', zak.ЗкзНом)) + 1, LEN(zak.ЗкзНом) - ((PATINDEX('%-%', 
                      zak.ЗкзНом)) - 1))) ELSE zak.ЗкзНом END AS ЗкзНомИсп, zak.ЗкзДатаРасч, zak.ЗкзНом AS ЗкзНомОриг, zak.ЗкзКод, 
                      dbo.Заказ_Накладная_Сф.ЗкзДатаРасч AS ЗкзДатаРасчОриг, dbo.Заказ_Накладная_Сф.ДатаНаклад, dbo.Заказ_Накладная_Сф.ДатаСФ, 
                      dbo.Заказ_Накладная_Сф.НомерСФ, dbo.Заказ_Накладная_Сф.АвтокодСФ, dbo.Заказ_Накладная_Сф.GLN
FROM         dbo.LIST_ZKZ AS zak INNER JOIN
                      dbo.Заказ_Накладная_Сф ON zak.ЗкзНом = dbo.Заказ_Накладная_Сф.ЗкзНом
WHERE     (zak.ЗкзКлн = 8538)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "zak"
            Begin Extent = 
               Top = 32
               Left = 168
               Bottom = 267
               Right = 361
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Заказ_Накладная_Сф"
            Begin Extent = 
               Top = 47
               Left = 537
               Bottom = 284
               Right = 706
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 19
         Width = 284
         Width = 1500
         Width = 2010
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1695
         Table = 2280
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Заказы_Номера Перекресток'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Заказы_Номера Перекресток'
GO
/****** Object:  View [edi].[Проверка_матриц]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [edi].[Проверка_матриц]
AS
SELECT     TOP (100) PERCENT sb.SKUCODE, sb.UPC, t.ТовКод, t.ТовНаим, dbo.KGVT.КлнКод, dbo.KGVT.КодАдресаДоставки
FROM         dbo.SKU_BARCODE AS sb INNER JOIN
                      dbo.KAT_TVR AS t ON sb.SKUCODE = t.ТовАрт LEFT OUTER JOIN
                      dbo.KGVT ON dbo.KGVT.ТовКод = t.ТовКод
WHERE     (NOT (sb.UPC IS NULL))
ORDER BY CASE WHEN (SKUCODE LIKE '%w%') THEN 1 ELSE 0 END, t.БФ & 1 DESC, t.БФ & 524288 DESC, dbo.KGVT.dst, t.БФ & 262144 DESC, t.БФ & 2097152 DESC, 
                      sb.SKUCODE
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[29] 4[39] 2[13] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "sb"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "t"
            Begin Extent = 
               Top = 6
               Left = 236
               Bottom = 114
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KGVT"
            Begin Extent = 
               Top = 6
               Left = 434
               Bottom = 114
               Right = 620
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'edi', @level1type=N'VIEW',@level1name=N'Проверка_матриц'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'edi', @level1type=N'VIEW',@level1name=N'Проверка_матриц'
GO
/****** Object:  View [edi].[Проверка_Адреса]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [edi].[Проверка_Адреса]
AS
SELECT     TOP (100) PERCENT sb.SKUCODE, sb.UPC, t.ТовКод, t.ТовНаим, dbo.KGVT.КлнКод, dbo.KGVT.КодАдресаДоставки
FROM         dbo.SKU_BARCODE AS sb INNER JOIN
                      dbo.KAT_TVR AS t ON sb.SKUCODE = t.ТовАрт LEFT OUTER JOIN
                      dbo.KGVT ON dbo.KGVT.ТовКод = t.ТовКод
WHERE     (NOT (sb.UPC IS NULL))
ORDER BY CASE WHEN (SKUCODE LIKE '%w%') THEN 1 ELSE 0 END, t.БФ & 1 DESC, t.БФ & 524288 DESC, dbo.KGVT.dst, t.БФ & 262144 DESC, t.БФ & 2097152 DESC, 
                      sb.SKUCODE
GO
/****** Object:  View [dbo].[KLN_NF_List_zachet]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*UNION 
SELECT '* Любая НФ ' ,NULL, NULL, NULL , NULL
ORDER BY 1*/
CREATE VIEW [dbo].[KLN_NF_List_zachet]
AS
SELECT     TOP (100) PERCENT КлнНаим, КлнКод, КлнГрпКод, КлнТип, НомерПостав
FROM         dbo.KAT_KLN
WHERE     (КлнКод IN
                          (SELECT     НашаФирма
                            FROM          dbo.LIST_SKL
                            WHERE      (ОпНаклКод IN
                                                       (SELECT     ОпНаклКод
                                                         FROM          dbo.list_skl_total_full))))
ORDER BY КлнНаим
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[15] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 197
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 1
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 2745
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KLN_NF_List_zachet'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KLN_NF_List_zachet'
GO
/****** Object:  View [dbo].[KLN_list_zachet]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KLN_list_zachet]
AS
SELECT     TOP (100) PERCENT КлнНаим, КлнКод, КлнГрпКод, КлнТип, НомерПостав
FROM         dbo.KAT_KLN
WHERE     (КлнКод IN
                          (SELECT     ОпКлн
                            FROM          dbo.LIST_SKL
                            WHERE      (ОпНаклКод IN
                                                       (SELECT     ОпНаклКод
                                                         FROM          dbo.list_skl_total_full))))
ORDER BY КлнНаим
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 6
               Left = 447
               Bottom = 240
               Right = 607
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 3120
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KLN_list_zachet'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KLN_list_zachet'
GO
/****** Object:  View [dbo].[Kontur_error3]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Kontur_error3]
AS
SELECT     ke.id, ke.class, ke.errorMessage, ke.zn2, ke.data, ke.[order], ke.data_ispv, ke.comment, ke.prov, ks.torgS, ks.addresMag, ks.NameMag, ks.Box, ke.difference, 
                      ks.GlntorgS
FROM         edi.Kontur_error AS ke INNER JOIN
                      dbo.KonturOrderStat AS ks ON ks.id = ke.[order]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ke"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 7
         End
         Begin Table = "ks"
            Begin Extent = 
               Top = 6
               Left = 245
               Bottom = 125
               Right = 414
            End
            DisplayFlags = 280
            TopColumn = 5
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Kontur_error3'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Kontur_error3'
GO
/****** Object:  View [dbo].[Kontur_error2]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Kontur_error2]
AS
SELECT     ke.id, ke.class, ke.errorMessage, ke.zn1, ke.zn2, ke.data, ke.[order], ke.data_ispv, ke.comment, ke.prov, ks.torgS, ks.addresMag, ks.NameMag, ks.Box
FROM         edi.Kontur_error AS ke INNER JOIN
                      dbo.KonturOrderStat AS ks ON ks.id = ke.[order]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ke"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ks"
            Begin Extent = 
               Top = 6
               Left = 245
               Bottom = 125
               Right = 414
            End
            DisplayFlags = 280
            TopColumn = 5
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Kontur_error2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Kontur_error2'
GO
/****** Object:  StoredProcedure [dbo].[FillDebetSlow]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[FillDebetSlow] AS
declare @PrevDate datetime
declare @CurDate datetime
declare @NextDate bigint
declare @PrevCln bigint
declare @PrevSaldo money
declare @Period int
declare @EmptyDate datetime

declare @Debet  as cursor
declare @DbtSaldo money, @DbtDate bigint, @DbtCln bigint, @RealDate datetime

declare @DateInsert as datetime

set @EmptyDate=CONVERT(datetime,'01.01.1900',104)

set @Debet=cursor local for select f_debet.ДбтКлнКод,f_debet.ДбтДата,f_debet.ДбтСальдо,d_dates.ДатыРасч 
from f_debet join d_dates on f_debet.ДбтДата=d_dates.ДатыКод
order by f_debet.ДбтКлнКод,d_dates.ДатыРасч
open @Debet
fetch next from @Debet into @DbtCln, @DbtDate, @DbtSaldo, @RealDate
set @PrevDate=@RealDate
set @PrevCln=@DbtCln
set @PrevSaldo=@DbtSaldo
while @@FETCH_STATUS=0
  begin
    if @PrevCln=@DbtCln
      begin
        set @CurDate=@RealDate
        set @Period=DateDiff(dd,@PrevDate,@CurDate)
        while @Period>1
           begin
              set @NextDate=(select ДатыКод from d_dates where ДатыРасч=DateAdd(dd,-@Period+1,@CurDate))
              exec InsertDebet @DbtCln,@NextDate,@PrevSaldo
              set @Period=@Period-1
           end
        set @PrevDate=@CurDate
        set @PrevSaldo=@DbtSaldo 
      end
   else
      begin
        set @CurDate=CONVERT(datetime,'01.01.'+CAST(Year(GetDate())+1 as char(4)),104)
        set @Period=DateDiff(dd,@PrevDate,@CurDate)
        while @Period>1
           begin
              set @NextDate=(select ДатыКод from d_dates where ДатыРасч=DateAdd(dd,-@Period+1,@CurDate))
              if (select ДбтКлнКод from f_debet where ДбтКлнКод=@PrevCln and ДбтДата=@NextDate) is NULL
                begin
                   exec InsertDebet @PrevCln,@NextDate,@PrevSaldo
                end
              set @Period=@Period-1
           end
        set @PrevCln=@DbtCln
        set @PrevDate=@RealDate
        set @PrevSaldo=@DbtSaldo
      end 
    fetch next from @Debet into @DbtCln, @DbtDate, @DbtSaldo,@RealDate
  end
  set @CurDate=CONVERT(datetime,'01.01.'+CAST(Year(GetDate())+1 as char(4)),104)
  set @Period=DateDiff(dd,@PrevDate,@CurDate)
  while @Period>1
     begin
        set @NextDate=(select ДатыКод from d_dates where ДатыРасч=DateAdd(dd,-@Period+1,@CurDate))
        if (select ДбтКлнКод from f_debet where ДбтКлнКод=@PrevCln and ДбтДата=@NextDate) is NULL
           begin
              exec InsertDebet @PrevCln,@NextDate,@PrevSaldo
           end
        set @Period=@Period-1
     end
GO
/****** Object:  StoredProcedure [dbo].[FillDebet]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[FillDebet] AS
declare @Debet as cursor 
declare @DCln int
declare @FDDate datetime,@LDDate datetime
declare @IsDFetch decimal
declare @CurDate int, @CurDDate datetime
declare @TestDate int, @TestDDate datetime
declare @LSaldo numeric (18,3)

set @Debet=cursor for select ДбтКлнКод from f_debet
group by ДбтКлнКод

select @LDDate=CONVERT(datetime,'31.12.'+CAST(Year(GetDate()) as char(4)),104) from d_dates

open @Debet
fetch next from @Debet into @DCln
set @IsDFetch = @@FETCH_STATUS
While (@IsDFetch=0)
  begin
    select @FDDate=Min(ДатыРасч) from d_dates join f_debet
      on d_dates.ДатыКод=f_debet.ДбтДата
      where ДбтКлнКод=@DCln
    while (Month(@FDDate)=Month(DATEADD(dd,1,@FDDate)))
      begin
        set @FDDate=DATEADD(dd,1,@FDDate)
      end
    set @CurDDate=@FDDate
    while (@CurDDate<=@LDDate)
      begin
        select @CurDate=ДатыКод from d_dates where ДатыРасч=@CurDDate
        set @TestDate=Null
        select @TestDate=ДбтДата from f_debet 
          where ДбтКлнКод=@DCln and ДбтДата=@CurDate
        if (@TestDate is null)
          begin
            set @TestDDate=Null
            set @TestDate=Null
            set @LSaldo=0
            select @TestDDate=max(ДатыРасч) from f_debet join d_dates
              on f_debet.ДбтДата=d_dates.ДатыКод
              where ДбтКлнКод=@DCln and ДатыРасч<=@CurDDate
            select @TestDate=ДатыКод from d_dates where ДатыРасч=@TestDDate
            if (@TestDate is null)
              begin
                 insert d_dates (ДатыРасч) values (@TestDDate)
                 select @TestDate=ДатыКод from d_dates where ДатыРасч=@TestDDate
              end
            select @LSaldo=ДбтСальдо from f_debet where ДбтКлнКод=@DCln and ДбтДата=@TestDate
            exec InsertDebet @DCln,@CurDate,@LSaldo
          end
        set @CurDDate=DATEADD(mm,1,@CurDDate)
        while (Month(@CurDDate)=Month(DATEADD(dd,1,@CurDDate)))
          begin
            set @CurDDate=DATEADD(dd,1,@CurDDate)
          end
      end
    fetch next from @Debet into @DCln
    set @IsDFetch = @@FETCH_STATUS
  end
GO
/****** Object:  View [dbo].[Vw_kpk_clients_copy]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_kpk_clients_copy]
AS
SELECT     dbo.Vw_KPK_Clients_1.КлнКод, dbo.Vw_KPK_Clients_1.КлнНаим, ISNULL(dbo.KLN_ADK.АдресДоставки, dbo.Vw_KPK_Clients_1.КлнАдрес) 
                      AS КлнАдрес, dbo.Vw_KPK_Clients_1.ИНН, ISNULL(dbo.KAT_TWN.ГородНаим, dbo.Vw_KPK_Clients_1.Город) AS Город, 
                      dbo.Vw_KPK_Clients_1.Адрес, dbo.Vw_KPK_Clients_1.СотрОтчество, dbo.Vw_KPK_Clients_1.СотрФамилияИмя, 
                      dbo.Vw_KPK_Clients_1.ГрпСотрНаим, dbo.Vw_KPK_Clients_1.ГрпКлнНаим, dbo.Vw_KPK_Clients_1.Nдоговора, dbo.Vw_KPK_Clients_1.Сальдо, 
                      dbo.Vw_KPK_Clients_1.КлнКод AS ГрпЦен, RTRIM(LTRIM(RTRIM(CAST(dbo.Vw_KPK_Clients_1.КлнКод AS varchar)) 
                      + '/' + ISNULL(LTRIM(CAST(dbo.KLN_ADK.КодАдресаДоставки AS varchar)), '0'))) AS КодКлн_КодАдрДоставки
FROM         dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода RIGHT OUTER JOIN
                      dbo.Vw_KPK_Clients_1 ON dbo.KLN_ADK.КодКлиента = dbo.Vw_KPK_Clients_1.КлнКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 84
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 413
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_KPK_Clients_1"
            Begin Extent = 
               Top = 53
               Left = 297
               Bottom = 161
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 5
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 7320
         Alias = 3270
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_kpk_clients_copy'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_kpk_clients_copy'
GO
/****** Object:  View [dbo].[Vw_KPK_KAT_PPL]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_KAT_PPL]
AS
SELECT     LTRIM(RTRIM(СотрФамилия)) + ' ' + LTRIM(RTRIM(СотрИмя)) AS СотрФамилияИмя, СотрКод
FROM         dbo.KAT_PPL
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_PPL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 192
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 4005
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_KAT_PPL'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_KAT_PPL'
GO
/****** Object:  StoredProcedure [wms].[fill]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [wms].[fill]
AS
BEGIN TRY
		BEGIN TRAN;
		exec wms.clear;
		INSERT INTO
		[wms].[sku]
			(
				[host_id]
			  ,[shelf_life]
			  ,[veterinary_doc])
		SELECT s.[host_id]      
			  ,s.[shelf_life]
			  ,CASE WHEN s.sku_pack in (select id from [WMS]..[WMS].SKU_PACKS where UPPER(sku_packs.pack) like '%ВЕТ%') THEN 1 ELSE 0 END [Вет.Док.]
		  FROM [WMS]..[WMS].[SKU] s
		WHERE   not([host_id] is null)
		AND REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE([host_id],'0',''),'1',''),'2',''),'3',''),'4',''),'5',''),'6',''),'7',''),'8',''),'9','')=''
		COMMIT TRAN;
END TRY
BEGIN CATCH
		ROLLBACK TRAN;
END CATCH
GO
/****** Object:  StoredProcedure [cube].[Fill_Hist_skl_old]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [cube].[Fill_Hist_skl_old]
AS

/*  

-- обязательно добавить индекс 

CREATE NONCLUSTERED INDEX [index_HIST_SKL_ОпНаклКод] ON [dbo].[HIST_SKL] 
(
	[ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

*/

 SELECT 
	  [INVOICENUMBER]
	  ,[INVOICETYPE]
	  ,[INVOICESKL]
	  ,[SKU]
	  ,min(PercentLife) PercentLife
   into #hsl   
  FROM [PR_Euras].[wms].[HIST_SKL_SKULife]
  where 
  not ([INVOICENUMBER] is null)
  and not ([INVOICETYPE]is null)
  and not ([INVOICESKL] is null)
  and not ([SKU] is null)
group by [INVOICENUMBER]
	  ,[INVOICETYPE]
	  ,[INVOICESKL]
		,[SKU]
		
SELECT        max(ДокКод) ДокКод, Скл, ФлгОпер, Накл
   into #zkz_nkl
   FROM            dbo.zkz_nkl AS z
   where  z.Тип = 4
   GROUP BY Скл, ФлгОпер, Накл
select * from #zkz_nkl 
   
SELECT        dbo.HIST_SKL.ОпКод, dbo.HIST_SKL.ОпКодТов, k.ТовВид, dbo.HIST_SKL.ОпКол, dbo.HIST_SKL.ОпТип, dbo.HIST_SKL.ОпЦена, dbo.HIST_SKL.ОпКодУпак, 
                         dbo.HIST_SKL.ОпСкл, dbo.HIST_SKL.ОпВозвр, dbo.HIST_SKL.ОпНакл, dbo.HIST_SKL.ОпНаклКод, dbo.HIST_SKL.ОпТипКлн, 
                         dbo.HIST_SKL.ОпТовНом,                          
                         dbo.HIST_SKL.ОпЦена * dbo.HIST_SKL.ОпКол AS ОпСтоим, 
                         dbo.LIST_SKL.ОпКлн, dbo.LIST_SKL.ОпДатаРасч ,    -- ОпДатаРасч                     
                         ISNULL(KLN_ADK.КодАдресаДоставки, 0) AS КодАдрДоставки, --если адреса не существует, то берем адрес клиента
                         CONVERT(int,dbo.LIST_SKL.ОпСотр) AS ОпСотр, 
                         dbo.LIST_SKL.ОпТип AS ОпТипSKL, dbo.LIST_SKL.НашаФирма, 
                         --dbo.CLN_DKL.МнджКод AS МнджКлн, 
                         --dbo.KLN_ADK.МнджКод AS МнджАдр,                           						 
                         t.ТовВесБрутто * dbo.HIST_SKL.ОпКол AS ВесБрутто, 
                         t.ТовВесНетто * dbo.HIST_SKL.ОпКол AS ВесНетто, 
                         t.Объем * dbo.HIST_SKL.ОпКол AS Объем,                         
                         zkz_nkl.ДокКод AS КодТТН,
                         ''--COALESCE (KLN_ADK.АдресДоставки, CLN_DKL.КлнАдрес)
                          AS АдресДоставки    
                         ,hsl.PercentLife 
                         ,ws.[veterinary_doc]                     
                         ,HIST_SKL.АкцияКод
INTO #t2 
FROM            dbo.LIST_SKL 
INNER JOIN dbo.HIST_SKL ON dbo.LIST_SKL.ОпНаклКод = dbo.HIST_SKL.ОпНаклКод 
LEFT OUTER JOIN  --нужно для проверки правильности адреса клиента
         dbo.KLN_ADK ON dbo.KLN_ADK.КодАдресаДоставки = dbo.LIST_SKL.КодАдрДоставки and KLN_ADK.КодКлиента = LIST_SKL.ОпКлн  
LEFT OUTER JOIN  --dbo.CLN_DKL ON dbo.LIST_SKL.ОпКлн = dbo.CLN_DKL.КлнКод LEFT OUTER JOIN
         dbo.KAT_TVR AS k ON HIST_SKL.ОпКодТов = k.ТовКод 
LEFT OUTER JOIN [wms].[sku] ws ON ws.[host_id] = k.ТовКод 
LEFT JOIN dbo.TVR_DEF AS t ON k.ТовКод = t.ТовКод 
LEFT OUTER JOIN #zkz_nkl zkz_nkl ON (dbo.LIST_SKL.ОпСкл = zkz_nkl.Скл) AND (dbo.LIST_SKL.ОпТип = zkz_nkl.ФлгОпер) AND (zkz_nkl.Накл = dbo.LIST_SKL.ОпНакл)
         LEFT JOIN #hsl hsl on LIST_SKL.ОпНакл = hsl.INVOICENUMBER and LIST_SKL.ОпТип = hsl.INVOICETYPE and  LIST_SKL.ОпСкл = hsl.INVOICESKL and HIST_SKL.ОпКодТов = hsl.SKU

SELECT *
,SUM(ОпСтоим) OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки) Отгрузка --АдресДоставки
,SUM(Объем)  OVER (PARTITION BY КодТТН) ОбъемОтгрузки
,SUM(ВесБрутто)  OVER (PARTITION BY КодТТН) ВесОтгрузки
,SUM(CAST([veterinary_doc] AS INT)) OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки,НашаФирма, case when ТовВид in (1218,1219,1220,1221,1222,1231,1232,1351,1357) then 1 else 0 end) РасхНаВет
INTO #t1
 FROM #t2 t


TRUNCATE TABLE [cube].[Hist_skl]
INSERT INTO [cube].[Hist_skl]
           ([ОпКод]
           ,[ОпКодТов]
           ,[ОпКол]
           ,[ОпТип]
           ,[ОпЦена]
           ,[ОпКодУпак]
           ,[ОпСкл]
           ,[ОпВозвр]
           ,[ОпНакл]
           ,[ОпНаклКод]
           ,[ОпТипКлн]
           ,[ОпТовНом]
           ,[ОпСтоим]
           ,[ОпКлн]
           ,[ОпДатаРасч]
           ,[КодАдрДоставки]
           ,[ОпСотр]
           ,[ОпТипSKL]
           ,[НашаФирма]
           --,[МнджКлн]
           --,[МнджАдр]
           ,[ВесБрутто]
           ,[ВесНетто]
           ,[КодТТН]
           ,[АдресДоставки]
           ,[Отгрузка]           
           ,Объем           
           ,ЦенаТранспОтОбъема
           ,ЦенаТранспОтВеса
           ,[SippingGradientID]
           ,ОставшийсяСрокГодности
           ,РасхНаВет
           ,КолВетТов
           ,АкцияКод
           ,dst
           )           
SELECT  
[ОпКод]
           ,[ОпКодТов]
           ,[ОпКол]
           ,[ОпТип]
           ,[ОпЦена]
           ,[ОпКодУпак]
           ,[ОпСкл]
           ,[ОпВозвр]
           ,[ОпНакл]
           ,[ОпНаклКод]
           ,[ОпТипКлн]
           ,[ОпТовНом]           
           ,[ОпСтоим]           
           ,[ОпКлн]
           ,[ОпДатаРасч] -- 
           ,[КодАдрДоставки]
           ,[ОпСотр]
           ,[ОпТипSKL]
           ,t.[НашаФирма]                               
           ,[ВесБрутто]
           ,[ВесНетто]
           ,t.[КодТТН]
           ,[АдресДоставки]
           ,[Отгрузка]
           ,[Объем]           
           ,case when ОбъемОтгрузки = 0 then 0 else ttn.СуммЗатр*[Объем]/ОбъемОтгрузки end ЦенаТранспОтОбъема
           ,case when ВесОтгрузки = 0 then 0 else ttn.СуммЗатр*[ВесБрутто]/ВесОтгрузки end ЦенаТранспОтВеса
,
--1500, 1501 - 4000, 4001 -10000, 10001
CASE
WHEN Отгрузка > 0 AND Отгрузка <= 1500 THEN 1
WHEN Отгрузка > 1500 AND Отгрузка <= 4000 THEN 2
WHEN Отгрузка > 4000 AND Отгрузка <= 10000 THEN 3
WHEN Отгрузка > 10000 THEN 4
END
SippingGradientID
,PercentLife
,CASE WHEN (РасхНаВет <> 0) AND ([veterinary_doc] = 1) THEN 1.0/РасхНаВет ELSE NULL END РасхНаВет
,CASE [veterinary_doc] WHEN 0 THEN NULL ELSE [veterinary_doc] END
,АкцияКод
,kgvt.dst
FROM #t1 t
LEFT JOIN ttn_dkm ttn ON ttn.КодТТН = t.КодТТН
LEFT JOIN dbo.KGVT AS kgvt ON t.КодАдрДоставки = kgvt.КодАдресаДоставки AND t.ОпКлн = kgvt.КлнКод AND 
                                                    t.ОпКодТов = kgvt.ТовКод


/*
-- так было до 20140618

TRUNCATE TABLE [cube].[Hist_skl]
INSERT INTO [cube].[Hist_skl]
           ([ОпКод]
           ,[ОпКодТов]
           ,[ОпКол]
           ,[ОпТип]
           ,[ОпЦена]
           ,[ОпКодУпак]
           ,[ОпСкл]
           ,[ОпВозвр]
           ,[ОпНакл]
           ,[ОпНаклКод]
           ,[ОпТипКлн]
           ,[ОпТовНом]
           ,[ОпСтоим]
           ,[ОпКлн]
           ,[ОпДатаРасч]
           ,[КодАдрДоставки]
           ,[ОпСотр]
           ,[ОпТипSKL]
           ,[НашаФирма]
           --,[МнджКлн]
           --,[МнджАдр]
           ,[ВесБрутто]
           ,[ВесНетто]
           ,[КодТТН]
           ,[АдресДоставки]
           ,[Отгрузка]           
           ,Объем           
           ,ЦенаТранспОтОбъема
           ,ЦенаТранспОтВеса
           ,[SippingGradientID]
           ,ОставшийсяСрокГодности
           ,РасхНаВет
           ,КолВетТов
           ,АкцияКод
           ,dst
           )           
SELECT  
[ОпКод]
           ,[ОпКодТов]
           ,[ОпКол]
           ,[ОпТип]
           ,[ОпЦена]
           ,[ОпКодУпак]
           ,[ОпСкл]
           ,[ОпВозвр]
           ,[ОпНакл]
           ,[ОпНаклКод]
           ,[ОпТипКлн]
           ,[ОпТовНом]           
           ,[ОпСтоим]           
           ,[ОпКлн]
           ,[ОпДатаРасч]
           ,[КодАдрДоставки]
           ,[ОпСотр]
           ,[ОпТипSKL]
           ,t.[НашаФирма]                               
           ,[ВесБрутто]
           ,[ВесНетто]
           ,t.[КодТТН]
           ,[АдресДоставки]
           ,[Отгрузка]
           ,[Объем]           
           ,case when ОбъемОтгрузки = 0 then 0 else ttn.СуммЗатр*[Объем]/ОбъемОтгрузки end ЦенаТранспОтОбъема
           ,case when ВесОтгрузки = 0 then 0 else ttn.СуммЗатр*[ВесБрутто]/ВесОтгрузки end ЦенаТранспОтВеса
,
--1500, 1501 - 4000, 4001 -10000, 10001
CASE
WHEN Отгрузка > 0 AND Отгрузка <= 1500 THEN 1
WHEN Отгрузка > 1500 AND Отгрузка <= 4000 THEN 2
WHEN Отгрузка > 4000 AND Отгрузка <= 10000 THEN 3
WHEN Отгрузка > 10000 THEN 4
END
SippingGradientID
,PercentLife
,CASE WHEN (РасхНаВет <> 0) AND ([veterinary_doc] = 1) THEN 1.0/РасхНаВет ELSE NULL END РасхНаВет
,CASE [veterinary_doc] WHEN 0 THEN NULL ELSE [veterinary_doc] END
,АкцияКод
,kgvt.dst
FROM
(SELECT *

,SUM(ОпСтоим) OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки) Отгрузка --АдресДоставки
,SUM(Объем)  OVER (PARTITION BY КодТТН) ОбъемОтгрузки
,SUM(ВесБрутто)  OVER (PARTITION BY КодТТН) ВесОтгрузки
,SUM(CAST([veterinary_doc] AS INT)) OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки,НашаФирма, case when ТовВид in (1218,1219,1220,1221,1222,1231,1232,1351,1357) then 1 else 0 end) РасхНаВет
 FROM
(
SELECT        dbo.HIST_SKL.ОпКод, dbo.HIST_SKL.ОпКодТов, k.ТовВид, dbo.HIST_SKL.ОпКол, dbo.HIST_SKL.ОпТип, dbo.HIST_SKL.ОпЦена, dbo.HIST_SKL.ОпКодУпак, 
                         dbo.HIST_SKL.ОпСкл, dbo.HIST_SKL.ОпВозвр, dbo.HIST_SKL.ОпНакл, dbo.HIST_SKL.ОпНаклКод, dbo.HIST_SKL.ОпТипКлн, 
                         dbo.HIST_SKL.ОпТовНом,                          
                         dbo.HIST_SKL.ОпЦена * dbo.HIST_SKL.ОпКол AS ОпСтоим, 
                         dbo.LIST_SKL.ОпКлн, dbo.LIST_SKL.ОпДатаРасч,                         
                         ISNULL(KLN_ADK.КодАдресаДоставки, 0) AS КодАдрДоставки, --если адреса не существует, то берем адрес клиента
                         CONVERT(int,dbo.LIST_SKL.ОпСотр) AS ОпСотр, 
                         dbo.LIST_SKL.ОпТип AS ОпТипSKL, dbo.LIST_SKL.НашаФирма, 
                         --dbo.CLN_DKL.МнджКод AS МнджКлн, 
                         --dbo.KLN_ADK.МнджКод AS МнджАдр,                           						 
                         t.ТовВесБрутто * dbo.HIST_SKL.ОпКол AS ВесБрутто, 
                         t.ТовВесНетто * dbo.HIST_SKL.ОпКол AS ВесНетто, 
                         t.Объем * dbo.HIST_SKL.ОпКол AS Объем,                         
                         zkz_nkl.ДокКод AS КодТТН
                         ,''--COALESCE (KLN_ADK.АдресДоставки, CLN_DKL.КлнАдрес)
                          AS АдресДоставки    
                         ,hsl.PercentLife 
                         ,ws.[veterinary_doc]                     
                         ,HIST_SKL.АкцияКод
FROM            dbo.LIST_SKL INNER JOIN
                         dbo.HIST_SKL ON dbo.LIST_SKL.ОпНаклКод = dbo.HIST_SKL.ОпНаклКод LEFT OUTER JOIN
                         --нужно для проверки правильности адреса клиента
                         dbo.KLN_ADK ON dbo.KLN_ADK.КодАдресаДоставки = dbo.LIST_SKL.КодАдрДоставки and KLN_ADK.КодКлиента = LIST_SKL.ОпКлн  LEFT OUTER JOIN 
                         --dbo.CLN_DKL ON dbo.LIST_SKL.ОпКлн = dbo.CLN_DKL.КлнКод LEFT OUTER JOIN
                         dbo.KAT_TVR AS k ON HIST_SKL.ОпКодТов = k.ТовКод LEFT OUTER JOIN
                         [wms].[sku] ws ON ws.[host_id] = k.ТовКод LEFT JOIN
                         dbo.TVR_DEF AS t ON k.ТовКод = t.ТовКод LEFT OUTER JOIN                         
                         (
							SELECT        max(ДокКод) ДокКод, Скл, ФлгОпер, Накл
                               FROM            dbo.zkz_nkl AS z
                               where  z.Тип = 4
                               GROUP BY Скл, ФлгОпер, Накл
                               
                         ) zkz_nkl ON (dbo.LIST_SKL.ОпСкл = zkz_nkl.Скл) AND (dbo.LIST_SKL.ОпТип = zkz_nkl.ФлгОпер) AND (zkz_nkl.Накл = dbo.LIST_SKL.ОпНакл)
                         LEFT JOIN 
                         (SELECT 
								  [INVOICENUMBER]
								  ,[INVOICETYPE]
								  ,[INVOICESKL]
								  ,[SKU]
								  ,min(PercentLife) PercentLife
							      
							  FROM [PR_Euras].[wms].[HIST_SKL_SKULife]
							  where 
							  not ([INVOICENUMBER] is null)
							  and not ([INVOICETYPE]is null)
							  and not ([INVOICESKL] is null)
							  and not ([SKU] is null)
							group by [INVOICENUMBER]
								  ,[INVOICETYPE]
								  ,[INVOICESKL]
									,[SKU]
						)  hsl on LIST_SKL.ОпНакл = hsl.INVOICENUMBER and LIST_SKL.ОпТип = hsl.INVOICETYPE and  LIST_SKL.ОпСкл = hsl.INVOICESKL and HIST_SKL.ОпКодТов = hsl.SKU
                         
                         
) t 
) t 
LEFT JOIN ttn_dkm ttn ON ttn.КодТТН = t.КодТТН
LEFT JOIN dbo.KGVT AS kgvt ON t.КодАдрДоставки = kgvt.КодАдресаДоставки AND t.ОпКлн = kgvt.КлнКод AND 
                                                    t.ОпКодТов = kgvt.ТовКод



--exec cube.fill_skl_ost;                      
*/
GO
/****** Object:  View [dbo].[Vw_KPK_Clients]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_Clients]
AS
SELECT     dbo.Vw_KPK_Clients_1.КлнКод, dbo.Vw_KPK_Clients_1.КлнНаим, ISNULL(dbo.KLN_ADK.АдресДоставки, dbo.Vw_KPK_Clients_1.КлнАдрес) 
                      AS КлнАдрес, dbo.Vw_KPK_Clients_1.ИНН, ISNULL(dbo.KAT_TWN.ГородНаим, dbo.Vw_KPK_Clients_1.Город) AS Город, 
                      dbo.Vw_KPK_Clients_1.Адрес, dbo.Vw_KPK_Clients_1.СотрОтчество, dbo.Vw_KPK_Clients_1.СотрФамилияИмя, 
                      dbo.Vw_KPK_Clients_1.ГрпСотрНаим, dbo.Vw_KPK_Clients_1.ГрпКлнНаим, dbo.Vw_KPK_Clients_1.Nдоговора, dbo.Vw_KPK_Clients_1.Сальдо, 
                      dbo.Vw_KPK_Clients_1.КлнКод AS ГрпЦен, RTRIM(LTRIM(RTRIM(CAST(dbo.Vw_KPK_Clients_1.КлнКод AS varchar)) 
                      + '/' + ISNULL(LTRIM(CAST(dbo.KLN_ADK.КодАдресаДоставки AS varchar)), '0'))) AS КодКлн_КодАдрДоставки
FROM         dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода RIGHT OUTER JOIN
                      dbo.Vw_KPK_Clients_1 ON dbo.KLN_ADK.КодКлиента = dbo.Vw_KPK_Clients_1.КлнКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 86
               Left = 258
               Bottom = 164
               Right = 409
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 5
               Left = 447
               Bottom = 144
               Right = 633
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_KPK_Clients_1"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 159
               Right = 250
            End
            DisplayFlags = 280
            TopColumn = 6
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 15
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 7875
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Clients'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Clients'
GO
/****** Object:  View [dbo].[Vw_KPK_Assortiment1]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_Assortiment1]
AS
SELECT     TOP 100 PERCENT dbo.KAT_TVR.ТовКод, RTRIM(LTRIM(dbo.KAT_TVR.ТовНаим)) AS ТовНаим, RTRIM(LTRIM(dbo.D_TVR.ТовГрпНаим)) 
                      AS ТовГрпНаим, RTRIM(LTRIM(dbo.D_TVR.ТовВидНаим)) AS ТовВидНаим, LTRIM(RTRIM(dbo.KAT_TVR.ТовАрт)) AS ТовАрт, 
                      RTRIM(LTRIM(dbo.KAT_TVR.ТовЕИ)) AS ТовЕИ, STR(dbo.KAT_TVR.ТовУпак) AS ТовОтгрЕИ, 0 AS КоэффЕИ, dbo.D_TVR.ТовВесБрутто, 
                      dbo.Tbl_KPK_Ostatki.[Остаток на складе] AS ОстатокНаСкладе, - dbo.Tbl_KPK_Ostatki.Дефицит AS СвободныйОстаток, 
                      dbo.Tbl_KPK_Ostatki.[Заказ поставщику] AS ТоварВпути, dbo.Vw_KPK_TovPrice.Цена AS БазоваяЦена, 0 AS КодСклада, 
                      'НаимСклада' AS НаимСклада, dbo.KAT_TVR.ТовГрп, dbo.KAT_TVR.ТовВид
FROM         dbo.Tbl_KPK_Ostatki INNER JOIN
                      dbo.KAT_TVR ON dbo.Tbl_KPK_Ostatki.Код = LTRIM(RTRIM(dbo.KAT_TVR.ТовАрт)) INNER JOIN
                      dbo.Vw_KPK_TovPrice ON dbo.KAT_TVR.ТовКод = dbo.Vw_KPK_TovPrice.ТовКод LEFT OUTER JOIN
                      dbo.D_TVR ON dbo.KAT_TVR.ТовКод = dbo.D_TVR.ТовКод
ORDER BY LTRIM(RTRIM(dbo.KAT_TVR.ТовАрт))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Tbl_KPK_Ostatki"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 215
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 253
               Bottom = 151
               Right = 404
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_KPK_TovPrice"
            Begin Extent = 
               Top = 73
               Left = 445
               Bottom = 174
               Right = 621
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_TVR"
            Begin Extent = 
               Top = 4
               Left = 536
               Bottom = 112
               Right = 687
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 4740
         Alias = 1800
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Assortiment1'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Assortiment1'
GO
/****** Object:  View [dbo].[Vw_KPK_Assortiment]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[Vw_KPK_Assortiment]
AS
SELECT     TOP 100 PERCENT dbo.KAT_TVR.ТовКод, RTRIM(LTRIM(dbo.KAT_TVR.ТовНаим)) AS ТовНаим, RTRIM(LTRIM(dbo.D_TVR.ТовГрпНаим)) 
                      AS ТовГрпНаим, RTRIM(LTRIM(dbo.D_TVR.ТовВидНаим)) AS ТовВидНаим, LTRIM(RTRIM(dbo.KAT_TVR.ТовАрт)) AS ТовАрт, 
                      RTRIM(LTRIM(dbo.KAT_TVR.ТовЕИ)) AS ТовЕИ, STR(dbo.KAT_TVR.ТовУпак) AS ТовОтгрЕИ, dbo.KAT_UPK.УпакКоэф AS КоэфЕИ, 
                      dbo.D_TVR.ТовВесБрутто, dbo.Tbl_KPK_Ostatki.[Остаток на складе] AS ОстатокНаСкладе, - dbo.Tbl_KPK_Ostatki.Дефицит AS СвободныйОстаток, 
                      dbo.Tbl_KPK_Ostatki.[Заказ поставщику] AS ТоварВпути, dbo.KAT_TVR.ТовЦенаРСХ AS БазоваяЦена, 0 AS КодСклада, 
                      'НаимСклада' AS НаимСклада, dbo.KAT_TVR.ТовГрп, dbo.KAT_TVR.ТовВид, dbo.Price_Order_Ind(dbo.KAT_TVR.ТовАрт) as ПорядокУDDR
FROM         dbo.Tbl_KPK_Ostatki INNER JOIN
                      dbo.KAT_TVR ON dbo.Tbl_KPK_Ostatki.Код = LTRIM(RTRIM(dbo.KAT_TVR.ТовАрт)) INNER JOIN
                      dbo.KAT_UPK ON dbo.KAT_TVR.ТовУпак = dbo.KAT_UPK.УпакКод LEFT OUTER JOIN
                      dbo.D_TVR ON dbo.KAT_TVR.ТовКод = dbo.D_TVR.ТовКод
WHERE     (dbo.KAT_TVR.ТовЦенаРСХ <> 0)
ORDER BY RTRIM(LTRIM(dbo.KAT_TVR.ТовНаим))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Tbl_KPK_Ostatki"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 215
            End
            DisplayFlags = 280
            TopColumn = 6
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 253
               Bottom = 114
               Right = 404
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_UPK"
            Begin Extent = 
               Top = 8
               Left = 599
               Bottom = 101
               Right = 750
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_TVR"
            Begin Extent = 
               Top = 6
               Left = 442
               Bottom = 114
               Right = 593
            End
            DisplayFlags = 280
            TopColumn = 6
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 5490
         Alias = 1455
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1860
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Assortiment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Assortiment'
GO
/****** Object:  View [dbo].[VD_SOTRNAKLadk]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create view [dbo].[VD_SOTRNAKLadk]
As
select * from [dbo].[D_SOTRNAKLadk]
GO
/****** Object:  StoredProcedure [dbo].[ValioReport_Sales]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[ValioReport_Sales] @period varchar(10)= 'week' AS

-- Инициализация первого и последнего дня отчетного периода
DECLARE @FirstDay datetime,
		@LastDay datetime;		 

 SET @FirstDay = 
        CASE 
        WHEN @period = 'month' THEN dateadd( day,1-day(dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) ), dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) )
		WHEN @period = 'week' THEN dateadd( day,-7, convert(char(8),getdate(),112) )
		END;

SET @LastDay = 
        CASE 
        WHEN @period = 'month' THEN dateadd( month,1,dateadd(day,1-day( dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) ), dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) ) )-1
		WHEN @period = 'week' THEN convert(char(8),getdate(),112)
		END;-------------------------------------------------------------------------------------------------

-- Очищаем временную таблицу с данными для отчета, оставшуюся с предыдущего запуска
-- Работа ведется с временной таблицей в БД Prodresurs_6
truncate table Prodresurs_6.dbo.Valio_Report

--Вставляем во временную таблицу все данные по отгрузкам Valio за указанный период по всем клиентам
-- Проход 1: берем данные из PR_Euras

INSERT INTO Prodresurs_6.dbo.Valio_Report
SELECT		
	PR_Euras.dbo.D_DATES.ДатыРасч AS [Дата Продажи],
	PR_Euras.dbo.D_ORGadk.СотрФамилияИмя AS [ФИО супервайзера],
	--PR_Euras.dbo.D_ORGadk.СотрФамилияИмя AS [ФИО торг. представителя],
	( SELECT top 1 PR_Euras.dbo.M_TRANS.МенеджерНакладной FROM PR_Euras.dbo.M_TRANS WHERE PR_Euras.dbo.M_TRANS.Клн = PR_Euras.dbo.KAT_KLN.КлнКод ORDER BY ДатаРасч desc ) 
	AS [ФИО торг. представителя],
	PR_Euras.dbo.KAT_KLN.КлнКод AS [Код Клиента],
	PR_Euras.dbo.D_ORGadk.ГлКлнНаим AS [Название торговой точки],
	PR_Euras.dbo.KAT_KLN.КлнНаим AS [Название клиента],
	PR_Euras.dbo.D_ORGadk.ГородНаим AS [Территория (Город)],
	Constants.dbo.Regions.Region AS [Область],
	PR_Euras.dbo.D_ORGadk.АдрДоставки AS [Адрес доставки],
	PR_Euras.dbo.D_ORGadk.ТипКлиента AS [Тип Клиента],
	null as [Формат ТТ],
	PR_Euras.dbo.D_TVR.ТовАрт AS [Код товара],
	PR_Euras.dbo.D_TVR.ТовНаим AS [Наименование товара],
	PR_Euras.dbo.F_RASH.ОпВесНетто AS [Вес Нетто],
	PR_Euras.dbo.F_RASH.ОпСтоим AS [Продажи (рубли с НДС)],
	PR_Euras.dbo.D_TVR.ТовВидНаим as [Брэнд]	

FROM	PR_Euras.dbo.D_TVR INNER JOIN
            PR_Euras.dbo.F_RASH ON PR_Euras.dbo.D_TVR.ТовКод = PR_Euras.dbo.F_RASH.ОпКодТов INNER JOIN
            PR_Euras.dbo.D_DATES ON PR_Euras.dbo.F_RASH.ОпДата = PR_Euras.dbo.D_DATES.ДатыКод INNER JOIN
            PR_Euras.dbo.KAT_KLN ON PR_Euras.dbo.F_RASH.ОпКодКлн = PR_Euras.dbo.KAT_KLN.КлнКод INNER JOIN
            PR_Euras.dbo.D_ORGadk ON PR_Euras.dbo.D_ORGadk.КодКлн_КодАдрДоставки = PR_Euras.dbo.F_RASH.КодКлн_КодАдрДоставки
LEFT JOIN Constants.dbo.Regions ON PR_Euras.dbo.D_ORGadk.ГородНаим = Constants.dbo.Regions.City AND PR_Euras.dbo.D_ORGadk.ГрпСотрНаим = Constants.dbo.Regions.unit
WHERE  
 ( PR_Euras.dbo.D_DATES.ДатыРасч BETWEEN @FirstDay AND @LastDay )
	AND
	( (PR_Euras.dbo.D_TVR.ТовВидНаим LIKE '%Valio%')
	 OR
	  (PR_Euras.dbo.D_TVR.ТовВидНаим LIKE '%Валио%') 
	 OR
	  (PR_Euras.dbo.D_TVR.ТовВидНаим LIKE '%Олтерма%') 
 	OR
	  (PR_Euras.dbo.D_TVR.ТовВидНаим LIKE '%FIN%') 
 OR
	  (PR_Euras.dbo.D_TVR.ТовВидНаим LIKE '%Viola') 
               )
  AND PR_Euras.dbo.KAT_KLN.КлнКод <> 12837 -- исключить Продуктовый Центр

-- Проход 2: берем данные из PR_EurasSur
INSERT INTO Prodresurs_6.dbo.Valio_Report
SELECT		
	PR_EurasSur.dbo.D_DATES.ДатыРасч AS [Дата Продажи],
	PR_EurasSur.dbo.D_ORGadk.СотрФамилияИмя AS [ФИО супервайзера],
	--PR_EurasSur.dbo.D_ORGadk.СотрФамилияИмя AS [ФИО торг. представителя],
	( SELECT top 1 PR_EurasSur.dbo.M_TRANS.МенеджерНакладной FROM PR_EurasSur.dbo.M_TRANS WHERE PR_EurasSur.dbo.M_TRANS.Клн = PR_EurasSur.dbo.KAT_KLN.КлнКод ORDER BY ДатаРасч desc ) 
	AS [ФИО торг. представителя],
	PR_EurasSur.dbo.KAT_KLN.КлнКод AS [Код Клиента],
	PR_EurasSur.dbo.D_ORGadk.ГлКлнНаим AS [Название торговой точки],
	PR_EurasSur.dbo.KAT_KLN.КлнНаим AS [Название клиента],
	PR_EurasSur.dbo.D_ORGadk.ГородНаим AS [Территория (Город)],
	Constants.dbo.Regions.Region AS [Область],
	PR_EurasSur.dbo.D_ORGadk.АдрДоставки AS [Адрес доставки],
	PR_EurasSur.dbo.D_ORGadk.ТипКлиента AS [Тип Клиента],
	null as [Формат ТТ],
	PR_EurasSur.dbo.D_TVR.ТовАрт AS [Код товара],
	PR_EurasSur.dbo.D_TVR.ТовНаим AS [Наименование товара],
	PR_EurasSur.dbo.F_RASH.ОпВесНетто AS [Вес Нетто],
	PR_EurasSur.dbo.F_RASH.ОпСтоим AS [Продажи (рубли с НДС)],
	PR_EurasSur.dbo.D_TVR.ТовВидНаим as [Брэнд]	

FROM	PR_EurasSur.dbo.D_TVR INNER JOIN
            PR_EurasSur.dbo.F_RASH ON PR_EurasSur.dbo.D_TVR.ТовКод = PR_EurasSur.dbo.F_RASH.ОпКодТов INNER JOIN
            PR_EurasSur.dbo.D_DATES ON PR_EurasSur.dbo.F_RASH.ОпДата = PR_EurasSur.dbo.D_DATES.ДатыКод INNER JOIN
            PR_EurasSur.dbo.KAT_KLN ON PR_EurasSur.dbo.F_RASH.ОпКодКлн = PR_EurasSur.dbo.KAT_KLN.КлнКод INNER JOIN
            PR_EurasSur.dbo.D_ORGadk ON PR_EurasSur.dbo.D_ORGadk.КодКлн_КодАдрДоставки = PR_EurasSur.dbo.F_RASH.КодКлн_КодАдрДоставки           
LEFT JOIN Constants.dbo.Regions ON PR_EurasSur.dbo.D_ORGadk.ГородНаим = Constants.dbo.Regions.City AND PR_EurasSur.dbo.D_ORGadk.ГрпСотрНаим = Constants.dbo.Regions.unit
WHERE  
 ( PR_EurasSur.dbo.D_DATES.ДатыРасч BETWEEN @FirstDay AND @LastDay )
	AND
	( (PR_EurasSur.dbo.D_TVR.ТовВидНаим LIKE '%Valio%')
	 OR
	  (PR_EurasSur.dbo.D_TVR.ТовВидНаим LIKE '%Валио%') 
	 OR
	  (PR_EurasSur.dbo.D_TVR.ТовВидНаим LIKE '%Олтерма%') 
 	OR
	  (PR_EurasSur.dbo.D_TVR.ТовВидНаим LIKE '%FIN%') 
 OR
	  (PR_EurasSur.dbo.D_TVR.ТовВидНаим LIKE '%Viola') 
               )
  AND PR_EurasSur.dbo.KAT_KLN.КлнКод <> 12837 -- исключить Продуктовый Центр
GO
/****** Object:  StoredProcedure [dbo].[ValioReport_Returns]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[ValioReport_Returns] @period varchar(10)= 'week' AS

-- Инициализация первого и последнего дня отчетного периода
DECLARE @FirstDay datetime,
		@LastDay datetime;		 

 SET @FirstDay = 
        CASE 
        WHEN @period = 'month' THEN dateadd( day,1-day(dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) ), dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) )
		WHEN @period = 'week' THEN dateadd( day,-7, convert(char(8),getdate(),112) )
		END;

SET @LastDay = 
        CASE 
        WHEN @period = 'month' THEN dateadd( month,1,dateadd(day,1-day( dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) ), dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) ) )-1
		WHEN @period = 'week' THEN convert(char(8),getdate(),112)
		END;


-- Очищаем временную таблицу с данными для отчета, оставшуюся с предыдущего запуска
-- Работа ведется с временной таблицей в БД Prodresurs_6
truncate table Prodresurs_6.dbo.Valio_Report

--  Вставляем во временную таблицу все данные по отгрузкам VALIO за указанный период по всем клиентам
-- Проход 1: берем данные из PR_Euras

INSERT INTO Prodresurs_6.dbo.Valio_Report
SELECT	
PR_Euras.dbo.D_DATES.ДатыРасч AS [Дата Продажи],
	PR_Euras.dbo.D_ORGadk.СотрФамилияИмя AS [ФИО супервайзера],
	--PR_Euras.dbo.D_ORGadk.СотрФамилияИмя AS [ФИО торг. представителя],
	( SELECT top 1 PR_Euras.dbo.M_TRANS.МенеджерНакладной FROM PR_Euras.dbo.M_TRANS WHERE PR_Euras.dbo.M_TRANS.Клн = PR_Euras.dbo.KAT_KLN.КлнКод ORDER BY ДатаРасч desc ) 
	AS [ФИО торг. представителя],
	PR_Euras.dbo.KAT_KLN.КлнКод AS [Код Клиента],
	PR_Euras.dbo.D_ORGadk.ГлКлнНаим AS [Название торговой точки],
	PR_Euras.dbo.KAT_KLN.КлнНаим AS [Название клиента],
	PR_Euras.dbo.D_ORGadk.ГородНаим AS [Территория (Город)],
	Constants.dbo.Regions.Region AS [Область],
	PR_Euras.dbo.D_ORGadk.АдрДоставки AS [Адрес доставки],
	PR_Euras.dbo.D_ORGadk.ТипКлиента AS [Тип Клиента],
	null as [Формат ТТ],
	PR_Euras.dbo.D_TVR.ТовАрт AS [Код товара],
	PR_Euras.dbo.D_TVR.ТовНаим AS [Наименование товара],
	PR_Euras.dbo.F_RASH_Vozvr.ОпВесНетто AS [Вес Нетто],
	PR_Euras.dbo.F_RASH_Vozvr.ОпСтоим AS [Возвраты (рубли с НДС)],
	PR_Euras.dbo.D_TVR.ТовВидНаим as [Брэнд]	

FROM	PR_Euras.dbo.D_TVR INNER JOIN
            PR_Euras.dbo.F_RASH_Vozvr ON PR_Euras.dbo.D_TVR.ТовКод = PR_Euras.dbo.F_RASH_Vozvr.ОпКодТов INNER JOIN
            PR_Euras.dbo.D_DATES ON PR_Euras.dbo.F_RASH_Vozvr.ОпДата = PR_Euras.dbo.D_DATES.ДатыКод INNER JOIN
            PR_Euras.dbo.KAT_KLN ON PR_Euras.dbo.F_RASH_Vozvr.ОпКодКлн = PR_Euras.dbo.KAT_KLN.КлнКод INNER JOIN
            PR_Euras.dbo.D_ORGadk ON PR_Euras.dbo.D_ORGadk.КодКлн_КодАдрДоставки = PR_Euras.dbo.F_RASH_Vozvr.КодКлн_КодАдрДоставки
LEFT JOIN Constants.dbo.Regions ON PR_Euras.dbo.D_ORGadk.ГородНаим = Constants.dbo.Regions.City AND PR_Euras.dbo.D_ORGadk.ГрпСотрНаим = Constants.dbo.Regions.unit
WHERE  
 ( PR_Euras.dbo.D_DATES.ДатыРасч BETWEEN @FirstDay AND @LastDay )
	AND
	( (PR_Euras.dbo.D_TVR.ТовВидНаим LIKE '%Valio%')
	 OR
	  (PR_Euras.dbo.D_TVR.ТовВидНаим LIKE '%Валио%') 
	 OR
	  (PR_Euras.dbo.D_TVR.ТовВидНаим LIKE '%Олтерма%') 
 	OR
	  (PR_Euras.dbo.D_TVR.ТовВидНаим LIKE '%FIN%') 
 OR
	  (PR_Euras.dbo.D_TVR.ТовВидНаим LIKE '%Viola') 
               )
 AND PR_Euras.dbo.KAT_KLN.КлнКод <> 12837 -- исключить Продуктовый Центр
--GO

-- Проход 2: берем данные из PR_EurasSur

INSERT INTO Prodresurs_6.dbo.Valio_Report
SELECT	
PR_EurasSur.dbo.D_DATES.ДатыРасч AS [Дата Продажи],
	PR_EurasSur.dbo.D_ORGadk.СотрФамилияИмя AS [ФИО супервайзера],
	--PR_EurasSur.dbo.D_ORGadk.СотрФамилияИмя AS [ФИО торг. представителя],
	( SELECT top 1 PR_EurasSur.dbo.M_TRANS.МенеджерНакладной FROM PR_EurasSur.dbo.M_TRANS WHERE PR_EurasSur.dbo.M_TRANS.Клн = PR_EurasSur.dbo.KAT_KLN.КлнКод ORDER BY ДатаРасч desc ) 
	AS [ФИО торг. представителя],
	PR_EurasSur.dbo.KAT_KLN.КлнКод AS [Код Клиента],
	PR_EurasSur.dbo.D_ORGadk.ГлКлнНаим AS [Название торговой точки],
	PR_EurasSur.dbo.KAT_KLN.КлнНаим AS [Название клиента],
	PR_EurasSur.dbo.D_ORGadk.ГородНаим AS [Территория (Город)],
	Constants.dbo.Regions.Region AS [Область],
	PR_EurasSur.dbo.D_ORGadk.АдрДоставки AS [Адрес доставки],
	PR_EurasSur.dbo.D_ORGadk.ТипКлиента AS [Тип Клиента],
	null as [Формат ТТ],
	PR_EurasSur.dbo.D_TVR.ТовАрт AS [Код товара],
	PR_EurasSur.dbo.D_TVR.ТовНаим AS [Наименование товара],
	PR_EurasSur.dbo.F_RASH_Vozvr.ОпВесНетто AS [Вес Нетто],
	PR_EurasSur.dbo.F_RASH_Vozvr.ОпСтоим AS [Возвраты (рубли с НДС)],
	PR_EurasSur.dbo.D_TVR.ТовВидНаим as [Брэнд]	
	
FROM	PR_EurasSur.dbo.D_TVR INNER JOIN
            PR_EurasSur.dbo.F_RASH_Vozvr ON PR_EurasSur.dbo.D_TVR.ТовКод = PR_EurasSur.dbo.F_RASH_Vozvr.ОпКодТов INNER JOIN
            PR_EurasSur.dbo.D_DATES ON PR_EurasSur.dbo.F_RASH_Vozvr.ОпДата = PR_EurasSur.dbo.D_DATES.ДатыКод INNER JOIN
            PR_EurasSur.dbo.KAT_KLN ON PR_EurasSur.dbo.F_RASH_Vozvr.ОпКодКлн = PR_EurasSur.dbo.KAT_KLN.КлнКод INNER JOIN
            PR_EurasSur.dbo.D_ORGadk ON PR_EurasSur.dbo.D_ORGadk.КодКлн_КодАдрДоставки = PR_EurasSur.dbo.F_RASH_Vozvr.КодКлн_КодАдрДоставки
            LEFT JOIN Constants.dbo.Regions ON PR_EurasSur.dbo.D_ORGadk.ГородНаим = Constants.dbo.Regions.City AND PR_EurasSur.dbo.D_ORGadk.ГрпСотрНаим = Constants.dbo.Regions.unit
WHERE  
 ( PR_EurasSur.dbo.D_DATES.ДатыРасч BETWEEN @FirstDay AND @LastDay )
	AND
	( (PR_EurasSur.dbo.D_TVR.ТовВидНаим LIKE '%Valio%')
	 OR
	  (PR_EurasSur.dbo.D_TVR.ТовВидНаим LIKE '%Валио%') 
	 OR
	  (PR_EurasSur.dbo.D_TVR.ТовВидНаим LIKE '%Олтерма%') 
 	OR
	  (PR_EurasSur.dbo.D_TVR.ТовВидНаим LIKE '%FIN%') 
 OR
	  (PR_EurasSur.dbo.D_TVR.ТовВидНаим LIKE '%Viola') 
               )
 AND PR_EurasSur.dbo.KAT_KLN.КлнКод <> 12837 -- исключить Продуктовый Центр
GO
/****** Object:  View [dbo].[v_UslRash]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_UslRash]
AS
SELECT     dbo.F_USLRASH.УслДата, SUM(dbo.F_USLRASH.УслКол * dbo.F_USLRASH.УслЦена) AS УслСтоим, dbo.LIST_SKL.ОпКлн AS КлнКод
FROM         dbo.F_USLRASH INNER JOIN
                      dbo.LIST_SKL ON dbo.F_USLRASH.УслНакл = dbo.LIST_SKL.ОпНаклКод
GROUP BY dbo.F_USLRASH.УслДата, dbo.LIST_SKL.ОпКлн
GO
/****** Object:  View [dbo].[v_UslPrih]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_UslPrih]
AS
SELECT     dbo.F_USLPRIH.УслДата, SUM(dbo.F_USLPRIH.УслКол * dbo.F_USLPRIH.УслЦена) AS УслСтоим, 
                      dbo.LIST_SKL.ОпКлн AS КлнКод
FROM         dbo.F_USLPRIH INNER JOIN
                      dbo.LIST_SKL ON dbo.F_USLPRIH.УслНакл= dbo.LIST_SKL.ОпНаклКод
GROUP BY dbo.F_USLPRIH.УслДата, dbo.LIST_SKL.ОпКлн
GO
/****** Object:  View [dbo].[v_OstSpis]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[v_OstSpis]
AS
SELECT     TOP 100 PERCENT ОпДата, ОпКодТов, НаклСклКод, SUM(ОпКол) AS СумКол, 
                      SUM(ОпСтоим) AS Стоим
FROM         F_SPIS 
GROUP BY ОпДата, ОпКодТов, НаклСклКод
ORDER BY ОпДата, ОпКодТов, НаклСклКод
GO
/****** Object:  View [dbo].[v_OstRash]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[v_OstRash]
AS
SELECT     TOP 100 PERCENT ОпДата, ОпКодТов, НаклСклКод, SUM(ОпКол) AS СумКол, 
                      SUM(ОпСтоим) AS Стоим
FROM         F_RASH
GROUP BY ОпДата, ОпКодТов, НаклСклКод
ORDER BY ОпДата, ОпКодТов, НаклСклКод
GO
/****** Object:  View [dbo].[v_OstPrih]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_OstPrih]
AS
SELECT     TOP 100 PERCENT ОпДата, ОпКодТов, НаклСклКод, SUM(ОпКол) AS СумКол, SUM(ОпСтоим) AS Expr1
FROM         dbo.F_PRIH
GROUP BY ОпДата, ОпКодТов, НаклСклКод
ORDER BY ОпДата, ОпКодТов, НаклСклКод
GO
/****** Object:  View [dbo].[V_NAKL_NOAVZ]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[V_NAKL_NOAVZ]
AS
SELECT     *
FROM         dbo.D_NAKL
WHERE     (ОпНаклКод NOT IN
                          (SELECT     ОпНаклКод
                            FROM          V_NAKL_AVZ))
GO
/****** Object:  StoredProcedure [dbo].[FillOstSlow]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[FillOstSlow] AS
declare @PrevDate datetime
declare @CurDate datetime
declare @NextDate bigint
declare @PrevTov bigint, @PrevSkl int
declare @PrevKol numeric (18,3)
declare @Period int
declare @EmptyDate datetime, @LDate datetime
declare @NextRDate datetime

declare @Ost  as cursor
declare @OstKol numeric (18,3), @OstDate bigint, @OstTov bigint, @OstSkl int,@RealDate datetime

declare @DateInsert as datetime

set @EmptyDate=CONVERT(datetime,'01.01.1900',104)
set @LDate=CONVERT(datetime,CAST(DATEPART(dd,GetDate()) as char(2))+'.'+
CAST(DATEPART(mm,GetDate()) as char(2))+'.'+
CAST(DATEPART(yyyy,GetDate()) as char(4)),104)

set @Ost=cursor local for select f_ost.ОстТов,f_ost.ОстСкл,f_ost.ОстДата,f_Ost.ОстКол,d_dates.ДатыРасч 
from f_ost join d_dates on f_ost.ОстДата=d_dates.ДатыКод
order by f_ost.ОстТов,f_ost.ОстСкл,d_dates.ДатыРасч
open @Ost
fetch next from @Ost into @OstTov, @OstSkl, @OstDate, @OstKol, @RealDate
set @PrevDate=@RealDate
set @PrevTov=@OstTov
set @PrevSkl=@OstSkl
set @PrevKol=@OstKol
while @@FETCH_STATUS=0
  begin
    if @PrevTov=@OstTov and @PrevSkl=@OstSkl
      begin
        set @CurDate=@RealDate
        set @Period=DateDiff(dd,@PrevDate,@CurDate)
        while @Period>1
           begin
              select @NextDate=ДатыКод, @NextRDate=ДатыРасч from d_dates where ДатыРасч=DateAdd(dd,-@Period+1,@CurDate)
              if Month(@NextRDate)<>Month(DateAdd(dd,1,@NextRDate))
                begin
                   exec InsertOst @OstTov,@OstSkl,@NextDate,@PrevKol
              end
              set @Period=@Period-1
           end
        set @PrevDate=@CurDate
        set @PrevKol=@OstKol 
      end
   else
      begin
        set @CurDate=@LDate
        set @Period=DateDiff(dd,@PrevDate,@CurDate)
        while @Period>0
           begin
              select @NextDate=ДатыКод, @NextRDate=ДатыРасч from d_dates where ДатыРасч=DateAdd(dd,-@Period+1,@CurDate)
              if (select ОстТов from f_ost where ОстТов=@PrevTov and ОстСкл=@PrevSkl and ОстДата=@NextDate) is NULL
                begin
                if Month(@NextRDate)<>Month(DateAdd(dd,1,@NextRDate))
                  begin
                    exec InsertOst @PrevTov,@PrevSkl,@NextDate,@PrevKol
                  end 
              end
              set @Period=@Period-1
           end
        set @PrevTov=@OstTov
        set @PrevSkl=@OstSkl
        set @PrevDate=@RealDate
        set @PrevKol=@OstKol
      end 
    fetch next from @Ost into @OstTov, @OstSkl, @OstDate, @OstKol, @RealDate
  end
  set @CurDate=@LDate
  set @Period=DateDiff(dd,@PrevDate,@CurDate)
  while @Period>0
     begin
        select @NextDate=ДатыКод, @NextRDate=ДатыРасч from d_dates where ДатыРасч=DateAdd(dd,-@Period+1,@CurDate)
        if (select ОстТов from f_ost where ОстТов=@PrevTov and ОстСкл=@PrevSkl and ОстДата=@NextDate) is NULL
           begin
              if Month(@NextRDate)<>Month(DateAdd(dd,1,@NextRDate))
                begin
                  exec InsertOst @PrevTov,@PrevSkl,@NextDate,@PrevKol
              end
           end
        set @Period=@Period-1
     end
GO
/****** Object:  StoredProcedure [dbo].[FillOst]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[FillOst] AS
declare @Razr as cursor 
declare @RTov bigint, @RSkl int
declare @FRDate datetime,@LRDate datetime
declare @IsRFetch decimal
declare @CurDate int, @CurRDate datetime
declare @TestDate int, @TestRDate datetime
declare @LKol numeric (18,3)

set @Razr=cursor for select ОстТов,ОстСкл from f_ost
group by ОстТов,ОстСкл

select @LRDate=CONVERT(datetime,'31.12.' + CAST(Year(GetDate()) as char(4)),104)

open @Razr
fetch next from @Razr into @RTov, @RSkl
set @IsRFetch = @@FETCH_STATUS
While (@IsRFetch=0)
  begin
    select @FRDate=Min(ДатыРасч) from d_dates join f_ost
      on d_dates.ДатыКод=f_ost.ОстДата
      where ОстТов=@RTov and ОстСкл=@RSkl
    while (Month(@FRDate)=Month(DATEADD(dd,1,@FRDate)))
      begin
        set @FRDate=DATEADD(dd,1,@FRDate)
      end
    set @CurRDate=@FRDate
    while (@CurRDate<=@LRDate)
      begin
        select @CurDate=ДатыКод from d_dates where ДатыРасч=@CurRDate
        set @TestDate=Null
        select @TestDate=ОстДата from f_ost 
          where ОстТов=@RTov and ОстСкл=@RSkl and ОстДата=@CurDate
        if (@TestDate is null)
          begin
            set @TestRDate=Null
            set @TestDate=Null
            set @LKol=0
            select @TestRDate=max(ДатыРасч) from f_ost join d_dates
              on f_ost.ОстДата=d_dates.ДатыКод
              where ОстТов=@RTov and ОстСкл=@RSkl and ДатыРасч<=@CurRDate
            select @TestDate=ДатыКод from d_dates where ДатыРасч=@TestRDate
            if (@TestDate is null)
              begin
                 insert d_dates (ДатыРасч) values (@TestRDate)
                 select @TestDate=ДатыКод from d_dates where ДатыРасч=@TestRDate
              end
            select @LKol=ОстКол from f_ost where ОстТов=@RTov and ОстСкл=@RSkl and ОстДата=@TestDate
            exec InsertOst @RTov,@RSkl,@CurDate,@LKol
          end
        set @CurRDate=DATEADD(mm,1,@CurRDate)
        while (Month(@CurRDate)=Month(DATEADD(dd,1,@CurRDate)))
          begin
            set @CurRDate=DATEADD(dd,1,@CurRDate)
          end
      end
    fetch next from @Razr into @RTov, @RSkl
    set @IsRFetch = @@FETCH_STATUS
  end
GO
/****** Object:  UserDefinedFunction [dbo].[f_LIST_ZKZ]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create FUNCTION [dbo].[f_LIST_ZKZ]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT
	np.ОпКодТов, LIST_ZKZ.ЗкзСкл, dbo.LIST_ZKZ.ЗкзКод, np.ОпКол, np.ОпКол * dbo.ZKZ_TVR.ПозЦена AS Сумма, dbo.LIST_ZKZ.ЗкзСотр,
	dbo.LIST_ZKZ.ЗкзМндж, dbo.LIST_ZKZ.ЗкзКлн, dbo.LIST_ZKZ.ЗкзДатаРасч, CAST(dbo.LIST_ZKZ.зкзФИО AS int) AS АдрДоставки,
	t.ТовВесБрутто * np.ОпКол AS ВесБрутто, lskl.ОпДатаРасч AS ДатаНакл, np.ТипКод, (np.ОпКол * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчет,
	dbo.LIST_ZKZ.ЗкзГрп, dbo.LIST_ZKZ.ЗкзПризн, CASE WHEN ЗкзБитФл = 0 THEN 'Г'
													 WHEN ЗкзБитФл & 8 = 8 THEN 'Д'
													 WHEN ЗкзБитФл & 32 = 32 THEN 'З'
													 WHEN ЗкзБитФл & 64 = 64 THEN 'А' END AS Статус, ZKZ_TVR.АкцияКод
FROM dbo.LIST_ZKZ
INNER JOIN (SELECT     ДокКод, z.накл AS ОпНакл, Скл AS ОпСкл, ФлгОпер AS ОпТип
			FROM          dbo.zkz_nkl AS z
			WHERE      (тип = 0)
			GROUP BY ДокКод, z.накл, Скл, ФлгОпер) AS ls ON dbo.LIST_ZKZ.ЗкзКод = ls.ДокКод
			INNER JOIN (SELECT  INVOICENUMBER AS ОпНакл, INVOICETYPE AS ОпТип, INVOICESKL AS ОпСкл, SKUID AS ОпКодТов,
								QTY AS ОпКол, ISNULL(TYPE, 'P') AS ТипКод, RET_TYPE AS Тип, ID_RESPONSE_NAME, RET_RESPONSE_NAME
						FROM wms.[Return]
						UNION ALL
						SELECT	INVOICENUMBER, INVOICETYPE, INVOICESKL, SKU, NonPlanned, '1' AS Expr1, 'Неспланированно' AS Expr2,
								NULL AS Expr3, NULL AS Expr4
						FROM wms.NONPLANNED
						) AS np ON ls.ОпСкл = np.ОпСкл AND np.Оптип = ls.Оптип AND np.ОпНакл = ls.ОпНакл
			INNER JOIN dbo.KAT_TVR AS k ON np.ОпКодТов = k.ТовКод
			INNER JOIN dbo.TVR_DEF AS t ON k.ТовКод = t.ТовКод
			INNER JOIN dbo.LIST_SKL AS lskl ON np.ОпСкл = lskl.ОпСкл AND np.Оптип = lskl.Оптип AND np.ОпНакл = lskl.ОпНакл
						and lskl.ОпДатаРасч between @BegDate and @EndDate
			INNER JOIN dbo.ZKZ_TVR ON dbo.ZKZ_TVR.ПозКодЗкз = dbo.LIST_ZKZ.ЗкзКод AND np.ОпКодТов = ZKZ_TVR.ПозТов
UNION ALL
SELECT
	ZKZ_TVR_1.ПозТов AS ОпКодТов, LIST_ZKZ_1.ЗкзСкл, LIST_ZKZ_1.ЗкзКод, ZKZ_TVR_1.ПозКол - ISNULL(hs.Кол, 0) AS Кол, 
	(ZKZ_TVR_1.ПозКол - ISNULL(hs.Кол, 0)) * ZKZ_TVR_1.ПозЦена AS Сумма, LIST_ZKZ_1.ЗкзСотр, LIST_ZKZ_1.ЗкзМндж, LIST_ZKZ_1.ЗкзКлн, 
	LIST_ZKZ_1.ЗкзДатаРасч, CAST(LIST_ZKZ_1.зкзФИО AS int) AS АдрДоставки, t.ТовВесБрутто * (ZKZ_TVR_1.ПозКол - ISNULL(hs.Кол, 0)) AS ВесБрутто, 
	hs.дата AS ДатаНакл, '2' AS ТипКод, ((ZKZ_TVR_1.ПозКол - ISNULL(hs.Кол, 0)) * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчет, LIST_ZKZ_1.ЗкзГрп, 
	LIST_ZKZ_1.ЗкзПризн, CASE 	WHEN ЗкзБитФл = 0 THEN 'Г'
								WHEN ЗкзБитФл & 8 = 8 THEN 'Д'
								WHEN ЗкзБитФл & 32 = 32 THEN 'З'
								WHEN ЗкзБитФл & 64 = 64 THEN 'А' END AS Статус,	ZKZ_TVR_1.АкцияКод
FROM dbo.ZKZ_TVR AS ZKZ_TVR_1
INNER JOIN dbo.LIST_ZKZ AS LIST_ZKZ_1 ON ZKZ_TVR_1.ПозКодЗкз = LIST_ZKZ_1.ЗкзКод
INNER JOIN dbo.KAT_TVR AS k ON ZKZ_TVR_1.ПозТов = k.ТовКод
INNER JOIN dbo.TVR_DEF AS t ON k.ТовКод = t.ТовКод
INNER JOIN dbo.KAT_UPK AS u ON k.ТовУпак = u.УпакКод
LEFT OUTER JOIN (	SELECT z.ДокКод, z.ФлгОпер, h.SKU AS ОпКодТов, SUM(h.need_qty) AS Кол, MAX(skl.ОпДатаРасч) AS дата
					FROM dbo.zkz_nkl AS z
					INNER JOIN dbo.LIST_SKL AS skl ON z.накл = skl.ОпНакл AND z.Скл = skl.ОпСкл AND z.ФлгОпер = skl.ОпТип
								and skl.ОпДатаРасч between @BegDate and @EndDate
					INNER JOIN wms.HIST_SKL AS h ON z.накл = h.INVOICENUMBER AND z.Скл = h.INVOICESKL AND z.ФлгОпер = h.INVOICETYPE
					WHERE (тип = 0)
                    GROUP BY z.ДокКод, z.ФлгОпер, h.SKU
				) AS hs ON LIST_ZKZ_1.ЗкзКод = hs.ДокКод AND ZKZ_TVR_1.ПозТов = hs.ОпКодТов
);
GO
/****** Object:  View [dbo].[f_LIST_MLST_VIEW]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[f_LIST_MLST_VIEW] 
AS
SELECT ml.[Затрата],
       ml.ДатаРасч,
       ls.ОпНаклКод,
       ml.АвтокодМЛ * 10 + ml.[Затрата] АвтокодМЛ,
       ml.НомерМЛ,
       Cast (ml.ДатаРасч as date) Дата,
       ml.Перевозчик,
       ml.Авто,
       ml.Водитель,
       ml.Экспедитор,
       ml.Маршрут,
       cast (ml.АвтокодМЛ as varchar (20)) + '-' + cast (ls.Опклн as varchar (20
       )) + '-' + cast (ls.КодАдрДоставки as varchar (20)) кодточки,
       ls.Опклн,
       hs.ОпКол,
       hs.ОпКол * hs.ОпЦена СуммаНакладной,
       hs.ОпКодТов,
       ml.[ЗатратаНазвание],
       ml.ЗатратыФакт,
       ml.ЗатратыПлан,
       (case ls.ОпТип
          when 1 then 'приход'
          when 2 then 'расход'
          else 'неизвестный тип накладной'
        end) ТипНакладной,
       ls.ОпСотр МенеджерНакладной,
       f.Name НашаФирма
		,ISNULL(k.КодАдресаДоставки, 0) AS КодАдрДоставки
        ,ls.ОпСкл as Склад
        ,kdk.КодДопХар
        ,ml.АвтокодМЛ АвтокодМЛ_
FROM (
       SELECT 1 [Затрата],
              [НомерМЛ],
              [АвтокодМЛ] [АвтокодМЛ],
              [Дата],
              [Перевозчик],
              [Авто],
              [Водитель],
              [СтатусМЛ],
              [Маршрут],
              [Экспедитор],
              [ДатаВыезда],
              [ДатаРасч],
              [ДатаВыездаРасч],
              [ЗатратаНазвание1] [ЗатратаНазвание],
              [ЗатратаПлан1] [ЗатратыПлан],
              [ЗатратаФакт1] [ЗатратыФакт]
       FROM [dbo].[list_mlst]
       UNION ALL
       SELECT 2 [Затрата],
              [НомерМЛ],
              [АвтокодМЛ],
              [Дата],
              [Перевозчик],
              [Авто],
              [Водитель],
              [СтатусМЛ],
              [Маршрут],
              [Экспедитор],
              [ДатаВыезда],
              [ДатаРасч],
              [ДатаВыездаРасч],
              [ЗатратаНазвание2] [ЗатратаНазвание],
              [ЗатратаПлан2] [ЗатратыПлан],
              [ЗатратаФакт2] [ЗатратыФакт]
       FROM [dbo].[list_mlst]
       UNION ALL
       SELECT 3 [Затрата],
              [НомерМЛ],
              [АвтокодМЛ],
              [Дата],
              [Перевозчик],
              [Авто],
              [Водитель],
              [СтатусМЛ],
              [Маршрут],
              [Экспедитор],
              [ДатаВыезда],
              [ДатаРасч],
              [ДатаВыездаРасч],
              [ЗатратаНазвание3] [ЗатратаНазвание],
              [ЗатратаПлан3] [ЗатратыПлан],
              [ЗатратаФакт3] [ЗатратыФакт]
       FROM [dbo].[list_mlst]
       UNION ALL
       SELECT 4 [Затрата],
              [НомерМЛ],
              [АвтокодМЛ],
              [Дата],
              [Перевозчик],
              [Авто],
              [Водитель],
              [СтатусМЛ],
              [Маршрут],
              [Экспедитор],
              [ДатаВыезда],
              [ДатаРасч],
              [ДатаВыездаРасч],
              [ЗатратаНазвание4] [ЗатратаНазвание],
              [ЗатратаПлан4] [ЗатратыПлан],
              [ЗатратаФакт4] [ЗатратыФакт]
       FROM [dbo].[list_mlst]
       UNION ALL
       SELECT 5 [Затрата],
              [НомерМЛ],
              [АвтокодМЛ],
              [Дата],
              [Перевозчик],
              [Авто],
              [Водитель],
              [СтатусМЛ],
              [Маршрут],
              [Экспедитор],
              [ДатаВыезда],
              [ДатаРасч],
              [ДатаВыездаРасч],
              [ЗатратаНазвание5] [ЗатратаНазвание],
              [ЗатратаПлан5] [ЗатратыПлан],
              [ЗатратаФакт5] [ЗатратыФакт]
       FROM [dbo].[list_mlst]
     ) ml
     INNER JOIN 
     (
       SELECT zvk.АвтКодМЛ,
              НомДок
       FROM zvk_dkm
            INNER JOIN list_zvk ZVK on zvk.АвтКодЗвк = zvk_dkm.АвтКодЗвкДост
            --WHERE (ТипДок = 4)
       GROUP BY zvk.АвтКодМЛ,
                НомДок
     ) AS ttndkm ON ttndkm.АвтКодМЛ = ml.АвтокодМЛ
     --INNER JOIN TTN_DKM AS ttn ON ttn.КодТТН = ttndkm.НомДок
     INNER JOIN 
     (
       SELECT MAX(ДокКод) AS ДокКод,
              Скл,
              ФлгОпер,
              Накл,
              MAX(ДокКод) AS Зкз
              --SELECT MAX(CASE WHEN тип = 4 THEN ДокКод END) AS ДокКод, Скл, ФлгОпер, Накл, MAX(CASE WHEN тип = 0 THEN ДокКод END) AS Зкз
              FROM zkz_nkl AS z
            --WHERE (Тип IN (4))
       GROUP BY Накл,
                Скл,
                ФлгОпер
     ) AS zkz_nkl ON zkz_nkl.ДокКод = ttndkm.НомДок
     INNER JOIN HIST_SKL AS hs ON hs.ОпСкл = zkz_nkl.Скл AND hs.ОпТип =
     zkz_nkl.ФлгОпер AND zkz_nkl.Накл = hs.ОпНакл
     JOIN LIST_SKL AS ls ON ls.ОпСкл = zkz_nkl.Скл AND ls.ОпТип =
     zkz_nkl.ФлгОпер AND zkz_nkl.Накл = ls.ОпНакл
     left join OurFirms f ON ls.НашаФирма = f.id
	LEFT OUTER JOIN KLN_ADK as k ON k.КодАдресаДоставки = ls.КодАдрДоставки and k.КодКлиента = ls.ОпКлн  
    LEFT OUTER JOIN List_kdk kdk ON k.КодАдресаДоставки=kdk.КодКлн AND kdk.КодГрпДопХар = 3 AND kdk.mode = 1 ----убрал 20141029 VG
GO
/****** Object:  UserDefinedFunction [dbo].[f_LIST_MLST_test2]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_LIST_MLST_test2]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT
ml.[Затрата]
, ml.АвтокодМЛ*10 + ml.[Затрата] АвтокодМЛ
, ml.НомерМЛ
, Cast(ml.ДатаРасч as date) Дата
, ml.Перевозчик
, ml.Авто
, ml.Водитель
, ml.Экспедитор 
, ml.Маршрут
, cast(ml.АвтокодМЛ as varchar(20)) + '-' + cast(ls.Опклн as varchar(20)) + '-' + cast(ls.КодАдрДоставки as varchar(20)) кодточки
, ls.Опклн
, hs.ОпКол
, hs.ОпКол*hs.ОпЦена СуммаНакладной
, hs.ОпКол * t.ТовЦенаУчет AS [СуммаНакладнойЦенаУчетная]
, hs.ОпКодТов
, ml.[ЗатратаНазвание]
, ml.ЗатратыФакт
, ml.ЗатратыПлан
,(	case ls.ОпТип	when 1 then 'приход'	when 2 then 'расход'	else 'неизвестный тип накладной'	end	) ТипНакладной
,ls.ОпСотр МенеджерНакладной
,f.Name НашаФирма
,ISNULL(k.КодАдресаДоставки, 0) AS КодАдрДоставки
,ls.ОпСкл as Склад
,hs.ОпКол * d.ТовВесБрутто AS [Вес Брутто]
,hs.ОпКол * t.ТовЦенаУчет AS [Сумма по Цене Учетной]
,hs.ОпКол * d.Объем AS Объем
,a.Грузоподъемность
FROM         
	(	SELECT 1 [Затрата]
	, [НомерМЛ]
	, [АвтокодМЛ] [АвтокодМЛ]
	, [Дата]
	, [Перевозчик]
	, [Авто]
	, [Водитель]
	, [СтатусМЛ]
	, [Маршрут]
	, [Экспедитор]
	, [ДатаВыезда]
	, [ДатаРасч]
	,[ДатаВыездаРасч]
	,[ЗатратаНазвание1] [ЗатратаНазвание]
	,[ЗатратаПлан1] [ЗатратыПлан]
	,[ЗатратаФакт1] [ЗатратыФакт]
	FROM [dbo].[list_mlst]
		UNION ALL
		SELECT 2 [Затрата]
		, [НомерМЛ]
		, [АвтокодМЛ]
		, [Дата]
		, [Перевозчик]
		, [Авто]
		, [Водитель]
		, [СтатусМЛ]
		, [Маршрут]
		, [Экспедитор]
		, [ДатаВыезда]
		, [ДатаРасч]
		, [ДатаВыездаРасч]
		, [ЗатратаНазвание2] [ЗатратаНазвание]
		, [ЗатратаПлан2] [ЗатратыПлан]
		, [ЗатратаФакт2] [ЗатратыФакт]
		FROM [dbo].[list_mlst]
		UNION ALL
		SELECT 3 [Затрата]
		, [НомерМЛ]
		, [АвтокодМЛ]
		, [Дата]
		, [Перевозчик]
		, [Авто]
		, [Водитель]
		, [СтатусМЛ]
		, [Маршрут]
		, [Экспедитор]
		, [ДатаВыезда]
		, [ДатаРасч]
		, [ДатаВыездаРасч]
		, [ЗатратаНазвание3] [ЗатратаНазвание]
		, [ЗатратаПлан3] [ЗатратыПлан]
		, [ЗатратаФакт3] [ЗатратыФакт]
		FROM [dbo].[list_mlst]
		UNION ALL
		SELECT 4 [Затрата]
		, [НомерМЛ]
		, [АвтокодМЛ]
		, [Дата]
		, [Перевозчик]
		, [Авто]
		, [Водитель]
		, [СтатусМЛ]
		, [Маршрут]
		, [Экспедитор]
		, [ДатаВыезда]
		, [ДатаРасч]
		, [ДатаВыездаРасч]
		, [ЗатратаНазвание4] [ЗатратаНазвание]
		, [ЗатратаПлан4] [ЗатратыПлан]
		, [ЗатратаФакт4] [ЗатратыФакт]
		FROM [dbo].[list_mlst]
		UNION ALL
		SELECT 5 [Затрата]
		, [НомерМЛ]
		, [АвтокодМЛ]
		, [Дата]
		, [Перевозчик]
		, [Авто]
		, [Водитель]
		, [СтатусМЛ]
		, [Маршрут]
		, [Экспедитор]
		, [ДатаВыезда]
		, [ДатаРасч]
		, [ДатаВыездаРасч]
		, [ЗатратаНазвание5] [ЗатратаНазвание]
		, [ЗатратаПлан5] [ЗатратыПлан]
		, [ЗатратаФакт5] [ЗатратыФакт]
		FROM [dbo].[list_mlst]	
		) ml 
INNER JOIN (SELECT zvk.АвтКодМЛ
				, НомДок
				FROM zvk_dkm 
				INNER JOIN list_zvk ZVK on zvk.АвтКодЗвк = zvk_dkm.АвтКодЗвкДост 
				GROUP BY zvk.АвтКодМЛ, НомДок) AS ttndkm 
		ON ttndkm.АвтКодМЛ = ml.АвтокодМЛ 
INNER JOIN (SELECT MAX(ДокКод) AS ДокКод
				, Скл
				, ФлгОпер
				, Накл
				, MAX(ДокКод) AS Зкз
			FROM zkz_nkl AS z 
			GROUP BY Накл, Скл, ФлгОпер) AS zkz_nkl 
	ON zkz_nkl.ДокКод = ttndkm.НомДок
INNER JOIN HIST_SKL AS hs ON hs.ОпСкл = zkz_nkl.Скл AND hs.ОпТип = zkz_nkl.ФлгОпер AND zkz_nkl.Накл = hs.ОпНакл
JOIN LIST_SKL AS ls ON ls.ОпСкл = zkz_nkl.Скл AND ls.ОпТип = zkz_nkl.ФлгОпер AND zkz_nkl.Накл = ls.ОпНакл
LEFT OUTER JOIN KLN_ADK as k ON k.КодАдресаДоставки = ls.КодАдрДоставки and k.КодКлиента = ls.ОпКлн  
left join OurFirms f ON ls.НашаФирма = f.id
INNER JOIN dbo.KAT_TVR AS t ON t.ТовКод = hs.ОпКодТов
INNER JOIN dbo.kat_avto AS a ON a.АвтоКод = ml.Авто
INNER JOIN dbo.TVR_DEF AS d ON d.ТовКод = hs.ОпКодТов
where ml.ДатаРасч between @BegDate and @EndDate
);
GO
/****** Object:  UserDefinedFunction [dbo].[f_LIST_MLST_test]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_LIST_MLST_test]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT
ml.[Затрата]
, ml.АвтокодМЛ*10 + ml.[Затрата] АвтокодМЛ
, ml.НомерМЛ
, Cast(ml.ДатаРасч as date) Дата
, ml.Перевозчик
, ml.Авто
, ml.Водитель
, ml.Экспедитор 
, ml.Маршрут
, cast(ml.АвтокодМЛ as varchar(20)) + '-' + cast(ls.Опклн as varchar(20)) + '-' + cast(ls.КодАдрДоставки as varchar(20)) кодточки
, ls.Опклн
, hs.ОпКол
, hs.ОпКол*hs.ОпЦена СуммаНакладной
, hs.ОпКол * t.ТовЦенаУчет AS [СуммаНакладнойЦенаУчетная]
, hs.ОпКодТов
, ml.[ЗатратаНазвание]
, ml.ЗатратыФакт
, ml.ЗатратыПлан
,(	case ls.ОпТип	when 1 then 'приход'	when 2 then 'расход'	else 'неизвестный тип накладной'	end	) ТипНакладной
,ls.ОпСотр МенеджерНакладной
,f.Name НашаФирма
,ISNULL(k.КодАдресаДоставки, 0) AS КодАдрДоставки
,ls.ОпСкл as Склад
,hs.ОпКол * d.ТовВесБрутто AS [Вес Брутто]
,hs.ОпКол * t.ТовЦенаУчет AS [Сумма по Цене Учетной]
,hs.ОпКол * d.Объем AS Объем
,a.Грузоподъемность
FROM         
	(	SELECT 1 [Затрата]
	, [НомерМЛ]
	, [АвтокодМЛ] [АвтокодМЛ]
	, [Дата]
	, [Перевозчик]
	, [Авто]
	, [Водитель]
	, [СтатусМЛ]
	, [Маршрут]
	, [Экспедитор]
	, [ДатаВыезда]
	, [ДатаРасч]
	,[ДатаВыездаРасч]
	,[ЗатратаНазвание1] [ЗатратаНазвание]
	,[ЗатратаПлан1] [ЗатратыПлан]
	,[ЗатратаФакт1] [ЗатратыФакт]
	FROM [dbo].[list_mlst]
		UNION ALL
		SELECT 2 [Затрата]
		, [НомерМЛ]
		, [АвтокодМЛ]
		, [Дата]
		, [Перевозчик]
		, [Авто]
		, [Водитель]
		, [СтатусМЛ]
		, [Маршрут]
		, [Экспедитор]
		, [ДатаВыезда]
		, [ДатаРасч]
		, [ДатаВыездаРасч]
		, [ЗатратаНазвание2] [ЗатратаНазвание]
		, [ЗатратаПлан2] [ЗатратыПлан]
		, [ЗатратаФакт2] [ЗатратыФакт]
		FROM [dbo].[list_mlst]
		UNION ALL
		SELECT 3 [Затрата]
		, [НомерМЛ]
		, [АвтокодМЛ]
		, [Дата]
		, [Перевозчик]
		, [Авто]
		, [Водитель]
		, [СтатусМЛ]
		, [Маршрут]
		, [Экспедитор]
		, [ДатаВыезда]
		, [ДатаРасч]
		, [ДатаВыездаРасч]
		, [ЗатратаНазвание3] [ЗатратаНазвание]
		, [ЗатратаПлан3] [ЗатратыПлан]
		, [ЗатратаФакт3] [ЗатратыФакт]
		FROM [dbo].[list_mlst]
		UNION ALL
		SELECT 4 [Затрата]
		, [НомерМЛ]
		, [АвтокодМЛ]
		, [Дата]
		, [Перевозчик]
		, [Авто]
		, [Водитель]
		, [СтатусМЛ]
		, [Маршрут]
		, [Экспедитор]
		, [ДатаВыезда]
		, [ДатаРасч]
		, [ДатаВыездаРасч]
		, [ЗатратаНазвание4] [ЗатратаНазвание]
		, [ЗатратаПлан4] [ЗатратыПлан]
		, [ЗатратаФакт4] [ЗатратыФакт]
		FROM [dbo].[list_mlst]
		UNION ALL
		SELECT 5 [Затрата]
		, [НомерМЛ]
		, [АвтокодМЛ]
		, [Дата]
		, [Перевозчик]
		, [Авто]
		, [Водитель]
		, [СтатусМЛ]
		, [Маршрут]
		, [Экспедитор]
		, [ДатаВыезда]
		, [ДатаРасч]
		, [ДатаВыездаРасч]
		, [ЗатратаНазвание5] [ЗатратаНазвание]
		, [ЗатратаПлан5] [ЗатратыПлан]
		, [ЗатратаФакт5] [ЗатратыФакт]
		FROM [dbo].[list_mlst]	
		) ml 
INNER JOIN (SELECT zvk.АвтКодМЛ
				, НомДок
				FROM zvk_dkm 
				INNER JOIN list_zvk ZVK on zvk.АвтКодЗвк = zvk_dkm.АвтКодЗвкДост 
				GROUP BY zvk.АвтКодМЛ, НомДок) AS ttndkm 
		ON ttndkm.АвтКодМЛ = ml.АвтокодМЛ 
INNER JOIN (SELECT MAX(ДокКод) AS ДокКод
				, Скл
				, ФлгОпер
				, Накл
				, MAX(ДокКод) AS Зкз
			FROM zkz_nkl AS z 
			GROUP BY Накл, Скл, ФлгОпер) AS zkz_nkl 
	ON zkz_nkl.ДокКод = ttndkm.НомДок
INNER JOIN HIST_SKL AS hs ON hs.ОпСкл = zkz_nkl.Скл AND hs.ОпТип = zkz_nkl.ФлгОпер AND zkz_nkl.Накл = hs.ОпНакл
JOIN LIST_SKL AS ls ON ls.ОпСкл = zkz_nkl.Скл AND ls.ОпТип = zkz_nkl.ФлгОпер AND zkz_nkl.Накл = ls.ОпНакл
LEFT OUTER JOIN KLN_ADK as k ON k.КодАдресаДоставки = ls.КодАдрДоставки and k.КодКлиента = ls.ОпКлн  
left join OurFirms f ON ls.НашаФирма = f.id
INNER JOIN dbo.KAT_TVR AS t ON t.ТовКод = hs.ОпКодТов
INNER JOIN dbo.kat_avto AS a ON a.АвтоКод = ml.Авто
INNER JOIN dbo.TVR_DEF AS d ON d.ТовКод = hs.ОпКодТов
where ml.ДатаРасч>=@BegDate and ml.ДатаРасч<@EndDate
);
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetSALINH]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 25-06-2014
-- Description:	Вывод таблицы-списка документов SALINH (Приходы) для SalesWork поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetSALINH]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end

    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL

	select 
		'Date' = convert(varchar, cast(nakl.ОпДатаРасч as date)),
		'Invoice_No' = nakl.ОпНаклКод,
		'Status' = '2',
		'VatCalcMod' = '1',
		'DTLM' = @dt,
		'Doc_Type' = case
						when nakl.ОпВозврат=0 and nakl.ОпТип=1 --приход от поставщика
							then 1
						when nakl.ОпВозврат=1 and nakl.ОпТип=2 --возврат поставщику
							then 4
  						else ''
  					 end,
  		'WAREH_CODE' = --'SE_' + convert(varchar,nakl.ОпСкл)
  			   convert(varchar,case 
								when nakl.ОпСкл = 65 then 'SE_T'
								when nakl.ОпСкл = 102 or nakl.ОпСкл = 103 then 'SE_S'
								when nakl.ОпСкл = 110 or nakl.ОпСкл = 111 then 'SE_E'
							   end)
	from LIST_SKL as nakl
				left join dbo.KAT_KLN kl on nakl.ОпКлн = kl.КлнКод
				left join dbo.CLN_DKL cd on cd.КлнКод = kl.КлнКод 
				left join dbo.KLN_ADK ka on ka.КодАдресаДоставки = nakl.КодАдрДоставки
	where	cast(nakl.ОпДатаРасч as date) BETWEEN @startDate and @endDate and 
			nakl.ОпНаклКод in
				(select l.ОпНаклКод
				from LIST_SKL as l
							INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
              				INNER JOIN @tvr as kt on H.ОпКодТов=kt.ТовКод
              				--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
              				left join KAT_KLN as k on k.КлнКод = l.ОпКлн
				 where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
						--(kv.ПользКод = '749' or kv.ПользКод = '747') --k.КлнГрпКод != 1 and
						and l.ОпСкл in (102, 103, 65, 110, 111)
						and (((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2))
				group by l.ОпНаклКод)
			
	order by nakl.ОпНаклКод asc
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetPRLIST]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 19-06-2014
-- Description:	Вывод таблицы PRLIST (Группы цен) для SalesWorks поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetPRLIST]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	declare @swekod table	(
								[swekod] int,
								[ГрпЦен] int
							)
	--Добавим значения соотношений
	insert into @swekod values (3800000, 0)
	insert into @swekod values (3800001, 1)
	insert into @swekod values (3800002, 2)
	insert into @swekod values (3800003, 3)
	insert into @swekod values (3800004, 4)
	insert into @swekod values (3800005, 5)
	insert into @swekod values (3800006, 6)
	insert into @swekod values (3800007, 7)
	insert into @swekod values (3800008, 8)
	insert into @swekod values (3800009, 9)
	insert into @swekod values (3800010, 10)
	insert into @swekod values (3800011, 11)
	insert into @swekod values (3800012, 12)
	insert into @swekod values (3800013, 13)
	insert into @swekod values (3800014, 14)
	insert into @swekod values (3800015, 15)
	insert into @swekod values (3800016, 16)
	insert into @swekod values (3800017, 17)
	insert into @swekod values (3800018, 18)
	insert into @swekod values (3800019, 19)
	insert into @swekod values (3800020, 20)
	insert into @swekod values (3800021, 21)
	insert into @swekod values (3800022, 22)
	insert into @swekod values (3800023, 23)
	insert into @swekod values (3800024, 24)
	insert into @swekod values (3800025, 25)
	insert into @swekod values (3800026, 26)
	insert into @swekod values (3800027, 27)
	insert into @swekod values (3800028, 28)
	insert into @swekod values (3800029, 29)
	insert into @swekod values (3800030, 30)
	insert into @swekod values (3800031, 31)
	insert into @swekod values (3800032, 32)
 
	select *
	from
	(
		select 
			'PAYFORM_ID' = tbl.swekod, --наш идентификатор, должен быть из системы SalesWork
			'Code' = tbl.КодПоставщика,
			'LOCALCODE' = tbl.ТовКод,
			'Price' = case
						when tbl.ЦенаПоГруппеЦен <> 0 and tbl.ЦенаПоГруппеЦен is not NULL 
							then tbl.ЦенаПоГруппеЦен
						else tbl.ТовЦенаРСХ
					end,
			'DTLM' = @dt,
			'Status' = '2'
		from
				(
					select 
						swe.swekod,
						grcen.ГрпЦен,
						kt.ТовКод,
						kt.ТовНаим,
						trd.КодПоставщика,
						'ТовЦенаРСХ' = kt.ТовЦенаРСХ,
						'ЦенаПоГруппеЦен' = cgrp.Цена
					FROM
						dbo.KAT_TVR as kt
						inner join @tvr as tv on kt.ТовКод = tv.ТовКод
						inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
						--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
						cross join (	select distinct sld.ГрпЦен
										from dbo.SLD_KLN as sld
											inner JOIN dbo.KAT_KLN as cl ON sld.КлнКод = cl.КлнКод
									) as grcen
						left join dbo.M_GRPCEN as cgrp on kt.ТовКод = cgrp.ТврКод and cgrp.ГрпЦен = grcen.ГрпЦен
						left join @swekod as swe on swe.[ГрпЦен] = grcen.ГрпЦен
					where --(kv.ПользКод = '749' or kv.ПользКод = '747')
							(tv.arh & 1) = 0
				) as tbl
			) as rez
	where rez.Price < 300
	order by 1
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetPARCOMP]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 19-06-2014
-- Description:	Вывод таблицы PARCOMP (Юр.лица) для SalesWorks поставщик Боржоми
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetPARCOMP]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end

	declare @dt varchar(14)

	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	select 
		'PComp_Code' = cl.КлнКод, 
		'PC_Name' = cl.КлнНаим,
		'PC_Addr' =  coalesce(cld.КлнАдрес,cld.КлнГрузАдрес),
		'DTLM' = @dt,
		'Status' = '2'
	from KAT_KLN as cl 
		left join CLN_DKL as cld on cl.КлнКод = cld.КлнКод
		--inner join KLN_ADK as tm on cl.КлнКод = tm.КодКлиента
		inner join (select distinct l.КодАдрДоставки, l.ОпКлн
									from dbo.LIST_SKL as l
			            				INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
			            				inner join @tvr as tv on tv.ТовКод = H.ОпКодТов
	              						--INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
	              						--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
					            			--and (kv.ПользКод = '749' or kv.ПользКод = '747')
		        					) as tt on cl.КлнКод = tt.ОпКлн
	/*where 	tm.КодАдресаДоставки in (select distinct(l.КодАдрДоставки)
									from dbo.LIST_SKL as l
			            				INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
	              						INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
	              						inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            			(kv.ПользКод = '749' or kv.ПользКод = '747')
		        					)
		    or cl.КлнКод in (select distinct(l.ОпКлн)
									from dbo.LIST_SKL as l
			            				INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
	              						INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
	              						inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
					            			and (kv.ПользКод = '749' or kv.ПользКод = '747')
					            			and (l.КодАдрДоставки = 0)
		        					)*/
	group by cl.КлнКод, cl.КлнНаим, cld.КлнАдрес, cld.КлнГрузАдрес
	order by cl.КлнКод asc
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetOUTLETS]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 19-06-2014
-- Description:	Вывод таблицы OUTLETS (Торговые точки) для SalesWorks поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetOUTLETS]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-14,@enddate)
	end
	
    declare @city varchar(20) = 'Екатеринбург'
	
	declare @dt varchar(14) = convert(varchar(20), cast(GETDATE() as date), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL

	select 
		'OL_ID'  = 0,
		'OL_Code' = convert(varchar(40), cl.КлнКод) + '/' + convert(varchar(40), tm.КодАдресаДоставки), 
		'SubType_ID' = 0, 
		'Area_ID' = 0, 
		'Name' = coalesce(REPLACE(RTRIM(cl.[КлнНаим]),'''',''), REPLACE(RTRIM(cld.КлнНаим),'''','')) + ', ' + RTRIM(cl.КлнФс),
		'Trade_Name' = coalesce(REPLACE(RTRIM(cl.[КлнНаим]),'''',''), REPLACE(RTRIM(cld.КлнНаим),'''','')),
		'Director' = '-',
		'Address' = case 
							when RTRIM(twn.ГородНаим) != '' and RTRIM(twn.ГородНаим) is not NULL
							then RTRIM(twn.ГородНаим) + ' г., ' + case 
																	when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
																	then RTRIM(tm.АдресДоставки)
																	else RTRIM(cld.КлнАдрес)
																end
							else RTRIM(twn2.ГородНаим) + ' г., ' +
								case 
									when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
									then RTRIM(tm.АдресДоставки)
									else RTRIM(cld.КлнАдрес)
								end
						end,
					--coalesce(twn.ГородНаим + ' г., ' + rtrim(tm.АдресДоставки), @city + ' г., ' + rtrim(cld.КлнАдрес)),
		'Deliv_Addr' =	case 
							when RTRIM(twn.ГородНаим) != '' and RTRIM(twn.ГородНаим) is not NULL
							then RTRIM(twn.ГородНаим) + ' г., ' + case 
																	when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
																	then RTRIM(tm.АдресДоставки)
																	else RTRIM(tm.Наим)
																end
							else RTRIM(twn2.ГородНаим) + ' г., ' +
								case 
									when RTRIM(tm.АдресДоставки) != '' and RTRIM(tm.АдресДоставки) is not NULL
									then RTRIM(tm.АдресДоставки)
									else RTRIM(tm.Наим)
								end
						end,-- coalesce(twn.ГородНаим + ' г., ' + tm.АдресДоставки, '-'),
		'Telephone' = '-',
		'FAX' = '-',
		'EMail' = '-',
		'Accountant' = '-',
		'Acc_Phone' = '-',
		'M_Manage' = '-',
		'MM_Phone' = '-',
		'P_Manager' = '-',
		'Open_Time' = '00:00',
		'Close_Time' = '00:00',
		'Break_From' = '00:00',
		'Break_To' = '00:00',
		'ZKPO' = '-',
		'IPN' = coalesce(cld.ИНН, '-'),
		'VATN' = '-',
		'RR' = '-',
		'BankCode' = '-',
		'BankName' = '-',
		'BankAddr' = '-',
		'DTLM' = @dt,
		'Owner_ID' = '3800001',
		'Status' = case when tm.АдресАрхив != '-1' then '2' else '9' end,
		'PComp_Code' = cl.КлнКод,
		'Lic_Usage' = '0' /*заполнять значением 0*/
	from KLN_ADK as tm
	inner join KAT_KLN as cl on cl.КлнКод = tm.КодКлиента
	left join CLN_DKL as cld on cl.КлнКод = cld.КлнКод
	left join kat_twn as twn on twn.КодГород = tm.КодГорода
	left join kat_twn as twn2 on twn2.КодГород = cld.КодГород
	inner join (select distinct l.ОпКлн, l.КодАдрДоставки
									from dbo.LIST_SKL as l
				            			INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
				            			inner join @tvr as tv on tv.ТовКод = H.ОпКодТов
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            			((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
	            							(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
            								(l.ОпТип = 3) or										 --списание
            								(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            								(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            								(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2)) --исключаем поставщик приход, возврат
            						) as TT on cl.КлнКод = TT.ОпКлн and tm.КодАдресаДоставки = TT.КодАдрДоставки
	union
	select 
		'OL_ID'  = 0,
		'OL_Code' = convert(varchar(40), cl.КлнКод) + '/' + convert(varchar(40), 0), 
		'SubType_ID' = 0, 
		'Area_ID' = 0, 
		'Name' = coalesce(REPLACE(RTRIM(cl.[КлнНаим]),'''',''), REPLACE(RTRIM(cld.КлнНаим),'''','')) + ', ' + RTRIM(cl.КлнФс),
		'Trade_Name' = coalesce(REPLACE(RTRIM(cl.[КлнНаим]),'''',''), REPLACE(RTRIM(cld.КлнНаим),'''','')),
		'Director' = '-',
		'Address' = case 
							when RTRIM(twn2.ГородНаим) != '' and RTRIM(twn2.ГородНаим) is not NULL
								then  RTRIM(twn2.ГородНаим) + ' г., ' + case 
																			when RTRIM(cld.КлнАдрес) != '' and RTRIM(cld.КлнАдрес) is not NULL
																			then RTRIM(cld.КлнАдрес)
																			else RTRIM(cld.КлнГрузАдрес)
																		end
							else @city  + ' г., ' + case 
														when RTRIM(cld.КлнАдрес) != '' and RTRIM(cld.КлнАдрес) is not NULL
														then RTRIM(cld.КлнАдрес)
														else RTRIM(cld.КлнГрузАдрес)
													end
						end,
					--coalesce(twn.ГородНаим + ' г., ' + rtrim(tm.АдресДоставки), @city + ' г., ' + rtrim(cld.КлнАдрес)),
		'Deliv_Addr' =	case 
							when RTRIM(twn2.ГородНаим) != '' and RTRIM(twn2.ГородНаим) is not NULL
								then  RTRIM(twn2.ГородНаим) + ' г., ' + case 
																			when RTRIM(cld.КлнАдрес) != '' and RTRIM(cld.КлнАдрес) is not NULL
																			then RTRIM(cld.КлнАдрес)
																			else RTRIM(cld.КлнГрузАдрес)
																		end
							else @city  + ' г., ' + case 
														when RTRIM(cld.КлнАдрес) != '' and RTRIM(cld.КлнАдрес) is not NULL
														then RTRIM(cld.КлнАдрес)
														else RTRIM(cld.КлнГрузАдрес)
													end
						end, --coalesce(@city + ' г., ' + rtrim(cld.КлнАдрес), '-'),
		'Telephone' = '-',
		'FAX' = '-',
		'EMail' = '-',
		'Accountant' = '-',
		'Acc_Phone' = '-',
		'M_Manage' = '-',
		'MM_Phone' = '-',
		'P_Manager' = '-',
		'Open_Time' = '00:00',
		'Close_Time' = '00:00',
		'Break_From' = '00:00',
		'Break_To' = '00:00',
		'ZKPO' = '-',
		'IPN' = coalesce(cld.ИНН, '-'),
		'VATN' = '-',
		'RR' = '-',
		'BankCode' = '-',
		'BankName' = '-',
		'BankAddr' = '-',
		'DTLM' = @dt,
		'Owner_ID' = '3800001',
		'Status' = '2', --case when tm.АдресАрхив != '-1' then '2' else '9' end,
		'PComp_Code' = cl.КлнКод,
		'Lic_Usage' = '0' /*заполнять значением 0*/
	from KAT_KLN as cl 
		left join CLN_DKL as cld on cl.КлнКод = cld.КлнКод
		left join kat_twn as twn2 on twn2.КодГород = cld.КодГород
	where 	cl.КлнКод in (select distinct(l.ОпКлн)
									from dbo.LIST_SKL as l
			            				INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
	              						inner join @tvr as tv on tv.ТовКод = H.ОпКодТов
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            			l.КодАдрДоставки = 0 and 
					            			((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
            								(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
            								(l.ОпТип = 3) or										 --списание
            								(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            								(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            								(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2)) --исключаем поставщик приход, возврат
		        					)
	order by cl.КлнКод asc
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetORDERLD]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 25-06-2014
-- Description:	Вывод таблицы ORDERLD (табличная часть документов) для SalesWork поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetORDERLD]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL

	select 
		'Corder_No' = zak.ЗкзКод,
		'LocalCode' = kt.ТовКод,
		'Price' = zt.ПозЦена, --ROUND(zt.ПозЦена*(zt.ПозЦена/( 1+ ( kt.[НДС]/100 ))),4), 
		'Qty' = zt.ПозКол,
		'VAT' = kt.[НДС]
	from dbo.[LIST_ZKZ] as zak
			inner join dbo.[ZKZ_TVR] as zt on zak.ЗкзКод = zt.ПозКодЗкз
			inner join @tvr as tv on zt.ПозТов = tv.ТовКод
			inner join KAT_TVR as kt on zt.ПозТов = kt.ТовКод
			--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
	where	cast(zak.ЗкзДатаРасч as date) BETWEEN @startDate and @endDate 
			--and (kv.ПользКод = '749' or kv.ПользКод = '747')
			and zt.ПозЦена < 300 --существуют позиции с космической ценой вида 1 млн. за штуку) не влазят в поле DECIMAL SWE (Длиннее 15 символов)
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetORDERH]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 25-06-2014
-- Description:	Вывод таблицы ORDERH (заголовки документов заказов) для SalesWork поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetORDERH]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	select 
		'Corder_No' = zak.ЗкзКод,
		'Order_No' = case
						when zak.ЗкзНом like 'bj-%' then '20038' + zak.ЗкзНом
						else '0'
					 end,
		'Merch_ID' = '0', 
		'OL_Code' = convert(varchar, zak.ЗкзКлн) + '/' + coalesce(convert(varchar, zak.ЗкзАдр), '0'),
		'Date' = cast(zak.ЗкзДатаРасч as date),
		'DateTo' = case when zak.ЗкзДатаЗавершРасч > zak.ЗкзДатаРасч then cast(zak.ЗкзДатаЗавершРасч as date) else cast(zak.ЗкзДатаРасч as date) end,
		'VatCalcMod' = '1',
		'Doc_Type' = '2',
		'Status' = '2',
		'DTLM' = @dt
	from dbo.[LIST_ZKZ] as zak
	where	zak.ЗкзКод in (	select distinct zak.ЗкзКод
							from dbo.[LIST_ZKZ] as zak
								inner join dbo.[ZKZ_TVR] as zt on zak.ЗкзКод = zt.ПозКодЗкз
								inner join @tvr as kt on zt.ПозТов = kt.ТовКод
								--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
							where cast(zak.ЗкзДатаРасч as date) BETWEEN @startDate and @endDate 
									---and (kv.ПользКод = '749' or kv.ПользКод = '747')
						   )
			--and (zak.ЗкзБитФл & 1) = 0 --проверим на архив
	order by 1, 2
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetORDDEN]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 26-06-2014
-- Description:	Вывод таблицы ORDDEN (информация о статусе заказов) для SalesWork поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetORDDEN]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	select 
		'CORDER_NO' = zak.ЗкзКод,
		'DENIAL_ID' =  ( select
							case 
							when COUNT(ID.ОпНакл) = 0 then '13'
							when COUNT(ID.ОпНакл) > 0 and COUNT(ID.НомерСФ) = 0 then '15'
							when COUNT(ID.ОпНакл) > 0 and COUNT(ID.НомерСФ) > 0 then '16'
							end
						from (select top 1 znnk.ДокКод, nakl.ОпНакл, sf.НомерСФ
							from dbo.zkz_nkl AS znnk
								left join dbo.LIST_SKL as nakl on nakl.ОпНакл = znnk.Накл
								left join dbo.list_sf as sf on nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ
							where cast(nakl.ОпДатаРасч as date) BETWEEN @startDate and @endDate and znnk.ДокКод = zak.ЗкзКод
							) as ID
					   ),
		'Status' = '2'
	from dbo.[LIST_ZKZ] as zak
	where	zak.ЗкзКод in (	select distinct zak.ЗкзКод
							from dbo.[LIST_ZKZ] as zak
								inner join dbo.[ZKZ_TVR] as zt on zak.ЗкзКод = zt.ПозКодЗкз
								inner join @tvr as tv on tv.ТовКод = zt.ПозТов
								--inner join dbo.KAT_TVR as kt on zt.ПозТов = kt.ТовКод
								--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
							where cast(zak.ЗкзДатаРасч as date) BETWEEN @startDate and @endDate 
									--and (kv.ПользКод = '749' or kv.ПользКод = '747')
						   )
			and zak.ЗкзНом not like 'bj-%'
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetOLPRDDSC]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 27-06-2014
-- Description:	Вывод таблицы OLPRDDSC (Скидки ТТ) для SalesWorks поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetOLPRDDSC]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	declare @outlets table	(
								КлнКод int,
								КодАдрДоставки int,
								Name varchar(50)
							)
							
	insert into @outlets	select cl.КлнКод, cl.КодАдресаДоставки, CONVERT(varchar, cl.КлнКод) + '/' + CONVERT(varchar, cl.КодАдресаДоставки)
							from
								(
								select 
									cl.КлнКод,
									tm.КодАдресаДоставки 
								from KLN_ADK as tm
									inner join KAT_KLN as cl on cl.КлнКод = tm.КодКлиента
									left join CLN_DKL as cld on cl.КлнКод = cld.КлнКод
									left join kat_twn as twn on twn.КодГород = tm.КодГорода
									inner join (select distinct l.ОпКлн, l.КодАдрДоставки
												from dbo.LIST_SKL as l
		       										INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
        											inner join @tvr as tv on tv.ТовКод = H.ОпКодТов
        											--INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
        											--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
		   										where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
		           										--(kv.ПользКод = '749' or kv.ПользКод = '747') and 
					            						((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
            											(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
			            								(l.ОпТип = 3) or										 --списание
            											(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            											(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            											(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2)) --исключаем поставщик приход, возврат
											) as TT on cl.КлнКод = TT.ОпКлн and tm.КодАдресаДоставки = TT.КодАдрДоставки
								union
								select 
									cl.КлнКод,
									'0'
								from KAT_KLN as cl 
									left join CLN_DKL as cld on cl.КлнКод = cld.КлнКод
								where 	cl.КлнКод in (select distinct(l.ОпКлн)
																from dbo.LIST_SKL as l
			            											INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
			            											inner join @tvr as tv on tv.ТовКод = H.ОпКодТов
	              													--INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
	              													--inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод
	              													--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
			            										where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            										--(kv.ПользКод = '749' or kv.ПользКод = '747') and
					            										l.КодАдрДоставки = 0  and 
					            										((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
            															(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
			            												(l.ОпТип = 3) or										 --списание
            															(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            															(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            															(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2))) --исключаем поставщик приход, возврат
								) as cl
			
	--select * from @outlets					
						 
	select *
	from
	(
	select 
		'OL_CODE' = coalesce(convert(varchar, rez.КлнКод) + '/' + convert(varchar, rez.КодАдрДоставки) , convert(varchar, rez.КлнКод) + '/0'),
		'CODE' = '0',
		'LOCALCODE' = rez.ТовКод,
		'DISCOUNT' = ROUND(case 
							when rez.ЦенаПоГруппеЦен <> 0 and rez.ЦенаПоГруппеЦен is not NULL 
								then (1 - rez.РеальнаяЦена / rez.ЦенаПоГруппеЦен) * 100
							else
								(1 - rez.РеальнаяЦена / rez.ТовЦенаРСХ) * 100
						   end, 3),
		'DTLM' = @dt,
		'Status' = '2'
	from
		(
			SELECT     tbl.КлнКод, tbl.ТовКод, tbl.ТовЦенаРСХ, tbl.ЦенаПоГруппеЦен, tbl.ЦенаПоАльтГруппеЦен, tbl.КодАдрДоставки,
					'РеальнаяЦена' = ROUND(case
											when tbl.ЦенаПоАльтГруппеЦен <> 0 and tbl.ЦенаПоАльтГруппеЦен is not NULL 
												then tbl.ЦенаПоАльтГруппеЦен * (1 - tbl.ДопСкидка / 100) * (1 - ISNULL(tbl.ТоварнаяСкидка,0) / 100)
											when tbl.ЦенаПоГруппеЦен <> 0 and tbl.ЦенаПоГруппеЦен is not NULL 
												then tbl.ЦенаПоГруппеЦен * (1 - tbl.ДопСкидка / 100) * (1 - ISNULL(tbl.ТоварнаяСкидка,0) / 100)
											else
												tbl.ТовЦенаРСХ * (1 - tbl.ДопСкидка / 100) * (1 - ISNULL(tbl.ТоварнаяСкидка,0) / 100)
										   end, 4)
			from
				(
					SELECT     cl.КлнКод, tv.ТовКод, kt.ТовЦенаРСХ, sld.ГрпЦен, ou.КодАдрДоставки,
							'ЦенаПоГруппеЦен' = (SELECT     TOP (1) Цена
													FROM          dbo.M_GRPCEN
													WHERE      (ТврКод = kt.ТовКод) AND (ГрпЦен = sld.ГрпЦен)),
							'ЦенаПоАльтГруппеЦен' = (SELECT     TOP (1) dbo.M_GRPCEN.Цена
														FROM dbo.M_GRPCEN INNER JOIN
															dbo.CENP_TAB ON dbo.M_GRPCEN.ГрпЦен = dbo.CENP_TAB.ЦенГрп
														WHERE (dbo.M_GRPCEN.ТврКод = kt.ТовКод) AND (dbo.CENP_TAB.КлнКод = cl.КлнКод) AND 
																(dbo.CENP_TAB.ТовКод = kt.ТовКод)),
							'ТоварнаяСкидка' = (SELECT     TOP (1) СкдПрц1
												FROM          dbo.SKD_TAB
												WHERE      (СкдКод = kt.ТовКод) AND (СкдТип = 1)),
							'ДопСкидка' = (	select ISNULL(sk.sk1, 0) + ISNULL(sk.sk2, 0) + ISNULL(sk.sk3, 0)
											from
												(
													select 
															(SELECT     TOP (1) СкдПрц1
															 FROM          dbo.SKD_TAB
															 WHERE      (СкдКод = cl.КлнКод) AND (СкдДоп = kt.ТовКод) AND (СкдТип = 6))AS sk1, --КлнНаТовар
															(SELECT     TOP (1) СкдПрц1
															 FROM          dbo.SKD_TAB
															 WHERE      (СкдКод = cl.КлнКод) AND (СкдДоп = kt.ТовВид) AND (СкдТип = 7))AS sk2, --КлнНаВид
															(SELECT     TOP (1) СкдПрц1
															 FROM          dbo.SKD_TAB
															 WHERE      (СкдКод = cl.КлнКод) AND (СкдДоп = kt.ТовГрп) AND (СкдТип = 0))AS sk3 --КлнНаГруппу
												) as sk
										  )
					FROM  dbo.SLD_KLN as sld
							inner join dbo.KAT_KLN as cl on cl.КлнКод = sld.КлнКод
							cross join @tvr as tv 
							inner join dbo.KAT_TVR as kt on tv.ТовКод = kt.ТовКод
							--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
							--left join KLN_ADK as tm on tm.КодКлиента = cl.КлнКод
							inner join @outlets as ou on ou.КлнКод = cl.КлнКод --and ou.КодАдрДоставки = tm.КодАдресаДоставки
					/*where (kv.ПользКод = '749' or kv.ПользКод = '747')*/) as tbl
		) as rez
		where rez.РеальнаяЦена < 300 
	) as dsc
	where dsc.DISCOUNT <> 0
	order by 1
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetOLPFORM]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 24-06-2014
-- Description:	Вывод таблицы OLPFORM (Привязка категорий цен к клиентам) для SalesWorks поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetOLPFORM]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @city varchar(20) = 'Екатеринбург'
	
	declare @dt varchar(14) = convert(varchar(20), cast(GETDATE() as date), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	declare @swekod table	(
								[swekod] int,
								[ГрпЦен] int
							)
	--Добавим значения соотношений
	insert into @swekod values (3800000, 0)
	insert into @swekod values (3800001, 1)
	insert into @swekod values (3800002, 2)
	insert into @swekod values (3800003, 3)
	insert into @swekod values (3800004, 4)
	insert into @swekod values (3800005, 5)
	insert into @swekod values (3800006, 6)
	insert into @swekod values (3800007, 7)
	insert into @swekod values (3800008, 8)
	insert into @swekod values (3800009, 9)
	insert into @swekod values (3800010, 10)
	insert into @swekod values (3800011, 11)
	insert into @swekod values (3800012, 12)
	insert into @swekod values (3800013, 13)
	insert into @swekod values (3800014, 14)
	insert into @swekod values (3800015, 15)
	insert into @swekod values (3800016, 16)
	insert into @swekod values (3800017, 17)
	insert into @swekod values (3800018, 18)
	insert into @swekod values (3800019, 19)
	insert into @swekod values (3800020, 20)
	insert into @swekod values (3800021, 21)
	insert into @swekod values (3800022, 22)
	insert into @swekod values (3800023, 23)
	insert into @swekod values (3800024, 24)
	insert into @swekod values (3800025, 25)
	insert into @swekod values (3800026, 26)
	insert into @swekod values (3800027, 27)
	insert into @swekod values (3800028, 28)
	insert into @swekod values (3800029, 29)
	insert into @swekod values (3800030, 30)
	insert into @swekod values (3800031, 31)
	insert into @swekod values (3800032, 32)
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
 
	(select 
		'OL_Code' = coalesce(convert(varchar, saldo.КлнКод) + '/' + convert(varchar, tm.КодАдресаДоставки), convert(varchar, saldo.КлнКод) + '/0'),
		'PayForm_ID' = swe.swekod,--saldo.ГрпЦен,
		'DTLM' = @dt,
		'Status' = '2'
	from KLN_ADK as tm
		inner join SLD_KLN as saldo on tm.КодКлиента = saldo.КлнКод
		left join @swekod as swe on swe.ГрпЦен = saldo.ГрпЦен
		where	tm.КодАдресаДоставки in (select distinct(l.КодАдрДоставки)
										from dbo.LIST_SKL as l
					            			INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
					            			inner join @tvr as tv on tv.ТовКод = H.ОпКодТов
              								--INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
              								--inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод	
              								--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
			            				where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            				--(kv.ПользКод = '749' or kv.ПользКод = '747') and
					            				((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
	            								(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
            									(l.ОпТип = 3) or										 --списание
            									(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            									(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            									(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2) --исключаем поставщик приход, возврат
            							) 
	)            							
	--order by saldo.КлнКод asc, tm.КодАдресаДоставки asc, saldo.ГрпЦен asc
	union
	(select 
		'OL_Code' = convert(varchar, saldo.КлнКод) + '/0',
		'PayForm_ID' = swe.swekod,--saldo.ГрпЦен,
		'DTLM' = @dt,
		'Status' = '2'
	from SLD_KLN as saldo
		left join @swekod as swe on swe.ГрпЦен = saldo.ГрпЦен
		where	saldo.КлнКод in (select distinct(l.ОпКлн)
										from dbo.LIST_SKL as l
					            			INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
					            			inner join @tvr as tv on tv.ТовКод = H.ОпКодТов
              								--INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
              								--inner join TVR_DEF as trd on kt.ТовКод = trd.ТовКод	
              								--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
			            				where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
					            				--and (kv.ПользКод = '749' or kv.ПользКод = '747')
					            				and l.КодАдрДоставки = 0 and
					            				((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
	            								(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
            									(l.ОпТип = 3) or										 --списание
            									(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            									(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            									(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2))) --исключаем поставщик приход, возврат
            							) 
	)
	order by 2, 1
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetOLORDEN]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 26-06-2014
-- Description:	Вывод таблицы OLORDEN (информация о статусе заказов SalesWork) для SalesWork поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetOLORDEN]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	select 
		'ORDER_NO' = '0',--zak.ЗкзКод,
		'DENIAL_ID' =  ( select
							case 
							when COUNT(ID.ОпНакл) = 0 then '13'
							when COUNT(ID.ОпНакл) > 0 and COUNT(ID.НомерСФ) = 0 then '15'
							when COUNT(ID.ОпНакл) > 0 and COUNT(ID.НомерСФ) > 0 then '16'
							end
						from (select top 1 znnk.ДокКод, nakl.ОпНакл, sf.НомерСФ
							from dbo.zkz_nkl AS znnk
								left join dbo.LIST_SKL as nakl on nakl.ОпНакл = znnk.Накл
								left join dbo.list_sf as sf on nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ
							where cast(nakl.ОпДатаРасч as date) BETWEEN @startDate and @endDate and znnk.ДокКод = zak.ЗкзКод
							) as ID
					   ),
		'Status' = '2'
	from dbo.[LIST_ZKZ] as zak
	where	zak.ЗкзНом like 'bj-%' and
			zak.ЗкзКод in (	select distinct zak.ЗкзКод
							from dbo.[LIST_ZKZ] as zak
								inner join dbo.[ZKZ_TVR] as zt on zak.ЗкзКод = zt.ПозКодЗкз
								inner join @tvr as tv on tv.ТовКод = zt.ПозТов
								--inner join dbo.KAT_TVR as kt on zt.ПозТов = kt.ТовКод
								--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
							where cast(zak.ЗкзДатаРасч as date) BETWEEN @startDate and @endDate 
								--	and (kv.ПользКод = '749' or kv.ПользКод = '747')
						   )
			--and zak.  --Выбор заказов SWE по флагу
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetOLDEBTS]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 24-06-2014
-- Description:	Вывод таблицы OLDEBTS (Долги ТТ) для SalesWorks поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetOLDEBTS]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @city varchar(20) = 'Екатеринбург'
	
	declare @dt varchar(14) = convert(varchar(20), cast(GETDATE() as date), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL

	select
		'OL_Code' = convert(varchar(40), TTad.ОпКлн) + '/' + convert(varchar(40), TTad.КодАдрДоставки),
		'Debt' = coalesce(
					(select top 1 ROUND(d.НаклДЗ,3)
					from skl_with_debt AS d
							inner join LIST_SKL AS sk ON d.ОпНаклКод = sk.ОпНаклКод 
							left join KAT_KLN as k ON k.КлнКод = sk.ОпКлн
							left join KLN_ADK as tm on k.КлнКод = tm.КодКлиента
					where cast(sk.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
							sk.КодАдрДоставки = TTad.КодАдрДоставки	and sk.ОпКлн = TTad.ОпКлн			 
					order by sk.ОпДатаРасч desc, sk.ОпНаклКод desc
					), 0),
		'PayDate' = 
					(select top 1 skl.ОпДатаРасч
					from LIST_SKL AS skl 
					where cast(skl.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
							skl.КодАдрДоставки = TTad.КодАдрДоставки and skl.ОпКлн = TTad.ОпКлн
					order by skl.ОпДатаРасч desc, skl.ОпНаклКод desc
					),
		'CanSale' = '1', --флаг на разрешение огрузки
		'Avg_Amount' = '0',
		'DTLM' = @dt,
		'Status' = '2'
	
	from 
		(select distinct l.ОпКлн, l.КодАдрДоставки
									from dbo.LIST_SKL as l
				            			INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
              							inner join @tvr as tv on tv.ТовКод = H.ОпКодТов
              							--INNER JOIN dbo.KAT_TVR as kt ON H.ОпКодТов=kt.ТовКод
              							--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
              							left join KAT_KLN as k ON k.КлнКод = l.ОпКлн
              							inner join skl_with_debt as d on d.ОпНаклКод = l.ОпНаклКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            			--(kv.ПользКод = '749' or kv.ПользКод = '747') and  
					            			k.КлнГрпКод = 1 and
					            			((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
	            							(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
            								(l.ОпТип = 3) or										 --списание
            								(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            								(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            								(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2)) --исключаем поставщик приход, возврат
            						) as TTad
	order by TTad.ОпКлн asc, TTad.КодАдрДоставки asc
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetOLDEBDET]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 25-06-2014
-- Description:	Вывод таблицы OLDEBDET (Долги ТТ - детально) для SalesWorks поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetOLDEBDET]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @city varchar(20) = 'Екатеринбург'
	
	declare @dt varchar(14) = convert(varchar(20), cast(GETDATE() as date), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	select
		'OL_Code' = convert(varchar(40), clTT.ОпКлн) + '/' + convert(varchar(40), clTT.КодАдрДоставки),
		'Date' = cast((select top 1 sk.ОпДатаРасч
					from skl_with_debt AS d
							inner join LIST_SKL AS sk ON d.ОпНаклКод = sk.ОпНаклКод 
					where cast(sk.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
							sk.КодАдрДоставки = clTT.КодАдрДоставки	and sk.ОпКлн = clTT.ОпКлн and
							(d.НаклДЗ > 0 or d.НаклДЗ is not NULL)
					order by sk.ОпДатаРасч desc, sk.ОпНаклКод desc
					) as date),
		'COMMENT' = (select top 1 convert(varchar(20),sk.ОпНаклКод) + '; ' +  convert(varchar(10), DATEDIFF(day, sk.ОпДатаРасч, GETDATE()))
					from skl_with_debt AS d
							inner join LIST_SKL AS sk ON d.ОпНаклКод = sk.ОпНаклКод 
					where cast(sk.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
							sk.КодАдрДоставки = clTT.КодАдрДоставки	and sk.ОпКлн = clTT.ОпКлн and
							(d.НаклДЗ > 0 or d.НаклДЗ is not NULL)		 
					order by sk.ОпДатаРасч desc, sk.ОпНаклКод desc
					),
		'DEBT' =	(select top 1 ROUND(d.Сумма,3)
					from skl_with_debt AS d
							inner join LIST_SKL AS sk ON d.ОпНаклКод = sk.ОпНаклКод 
					where cast(sk.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
							sk.КодАдрДоставки = clTT.КодАдрДоставки	and sk.ОпКлн = clTT.ОпКлн and
							(d.НаклДЗ > 0 or d.НаклДЗ is not NULL)		 
					order by sk.ОпДатаРасч desc, sk.ОпНаклКод desc
					),
		'DebTypCode' = '2',
		'INVOICE_NO' = (select top 1 sk.ОпНаклКод
					from skl_with_debt AS d
							inner join LIST_SKL AS sk ON d.ОпНаклКод = sk.ОпНаклКод 
					where cast(sk.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
							sk.КодАдрДоставки = clTT.КодАдрДоставки	and sk.ОпКлн = clTT.ОпКлн and
							(d.НаклДЗ > 0 or d.НаклДЗ is not NULL)		 
					order by sk.ОпДатаРасч desc, sk.ОпНаклКод desc
					),
		'DTLM' = @dt,
		'Status' = '2'
	
		from  (select distinct l.ОпКлн, l.КодАдрДоставки
									from dbo.LIST_SKL as l
				            			INNER JOIN dbo.HIST_SKL as h on l.ОпНаклКод=H.ОпНаклКод
				            			inner join @tvr as tv on tv.ТовКод = H.ОпКодТов
              							--INNER JOIN dbo.KAT_TVR as kt on H.ОпКодТов=kt.ТовКод
              							--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
              							left join KAT_KLN as k on k.КлнКод = l.ОпКлн
              							inner join skl_with_debt as d on d.ОпНаклКод = l.ОпНаклКод
			            			where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
					            			--(kv.ПользКод = '749' or kv.ПользКод = '747') and  
					            			k.КлнГрпКод = 1 and 
					            			((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
	            							(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
            								(l.ОпТип = 3) or										 --списание
            								(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
            								(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
            								(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2)) --исключаем поставщик приход, возврат
            						) as clTT
	order by clTT.ОпКлн asc, clTT.КодАдрДоставки asc
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetLOCLPROD]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 19-06-2014
-- Description:	Вывод таблицы LPRODDET (Каталог товаров) для SalesWorks поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetLOCLPROD]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
 
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	select 
		'LocalCode' = nk.ТовКод,
		'Code' = trd.КодПоставщика,
		'Name' = nk.ТовНаим,
		'ShortName' = nk.ТовНаим,
		'Weight' = trd.ТовВесБрутто,
		'Pack_Qty' = u.УпакКоэф,
		'IsMix' = '0',
		'Status' =	case
						when (tv.arh & 1 ) = 0
						then '2'
						else '9'
					end,
		'DTLM' = @dt
	from KAT_TVR as nk
		inner join @tvr as tv on tv.ТовКод = nk.ТовКод
		inner join TVR_DEF as trd on nk.ТовКод = trd.ТовКод
		--inner join KAT_VIDT as kv on nk.ТовВид = kv.ВидКод
		left join KAT_UPK as u on nk.ТовУпак = u.УпакКод
	where --(kv.ПользКод = '749' or kv.ПользКод = '747')
			--(nk.БФ & 1 ) = 0  --Tvr не архив
			(trd.КодПоставщика != '' and trd.КодПоставщика is not NULL)
	order by nk.ТовКод asc
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetINISTOCK]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 03-07-2014
-- Description:	Вывод таблицы INISTOCK (Остатки Текущии) для SalesWorks поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetINISTOCK]
	-- Add the parameters for the stored procedure here
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    if(@enddate is NULL)
	begin
		set @enddate = cast(GETDATE() as date)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	/*select *
	from
	(*/
		select  
			'WAREH_CODE' = --'SE_' + convert(varchar(5), pr_n.skl),
				case 
					when pr_n.skl = 65 then 'SE_T'
					when pr_n.skl = 102 or pr_n.skl = 103 then 'SE_S'
					when pr_n.skl = 110 or pr_n.skl = 111 then 'SE_E'
				end,
			'LOCALCODE' = pr_n.kod_tov,
			'STOCK' = isnull(pr_n.kolvo, 0),
			'DTLM' = @dt, --convert(varchar(20), @dt, 104),
			'Status' = '2'

		FROM (SELECT sklt.ОпСкл as skl, tv.ТовКод as kod_tov
					--,kt.ТовНаим nam
					,SUM((CASE WHEN hs.ОпТип = 1 THEN 1 ELSE -1 END)*hs.ОпКол) AS kolvo
					from HIST_SKL as hs
						inner join @tvr as tv on tv.ТовКод = hs.ОпКодТов
						--INNER JOIN KAT_TVR as kt ON  hs.ОпКодТов=Kt.ТовКод
						INNER JOIN LIST_SKL as sklt ON hs.ОпНаклКод=sklt.ОпНаклКод
						--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
					WHERE --(kv.ПользКод = '749' or kv.ПользКод = '747')
							(cast(sklt.ОпДатаРасч as date) <= @enddate)
							and sklt.ОпСкл in (102, 103, 65, 110, 111)
					GROUP BY sklt.ОпСкл, tv.ТовКод) PR_n 
		where pr_n.kolvo > 0
		--order by 1, 2
	/*) as tmp
	where tmp.STOCK > 0
	order by 1, 2*/
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetARSTOCK]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 24-06-2014
-- Description:	Вывод таблицы ARTSTOCK (Остатки) для SalesWorks поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetARSTOCK]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-14,@enddate)
	end

    declare @dt varchar(14), @curdate date
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	set @curdate = @startdate
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	declare @t table (
		[WAREH_CODE] varchar(10) NULL,
		[LOCALCODE] int NULL,
		[STOCK] float NULL,
		[DATE] varchar(20) NULL)

	
	WHILE @curdate <= @enddate
	BEGIN
		insert into @t (WAREH_CODE, LOCALCODE, STOCK, [DATE]) 
		select  
			'WAREH_CODE' = --'SE_' + convert(varchar(5), pr_n.skl),
				case 
					when pr_n.skl = 65 then 'SE_T'
					when pr_n.skl = 102 or pr_n.skl = 103 then 'SE_S'
					when pr_n.skl = 110 or pr_n.skl = 111 then 'SE_E'
				end,
			'LOCALCODE' = pr_n.kod_tov,
			'STOCK' = isnull(pr_n.kolvo, 0),
			'DATE' = convert(varchar(20), @curdate, 104)
	
		FROM (SELECT sklt.ОпСкл as skl, Kt.ТовКод as kod_tov
					,kt.ТовНаим nam
					,SUM((CASE WHEN hs.ОпТип = 1 THEN 1 ELSE -1 END)*hs.ОпКол) AS kolvo
					from HIST_SKL as hs
						inner join @tvr as tv on tv.ТовКод = hs.ОпКодТов
						INNER JOIN KAT_TVR as kt ON  hs.ОпКодТов=Kt.ТовКод
						INNER JOIN LIST_SKL as sklt ON hs.ОпНаклКод=sklt.ОпНаклКод
						--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
					WHERE --(kv.ПользКод = '749' or kv.ПользКод = '747')
						   (cast(sklt.ОпДатаРасч as date) < @curdate)
						   and sklt.ОпСкл in (102, 103, 65, 110, 111)
					GROUP BY sklt.ОпСкл, Kt.ТовКод, kt.ТовНаим) PR_n 
		
		set @curdate = DATEADD(DAY, 1, @curdate)
	END
	
	select *
	from @t
	where STOCK > 0
END
GO
/****** Object:  StoredProcedure [dbo].[SQL_ProdRes_65]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
--Евгений Федяков
-- Все запросы из ProdRes_65

CREATE PROCEDURE [dbo].[SQL_ProdRes_65]
--with recompile
as
set nocount on;
--SET ANSI_NULLS ON;
--SET QUOTED_IDENTIFIER OFF;

truncate table m_debit


INSERT INTO M_DEBIT(НаклКод, НаклСклКод, НаклКлн, НаклСотр, НаклДата,
	НаклДатаРасч, НаклТип, НаклВозвр, НаклКол, НаклСтоим,
	НаклКодТов, НаклНом,КодКлн_КодАдрДоставки,НДС,ЦенаКат,ЦенаКатУчет)

select ОпНаклКод, НаклСклКод, ОпКодКлн, НаклСотр, ОпДата, ОпДатаРасч, НаклТип,
	ОпВозвр, ОпКол, ОпСтоим, ОпКодТов, НаклНомер,КодКлн_КодАдрДоставки,НДС,ТовЦенаРСХ*(1+НДС/100),ТовЦенаУчет*(1+НДС/100)
from f_rash 
		INNER JOIN kat_tvr ON kat_tvr.ТовКод=f_rash.ОпКодТов

	
update m_debit
set ЦенаАльтГрп = 
(select top 1 Цена from m_grpcen, cenp_tab
	where 
	m_grpcen.ТврКод = m_debit.НаклКодТов and
	cenp_tab.КлнКод = m_debit.НаклКлн and
	cenp_tab.ТовКод = m_debit.НаклКодТов and
	m_grpcen.ГрпЦен = cenp_tab.ЦенГрп and
	Цена is not null
)*(1+НДС/100)
, ЦенаГрп = 
(select top 1 Цена from m_grpcen, sld_kln 
	where 
	m_grpcen.ТврКод = m_debit.НаклКодТов and
	sld_kln.КлнКод = m_debit.НаклКлн and
	m_grpcen.ГрпЦен = sld_kln.ГрпЦен
)*(1+НДС/100)

, ТовСкидка = 
(select top 1 СкдПрц1 
	from SKD_TAB 
	where 
		skd_tab.СкдКод = m_debit.НаклКодТов
		and skd_tab.СкдТип = 1
--		and skd_tab.СкдПрц1 is not null
)
, КлнНаТов = 
(select top 1 СкдПрц1 
	from SKD_TAB 
	where
		skd_tab.СкдКод = m_debit.НаклКлн
		and skd_tab.СкдДоп = m_debit.НаклКодТов
		and skd_tab.СкдТип = 6
--		and СкдПрц1 is not null
)
, КлнНаВид = 
(select top 1 СкдПрц1 
	from SKD_TAB, kat_tvr
	where 
		skd_tab.СкдКод = m_debit.НаклКлн
		and skd_tab.СкдДоп = kat_tvr.ТовВид
		and kat_tvr.ТовКод = m_debit.НаклКодТов
		and skd_tab.СкдТип = 7
--		and skd_tab.скдПрц1 is not null
)
, КлнНаГрп = 
(select top 1 СкдПрц1 
	from SKD_TAB, kat_tvr
	where 
		skd_tab.СкдКод = m_debit.НаклКлн
		and skd_tab.СкдДоп = kat_tvr.ТовГрп
		and kat_tvr.ТовКод=m_debit.НаклКодТов
		and skd_tab.СкдТип = 0
--		and skd_tab.скдПрц1 is not null
)




update m_debit
set ТекЦена = 
case
	/* Если назначена группа цен */
	when ЦенаАльтГрп <> 0 and ЦенаАльтГрп is not null then
		case
			when КлнНаТов<>0 then ЦенаАльтГрп*(1-КлнНаТов/100)
			when КлнНаВид<>0 then ЦенаАльтГрп*(1-КлнНаВид/100)
			when КлнНаГрп<>0 then ЦенаАльтГрп*(1-КлнНаГрп/100)
--			when ТовСкидка<>0 then ЦенаАльтГрп*(1-ТовСкидка/100)
			else ЦенаАльтГрп
		end
	when ЦенаГрп <> 0 and ЦенаГрп is not null then
		case
			when КлнНаТов<>0 then ЦенаГрп*(1-КлнНаТов/100)
			when КлнНаВид<>0 then ЦенаГрп*(1-КлнНаВид/100)
			when КлнНаГрп<>0 then ЦенаГрп*(1-КлнНаГрп/100)
--			when ТовСкидка<>0 then ЦенаГрп*(1-ТовСкидка/100)
			else ЦенаГрп
		end
	else
		case
			when КлнНаТов<>0 then ЦенаКат*(1-КлнНаТов/100)
			when КлнНаВид<>0 then ЦенаКат*(1-КлнНаВид/100)
			when КлнНаГрп<>0 then ЦенаКат*(1-КлнНаГрп/100)
--			when ТовСкидка<>0 then ЦенаКат*(1-ТовСкидка/100)
			else ЦенаКат
		end
end

update dbo.M_DEBIT
set ТекЦена = ЦенаКатУчет
where (ТекЦена > ЦенаКатУчет * 10) AND (ЦенаКатУчет > 0)
GO
/****** Object:  StoredProcedure [edi].[CreateKonturDesadvNotSolvo]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[CreateKonturDesadvNotSolvo]	--119	
@NumberOrder int = null
as

set nocount on;

declare @oedinum int;
declare @oedidate datetime;
		
declare oedi_cursor CURSOR FOR 		
--select distinct cast(right(order_num,len(order_num)-2) as int) from @orders
--первоначальный запрос с фильтрами  !!!
SELECT [id],DocumentDate  from [PR_Euras].[edi].[Kontur]
WHERE [DocumentType] = 'Orders' 
--учитывая что работа идет через солво то  югру проводим отдельной процедурой
and [Box]='ugra'
and ((@NumberOrder = [id]) or
(
	([DELNOT] =1 and  ordsp =1 and [Desadv] is null) and (@NumberOrder is null)
))
 and [DocumentDate] > dateadd(day,-30,getdate())
 open oedi_cursor;

FETCH NEXT FROM oedi_cursor 
INTO @oedinum,@oedidate

WHILE @@FETCH_STATUS = 0
BEGIN  
declare @oedinumstr varchar(20);
declare	@nom_tek_nakl int
set @oedinumstr ='k-'+cast(@oedinum as varchar(20))
SET @nom_tek_nakl=NULL


    --поиск  накладной по номеру заказа
      SELECT  TOP 1   @nom_tek_nakl = [ОпНаклКод]  --TOP 1
			FROM         dbo.LIST_SKL AS nakl INNER JOIN
                      dbo.list_sf AS sf ON nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ INNER JOIN
                      dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл INNER JOIN
                      dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод
                      where [ЗкзНом]= 'k-'+cast(@oedinum as varchar(20))
                      --изврат, но как проставляються даты в витрине  ???
                      and ОпДатаРасч BETWEEN DATEADD(month,-6,@oedidate) and DATEADD(month,6,@oedidate)
                      order by ОпДатаРасч desc
                      
  -- select @oedinum,@oedidate,@nom_tek_nakl
  
  IF (@nom_tek_nakl IS NOT NULL)
    begin
    
    /**тестирование промежуточных данных */
	 SELECT     @nom_tek_nakl nom_tek_nakl,@oedinum oedinum,@oedinumstr edinumstr,@oedidate oedidate
	 
	 
	 
	 
	 
	 
	  /*подготовка итогов */
	 
	 
	 	 --<!ELEMENT СуммаОпт -- сумма поставки без НДС -->
		declare @sum_opt_nonds decimal(10,2)
		SELECT @sum_opt_nonds=sum(([ОпЦена]*(1-(НДС/(100+НДС))))*ОпКол)
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl
		  
		  --<!ELEMENT СуммаОптВклНДС -- сумма поставки с НДС -->
		declare @sum_opt_nds decimal(10,2)
		  SELECT  @sum_opt_nds =Sum([ОпКол]*[ОпЦена])
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl

		--<!ELEMENT СуммаНДС -- сумма НДС поставки -->
		declare @clear_nds decimal(10,2)
		set @clear_nds=@sum_opt_nds-@sum_opt_nonds

--тестирование полученных агрегатов 
		--select @sum_opt_nonds,@sum_opt_nds,@clear_nds
		--select @order_id,@order_id_date,@nom_tek_nakl
	
	 /*подготовка итогов  конец*/
	 
	 
	 --подготовка данных по накладной с витрины
	  	declare @orders table (
						nakl_num varchar(50),
						tov_naim varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float					
						); 	
		delete from @orders;	
	
			insert into	@orders(nakl_num,line,tov_naim,upc,qty)
			  select  s3.[ОпНаклКод] ,ROW_NUMBER() OVER(ORDER BY s2.ТовНаим DESC) AS line
			  , s2.ТовНаим,[UPC],ОпКол --SKUCODE,      
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		   inner join [PR_Euras].[dbo].[SKU_BARCODE] sbar on s2.ТовАрт=sbar.[SKUCODE]
		  where s3.[ОпНаклКод] =@nom_tek_nakl
		  
		 
		  
	--подготовка заказу по накладной с документа 
	 declare @ordersD table (
	 
					 LineNumber int,
					 ean varchar(50),
					 need_qty float,
					 doc varchar(12),
					 tov_naim	varchar(100),								
					 BuyerItemCode varchar(50)			
						); 	
		delete from @ordersD;	

	 
	 DECLARE @idoc int
								DECLARE @doc xml
								DECLARE @PartnerIln varchar(15)
								DECLARE @DocType varchar(15)
								--DECLARE @DocType varchar(15)
								DECLARE @DeliveryDateTime varchar(10)
								(select @doc = body,@PartnerIln = cast( Body.query('/eDIMessage/interchangeHeader/sender/text()') as varchar(max))
								,@DeliveryDateTime = cast( Body.query('/eDIMessage/order/deliveryInfo/requestedDeliveryDateTime/text()') as varchar(max))
								,@DocType = [DocumentType]  
								
								from edi.[Kontur] km where id = @oedinum); 	
								EXEC sp_xml_preparedocument @idoc OUTPUT, @doc;
								
								
								
								DECLARE @OrderResponseLines xml;
								DECLARE @desadv xml;
								
			insert into	@ordersD(LineNumber,ean,need_qty
			,tov_naim
			,BuyerItemCode
			)					
								
			SELECT LineNumber ,ean,qty 
			,nametov
			,BuyerItemCode 
			FROM OPENXML (@idoc, '/eDIMessage/order/lineItems/lineItem',2)
															 WITH (
																 LineNumber       int         './LineNumber', --?
																	ean				varchar(25)	'./gtin', --?
																	qty				float		'./requestedQuantity',
																	BuyerItemCode	varchar(40) './internalBuyerCode',
																	nametov varchar(100) './description');					
								

								WITH 
								EDI_PARTIES AS
								(
												SELECT * FROM OPENXML (@idoc, '/eDIMessage/order',1)
															 WITH (	Buyer			varchar(25)         './buyer/gln',
																	Seller			varchar(25)         './seller/gln',
																	DeliveryPoint   varchar(25)         './deliveryInfo/shipTo/gln',
																	Invoice			varchar(25)         './invoicee/gln')
								)
								,EDI_ORDER AS
								(
												SELECT * FROM OPENXML (@idoc, '/eDIMessage/order/lineItems/lineItem',2)
															 WITH (
																 LineNumber       int         './LineNumber', --?
																	ean				varchar(25)	'./gtin', --?
																	qty				float		'./requestedQuantity',
																	BuyerItemCode	varchar(40) './internalBuyerCode',
																	nametov varchar(100) './description')
								)
								
								,_OrderResponseLines AS
								(
								SELECT ROW_NUMBER() OVER(ORDER BY upc DESC) AS LineNumber
								,upc EAN
								,LineItemStatus
								,BuyerItemCode
								,QuantityToBeDelivered
								,UnitOfMeasure
								,tov_naim
								from(
								
								SELECT nakl.upc,
								CASE 
									WHEN nakl.qty= o.need_qty THEN 'Accepted'
									ELSE 'Changed'
									END LineItemStatus,BuyerItemCode
									,LTRIM(STR (ISNULL(qty,0) ,20,3)) QuantityToBeDelivered,
									'PCE' UnitOfMeasure	,nakl.tov_naim									
									  from @orders nakl
								left JOIN @ordersD  o on nakl.upc = o.ean

								) tt )
								
								,OrderResponseLines AS
								(select OrderResponseLines = 
								--'<OrderResponse-Lines>'+
													cast((
													
													select   [Line-Item].ean as gtin ,BuyerItemCode as internalBuyerCode
															-- ,internalSupplierCode
															 ,LineNumber
															 , tov_naim as description
															 ,UnitOfMeasure as 'despatchedQuantity/@unitOfMeasure'
															 ,QuantityToBeDelivered despatchedQuantity															 
															 from _OrderResponseLines [Line-Item] 
															-- where  our_description is not null
															 FOR XML PATH ('lineItem'),TYPE,ELEMENTS
																
														--select  
														-- '@status'=LineItemStatus 
														--,[Line-Item].ean as gtin 
														--	 ,BuyerItemCode
														--	 ,UnitOfMeasure as 'confirmedQuantity/@unitOfMeasure'
														--	 ,QuantityToBeDelivered	as confirmedQuantity 												 
														--	 from _OrderResponseLines [Line-Item] 
														--	-- where  our_description is not null
														--	  FOR XML PATH ('lineItem')
														--	  --,root('lineItemss')
														
											 
											 ) as varchar(max))
								--+'</OrderResponse-Lines>'
								)
								
								,desadv AS
								(
								select desadv = 
								
								'<eDIMessage'
								+' id="'+cast(@nom_tek_nakl as varchar(max))+'"' 
								+' creationDateTime="'+ convert(varchar(10),getdate(),20)+'"'
								+'>'+
								'<interchangeHeader>
										<sender>'+(select top 1 Seller from EDI_PARTIES) +'</sender>
										<recipient>'+(select top 1 Buyer from EDI_PARTIES) +'</recipient>
										<documentType>DESADV</documentType>
									</interchangeHeader>'+
								'<orderResponse number="'+cast(@nom_tek_nakl as varchar(max))+'" date="'+convert(varchar(10),getdate(),20)
										/*+'" status="'+
									(
									CASE WHEN  EXISTS( select count(LineItemStatus) from _OrderResponseLines where LineItemStatus!='Accepted' 
									)
																		THEN 'Changed'
												ELSE 'Accepted'					
												END		
									)*/
									+'">'+
									'<originOrder number="'+ @doc.value('(/eDIMessage/order/@number)[1]', 'varchar(max)')+'" date="'+@doc.value('(/eDIMessage/order/@date)[1]', 'varchar(10)')+'"/>'+
								'<Seller><gln>'+(select top 1 Seller from EDI_PARTIES) +'</gln></Seller>'+
								'<Buyer><gln>'+(select top 1 Buyer from EDI_PARTIES) +'</gln></Buyer>'+
								--'<deliveryInfo><gln>'+(select top 1 DeliveryPoint from EDI_PARTIES) +'</gln></deliveryInfo>'+
								+'<deliveryInfo>'+
										'<estimatedDeliveryDateTime>'+@DeliveryDateTime+'</estimatedDeliveryDateTime>'+
											+' <shipFrom><gln>'+(select top 1 Seller from EDI_PARTIES) +'</gln>
											 </shipFrom>
											<shipTo><gln>'+(select top 1 DeliveryPoint from EDI_PARTIES) +'</gln>
											</shipTo>
											<transportation>
											<transportMode>roadTransport</transportMode>'+
											--<vehicleNumber>'+
											--+isnull((select top 1 transport from @orders where not(transport is null)),'')+
											--'</vehicleNumber>
											--<nameOfCarrier>'
											--+isnull((select top 1 driver from @orders where not(driver is null)),'')+
											--'</nameOfCarrier>
										+	'</transportation> 
									</deliveryInfo>'+
								
								
								
								'<lineItems>'+
								'<currencyISOCode>RUB</currencyISOCode>'+
																
									+cast((select OrderResponseLines from OrderResponseLines) as varchar(max))+
									 +'<totalSumExcludingTaxes>'+cast(@sum_opt_nonds as varchar(max) )+'</totalSumExcludingTaxes>'+ 
										+'<totalVATAmount>'+cast(@clear_nds as varchar(max) )+'</totalVATAmount>'+ 
										+'<totalAmount>'+cast(@sum_opt_nds as varchar(max) )+'</totalAmount>'+ 
									
									
									--+'<OrderResponse-Summary>'+
									--+cast( (select @doc.query('Document-Order/Order-Summary/TotalLines')) as varchar(max))+
									--+'</OrderResponse-Summary>'+
								'</lineItems>'
								+'</orderResponse>'
								+'</eDIMessage>'
								)
							    
							   -- select count(LineItemStatus) from _OrderResponseLines where LineItemStatus!='Accepted' 
							    
							    --select * from EDI_PARTIES;
								select @desadv = desadv from desadv; -- XML ГОТОВ ДЛЯ ПЕРЕДАЧИ ПРОВАЙДЕРУ
								exec sp_xml_removedocument @idoc;

								
								 -- убрать после релиза
								select @oedinum ,@desadv,@DeliveryDateTime
								
								--ОБНОВЛЕНИЕ ТАБЛИЦЫ С СООБЩЕНИЯМИ
								UPDATE [PR_Euras].edi.[Kontur]
								set 
								Desadv = @desadv,
								desadv_time=cast(getdate() as smalldatetime )
								WHERE [DocumentType] = 'Orders'
								and [id] = @oedinum
								and Desadv is null
								
								
								

    end;
  
                      
                      
                      
  
   FETCH NEXT FROM oedi_cursor 
INTO @oedinum,@oedidate
END 
CLOSE oedi_cursor;
DEALLOCATE oedi_cursor;
GO
/****** Object:  StoredProcedure [xmt].[StatAgentExt]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [xmt].[StatAgentExt]
 @_dateBegin date =  '2014-12-01'
 ,@_dateEnd   date =  '2014-12-19'
 ,@_UserID  nvarchar(50) = 'main\robot'
 ,@_pdr int = 15
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	declare @pdr int = @_pdr;
	declare @dateBegin date = @_dateBegin;
	declare @dateEnd date = @_dateEnd;
	declare @UserID nvarchar(50) = @_UserID;
	

declare @dayCount int = DATEDIFF(day, @dateBegin, @dateEnd) + 1;
--select @dayCount;

select z0.*
,z3.[Количество заказов]
,z2.stringCount [Строк заказов]
,round(cast(z2.stringCount as float)/(cast(z3.[Количество заказов] as float)), 2) [Строк на заказ]
,z3.documentSum [Сумма по заказам]

,z33.[Количество возвратов]
,z22.stringCount [Строк возвратов]
,round(cast(z22.stringCount as float)/(cast(z33.[Количество возвратов] as float)), 2) [Строк на возврат]
,z33.documentSum [Сумма возвратов]

,ltrim(rtrim(d.ПдрНаим)) [Отдел]
,p.СотрПодр
 from
(
select
s.salesAgentId
,s.[name] [ФИО]
,sum(case when d.status = 'Действующий' then 1 else 0 end) [Количество действующих заказов]
,sum(case when d.status = 'Действующий' then d.documentSum else 0 end) [Сумма по действующим]
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
--left join [PR_Euras].[dbo].[AutoLoadReportTxtLog] l on l.[Столбец 2] = d.prefix + '-' + d.documentId
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
group by s.salesAgentId, s.name
) z0

left join 
(
select
s.salesAgentId
,count(distinct d.documentId) [Количество заказов]
,sum(d.documentSum) documentSum
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
where d.docType = 'ORDER'
and d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
group by s.salesAgentId, s.name
) z3 on z3.salesAgentId = z0.salesAgentId
left join
(
 select
s.salesAgentId
,count(o.Id) stringCount
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
left join [EdiAll].[xmt].OrderAndReturn o on o.documentId = d.documentId and o.prefix = d.prefix
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
and d.docType = 'ORDER'
group by s.salesAgentId, s.name
) z2 on z2.salesAgentId = z0.salesAgentId
left join 
(
select
s.salesAgentId
,count(distinct d.documentId) [Количество возвратов]
,sum(d.documentSum) documentSum
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
where d.docType = 'RETURN'
and d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
group by s.salesAgentId, s.name
) z33 on z33.salesAgentId = z0.salesAgentId
left join
(
 select
s.salesAgentId
,count(o.Id) stringCount
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
left join [EdiAll].[xmt].OrderAndReturn o on o.documentId = d.documentId and o.prefix = d.prefix
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
and d.docType = 'RETURN'
group by s.salesAgentId, s.name
) z22 on z22.salesAgentId = z0.salesAgentId

inner join PR_Euras.dbo.KAT_PPL p on p.СотрКод = z0.salesAgentId
left join PR_Euras.dbo.KAT_PDR d on d.ПдрКод = p.СотрПодр
where p.СотрПодр in (@pdr)
--where z0.salesAgentId = 2542
and z0.salesAgentId in 
(
select distinct ur.МнгКод
from PR_Euras.dbo.M_USER_R ur 
inner join PR_Euras.dbo.M_USER u on u.ПользКод = ur.ПользКод
where u.LoginName = @UserID
)
order by p.СотрПодр, z0.[ФИО]

END
GO
/****** Object:  StoredProcedure [xmt].[StatAgent]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [xmt].[StatAgent]
 @_dateBegin date =  '2014-12-01'
 ,@_dateEnd   date =  '2014-12-19'
 ,@_UserID  nvarchar(50) = 'main\robot'
 ,@_pdr int = 15
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	declare @pdr int = @_pdr;
	declare @dateBegin date = @_dateBegin;
	declare @dateEnd date = @_dateEnd;
	declare @UserID nvarchar(50) = @_UserID;
	

declare @dayCount int = DATEDIFF(day, @dateBegin, @dateEnd) + 1;
--select @dayCount;

select z0.*
,z3.[Количество посещений с заказом]
,z4.[Посещений без заказов]
,case when z3.[Количество посещений с заказом] != 0 then
round(cast(z2.stringCount as float) / cast(z3.[Количество посещений с заказом] as float), 2) 
else 0 end [Количество строк на посещение]
,z2.SKU
,case when z3.[Количество посещений с заказом] != 0 then
round(cast(z2.SKU as float) / cast(z3.[Количество посещений с заказом] as float), 2)
else 0 end [SKU на посещение]
,ltrim(rtrim(d.ПдрНаим)) [Отдел]
,p.СотрПодр
,z7.SKUPdr
,(
 select
count(distinct o.Article)
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
left join [EdiAll].[xmt].OrderAndReturn o on o.documentId = d.documentId and o.prefix = d.prefix
inner join PR_Euras.dbo.KAT_PPL p0 on p0.СотрКод = s.salesAgentId
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
and d.docType = 'ORDER'
and p0.СотрПодр in (@pdr)
--and p0.СотрПодр in (select id from @pdr)
and s.salesAgentId in 
(
select distinct ur.МнгКод
from PR_Euras.dbo.M_USER_R ur 
inner join PR_Euras.dbo.M_USER u on u.ПользКод = ur.ПользКод
where u.LoginName = @UserID
)
) SKUAll
 from
(
select
s.salesAgentId
,s.[name] [ФИО]
--,d1.*
,count(distinct d.retail + ' ' + cast(cast(d.created as date) as nvarchar(50))) [Всего посещений]
,count(distinct d.retail) [Уникальных РТ]
,round(cast((count(distinct d.retail + ' ' + cast(cast(d.created as date) as nvarchar(50)))) as float) 
/ cast(@dayCount as float), 2) [Посещений в день]
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
group by s.salesAgentId, s.name
) z0
left join
(
select count(*)[Посещений без заказов], zx.salesAgentId
from
(
select distinct
s.salesAgentId
,d.retail
,cast(cast(d.created as date) as nvarchar(50)) created
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
--and salesAgentId = 2161
group by s.salesAgentId, s.name, d.retail, cast(cast(d.created as date) as nvarchar(50))
having --d.docType = 'ORDER'
sum(case when d.docType = 'ORDER' then 1 else 0 end) = 0
--order by 3
) zx
group by zx.salesAgentId
) z4 on z4.salesAgentId = z0.salesAgentId
left join 
(
select
s.salesAgentId
,count(distinct d.retail + ' ' + cast(cast(d.created as date) as nvarchar(50))) [Количество посещений с заказом]
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
where d.docType = 'ORDER'
and d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
group by s.salesAgentId, s.name
) z3 on z3.salesAgentId = z0.salesAgentId
left join
(
 select
s.salesAgentId
,count(o.Id) stringCount
,count(distinct o.ProdId) SKU
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
left join [EdiAll].[xmt].OrderAndReturn o on o.documentId = d.documentId and o.prefix = d.prefix
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
and d.docType = 'ORDER'
group by s.salesAgentId, s.name
) z2 on z2.salesAgentId = z0.salesAgentId
inner join PR_Euras.dbo.KAT_PPL p on p.СотрКод = z0.salesAgentId
left join PR_Euras.dbo.KAT_PDR d on d.ПдрКод = p.СотрПодр

left join
(
 select
count(distinct o.Article) SKUPdr,
p0.СотрПодр
FROM [EdiAll].[xmt].[SalesAgent] s  
inner join [EdiAll].[xmt].[Document] d on d.creator = s.salesAgentId
left join [EdiAll].[xmt].OrderAndReturn o on o.documentId = d.documentId and o.prefix = d.prefix
inner join PR_Euras.dbo.KAT_PPL p0 on p0.СотрКод = s.salesAgentId
where d.created >= @dateBegin and d.created <= dateadd(d, 1, @dateEnd)
and d.docType = 'ORDER'
group by p0.СотрПодр
) z7 on z7.СотрПодр = p.СотрПодр

where p.СотрПодр in (@pdr)
--where p.СотрПодр in (select id from @pdr)
--where z0.salesAgentId = 2681
and z0.salesAgentId in 
(
select distinct ur.МнгКод
from PR_Euras.dbo.M_USER_R ur 
inner join PR_Euras.dbo.M_USER u on u.ПользКод = ur.ПользКод
where u.LoginName = @UserID
)
order by p.СотрПодр, z0.[ФИО]


END
GO
/****** Object:  View [dbo].[list_zkz_way]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[list_zkz_way]
AS
SELECT     zt.ПозСкл, SUM(zt.ПозКол) AS ПозКол, dbo.KAT_TVR.ТовАрт AS ПозТов
FROM         dbo.ZKZ_TVR AS zt LEFT OUTER JOIN
                      dbo.KAT_TVR ON zt.ПозТов = dbo.KAT_TVR.ТовКод
WHERE     (zt.ПозКодЗкз IN
                          (SELECT     ЗкзКод
                            FROM          dbo.LIST_ZKZ_bit AS zk
                            WHERE      (ЗкзГрп = 1) AND (ЗкзДатаРасч >= DATEADD(ww, - 3, GETDATE())) AND (bit04 = 1) AND (ЗкзНом NOT IN
                                                       (SELECT     zak.ЗкзНом
                                                         FROM          dbo.LIST_SKL AS nakl INNER JOIN
                                                                                dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл INNER JOIN
                                                                                dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод AND zak.ЗкзГрп = 1 AND zak.ЗкзДатаРасч >= DATEADD(ww, - 3, GETDATE()) AND 
                                                                                nakl.ОпДатаРасч > zak.ЗкзДатаРасч))))
GROUP BY zt.ПозТов, zt.ПозСкл, dbo.KAT_TVR.ТовАрт
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "zt"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 4
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 252
               Bottom = 210
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'list_zkz_way'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'list_zkz_way'
GO
/****** Object:  View [dbo].[list_skl_zachet]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[list_skl_zachet]
AS
SELECT     dbo.LIST_SKL.ОпНаклКод, dbo.hist_skl_totals.ПродажиДельта
FROM         dbo.LIST_SKL LEFT OUTER JOIN
                      dbo.hist_skl_totals ON dbo.LIST_SKL.ОпНаклКод = dbo.hist_skl_totals.ОпНаклКод
WHERE     (dbo.LIST_SKL.ОпВозврат = 0) AND (dbo.LIST_SKL.ОпТип = 1) AND (dbo.hist_skl_totals.ПродажиБаза IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "hist_skl_totals"
            Begin Extent = 
               Top = 6
               Left = 245
               Bottom = 114
               Right = 409
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'list_skl_zachet'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'list_skl_zachet'
GO
/****** Object:  StoredProcedure [edi].[CreateKorusResponseInvoice]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[CreateKorusResponseInvoice]	
@NumberOrder int = null
as
--declare @NumberOrder int
--set @NumberOrder = 467

set nocount on;

declare @oedinum int;
		
declare oedi_cursor CURSOR FOR 		
--select distinct cast(right(order_num,len(order_num)-2) as int) from @orders
SELECT iddoc from edi.KorusMessages
WHERE DocType = 'ORDER'
and ordsp = 1
and
((@NumberOrder = iddoc) or
(
	(delnot is null or delnot =0) and (@NumberOrder is null)
	
))
;

open oedi_cursor;

FETCH NEXT FROM oedi_cursor 
INTO @oedinum

WHILE @@FETCH_STATUS = 0
BEGIN  

    PRINT @oedinum 
    
    
    
    declare @orders table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						skuid varchar(50),
						nds float				
						); 	
	delete from @orders;						
	declare @osql varchar(max);
	set @osql = '
					SELECT 
						o.HOST_NUMBER,
						o.DOC_NO,
					  od.line,
					  sku.upc upc,
					  od.qty/uomdiv.UOM_DIV qty,
					  uomdiv.Host_id skuid
					  
					FROM orders o
						INNER JOIN order_details od ON o.id = od.order_id
						INNER JOIN  
						(
								  SELECT 
										  s.id
											  ,s.upc 
									FROM wms.sku s
							        
								  union all  
								  SELECT 
							           
									   b.sku_id
										,b.barcode
									FROM wms.sku_barcode b
							  ) sku
				
							ON od.sku_id = sku.id 
						INNER JOIN sku uomdiv ON od.sku_id = uomdiv.id 
					WHERE HOST_NUMBER = ''k-'+cast(@oedinum as varchar(20))+'''				
				'
	
	--order_id OrderResponceNumber-- номер накладной он будет номером ответа на заказа в EDI	
	insert into	@orders(order_num,order_id,line,upc,qty,skuid)
	execute (@osql) at wms
    
    update @orders
    set nds = (select top 1 НДС from kat_tvr t where skuid = cast(t.ТовКод as varchar(50)))
    
    --ЕСЛИ ЗАКАЗ ПЕРЕДАН В СОЛВО, ТО ТОЛЬКО ТОГДА ЕГО ОБРАБАТЫВАЕМ
    IF (EXISTS(SELECT * FROM @orders))
    BEGIN
    
								DECLARE @idoc int
								DECLARE @doc xml
								DECLARE @PartnerIln varchar(15)
								DECLARE @DocType varchar(15)
								(select @doc = body,@PartnerIln = PartnerIln,@DocType = DocType  from edi.KorusMessages km where iddoc = @oedinum); 	
								EXEC sp_xml_preparedocument @idoc OUTPUT, @doc;
								
								
								
								DECLARE @OrderResponseLines xml;
								DECLARE @ordrsp xml;
								
								WITH 
								EDI_PARTIES AS
								(
												SELECT * FROM OPENXML (@idoc, '/Document-Order/Order-Parties',1)
															 WITH (	Buyer			varchar(25)         './Buyer/ILN',
																	Seller			varchar(25)         './Seller/ILN',
																	DeliveryPoint   varchar(25)         './DeliveryPoint/ILN',
																	Invoice			varchar(25)         './Invoice/ILN')
								)
								,
								EDI_ORDER AS
								(
												SELECT * FROM OPENXML (@idoc, '/Document-Order/Order-Lines/Line',1)
															 WITH (LineNumber       int         './Line-Item/LineNumber',
																	ean				varchar(25)	'./Line-Item/EAN',
																	qty				float		'./Line-Item/OrderedQuantity',
																	price			float		'./Line-Item/OrderedUnitNetPrice',
																	BuyerItemCode	varchar(40) './Line-Item/BuyerItemCode')
								)
								,PLAN_TO_SHIPPING AS (
												SELECT 						
													LineNumber,
													ean,
													BuyerItemCode,
													sum(qty) qty,
													max(price) price,
													max(НДС) nds
												 FROM	(
															SELECT 
																--'k-'+cast(@oedinum as varchar(25)) order_num, -- номер заказа
																		
																edio.LineNumber,
																edio.ean,
																edio.BuyerItemCode,
																edio.qty need_qty,
																o.qty,
																edio.price,					
																row_number() over (partition by o.line order by LineNumber) rw,
																o.nds НДС 
															
															FROM  EDI_ORDER  edio
																JOIN @orders o ON cast(right(order_num,len(order_num)-2) as int) = @oedinum and o.upc = edio.ean				
																--JOIN kat_tvr t ON o.skuid = cast(t.ТовКод as varchar(50))
												) tab	WHERE rw = 1
												GROUP BY LineNumber,ean,BuyerItemCode
								)
								,_OrderResponseLines AS
								(
									select	row_number() over (order by ps.LineNumber) LineNumber,
																	--eo.LineNumber OrderLineNumber,
																	ps.ean EAN,
																	BuyerItemCode,																	
																	--eo.qty,																	
																	LTRIM(STR (ISNULL(ps.qty,0) ,20,5)) InvoiceQuantity,
																	'PCE' UnitOfMeasure,
																	LTRIM(STR (ps.price,20,5))	 InvoiceUnitNetPrice,
																	LTRIM(STR(nds,3,2)) TaxRate,
																	LTRIM(STR (ISNULL(ps.qty*ps.price*(nds/100),0) ,20,5))	TaxAmount,
																	LTRIM(STR (ISNULL(ps.qty*ps.price,0) ,20,5)) NetAmount
															 from --EDI_ORDER eo LEFT JOIN 
															 PLAN_TO_SHIPPING ps 
															 --on eo.LineNumber = ps.LineNumber
									
								)
								
								,OrderResponseLines AS
								(select OrderResponseLines = 
								'<Invoice-Lines>'+
													cast((
																													
														
															 --такая фигня нагарожена из-за вложености line  
															 select
															 (select top 1 * 
															 from _OrderResponseLines [Line-Item] 
															 where [Line-Item].LineNumber = [Line].LineNumber FOR XML Auto,TYPE,ELEMENTS)  
															 from _OrderResponseLines [Line] 															 
															 FOR XML Auto,TYPE,ELEMENTS
															 
															 
											 
											 ) as varchar(max))
								+'</Invoice-Lines>')
								,ordrsp AS
								(
								select ordrsp = 
								'<Document-Invoice>
									<Invoice-Header>
										<InvoiceNumber>'+isnull((select top 1 order_id from @orders where not(order_id is null)),'')+'</InvoiceNumber>'+
										'<InvoiceDate>'+convert(varchar(10),getdate(),20)+'</InvoiceDate>'+
										'<InvoiceCurrency>RUB</InvoiceCurrency>'+
										--'<ExpectedDeliveryDate>'+cast( @doc.query('/Document-Order/Order-Header/ExpectedDeliveryDate/text()') as varchar(10))+'</ExpectedDeliveryDate>'+										
										'<DocumentFunctionCode>D</DocumentFunctionCode>'+									
									'</Invoice-Header>'+
									
									'<Invoice-Reference><Order>'+
										'<BuyerOrderNumber>'+rtrim(substring(cast( @doc.query('/Document-Order/Order-Header/OrderNumber/text()') as varchar(max)),1,20))+'</BuyerOrderNumber>'+
									/*20140204	'<BuyerOrderNumber>'+cast( @doc.query('/Document-Order/Order-Header/OrderNumber/text()') as varchar(10))+'</BuyerOrderNumber>'+*/
										'<BuyerOrderDate>'+cast( @doc.query('/Document-Order/Order-Header/OrderDate/text()') as varchar(10))+'</BuyerOrderDate>'+
									'</Order></Invoice-Reference>'+
									
									'<Invoice-Parties>'+
										/*cast( (select @doc.query('Document-Order/Order-Parties/Buyer')) as varchar(max))+
										cast( (select @doc.query('Document-Order/Order-Parties/Seller')) as varchar(max))+
										cast( (select @doc.query('Document-Order/Order-Parties/DeliveryPoint')) as varchar(max))+
										cast( (select @doc.query('Document-Order/Order-Parties/Invoicee')) as varchar(max))+*/
									+'<Buyer>'+
										+'<ILN>'+(select top 1 Buyer from EDI_PARTIES) +'</ILN>'+
										+'<TaxID>'+ISNULL((select top 1 RTRIM(c.ИНН) from EDI_PARTIES p JOIN edi.Kln_GLN k ON p.Buyer = k.GLN JOIN cln_dkl c ON c.КлнКод = k.КлнКод),'') +'</TaxID>'+
									+'</Buyer>'+
									+'<Seller>'
										+'<ILN>'+(select top 1 Seller from EDI_PARTIES) +'</ILN>'+
										+'<TaxID>'+ISNULL((select top 1 RTRIM(c.ИНН) from EDI_PARTIES p JOIN edi.FIRM_GLN k ON p.Seller = k.GLN JOIN cln_dkl c ON c.КлнКод = k.ФирмаКод),'') +'</TaxID>'+										
									'</Seller>'+
									+'<DeliveryPoint><ILN>'+(select top 1 DeliveryPoint from EDI_PARTIES) +'</ILN></DeliveryPoint>'+
									+'<Invoicee><ILN>'+(select top 1 ISNULL(Invoice,Buyer) from EDI_PARTIES) +'</ILN></Invoicee>'+
									  '</Invoice-Parties>'+
									--+replace(cast( (select @doc.query('Document-Order/Order-Parties')) as varchar(max)),'Order-Parties','OrderResponse-Parties')+									
									+cast((select OrderResponseLines from OrderResponseLines) as varchar(max))+
									+'<Invoice-Summary>'+
									--+cast( (select @doc.query('Document-Order/Order-Summary/TotalLines')) as varchar(max))+
									+'<TotalLines>'+cast((select count(*) from _OrderResponseLines) as varchar(10))+'</TotalLines>'+
									+'<TotalNetAmount>'+LTRIM(STR(((select sum(qty*price) from PLAN_TO_SHIPPING)),20,5))+'</TotalNetAmount>'+
									+'<TotalTaxAmount>'+LTRIM(STR(((select sum(qty*price*(nds/100)) from PLAN_TO_SHIPPING)),20,5))+'</TotalTaxAmount>'+
									+'<TotalGrossAmount>'+LTRIM(STR(((select sum(qty*price*(1+(nds/100))) from PLAN_TO_SHIPPING)),20,5))+'</TotalGrossAmount>'+
									+'<Tax-Summary>'+
									+cast((select 
										LTRIM(STR((nds),20,2)) TaxRate,
										LTRIM(STR(sum(qty*price*(nds/100)),20,5)) TaxAmount,
										LTRIM(STR(sum(qty*price),20,5)) TaxableAmount
										  from PLAN_TO_SHIPPING [Tax-Summary-Line]
										  GROUP BY nds
										  FOR XML AUTO,TYPE,ELEMENTS) as varchar(max))+
									+'</Tax-Summary>'+
									+'</Invoice-Summary>'+
								'</Document-Invoice>'
								)
							    
								select @ordrsp = ordrsp from ordrsp; -- XML ГОТОВ ДЛЯ ПЕРЕДАЧИ ПРОВАЙДЕРУ
								--select @ordrsp  
    
    
								exec sp_xml_removedocument @idoc;
    
    
								
								DECLARE @ourfirmiln varchar(15); -- iln нашей фирмы
								SET @ourfirmiln = cast(@doc.query('/Document-Order/Order-Parties/Seller/ILN/text()') as varchar(15));
								DECLARE @login varchar(50);  
								DECLARE @password varchar(50); 
								SELECT @login = KorusLogin, @password = KorusPassword --,@ordrsp 
								FROM
								edi.FIRM_GLN o 
								WHERE gln = @ourfirmiln;				
								
								--ПЕРЕДАЧА ДОКУМЕНТА
								
								
								declare @rr varchar(max);
								
								select 
								@rr = dbo.Send(								
								@login,
								@password,
								@PartnerIln,
								'DELIVERYNOTE',
								'ECODRU1', 
								'XML', 
								'P', 
								'', 
								@ordrsp,
								5000
								);
								
								print @rr;
								--[edi].[CreateKorusResponseInvoice]	160
								UPDATE edi.KorusMessages
								set 
								delnot = 1,
								--Response = @ordrsp,
								DelnoteXML = @ordrsp
								WHERE iddoc = @oedinum
								
																--select @ordrsp,@login,@password
								    
		END;
    
        
    FETCH NEXT FROM oedi_cursor 
INTO @oedinum
END 
CLOSE oedi_cursor;
DEALLOCATE oedi_cursor;




/*declare @s nvarchar(max);
set @s=
'select body.query(x) from
(select *,(''/Document-Order/Order-Lines/Line/Line-Item/LineNumber[/Document-Order/Order-Lines/Line/Line-Item/@EAN=''+skuid+'']'') x
 from edi.KorusMessages km 
				join @orders o on km.iddoc = right(o.order_num,len(o.order_num)-2)
) t;
'
 execute @s;*/
GO
/****** Object:  StoredProcedure [edi].[CreateKorusResponse]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[CreateKorusResponse]	--119	
@NumberOrder int = null
as

set nocount on;

declare @oedinum int;
		
declare oedi_cursor CURSOR FOR 		
--select distinct cast(right(order_num,len(order_num)-2) as int) from @orders
SELECT iddoc from edi.KorusMessages
WHERE DocType = 'ORDER' 
--and iddoc > 24373      -- эту строку закоментарить после локализации
and ((@NumberOrder = iddoc) or
(
	(ordsp is null or ordsp =0) and (@NumberOrder is null)
	--and CAST(edi_z.body.query('/eDIMessage/order/buyer/gln/text()')  AS varchar(MAX)) not in ('4607099139992')
	--запрет на окей 4607099139992
	
))
;

open oedi_cursor;

FETCH NEXT FROM oedi_cursor 
INTO @oedinum

WHILE @@FETCH_STATUS = 0
BEGIN  

    PRINT @oedinum 
    
    
    
    declare @orders table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float					
						); 	
	delete from @orders;						
	declare @osql varchar(max);
	set @osql = '
					SELECT 
						o.HOST_NUMBER,
						o.DOC_NO,
					  od.line,
					  sku.upc upc,
					  od.qty/uomdiv.UOM_DIV qty
					  
					FROM orders o
						INNER JOIN order_details od ON o.id = od.order_id
						INNER JOIN  
						(
								  SELECT 
										  s.id
											  ,s.upc 
									FROM wms.sku s
							        
								  union all  
								  SELECT 
							           
									   b.sku_id
										,b.barcode
									FROM wms.sku_barcode b
							  ) sku
				
							ON od.sku_id = sku.id 
						INNER JOIN sku uomdiv ON od.sku_id = uomdiv.id 
					WHERE HOST_NUMBER = ''k-'+cast(@oedinum as varchar(20))+'''				
				'
	
	--order_id OrderResponceNumber-- номер накладной он будет номером ответа на заказа в EDI	
	insert into	@orders(order_num,order_id,line,upc,qty)
	execute (@osql) at wms
    
    
    
    --ЕСЛИ ЗАКАЗ ПЕРЕДАН В СОЛВО, ТО ТОЛЬКО ТОГДА ЕГО ОБРАБАТЫВАЕМ
    IF (EXISTS(SELECT * FROM @orders))
    /*and @oedinum NOT IN (13572,17450,23666,23667,23668,23669,  -- эту строку закоментарить после локализации
                                                                               23670,23671,23672,23673,23674,23675,23676,
                                                                               23677,23678,23679,23680,23681,23686)*/
    BEGIN
    
								DECLARE @idoc int
								DECLARE @doc xml
								DECLARE @PartnerIln varchar(15)
								DECLARE @DocType varchar(15)
								(select @doc = body,@PartnerIln = PartnerIln,@DocType = DocType  from edi.KorusMessages km where iddoc = @oedinum); 	
								EXEC sp_xml_preparedocument @idoc OUTPUT, @doc;
								
								
								
								DECLARE @OrderResponseLines xml;
								DECLARE @ordrsp xml;
								-- на этом шаге ошибка
								WITH 
								EDI_PARTIES AS
								(
												SELECT * FROM OPENXML (@idoc, '/Document-Order/Order-Parties',1)
															 WITH (	Buyer			varchar(25)         './Buyer/ILN',
																	Seller			varchar(25)         './Seller/ILN',
																	DeliveryPoint   varchar(25)         './DeliveryPoint/ILN',
																	Invoice			varchar(25)         './Invoice/ILN')
								)
								,EDI_ORDER AS
								(
												SELECT * FROM OPENXML (@idoc, '/Document-Order/Order-Lines/Line',1)
															 WITH (LineNumber       int         './Line-Item/LineNumber',
																	ean				varchar(25)	'./Line-Item/EAN',
																	qty				float		'./Line-Item/OrderedQuantity',
																	BuyerItemCode	varchar(40) './Line-Item/BuyerItemCode')
								)
								,PLAN_TO_SHIPPING AS (
												SELECT 						
													LineNumber,
													ean,
													--BuyerItemCode,
													sum(qty) qty
												 FROM	(
															SELECT 
																--'k-'+cast(@oedinum as varchar(25)) order_num, -- номер заказа
																		
																edio.LineNumber,
																edio.ean,
																--BuyerItemCode,
																edio.qty need_qty,
																o.qty,					
																row_number() over (partition by o.line order by LineNumber) rw
																
															
															FROM  EDI_ORDER  edio
																JOIN @orders o ON cast(right(order_num,len(order_num)-2) as int) = @oedinum and o.upc = edio.ean				
												) tab	WHERE rw = 1
												GROUP BY LineNumber,ean--,BuyerItemCode
								)
								,_OrderResponseLines AS
								(
									select	eo.LineNumber,
																	--eo.LineNumber OrderLineNumber,
																	eo.ean EAN,
																	CASE 
																		WHEN ISNULL(ps.qty,0)>0 AND ISNULL(ps.qty,0)<>eo.qty THEN 3
																		WHEN ISNULL(ps.qty,0)=eo.qty THEN 5
																		ELSE 7
																	END LineItemStatus,
																	eo.BuyerItemCode,
																	--eo.qty,
																	LTRIM(STR (ISNULL(ps.qty,0) ,20,3)) QuantityToBeDelivered,
																	'PCE' UnitOfMeasure			
															 from EDI_ORDER eo LEFT JOIN PLAN_TO_SHIPPING ps on eo.LineNumber = ps.LineNumber
									
								)
								
								,OrderResponseLines AS
								(select OrderResponseLines = 
								'<OrderResponse-Lines>'+
													cast((
																													
														
															 --такая фигня нагарожена из-за вложености line  
															 select
															 (select top 1 * 
															 from _OrderResponseLines [Line-Item] 
															 where [Line-Item].LineNumber = [Line].LineNumber FOR XML Auto,TYPE,ELEMENTS)  
															 from _OrderResponseLines [Line] 															 
															 FOR XML Auto,TYPE,ELEMENTS
															 
															 
											 
											 ) as varchar(max))
								+'</OrderResponse-Lines>')
								,ordrsp AS
								(
								select ordrsp = 
								'<Document-OrderResponse>
									<OrderResponse-Header>
									<OrderResponseNumber>'+isnull((select top 1 order_id from @orders where not(order_id is null)),'')+'</OrderResponseNumber>'+
									'<OrderResponseDate>'+convert(varchar(10),getdate(),20)+'</OrderResponseDate>'+
									--'<ExpectedDeliveryDate>'+cast( @doc.query('/Document-Order/Order-Header/ExpectedDeliveryDate/text()') as varchar(10))+'</ExpectedDeliveryDate>'+
									'<OrderNumber>'+rtrim(substring(cast( @doc.query('/Document-Order/Order-Header/OrderNumber/text()') as varchar(max)),1,20))+'</OrderNumber>'+
									'<OrderDate>'+cast( @doc.query('/Document-Order/Order-Header/OrderDate/text()') as varchar(10))+'</OrderDate>'+
									'<ResponseType>'+
											(
												CASE WHEN NOT EXISTS( SELECT * FROM EDI_ORDER eo 
																				LEFT JOIN PLAN_TO_SHIPPING ps on eo.LineNumber = ps.LineNumber
																		WHERE ISNULL(ps.qty,0)<>eo.qty )
																		THEN '29' --заказ полностью принят
													 WHEN NOT EXISTS( SELECT * FROM EDI_ORDER eo 
																				LEFT JOIN PLAN_TO_SHIPPING ps on eo.LineNumber = ps.LineNumber
																		WHERE ISNULL(ps.qty,0)<>0 )
																		THEN '27' --заказ не принят
													ELSE '4'					
													END								
											)	
											+'</ResponseType>
									</OrderResponse-Header>'+
									--'<OrderResponse-Transport></OrderResponse-Transport>'+
									'<OrderResponse-Parties>'+
									/*cast( (select @doc.query('Document-Order/Order-Parties/Buyer')) as varchar(max))+
									cast( (select @doc.query('Document-Order/Order-Parties/Seller')) as varchar(max))+
									cast( (select @doc.query('Document-Order/Order-Parties/DeliveryPoint')) as varchar(max))+*/
									+'<Buyer><ILN>'+(select top 1 Buyer from EDI_PARTIES) +'</ILN></Buyer>'+
									+'<Seller><ILN>'+(select top 1 Seller from EDI_PARTIES) +'</ILN></Seller>'+
									+'<DeliveryPoint><ILN>'+(select top 1 DeliveryPoint from EDI_PARTIES) +'</ILN></DeliveryPoint>'+
									  '</OrderResponse-Parties>'+
									--+replace(cast( (select @doc.query('Document-Order/Order-Parties')) as varchar(max)),'Order-Parties','OrderResponse-Parties')+									
									+cast((select OrderResponseLines from OrderResponseLines) as varchar(max))+
									+'<OrderResponse-Summary>'+
									+cast( (select @doc.query('Document-Order/Order-Summary/TotalLines')) as varchar(max))+
									+'</OrderResponse-Summary>'+
								'</Document-OrderResponse>'
								)
							    
							    --select * from EDI_PARTIES;
								select @ordrsp = ordrsp from ordrsp; -- XML ГОТОВ ДЛЯ ПЕРЕДАЧИ ПРОВАЙДЕРУ
								 
    
    
								exec sp_xml_removedocument @idoc;
    
    
								
								DECLARE @ourfirmiln varchar(15); -- iln нашей фирмы
								SET @ourfirmiln = cast(@doc.query('/Document-Order/Order-Parties/Seller/ILN/text()') as varchar(15));
								DECLARE @login varchar(50);  
								DECLARE @password varchar(50); 
								SELECT @login = KorusLogin, @password = KorusPassword --,@ordrsp 
								FROM
								edi.FIRM_GLN o 
								WHERE gln = @ourfirmiln;				
								
								--ПЕРЕДАЧА ДОКУМЕНТА
								
								
								declare @rr varchar(max);
								
								select @rr = dbo.Send(								
								@login,
								@password,
								@PartnerIln,
								'ORDERRSP',
								'ECODRU1', 
								'XML', 
								'P', 
								'', 
								@ordrsp,
								5000);
								
								print @rr;
								--[edi].[CreateKorusResponse] 160
								UPDATE edi.KorusMessages
								set 
								ordsp = 1,
								Response = @ordrsp,
								responseresult = @rr
								WHERE DocType = 'ORDER'
								and iddoc = @oedinum
								
																--select @ordrsp,@login,@password
								    
		END;
    
        
    FETCH NEXT FROM oedi_cursor 
INTO @oedinum
END 
CLOSE oedi_cursor;
DEALLOCATE oedi_cursor;




/*declare @s nvarchar(max);
set @s=
'select body.query(x) from
(select *,(''/Document-Order/Order-Lines/Line/Line-Item/LineNumber[/Document-Order/Order-Lines/Line/Line-Item/@EAN=''+skuid+'']'') x
 from edi.KorusMessages km 
				join @orders o on km.iddoc = right(o.order_num,len(o.order_num)-2)
) t;
'
 execute @s;*/
GO
/****** Object:  StoredProcedure [edi].[CreateKonturResponseNotSolvo]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[CreateKonturResponseNotSolvo]	--119	
@NumberOrder int = null
as

set nocount on;

declare @oedinum int;
declare @oedidate datetime;

		
declare oedi_cursor CURSOR FOR 		
--select distinct cast(right(order_num,len(order_num)-2) as int) from @orders

SELECT [id],DocumentDate from [PR_Euras].[edi].[Kontur]
WHERE [DocumentType] = 'Orders' 
--фильтр по ящику из-за отсуствия  солво 
and [Box]='ugra'
and ((@NumberOrder = [id]) or
(
	(ordsp is null or ordsp =0) and (@NumberOrder is null)
	))
	 and [DocumentDate] > dateadd(day,-16,getdate())
;

open oedi_cursor;

FETCH NEXT FROM oedi_cursor 
INTO @oedinum,@oedidate

WHILE @@FETCH_STATUS = 0
BEGIN  
declare @oedinumstr varchar(20);
declare	@nom_tek_nakl int
set @oedinumstr ='k-'+cast(@oedinum as varchar(20))
SET @nom_tek_nakl=NULL


    --поиск  накладной по номеру заказа
      SELECT  TOP 1   @nom_tek_nakl = [ОпНаклКод]  --TOP 1
			FROM         dbo.LIST_SKL AS nakl INNER JOIN
                      dbo.list_sf AS sf ON nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ INNER JOIN
                      dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл INNER JOIN
                      dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод
                      where [ЗкзНом]= 'k-'+cast(@oedinum as varchar(20))
                      --изврат, но как проставляються даты в витрине  ???
                      and ОпДатаРасч BETWEEN DATEADD(month,-6,@oedidate) and DATEADD(month,6,@oedidate)
                      order by ОпДатаРасч desc
       
       
    IF (@nom_tek_nakl IS NOT NULL)
    begin
	 SELECT     @nom_tek_nakl,@oedinum,@oedinumstr,@oedidate
	 
	 --подготовка данных по накладной с витрины
	  	declare @orders table (
						nakl_num varchar(50),
						tov_naim varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float					
						); 	
		delete from @orders;	
	
			insert into	@orders(nakl_num,line,tov_naim,upc,qty)
			  select  s3.[ОпНаклКод] ,ROW_NUMBER() OVER(ORDER BY s2.ТовНаим DESC) AS line
			  , s2.ТовНаим,[UPC],ОпКол --SKUCODE,      
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		   inner join [PR_Euras].[dbo].[SKU_BARCODE] sbar on s2.ТовАрт=sbar.[SKUCODE]
		  where s3.[ОпНаклКод] =@nom_tek_nakl
		  
		  
	--подготовка заказу по накладной с документа 
	 declare @ordersD table (
	 
					 LineNumber int,
					 ean varchar(50),
					 need_qty float,
					 doc varchar(12),
					 tov_naim	varchar(100),								
					 BuyerItemCode varchar(50)			
						); 	
		delete from @ordersD;	

	 
	 DECLARE @idoc int
								DECLARE @doc xml
								DECLARE @PartnerIln varchar(15)
								DECLARE @DocType varchar(15)
								(select @doc = body,@PartnerIln = cast( Body.query('/eDIMessage/interchangeHeader/sender/text()') as varchar(max)),@DocType = [DocumentType]  from edi.[Kontur] km where id = @oedinum); 	
								EXEC sp_xml_preparedocument @idoc OUTPUT, @doc;
								
								
								
								DECLARE @OrderResponseLines xml;
								DECLARE @ordrsp xml;
								
			insert into	@ordersD(LineNumber,ean,need_qty
			,tov_naim
			,BuyerItemCode
			)					
								
			SELECT LineNumber ,ean,qty 
			,nametov
			,BuyerItemCode 
			FROM OPENXML (@idoc, '/eDIMessage/order/lineItems/lineItem',2)
															 WITH (
																 LineNumber       int         './LineNumber', --?
																	ean				varchar(25)	'./gtin', --?
																	qty				float		'./requestedQuantity',
																	BuyerItemCode	varchar(40) './internalBuyerCode',
																	nametov varchar(100) './description');					
								

								WITH 
								EDI_PARTIES AS
								(
												SELECT * FROM OPENXML (@idoc, '/eDIMessage/order',1)
															 WITH (	Buyer			varchar(25)         './buyer/gln',
																	Seller			varchar(25)         './seller/gln',
																	DeliveryPoint   varchar(25)         './deliveryInfo/shipTo/gln',
																	Invoice			varchar(25)         './invoicee/gln')
								)
								,EDI_ORDER AS
								(
												SELECT * FROM OPENXML (@idoc, '/eDIMessage/order/lineItems/lineItem',2)
															 WITH (
																 LineNumber       int         './LineNumber', --?
																	ean				varchar(25)	'./gtin', --?
																	qty				float		'./requestedQuantity',
																	BuyerItemCode	varchar(40) './internalBuyerCode',
																	nametov varchar(100) './description')
								)
								
								,_OrderResponseLines AS
								(
								SELECT ROW_NUMBER() OVER(ORDER BY upc DESC) AS LineNumber
								,upc EAN
								,LineItemStatus
								,BuyerItemCode
								,QuantityToBeDelivered
								,UnitOfMeasure
								from(
								
								SELECT nakl.upc,
								CASE 
																		WHEN nakl.qty= o.need_qty THEN 'Accepted'
																		ELSE 'Changed'
																	END LineItemStatus,BuyerItemCode
																	,LTRIM(STR (ISNULL(qty,0) ,20,3)) QuantityToBeDelivered,
																	'PCE' UnitOfMeasure	
																	
								  from @orders nakl
								left JOIN @ordersD  o on nakl.upc = o.ean
								union
								SELECT o.ean ,'Rejected'
								,BuyerItemCode
								,LTRIM(STR (ISNULL(need_qty,0) ,20,3)) QuantityToBeDelivered,
								'PCE' UnitOfMeasure	 from @ordersD o
								where o.ean  not in (SELECT o.ean from @orders nakl
								 JOIN @ordersD  o on nakl.upc = o.ean)
								) tt )
								
								,OrderResponseLines AS
								(select OrderResponseLines = 
								--'<OrderResponse-Lines>'+
													cast((
																
														select  
														 '@status'=LineItemStatus 
														,[Line-Item].ean as gtin 
															 ,BuyerItemCode
															 ,UnitOfMeasure as 'confirmedQuantity/@unitOfMeasure'
															 ,QuantityToBeDelivered	as confirmedQuantity 												 
															 from _OrderResponseLines [Line-Item] 
															-- where  our_description is not null
															  FOR XML PATH ('lineItem')
															  --,root('lineItemss')
														
											 
											 ) as varchar(max))
								--+'</OrderResponse-Lines>'
								)
								
								,ordrsp AS
								(
								select ordrsp = 
								
								'<eDIMessage'
								+' id="'+cast(@nom_tek_nakl as varchar(max))+'"' 
								+' creationDateTime="'+ convert(varchar(10),getdate(),20)+'"'
								+'>'+
								'<interchangeHeader>
										<sender>'+(select top 1 Seller from EDI_PARTIES) +'</sender>
										<recipient>'+(select top 1 Buyer from EDI_PARTIES) +'</recipient>
										<documentType>ORDRSP</documentType>
									</interchangeHeader>'+
								'<orderResponse number="'+cast(@nom_tek_nakl as varchar(max))+'" date="'+convert(varchar(10),getdate(),20)
										+'" status="'+
									(
									CASE WHEN  EXISTS( select count(LineItemStatus) from _OrderResponseLines where LineItemStatus!='Accepted' 
									)
																		THEN 'Changed'
												ELSE 'Accepted'					
												END		
									)+'">'+
									'<originOrder number="'+ @doc.value('(/eDIMessage/order/@number)[1]', 'varchar(max)')+'" date="'+@doc.value('(/eDIMessage/order/@date)[1]', 'varchar(10)')+'"/>'+
								'<Seller><gln>'+(select top 1 Seller from EDI_PARTIES) +'</gln></Seller>'+
								'<Buyer><gln>'+(select top 1 Buyer from EDI_PARTIES) +'</gln></Buyer>'+
								'<deliveryInfo><gln>'+(select top 1 DeliveryPoint from EDI_PARTIES) +'</gln></deliveryInfo>'+
								'<lineItems>'+
								'<currencyISOCode>RUB</currencyISOCode>'+
																
									+cast((select OrderResponseLines from OrderResponseLines) as varchar(max))+
									+'<OrderResponse-Summary>'+
									+cast( (select @doc.query('Document-Order/Order-Summary/TotalLines')) as varchar(max))+
									+'</OrderResponse-Summary>'+
								'</lineItems>'
								+'</orderResponse>'
								+'</eDIMessage>'
								)
							    
							   -- select count(LineItemStatus) from _OrderResponseLines where LineItemStatus!='Accepted' 
							    
							    --select * from EDI_PARTIES;
								select @ordrsp = ordrsp from ordrsp; -- XML ГОТОВ ДЛЯ ПЕРЕДАЧИ ПРОВАЙДЕРУ
								exec sp_xml_removedocument @idoc;

								
								 -- убрать после релиза
								select @oedinum 
								select @ordrsp 
								--ОБНОВЛЕНИЕ ТАБЛИЦЫ С СООБЩЕНИЯМИ
								
								 UPDATE edi.[Kontur]
								set 
								[ordsp] = 1,
								Response = @ordrsp,
								ordsp_time=cast(getdate() as smalldatetime )
								WHERE [DocumentType] = 'Orders'
								and [id] = @oedinum
								

    end;
    
    
     FETCH NEXT FROM oedi_cursor 
INTO @oedinum,@oedidate
END 
CLOSE oedi_cursor;
DEALLOCATE oedi_cursor;
GO
/****** Object:  StoredProcedure [dbo].[TovRaznoska]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[TovRaznoska] AS
declare @Prih as cursor 
declare @PTovCode int, @PrihDate bigint, @PrihKol decimal (10,3), @PrihDateReal datetime
declare @Rash as cursor
declare @RTovCode int, @RashDate bigint, @RashKol decimal (10,3), @RashDateReal datetime
declare @CurPrih decimal (10,3), @CurRash decimal (10,3)
declare @IsPrihFetch decimal, @IsRashFetch decimal
declare @CurTov int,@CurDate bigint,@CurDateReal datetime
declare @IsFirst integer

set @Prih=cursor for select ОпКодТов,СумКол,ОпДата,ОпДатаРасч from F_PRIHCLEAN

set @Rash=cursor for SELECT ОпКодТов,СумКол,ОпДата,ОпДатаРасч
FROM (f_rashclean join TovTmp on f_rashclean.ОпКодТов=tovtmp.КодТов )
ORDER BY f_rashclean.ОпКодТов,f_rashclean.ОпДатаРасч

delete from TOV_RAZN 
delete from RAZN_ERR where Ошибка= 'Расход больше прихода' or Ошибка='Расход раньше прихода'

set @CurPrih=0
set @CurRash=0
set @CurTov=0
set @CurDateReal=CONVERT(datetime,CAST(DATEPART(d,GETDATE()) as char(2))+'.'+CAST(DATEPART(m,GETDATE()) as char(2))+'.'+CAST(DATEPART(yy,GETDATE()) as char(4)),104)
if ((select ДатыКод from D_DATES where ДатыРасч=@CurDateReal) IS NULL)
  begin
    insert D_DATES (ДатыРасч) VALUES (@CurDateReal)
  end
set @CurDate=(select ДатыКод from D_DATES where ДатыРасч=@CurDateReal)   
open @Prih
fetch next from @Prih into @PTovCode, @PrihKol, @PrihDate,@PrihDateReal
set @IsPrihFetch = @@FETCH_STATUS
set @IsFirst=0
set @CurPrih=@PrihKol
while @IsPrihFetch = 0
  begin
    if @CurTov=@PTovCode
      begin
Rash_Loop:
--        if @CurRash<>0 and @CurPrih>@CurRash
        if @CurPrih>=@CurRash
          begin
             if @PrihDateReal>@RashDateReal and @RashDateReal is not null
-- приход позже расхода-ошибка
               begin
                  insert RAZN_ERR (ТовКод,ПрихДатаКод,РасхДатаКод,Ошибка) VALUES (@CurTov, @PrihDate,@RashDate,'Расход раньше прихода')
               end
             insert TOV_RAZN (ТовКод,КолТек,ПрихДатаКод,КолРасх,РасхДатаКод) VALUES (@CurTov,@CurPrih,@PrihDate,@CurRash,@RashDate)
             set @CurPrih=@CurPrih-@CurRash
             fetch next from @Rash into @RTovCode,@RashKol, @RashDate, @RashDateReal
             set @IsRashFetch=@@FETCH_STATUS
             if @IsRashFetch=0
               begin
                 set @CurRash=@RashKol
                 goto Rash_Loop
               end
             else
               begin
--так как расхода тут нету (кончился) в расход ставим непроданный приход и в дату расхода текущую
--добавим признак нереализ остатка
                  set @CurRash=@CurPrih
                  insert TOV_RAZN (ТовКод,КолТек,ПрихДатаКод,КолРасх,РасхДатаКод,Остаток) VALUES (@CurTov,@CurPrih,@PrihDate,@CurRash,@CurDate,1)
                  set @CurRash=0
                  set @RashDateReal=NULL
               end
          end
--        else if @CurRash<>0 and @CurPrih<@CurRash
        else
          begin
--тк расход ушел не полностью в запись расхода идет приход             
            insert TOV_RAZN (ТовКод,КолТек,ПрихДатаКод,КолРасх,РасхДатаКод) VALUES (@CurTov,@CurPrih,@PrihDate,@CurPrih,@RashDate)
            set @CurRash=@CurRash - @CurPrih
          end
      end
    else
      begin
        if @CurRash>0
          begin
            insert RAZN_ERR (ТовКод,Ошибка) VALUES (@CurTov, 'Расход больше прихода')
          end
        set @CurTov = @PTovCode
        set @CurRash=0
--не смог выполнить параметризованный курсор - пришлось через доптаблицу
        delete from TovTmp
        exec InsertTovTmp @CurTov 
        if CURSOR_STATUS ('variable','@Rash')>=0
          begin
            close @Rash
          end
        open @Rash
        fetch  next from @Rash into @RTovCode,@RashKol, @RashDate, @RashDateReal
        set @IsRashFetch=@@FETCH_STATUS
        if @IsRashFetch=0
          begin
--PRINT @PrihDate
--PRINT @RashDate
             if @PrihDateReal>@RashDateReal and @RashDateReal is not null
--первый приход позже первого расхода-ошибка
               begin
                  insert RAZN_ERR (ТовКод,ПрихДатаКод,РасхДатаКод,Ошибка) VALUES (@CurTov, @PrihDate,@RashDate,'Расход раньше прихода')
               end
             set @CurRash=@RashKol
             goto Rash_Loop
           end
         else
           begin
--случай когда вообще нету реализации? ставим признак нереализ остатка
              set @CurRash=@CurPrih
              insert TOV_RAZN (ТовКод,КолТек,ПрихДатаКод,КолРасх,РасхДатаКод,Остаток) VALUES (@CurTov,@CurPrih,@PrihDate,@CurRash,@CurDate,1)
              set @CurRash=0
              set @RashDateReal=NULL
           end
      end
      fetch next from @Prih into @PTovCode, @PrihKol, @PrihDate, @PrihDateReal
      set @IsPrihFetch = @@FETCH_STATUS
      set @CurPrih=@PrihKol
 end
if @CurRash>0
  begin
    insert RAZN_ERR (ТовКод,Ошибка) VALUES (@CurTov, 'Расход больше прихода')
  end
GO
/****** Object:  View [dbo].[hist_bon_sum]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[hist_bon_sum]
AS
SELECT     COUNT(ОпТовНом) AS БонКолич, CASE WHEN (ОпВозврат = 0) THEN SUM(Stavka) WHEN (ОпВозврат = 1) THEN - SUM(Stavka) ELSE NULL END AS Stavka, 
                      CAST(SUM(БонПродажи) AS MONEY) AS БонСумм, CAST(SUM(Продажи) AS MONEY) AS Продажи, ОпВозврат, idBon_type, ОпНаклКод, ОпТовНом
FROM         dbo.Hist_bonus
GROUP BY ОпВозврат, idBon_type, ОпНаклКод, ОпТовНом
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Hist_bonus"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 242
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 12
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'hist_bon_sum'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'hist_bon_sum'
GO
/****** Object:  View [dbo].[GlClnNaim]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[GlClnNaim]
AS
SELECT     dbo.D_ORG.КлнНаим,dbo.GlClnCodes.КлнКод
FROM         dbo.D_ORG INNER JOIN
                      dbo.GlClnCodes ON dbo.D_ORG.КлнКод = dbo.GlClnCodes.КодГлКлн
GO
/****** Object:  StoredProcedure [ef].[GETXML]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--USE [PR_Euras]
--GO
--/****** Object:  StoredProcedure [ef].[GETXML]    Script Date: 12/01/2010 15:05:56 ******/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
----------------------------------------------------------------------
----------------------------------------------------------------------
CREATE PROCEDURE [ef].[GETXML]
AS

--SELECT filename = '\\ts99\Public\CHICAGO\Buyertypes.xml'

--------------------------------------------------------------------
--Employees - Сотрудники
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Employees.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT
	1 AS Tag			--employee
,null AS Parent			--employees

--,'' AS [employee!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_ppl.СотрКод AS varchar(50)) AS [employee!1!code!element]	--код сотрудника--
, SUBSTRING(LTRIM(RTRIM(kat_ppl.СотрФамилия)) + ' ' + LTRIM(RTRIM(kat_ppl.СотрИмя)),1,50) AS [employee!1!name!element] --наименование сотрудника--
, SUBSTRING(LTRIM(RTRIM(kat_ppl.СотрИмя)),1,50) AS [employee!1!firstname!element]		--имя сотрудника--
, SUBSTRING(LTRIM(RTRIM(kat_ppl.СотрФамилия)),1,50) AS [employee!1!lastname!element]	--фамилия сотрудника--
, SUBSTRING(LTRIM(RTRIM(kat_ppl.СотрОтчество)),1,50) AS [employee!1!middlename!element]	--отчество сотрудника--
, '' AS [employee!1!address!element]				--адрес прописки--
, '' AS [employee!1!factaddress!element]			--адрес проживания--
, '' AS [employee!1!passport!element]				--документ, удостоверяющий личность--
, '' AS [employee!1!phone!element]					--телефон--
, '' AS [employee!1!INN!element]					--номер налогоплательщика--
, 0 AS [employee!1!deleted!element]					--признак того, что элемент был удален--

FROM 	kat_ppl 
INNER JOIN kat_pdr on kat_ppl.СотрПодр = kat_pdr.ПдрКод

WHERE
kat_pdr.ПдрНаим like '%Отдел продаж%'
AND kat_pdr.ПдрНаим NOT like '%архив%'
AND kat_pdr.ПдрНаим NOT like '%MARS%'
AND kat_pdr.ПдрНаим NOT like '%Сургут%'

AND kat_pdr.ПдрНаим NOT like '%Безнад%'
AND kat_ppl.СотрФамилия NOT like 'яа%'
AND kat_ppl.СотрФамилия NOT like ''
AND kat_ppl.СотрФамилия NOT like '%вспомогат%'
AND kat_ppl.СотрФамилия NOT like '%сетевой%'
FOR XML EXPLICIT,ROOT('employees'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--Units - Единицы измерения товаров (базовые)
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Units.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT
	1 AS Tag			--unit
,null AS Parent			--units

--,'' AS [unit!1!innercode]								--код в Чикаго - для предотвращения повторной выгрузки--
, CASE WHEN LTRIM(RTRIM(kat_tvr.ТовЕИ))='' THEN '0' ELSE LTRIM(RTRIM(kat_tvr.ТовЕИ)) END 
	AS [unit!1!code!element]	--код единицы измерения--
, CASE WHEN LTRIM(RTRIM(kat_tvr.ТовЕИ))='' THEN '-' ELSE LTRIM(RTRIM(kat_tvr.ТовЕИ)) END 
	AS [unit!1!name!element]							--наименование единицы измерения--
, CASE WHEN LTRIM(RTRIM(kat_tvr.ТовЕИ))='' THEN '-' ELSE LTRIM(RTRIM(kat_tvr.ТовЕИ)) END 
	AS [unit!1!shortname!element]						--краткое наименование единицы измерения--
, 0 AS [unit!1!deleted!element]							--признак того, что элемент был удален--

FROM 	kat_tvr

WHERE	 (kat_tvr.ТовАрт like '%w%')
--		and kat_tvr.ТовУпак <>0
GROUP BY 
	kat_tvr.ТовЕИ
	,LTRIM(RTRIM(kat_tvr.ТовЕИ))
FOR XML EXPLICIT,ROOT('units'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--Сounteragents - Контрагенты (формальные покупатели)
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Counteragents.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT * FROM
(SELECT
	1 AS Tag			--counteragent
,null AS Parent			--counteragents

--,'' AS [counteragent!1!innercode]					--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50)) AS [counteragent!1!producercode!element]	--код контрагента--
, CAST(kat_kln.КлнКод AS varchar(50)) AS [counteragent!1!code!element]			--код контрагента  (outercode)--
, SUBSTRING(LTRIM(RTRIM(kat_kln.КлнНаим)),1,50) AS [counteragent!1!name!element]--наименование контрагента--
, SUBSTRING(CASE WHEN (LTRIM(RTRIM(kat_kln.КлнФс)+ ' ' + LTRIM(RTRIM(kat_kln.КлнНаим))) =  '' )
	 THEN LTRIM(RTRIM(cln_dkl.КлнНаим))					
	 ELSE LTRIM(RTRIM(kat_kln.КлнФс)+ ' ' + LTRIM(RTRIM(kat_kln.КлнНаим)))					
	 END,1,50)
	 AS [counteragent!1!juridicalname!element]		--юридическое наименование--
, SUBSTRING(LTRIM(RTRIM(cln_dkl.КлнАдрес)),1,120) AS [counteragent!1!address!element] --улица, дом, квартира--
, '' AS [counteragent!1!postindex!element]			--почтовый индекс--
, '' AS [counteragent!1!phone!element]				--телефон--
, '' AS [counteragent!1!VATStatus!element]			--статус плательщика НДС - D/F--
, '' AS [counteragent!1!INN!element]				--номер налогоплательщика--
, '' AS [counteragent!1!INNNumber!element]			--номер налогоплательщика--
, '' AS [counteragent!1!bankaccount!element]		--расчетный счет--
, CASE WHEN (LTRIM(kat_kln.КлнНаим) like 'ИП %' 
	 OR LTRIM(RTRIM(kat_kln.КлнФс)) in ('ИП','ЧП','ПБОЮЛ')
	 OR LTRIM(RTRIM(kat_kln.КлнФс)) like '_ИП')
	THEN 0					--если ФЛ
	ELSE 1					--если ЮЛ
	END
	AS [counteragent!1!type!element]				--признак, является ли контрагент юрлицом или физлицом. 1=ЮЛ, 0=ФЛ--
, 0 AS [counteragent!1!deleted!element]				--признак того, что элемент был удален--
--attribute
, NULL AS [attributes!2]
, NULL AS [attribute!3!attributecode!element]		--код дополнительного атрибута--
, NULL AS [attribute!3!name!element]				--название атрибута--
, NULL AS [attribute!3!valuetype!element]			--тип значения (bool, integer, string, double, datetime)--
, NULL AS [attribute!3!value!element]				--значение дополнительного атрибута-

FROM 	kat_kln 
INNER JOIN cln_dkl ON cln_dkl.КлнКод = kat_kln.КлнКод

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
													-- 0-не определена; чужие(>0): 1-покупатель,
													-- 2-пок.разовый, 3-пост.товара, 4-пост.услуг,
													-- 5-пост.проч., 6-расчеты по налогам, 7-банк;
													-- свои (<0): -1-головная орг., -2-филиал опт.,
													-- -3-филиал(магазин), -4-фил.(торг. агент),
													-- -5-фил.прочие
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
													-- 1-КЛИЕНТЫ ОП
UNION ALL
SELECT
	2 AS Tag			--attributes
,	1 AS Parent			--counteragent

--,'' AS [counteragent!1!innercode]					--код в Чикаго - для предотвращения повторной выгрузки--
, NULL		--код контрагента--
, CAST(kat_kln.КлнКод AS varchar(50)) AS [counteragent!1!code!element]			--код контрагента  (outercode)--
, NULL		--наименование контрагента--
, NULL		--юридическое наименование--
, NULL		--улица, дом, квартира--
, NULL		--почтовый индекс--
, NULL		--телефон--
, NULL		--статус плательщика НДС - D/F--
, NULL		--номер налогоплательщика--
, NULL		--номер налогоплательщика--
, NULL		--расчетный счет--
, NULL		--признак, является ли контрагент юрлицом или физлицом. 1=ЮЛ, 0=ФЛ--
, NULL		--признак того, что элемент был удален--
--attribute
, NULL
, NULL		--код дополнительного атрибута--
, NULL		--название атрибута--
, NULL		--тип значения (bool, integer, string, double, datetime)--
, NULL		--значение дополнительного атрибута-

FROM 	kat_kln 
INNER JOIN cln_dkl ON cln_dkl.КлнКод = kat_kln.КлнКод

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
UNION ALL
SELECT
	3 AS Tag			--attribute
,	2 AS Parent			--attributes

--,'' AS [counteragent!1!innercode]					--код в Чикаго - для предотвращения повторной выгрузки--
, NULL		--код контрагента--
, CAST(kat_kln.КлнКод AS varchar(50)) AS [counteragent!1!code!element]			--код контрагента  (outercode)--
, NULL		--наименование контрагента--
, NULL		--юридическое наименование--
, NULL		--улица, дом, квартира--
, NULL		--почтовый индекс--
, NULL		--телефон--
, NULL		--статус плательщика НДС - D/F--
, NULL		--номер налогоплательщика--
, NULL		--номер налогоплательщика--
, NULL		--расчетный счет--
, NULL		--признак, является ли контрагент юрлицом или физлицом. 1=ЮЛ, 0=ФЛ--
, NULL		--признак того, что элемент был удален--
--attribute
, NULL
, 0			--код дополнительного атрибута--
, NULL		--название атрибута--
, NULL		--тип значения (bool, integer, string, double, datetime)--
, NULL		--значение дополнительного атрибута-

FROM 	kat_kln 
INNER JOIN cln_dkl ON cln_dkl.КлнКод = kat_kln.КлнКод

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
) t1												
ORDER BY 
		[counteragent!1!code!element]
		,Tag
FOR XML EXPLICIT,ROOT('counteragents'))
+CONVERT(NVARCHAR(MAX),'</references>')
)
--*//*
UNION ALL

--------------------------------------------------------------------
--Buyers - Покупатели - Владельцы
--------------------------------------------------------------------
--------------------------------------------------------------------
--Buyers1 - Ограничение: kat_kln.КлнКод<=9000 - Итого 2 файла ~ по 50Мб
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Buyers1.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT * FROM
(SELECT
	1 AS Tag			--buyer
,null AS Parent			--buyers

--,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50)) AS [buyer!1!code!element]				--код покупателя  (outercode)--
, CAST(kat_kln.КлнКод AS varchar(50)) AS [buyer!1!producercode!element]		--код покупателя--
, SUBSTRING(LTRIM(RTRIM(kat_kln.КлнНаим)),1,50) AS [buyer!1!name!element]	--наименование покупателя--
, SUBSTRING(LTRIM(RTRIM(ISNULL(cln_dkl.КлнАдрес,ISNULL(cln_dkl.КлнГрузАдрес,'')))),1,120) 
	AS [buyer!1!address!element]					--улица, дом, квартира--
, '' AS [buyer!1!postindex!element]					--почтовый индекс--
, '' AS [buyer!1!phone!element]						--телефон--
, '' AS [buyer!1!contactperson!element]				--контактное лицо--
, CAST(ISNULL(sld_kln.ГрпЦен,0) AS varchar(50)) AS [buyer!1!pricetypecode!element]		--тип цены для покупателя--
, CAST(ISNULL(sld_kln.ЛимитКредита,0) AS varchar(50)) AS [buyer!1!creditlimit!element]	--лимит кредита покупателя в основной валюте системы--
													--пока постоянный лимит кредита
													--!!!После доработки будет использоваться  
													--поле Остаток_кредита или поле Врем_лимит ?
													--в таблице T_CreditInfo
, CAST(ISNULL(sld_kln.ДнейКредита,0) AS varchar(50)) 
	AS [buyer!1!creditdeadline!element]				--срок кредита покупателя в днях--
--, NULL AS [buyer!1!classifier1code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier2code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier3code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier4code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier5code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier6code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier7code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier8code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier9code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier10code!element]		--код классификатора для покупателя--
, 0 AS [buyer!1!deleted!element]					--признак того, что элемент был удален--
--attribute
--, NULL AS [attributes!2]
--, NULL AS [attribute!3!attributecode!element]		--код дополнительного атрибута--
--, NULL AS [attribute!3!name!element]				--название атрибута--
--, NULL AS [attribute!3!valuetype!element]			--тип значения (bool, integer, string, double, datetime)--
--, NULL AS [attribute!3!value!element]				--значение дополнительного атрибута--
--counteragent
, NULL AS [counteragents!4]
, NULL AS [counteragent!5!counteragentcode!element]	--код контрагента--
--skupricetype		
, NULL AS [skupricetypes!6]
, NULL AS [skupricetype!7!SKUcode!element]			--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL AS [skupricetype!7!pricetypecode!element]	--код типа цены - pricetypes--
, NULL AS [skupricetype!7!skuclassifier!element]	--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
 
FROM 	kat_kln 
LEFT OUTER JOIN cln_dkl ON cln_dkl.КлнКод = kat_kln.КлнКод
LEFT OUTER JOIN sld_kln ON sld_kln.КлнКод = kat_kln.КлнКод

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
													-- 0-не определена; чужие(>0): 1-покупатель,
													-- 2-пок.разовый, 3-пост.товара, 4-пост.услуг,
													-- 5-пост.проч., 6-расчеты по налогам, 7-банк;
													-- свои (<0): -1-головная орг., -2-филиал опт.,
													-- -3-филиал(магазин), -4-фил.(торг. агент),
													-- -5-фил.прочие
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
													-- 1-КЛИЕНТЫ ОП
	AND kat_kln.КлнКод<=9000
	
--UNION ALL
--SELECT
--	2 AS Tag			--attributes
--,	1 AS Parent			--buyer

----,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
--, CAST(kat_kln.КлнКод AS varchar(50))				--код покупателя  (outercode)--
--, NULL		--код покупателя--
--, NULL		--наименование покупателя--
--, NULL		--улица, дом, квартира--
--, NULL		--почтовый индекс--
--, NULL		--телефон--
--, NULL		--контактное лицо--
--, NULL		--тип цены для покупателя--
--, NULL		--лимит кредита покупателя в основной валюте системы--
--, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--признак того, что элемент был удален--
----attribute
--, NULL
--, NULL		--код дополнительного атрибута--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
----counteragent
--, NULL
--, NULL		--код контрагента--
----skupricetype		
--, NULL
--, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
--, NULL		--код типа цены - pricetypes--
--, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

--FROM 	kat_kln 

--WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
--	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
----	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
--	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

--	AND kat_kln.КлнКод<=9000

UNION ALL
SELECT
	4 AS Tag			--counteragents
,	1 AS Parent			--buyer

--,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50))				--код покупателя  (outercode)--
, NULL		--код покупателя--
, NULL		--наименование покупателя--
, NULL		--улица, дом, квартира--
, NULL		--почтовый индекс--
, NULL		--телефон--
, NULL		--контактное лицо--
, NULL		--тип цены для покупателя--
, NULL		--лимит кредита покупателя в основной валюте системы--
, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
, NULL		--признак того, что элемент был удален--
--attribute
--, NULL
--, NULL		--код дополнительного атрибута--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
--counteragent
, NULL
, NULL		--код контрагента--
--skupricetype		
, NULL
, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kat_kln 

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	AND kat_kln.КлнКод<=9000

UNION ALL
SELECT
	6 AS Tag			--skupricetypes
,	1 AS Parent			--buyer

--,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50))				--код покупателя  (outercode)--
, NULL		--код покупателя--
, NULL		--наименование покупателя--
, NULL		--улица, дом, квартира--
, NULL		--почтовый индекс--
, NULL		--телефон--
, NULL		--контактное лицо--
, NULL		--тип цены для покупателя--
, NULL		--лимит кредита покупателя в основной валюте системы--
, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
, NULL		--признак того, что элемент был удален--
--attribute
--, NULL
--, NULL		--код дополнительного атрибута--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
--counteragent
, NULL
, NULL		--код контрагента--
--skupricetype		
, NULL
, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kat_kln 

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	AND kat_kln.КлнКод<=9000

--UNION ALL
--SELECT
--	3 AS Tag			--attribute
--,	2 AS Parent			--attributes

----,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
--, CAST(kat_kln.КлнКод AS varchar(50))				--код покупателя  (outercode)--
--, NULL		--код покупателя--
--, NULL		--наименование покупателя--
--, NULL		--улица, дом, квартира--
--, NULL		--почтовый индекс--
--, NULL		--телефон--
--, NULL		--контактное лицо--
--, NULL		--тип цены для покупателя--
--, NULL		--лимит кредита покупателя в основной валюте системы--
--, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--признак того, что элемент был удален--
----attribute
--, NULL
--, NULL		--код дополнительного атрибута!!!!!!!!!--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
----counteragent
--, NULL
--, NULL		--код контрагента--
----skupricetype		
--, NULL
--, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
--, NULL		--код типа цены - pricetypes--
--, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

--FROM 	kat_kln 

--WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
--	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
----	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
--	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

--	AND kat_kln.КлнКод<=9000

UNION ALL
SELECT
	5 AS Tag			--counteragent
,	4 AS Parent			--counteragents

--,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50))				--код покупателя  (outercode)--
, NULL		--код покупателя--
, NULL		--наименование покупателя--
, NULL		--улица, дом, квартира--
, NULL		--почтовый индекс--
, NULL		--телефон--
, NULL		--контактное лицо--
, NULL		--тип цены для покупателя--
, NULL		--лимит кредита покупателя в основной валюте системы--
, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
, NULL		--признак того, что элемент был удален--
--attribute
--, NULL
--, NULL		--код дополнительного атрибута--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
--counteragent
, NULL
, CAST(kat_kln.КлнКод AS varchar(50))				--код контрагента--
--skupricetype		
, NULL
, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kat_kln 

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	AND kat_kln.КлнКод<=9000

UNION ALL
SELECT
	7 AS Tag			--skupricetype
,	6 AS Parent			--skupricetypes

--,'' AS [buyer!1!innercode]					--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50))			--код покупателя  (outercode)--
, NULL		--код покупателя--
, NULL		--наименование покупателя--
, NULL		--улица, дом, квартира--
, NULL		--почтовый индекс--
, NULL		--телефон--
, NULL		--контактное лицо--
, NULL		--тип цены для покупателя--
, NULL		--лимит кредита покупателя в основной валюте системы--
, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
, NULL		--признак того, что элемент был удален--
--attribute
--, NULL
--, NULL		--код дополнительного атрибута--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
--counteragent
, NULL
, NULL		--код контрагента--
--skupricetype		
, NULL
--, ''		--код товара(указывать либо код товара либо код классификатора для товара)--
--, ''		--код типа цены - pricetypes--
, CAST(cenp_tab.ТовКод AS varchar(50))		--код товара(указывать либо код товара либо код классификатора для товара)--
, CAST(cenp_tab.ЦенГрп AS varchar(50))		--код типа цены - pricetypes--
, NULL					--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kat_kln 
INNER JOIN cenp_tab ON cenp_tab.КлнКод = kat_kln.КлнКод --1458
INNER JOIN kat_tvr ON kat_tvr.ТовКод = cenp_tab.ТовКод

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
	AND kat_tvr.ТовАрт like '%w%'

	AND kat_kln.КлнКод<=9000
) t2	
									
ORDER BY 
		[buyer!1!code!element]
		,Tag
FOR XML EXPLICIT,ROOT('buyers'))
+CONVERT(NVARCHAR(MAX),'</references>')
)
--*/
--UNION ALL
/*
--------------------------------------------------------------------
--Buyers2 - Ограничение: kat_kln.КлнКод>9000 - Итого 2 файла ~ по 50Мб
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Buyers2.xml'
--SELECT filename = '\\ts99\Public\CHICAGO\Buyers2.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT * FROM
(SELECT
	1 AS Tag			--buyer
,null AS Parent			--buyers

--,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50)) AS [buyer!1!code!element]				--код покупателя  (outercode)--
, CAST(kat_kln.КлнКод AS varchar(50)) AS [buyer!1!producercode!element]		--код покупателя--
, SUBSTRING(LTRIM(RTRIM(kat_kln.КлнНаим)),1,50) AS [buyer!1!name!element]	--наименование покупателя--
, SUBSTRING(LTRIM(RTRIM(ISNULL(cln_dkl.КлнАдрес,ISNULL(cln_dkl.КлнГрузАдрес,'')))),1,120) 
	AS [buyer!1!address!element]					--улица, дом, квартира--
, '' AS [buyer!1!postindex!element]					--почтовый индекс--
, '' AS [buyer!1!phone!element]						--телефон--
, '' AS [buyer!1!contactperson!element]				--контактное лицо--
, CAST(ISNULL(sld_kln.ГрпЦен,0) AS varchar(50)) AS [buyer!1!pricetypecode!element]		--тип цены для покупателя--
, CAST(ISNULL(sld_kln.ЛимитКредита,0) AS varchar(50)) AS [buyer!1!creditlimit!element]	--лимит кредита покупателя в основной валюте системы--
													--пока постоянный лимит кредита
													--!!!После доработки будет использоваться  
													--поле Остаток_кредита или поле Врем_лимит ?
													--в таблице T_CreditInfo
, CAST(ISNULL(sld_kln.ДнейКредита,0) AS varchar(50)) 
	AS [buyer!1!creditdeadline!element]				--срок кредита покупателя в днях--
--, NULL AS [buyer!1!classifier1code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier2code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier3code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier4code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier5code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier6code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier7code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier8code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier9code!element]			--код классификатора для покупателя--
--, NULL AS [buyer!1!classifier10code!element]		--код классификатора для покупателя--
, 0 AS [buyer!1!deleted!element]					--признак того, что элемент был удален--
--attribute
--, NULL AS [attributes!2]
--, NULL AS [attribute!3!attributecode!element]		--код дополнительного атрибута--
--, NULL AS [attribute!3!name!element]				--название атрибута--
--, NULL AS [attribute!3!valuetype!element]			--тип значения (bool, integer, string, double, datetime)--
--, NULL AS [attribute!3!value!element]				--значение дополнительного атрибута--
--counteragent
, NULL AS [counteragents!4]
, NULL AS [counteragent!5!counteragentcode!element]	--код контрагента--
--skupricetype		
, NULL AS [skupricetypes!6]
, NULL AS [skupricetype!7!SKUcode!element]			--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL AS [skupricetype!7!pricetypecode!element]	--код типа цены - pricetypes--
, NULL AS [skupricetype!7!skuclassifier!element]	--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
 
FROM 	kat_kln 
LEFT OUTER JOIN cln_dkl ON cln_dkl.КлнКод = kat_kln.КлнКод
LEFT OUTER JOIN sld_kln ON sld_kln.КлнКод = kat_kln.КлнКод

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
													-- 0-не определена; чужие(>0): 1-покупатель,
													-- 2-пок.разовый, 3-пост.товара, 4-пост.услуг,
													-- 5-пост.проч., 6-расчеты по налогам, 7-банк;
													-- свои (<0): -1-головная орг., -2-филиал опт.,
													-- -3-филиал(магазин), -4-фил.(торг. агент),
													-- -5-фил.прочие
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
													-- 1-КЛИЕНТЫ ОП
	AND kat_kln.КлнКод>9000
	
--UNION ALL
--SELECT
--	2 AS Tag			--attributes
--,	1 AS Parent			--buyer

----,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
--, CAST(kat_kln.КлнКод AS varchar(50))				--код покупателя  (outercode)--
--, NULL		--код покупателя--
--, NULL		--наименование покупателя--
--, NULL		--улица, дом, квартира--
--, NULL		--почтовый индекс--
--, NULL		--телефон--
--, NULL		--контактное лицо--
--, NULL		--тип цены для покупателя--
--, NULL		--лимит кредита покупателя в основной валюте системы--
--, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--признак того, что элемент был удален--
----attribute
--, NULL
--, NULL		--код дополнительного атрибута--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
----counteragent
--, NULL
--, NULL		--код контрагента--
----skupricetype		
--, NULL
--, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
--, NULL		--код типа цены - pricetypes--
--, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

--FROM 	kat_kln 

--WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
--	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
----	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
--	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

--	AND kat_kln.КлнКод>9000

UNION ALL
SELECT
	4 AS Tag			--counteragents
,	1 AS Parent			--buyer

--,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50))				--код покупателя  (outercode)--
, NULL		--код покупателя--
, NULL		--наименование покупателя--
, NULL		--улица, дом, квартира--
, NULL		--почтовый индекс--
, NULL		--телефон--
, NULL		--контактное лицо--
, NULL		--тип цены для покупателя--
, NULL		--лимит кредита покупателя в основной валюте системы--
, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
, NULL		--признак того, что элемент был удален--
--attribute
--, NULL
--, NULL		--код дополнительного атрибута--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
--counteragent
, NULL
, NULL		--код контрагента--
--skupricetype		
, NULL
, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kat_kln 

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	AND kat_kln.КлнКод>9000

UNION ALL
SELECT
	6 AS Tag			--skupricetypes
,	1 AS Parent			--buyer

--,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50))				--код покупателя  (outercode)--
, NULL		--код покупателя--
, NULL		--наименование покупателя--
, NULL		--улица, дом, квартира--
, NULL		--почтовый индекс--
, NULL		--телефон--
, NULL		--контактное лицо--
, NULL		--тип цены для покупателя--
, NULL		--лимит кредита покупателя в основной валюте системы--
, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
, NULL		--признак того, что элемент был удален--
--attribute
--, NULL
--, NULL		--код дополнительного атрибута--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
--counteragent
, NULL
, NULL		--код контрагента--
--skupricetype		
, NULL
, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kat_kln 

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	AND kat_kln.КлнКод>9000

--UNION ALL
--SELECT
--	3 AS Tag			--attribute
--,	2 AS Parent			--attributes

----,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
--, CAST(kat_kln.КлнКод AS varchar(50))				--код покупателя  (outercode)--
--, NULL		--код покупателя--
--, NULL		--наименование покупателя--
--, NULL		--улица, дом, квартира--
--, NULL		--почтовый индекс--
--, NULL		--телефон--
--, NULL		--контактное лицо--
--, NULL		--тип цены для покупателя--
--, NULL		--лимит кредита покупателя в основной валюте системы--
--, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--признак того, что элемент был удален--
----attribute
--, NULL
--, NULL		--код дополнительного атрибута!!!!!!!!!--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
----counteragent
--, NULL
--, NULL		--код контрагента--
----skupricetype		
--, NULL
--, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
--, NULL		--код типа цены - pricetypes--
--, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

--FROM 	kat_kln 

--WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
--	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
----	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
--	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

--	AND kat_kln.КлнКод>9000

UNION ALL
SELECT
	5 AS Tag			--counteragent
,	4 AS Parent			--counteragents

--,'' AS [buyer!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50))				--код покупателя  (outercode)--
, NULL		--код покупателя--
, NULL		--наименование покупателя--
, NULL		--улица, дом, квартира--
, NULL		--почтовый индекс--
, NULL		--телефон--
, NULL		--контактное лицо--
, NULL		--тип цены для покупателя--
, NULL		--лимит кредита покупателя в основной валюте системы--
, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
, NULL		--признак того, что элемент был удален--
--attribute
--, NULL
--, NULL		--код дополнительного атрибута--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
--counteragent
, NULL
, CAST(kat_kln.КлнКод AS varchar(50))				--код контрагента--
--skupricetype		
, NULL
, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kat_kln 

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)					--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	AND kat_kln.КлнКод>9000

UNION ALL
SELECT
	7 AS Tag			--skupricetype
,	6 AS Parent			--skupricetypes

--,'' AS [buyer!1!innercode]					--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50))			--код покупателя  (outercode)--
, NULL		--код покупателя--
, NULL		--наименование покупателя--
, NULL		--улица, дом, квартира--
, NULL		--почтовый индекс--
, NULL		--телефон--
, NULL		--контактное лицо--
, NULL		--тип цены для покупателя--
, NULL		--лимит кредита покупателя в основной валюте системы--
, NULL		--срок кредита покупателя в днях--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
--, NULL		--код классификатора для покупателя--
, NULL		--признак того, что элемент был удален--
--attribute
--, NULL
--, NULL		--код дополнительного атрибута--
--, NULL		--название атрибута--
--, NULL		--тип значения (bool, integer, string, double, datetime)--
--, NULL		--значение дополнительного атрибута--
--counteragent
, NULL
, NULL		--код контрагента--
--skupricetype		
, NULL
--, ''		--код товара(указывать либо код товара либо код классификатора для товара)--
--, ''		--код типа цены - pricetypes--
, CAST(cenp_tab.ТовКод AS varchar(50))		--код товара(указывать либо код товара либо код классификатора для товара)--
, CAST(cenp_tab.ЦенГрп AS varchar(50))		--код типа цены - pricetypes--
, NULL					--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kat_kln 
INNER JOIN cenp_tab ON cenp_tab.КлнКод = kat_kln.КлнКод --1458
INNER JOIN kat_tvr ON kat_tvr.ТовКод = cenp_tab.ТовКод

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
	AND kat_tvr.ТовАрт like '%w%'

	AND kat_kln.КлнКод>9000
	
) t2	
									
ORDER BY 
		[buyer!1!code!element]
		,Tag
FOR XML EXPLICIT,ROOT('buyers'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

*/
--/*
UNION ALL

--------------------------------------------------------------------
--Currencies - Валюты--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Currencies.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT
	1 AS Tag			--currency
,null AS Parent			--currencies

--,'' AS [currency!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, '0' AS [currency!1!code!element]					--код валюты--
, 'Российский рубль' AS [currency!1!name!element]	--наименование--
, 'RUR' AS [currency!1!notation!element]			--международная нотация--
, '810' AS [currency!1!currencycode!element]		--международный код--
, 1 AS [currency!1!rate!element]					--курс по отношению к базовой валюте--
, 1 AS [currency!1!isbasecurrency!element]			--признак того, что валюта является основной--
, 0 AS [currency!1!deleted!element]					--признак того, что элемент был удален--

FOR XML EXPLICIT,ROOT('currencies'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--VATRates - Ставки НДС--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\VATRates.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT
	1 AS Tag			--vatrate
,null AS Parent			--VATRates

--,'' AS [vatrate!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, code AS [vatrate!1!code!element]					--код ставки НДС--
, name AS [vatrate!1!name!element]					--наименование ставки НДС--
, rate AS [vatrate!1!rate!element]					--ставка НДС в процентах--
, deleted AS [vatrate!1!deleted!element]			--признак того, что элемент был удален--

FROM (
SELECT 
--'' AS innercode									--код в Чикаго - для предотвращения повторной выгрузки--
  '1' AS code										--код ставки НДС--
, '10%' AS name										--наименование ставки НДС--
, 10 AS rate										--ставка НДС в процентах--
, 0 AS deleted										--признак того, что элемент был удален--
UNION ALL
SELECT 
--'' AS innercode									--код в Чикаго - для предотвращения повторной выгрузки--
  '2' AS code										--код ставки НДС--
, '18%' AS name										--наименование ставки НДС--
, 18 AS rate										--ставка НДС в процентах--
, 0 AS deleted										--признак того, что элемент был удален--
) t3

FOR XML EXPLICIT,ROOT('VATRates'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--Pricetypes - Типы цен--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Pricetypes.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT
	1 AS Tag			--pricetype
,null AS Parent			--pricetypes

--,'' AS [pricetype!1!innercode]					--код в Чикаго - для предотвращения повторной выгрузки--
, M_GRPCEN.ГрпЦен AS [pricetype!1!code!element]		--код типа цены--
, M_GRPCEN.ГрпЦен AS [pricetype!1!name!element]		--наименование типа--
, '0' AS [pricetype!1!basecode!element]				--код базового типа цены. 0=тип цены является базовым--
, '0' AS [pricetype!1!rate!element]					--процент наценки по отношению к базовому типу цены--
, '0' AS [pricetype!1!currencycode!element]			--код валюты--
, 0 AS [pricetype!1!deleted!element]				--признак того, что элемент был удален--

FROM	M_GRPCEN

GROUP BY M_GRPCEN.ГрпЦен

FOR XML EXPLICIT,ROOT('pricetypes'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--Firms - Фирмы--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Firms.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT
	1 AS Tag			--firm
,null AS Parent			--firms

--,'' AS [firm!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(OurFirms.id AS varchar(50)) AS [firm!1!code!element]	--код фирмы--
, SUBSTRING(OurFirms.name,1,50) AS [firm!1!name!element]	--наименование фирмы--
, '' AS [firm!1!bankaccount!element]						--расчетный счет--
, CAST(OurFirms.id AS varchar(50)) AS [firm!1!ownjuridicalpersoncode!element] --код юридического лица - ownjuridicalpersons--
, 0 AS [firm!1!deleted!element]						--признак того, что элемент был удален--

FROM 	OurFirms 

FOR XML EXPLICIT,ROOT('firms'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--Ownjuridicalpersons - Юридические лица--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Ownjuridicalpersons.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT
	1 AS Tag			--ownjuridicalperson
,null AS Parent			--ownjuridicalpersons

--,'' AS [ownjuridicalperson!1!innercode]			--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_kln.КлнКод AS varchar(50)) 
	AS [ownjuridicalperson!1!code!element]			--код юридического лица--
, SUBSTRING(LTRIM(RTRIM(kat_kln.КлнНаим)),1,50)
	AS [ownjuridicalperson!1!name!element]			--наименование юридического лица--
, SUBSTRING(LTRIM(RTRIM(kat_kln.КлнФс)+ ' ' + LTRIM(RTRIM(kat_kln.КлнНаим))),1,50)
	AS [ownjuridicalperson!1!juridicalname!element]--официальное наименование юр. лица--
, '' AS [ownjuridicalperson!1!INN!element]			--номер налогоплательщика--
, '' AS [ownjuridicalperson!1!INNNumber!element]	--номер свидетельства налогоплательщика--
, SUBSTRING(LTRIM(RTRIM(cln_dkl.КлнАдрес)),1,50) 
	AS [ownjuridicalperson!1!address!element]		--улица, дом, квартира--
, SUBSTRING(LTRIM(RTRIM(cln_dkl.КлнАдрес)),1,50) 
	AS [ownjuridicalperson!1!factaddess!element]	--улица, дом, квартира--
, '' AS [ownjuridicalperson!1!postindex!element]	--почтовый индекс--
, '' AS [ownjuridicalperson!1!phone!element]		--телефон--
, '' AS [ownjuridicalperson!1!chiefcode!element]	--код руководителя--
, '' AS [ownjuridicalperson!1!accountantcode!element]	--код главного бухгалтера--
, '' AS [ownjuridicalperson!1!cashiercode!element]	--код кассира--
, '' AS [ownjuridicalperson!1!VATStatus!element]	--является ли плательщиком НДС, 1=является, 0=не является--
, 0 AS [ownjuridicalperson!1!deleted!element]		--признак того, что элемент был удален--

FROM 	kat_kln 
INNER JOIN cln_dkl ON cln_dkl.КлнКод = kat_kln.КлнКод

WHERE 	kat_kln.КлнГрпКод = 7						--Код группы клиента (dbo.KAT_GRPK)
													--7-Реквизиты 'ТЛК 'Союз-Евразия'                 
FOR XML EXPLICIT,ROOT('ownjuridicalpersons'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--Stores - Склады--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Stores.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT
	1 AS Tag			--store
,null AS Parent			--stores

--,'' AS [store!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_skl.СклКод AS varchar(50)) AS [store!1!code!element]				--код склада--
, SUBSTRING(LTRIM(RTRIM(kat_skl.СклНаим)),1,50) AS [store!1!name!element]	--наименование склада--
, NULL AS [store!1!storekeepercode!element]			--код кладовщика--
, 2 AS [store!1!storetype!element]					--тип склада - 1=Автомобиль,2=Наземный,3=Временный--
, 0 AS [store!1!deleted!element]					--признак того, что элемент был удален--

FROM kat_skl	 

WHERE kat_skl.СклКод in (83,84) --(81,82)

FOR XML EXPLICIT,ROOT('stores'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--SKUgroups - Группы товаров - для визуального отображения--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\SKUgroups.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT
	1 AS Tag			--SKUgroup
,null AS Parent			--SKUgroups

--,'' AS [SKUgroup!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, code AS [SKUgroup!1!code!element]					--код группы--
, name AS [SKUgroup!1!name!element]					--наименование группы--
, parentcode AS [SKUgroup!1!parentcode!element]		--код родительской группы--
, deleted AS [SKUgroup!1!deleted!element]			--признак того, что элемент был удален--
 
FROM (

SELECT 
--,'' AS [SKUgroup!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
  '1' AS code		--код группы--
, 'Полный ассортимент' AS name	--наименование группы--
, '' AS parentcode									--код родительской группы--
, 1 AS deleted										--признак того, что элемент был удален--

UNION ALL

--Группы товаров
SELECT 
--,'' AS [SKUgroup!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
  CAST(kat_grpt.ГрпКод AS varchar(50)) AS code		--код группы--
, SUBSTRING(LTRIM(RTRIM(kat_grpt.ГрпНаим)),1,50) AS name	--наименование группы--
, '' AS parentcode									--код родительской группы--
, 0 AS deleted										--признак того, что элемент был удален--
 
FROM	kat_tvr
LEFT OUTER JOIN kat_grpt ON kat_grpt.ГрпКод = kat_tvr.ТовГрп
--LEFT OUTER JOIN kat_vidt ON kat_vidt. ВидКод= kat_tvr.ТовВид

WHERE (kat_tvr.ТовАрт like '%w%')

GROUP BY kat_grpt.ГрпКод
		,kat_grpt.ГрпНаим
UNION ALL
--Виды товаров
SELECT 
--,'' AS [SKUgroup!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
  CAST(kat_vidt.ВидКод AS varchar(50)) AS code		--код группы--
, SUBSTRING(LTRIM(RTRIM(kat_vidt.ВидНаим)),1,50) AS name	--наименование группы--
, CAST(kat_vidt.ГрпКод AS varchar(50)) AS parentcode		--код родительской группы--
, 0 AS deleted										--признак того, что элемент был удален--
 
FROM	kat_tvr
--LEFT OUTER JOIN kat_grpt ON kat_grpt.ГрпКод = kat_tvr.ТовГрп
LEFT OUTER JOIN kat_vidt ON kat_vidt.ВидКод= kat_tvr.ТовВид

WHERE (kat_tvr.ТовАрт like '%w%')

GROUP BY kat_vidt.ВидКод
		,kat_vidt.ВидНаим		
		,kat_vidt.ГрпКод	
) t5

FOR XML EXPLICIT,ROOT('SKUgroups'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--SKUs - Stock keeping units - Товары--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\SKUs.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT * FROM
(SELECT
	1 AS Tag			--SKU
,null AS Parent			--SKUs

--,'' AS [SKU!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_tvr.ТовКод AS varchar(50)) AS [SKU!1!code!element]			--код товара--
, CAST(kat_tvr.ТовАрт AS varchar(50)) AS [SKU!1!article!element]		--артикул товара (уникальный смысловой код)--
, SUBSTRING(LTRIM(RTRIM(kat_tvr.ТовНаим)),1,50) AS [SKU!1!name!element]	--наименование товара --
, '' AS [SKU!1!shortname!element] --краткое наименование товара (для КПК) (15 символов)--
, CAST(kat_tvr.ТовВид AS varchar(50)) AS [SKU!1!parentcode!element]		--код группы товара--
--, CAST(kat_tvr.ТовГрп AS varchar(50)) AS [SKU!1!parentcode!element]	--код группы товара--
--, SUBSTRING(LTRIM(RTRIM(kat_grpt.ГрпНаим)),1,50) AS [SKU!1!parentcode!element]		--код группы товара--
, CASE WHEN LTRIM(RTRIM(kat_tvr.ТовЕИ))='' THEN '0' ELSE LTRIM(RTRIM(kat_tvr.ТовЕИ)) END 
	AS [SKU!1!baseunitcode!element]					--код базовой единицы измерения для товара--kat_tvr.ТовУпак
, CAST(tvr_def.ТовВесНетто AS varchar(50)) AS [SKU!1!weight!element]	--вес базовой единицы измерения товара--
, CASE 
	WHEN (kat_tvr.НДС)=10 THEN '1'					--если НДС 10%
	WHEN (kat_tvr.НДС)=18 THEN '2'					--если НДС 18%
	ELSE ''					
	END	AS [SKU!1!VATRateCode!element]				--код ставки НДС для товара--
--, NULL AS [SKU!1!classifier1code!element]			--код классификатора для товара - classifiers--
--, NULL AS [SKU!1!classifier2code!element]			--код классификатора для товара - classifiers--
--, NULL AS [SKU!1!classifier3code!element]			--код классификатора для товара - classifiers--
--, NULL AS [SKU!1!classifier4code!element]			--код классификатора для товара - classifiers--
--, NULL AS [SKU!1!classifier5code!element]			--код классификатора для товара - classifiers--
--, NULL AS [SKU!1!classifier6code!element]			--код классификатора для товара - classifiers--
--, NULL AS [SKU!1!classifier7code!element]			--код классификатора для товара - classifiers--
--, NULL AS [SKU!1!classifier8code!element]			--код классификатора для товара - classifiers--
--, NULL AS [SKU!1!classifier9code!element]			--код классификатора для товара - classifiers--
--, NULL AS [SKU!1!classifier10code!element]			--код классификатора для товара - classifiers--
, '' AS [SKU!1!GTD!element]							--номер Грузовой Таможенной Декларации--
, NULL AS [SKU!1!countrycode!element]					--Страна происхождения--
, 0 AS [SKU!1!deleted!element]						--признак того, что элемент был удален--
	--, CAST(LTRIM(RTRIM(kat_tvr.ТовГрп)) AS varchar(50)) AS [SKU!1!SKUType!element] --тип товара--
, '30' AS [SKU!1!SKUType!element]						--тип товара--
	--, kat_vidt.ВидНаим
, '' AS [SKU!1!usemerchbarcodeonly!element]			--возможность ввода SKU только со считывателя штрих кодов--
, '' AS [SKU!1!sequenceorder!element]				--Порядковый номер товара в бланке заказа--
, CASE WHEN LTRIM(RTRIM(kat_tvr.ТовЕИ))='' THEN '0' ELSE LTRIM(RTRIM(kat_tvr.ТовЕИ)) END 
	AS [SKU!1!activeunitcode!element]				--код активной единицы измерения для товара--
--attributes	--attribute
--, NULL AS [attributes!2] 							
--, NULL AS [attribute!3!attributecode!element] 		--код дополнительного атрибута--
--, NULL AS [attribute!3!name!element] 				--название атрибута--
--, NULL AS [attribute!3!valuetype!element] 			--тип значения (bool, integer, string, double, datetime)--
--, NULL AS [attribute!3!value!element] 				--значение дополнительного атрибута--
--units		--unit
, NULL AS [units!4] 							
, NULL AS [unit!5!code!element]						--код единицы измерения--
, NULL AS [unit!5!rate!element] 					--коэффициент пересчета в базовую--
, NULL AS [unit!5!barcode!element] 					--штрихкод--
, NULL AS [unit!5!visible!element] 					--видимость--
--prices	--price
, NULL AS [prices!6] 							
, NULL AS [price!7!pricetypecode!element] 			--код типа цены--
, NULL AS [price!7!unitcode!element]				--код единицы измерения для товара - units--
, NULL AS [price!7!price!element] 					--цена--
, NULL AS [price!7!paytypecode!element] 			--1-Оплата при отгрузке,2-Оплата с отсрочкой платежа,3-Предоплата--
--activityhistory	--event
, NULL AS [activityhistory!8] 							
, NULL AS [event!9!eventtype!element] 				--тип события, 0 - Деактивация, 1 - Активация--
, NULL AS [event!9!eventdate!element] 				--дата события--

FROM	kat_tvr	
--LEFT OUTER JOIN kat_upk on kat_upk.УпакКод = kat_tvr.ТовУпак
LEFT OUTER JOIN tvr_def on tvr_def.ТовКод = kat_tvr.ТовКод

WHERE	kat_tvr.ТовАрт like '%w%'	

--UNION ALL
--SELECT
--	2 AS Tag			--attributes
--,	1 AS Parent			--SKU

----,'' AS [SKU!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
--, CAST(kat_tvr.ТовКод AS varchar(50))				--код товара--
--, NULL 		--артикул товара (уникальный смысловой код)--
--, NULL 		--наименование товара --
--, NULL		--краткое наименование товара (для КПК) (15 символов)--
--, NULL 		--код группы товара--
--, NULL		--код базовой единицы измерения для товара--
--, NULL		--вес базовой единицы измерения товара--
--, NULL		--код ставки НДС для товара--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--номер Грузовой Таможенной Декларации--
--, NULL		--Страна происхождения--
--, NULL		--признак того, что элемент был удален--
--, NULL		--тип товара--
--, NULL		--возможность ввода SKU только со считывателя штрих кодов--
--, NULL		--Порядковый номер товара в бланке заказа--
--, NULL		--код активной единицы измерения для товара--
----attributes	--attribute
--, NULL 			
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута--
----units		--unit
--, NULL 			
--, NULL --код единицы измерения--
--, NULL 		--коэффициент пересчета в базовую--
--, NULL 		--штрихкод--
--, NULL 		--видимость--
----prices	--price
--, NULL 			
--, NULL 		--код типа цены--
--, NULL		--код единицы измерения для товара - units--
--, NULL 		--цена--
--, NULL 		--1-Оплата при отгрузке,2-Оплата с отсрочкой платежа,3-Предоплата--
----activityhistory	--event
--, NULL 			
--, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
--, NULL 		--дата события--

--FROM	kat_tvr	
 
--WHERE	kat_tvr.ТовАрт like '%w%'	

UNION ALL
SELECT
	4 AS Tag			--units
,	1 AS Parent			--SKU

--,'' AS [SKU!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_tvr.ТовКод AS varchar(50))				--код товара--
, NULL 		--артикул товара (уникальный смысловой код)--
, NULL 		--наименование товара --
, NULL		--краткое наименование товара (для КПК) (15 символов)--
, NULL 		--код группы товара--
, NULL		--код базовой единицы измерения для товара--
, NULL		--вес базовой единицы измерения товара--
, NULL		--код ставки НДС для товара--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
, NULL		--номер Грузовой Таможенной Декларации--
, NULL		--Страна происхождения--
, NULL		--признак того, что элемент был удален--
, NULL		--тип товара--
, NULL		--возможность ввода SKU только со считывателя штрих кодов--
, NULL		--Порядковый номер товара в бланке заказа--
, NULL		--код активной единицы измерения для товара--
--attributes	--attribute
--, NULL 			
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута--
--units		--unit
, NULL 			
, NULL --код единицы измерения--
, NULL 		--коэффициент пересчета в базовую--
, NULL 		--штрихкод--
, NULL 		--видимость--
--prices	--price
, NULL 			
, NULL 		--код типа цены--
, NULL		--код единицы измерения для товара - units--
, NULL 		--цена--
, NULL 		--1-Оплата при отгрузке,2-Оплата с отсрочкой платежа,3-Предоплата--
--activityhistory	--event
, NULL 			
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--

FROM	kat_tvr	
 
WHERE	kat_tvr.ТовАрт like '%w%'	

UNION ALL
SELECT
	6 AS Tag			--prices
,	1 AS Parent			--SKU

--,'' AS [SKU!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_tvr.ТовКод AS varchar(50))				--код товара--
, NULL 		--артикул товара (уникальный смысловой код)--
, NULL 		--наименование товара --
, NULL		--краткое наименование товара (для КПК) (15 символов)--
, NULL 		--код группы товара--
, NULL		--код базовой единицы измерения для товара--
, NULL		--вес базовой единицы измерения товара--
, NULL		--код ставки НДС для товара--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
, NULL		--номер Грузовой Таможенной Декларации--
, NULL		--Страна происхождения--
, NULL		--признак того, что элемент был удален--
, NULL		--тип товара--
, NULL		--возможность ввода SKU только со считывателя штрих кодов--
, NULL		--Порядковый номер товара в бланке заказа--
, NULL		--код активной единицы измерения для товара--
--attributes	--attribute
--, NULL 			
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута--
--units		--unit
, NULL 			
, NULL		--код единицы измерения--
, NULL 		--коэффициент пересчета в базовую--
, NULL 		--штрихкод--
, NULL 		--видимость--
--prices	--price
, NULL 			
, NULL 		--код типа цены--
, NULL		--код единицы измерения для товара - units--
, NULL 		--цена--
, NULL 		--1-Оплата при отгрузке,2-Оплата с отсрочкой платежа,3-Предоплата--
--activityhistory	--event
, NULL 			
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--

FROM	kat_tvr	
 
WHERE	kat_tvr.ТовАрт like '%w%'	

UNION ALL
SELECT
	8 AS Tag			--activityhistory
,	1 AS Parent			--SKU

--,'' AS [SKU!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_tvr.ТовКод AS varchar(50))				--код товара--
, NULL 		--артикул товара (уникальный смысловой код)--
, NULL 		--наименование товара --
, NULL		--краткое наименование товара (для КПК) (15 символов)--
, NULL 		--код группы товара--
, NULL		--код базовой единицы измерения для товара--
, NULL		--вес базовой единицы измерения товара--
, NULL		--код ставки НДС для товара--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
, NULL		--номер Грузовой Таможенной Декларации--
, NULL		--Страна происхождения--
, NULL		--признак того, что элемент был удален--
, NULL		--тип товара--
, NULL		--возможность ввода SKU только со считывателя штрих кодов--
, NULL		--Порядковый номер товара в бланке заказа--
, NULL		--код активной единицы измерения для товара--
--attributes	--attribute
--, NULL 			
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута--
--units		--unit
, NULL 			
, NULL --код единицы измерения--
, NULL 		--коэффициент пересчета в базовую--
, NULL 		--штрихкод--
, NULL 		--видимость--
--prices	--price
, NULL 			
, NULL 		--код типа цены--
, NULL		--код единицы измерения для товара - units--
, NULL 		--цена--
, NULL 		--1-Оплата при отгрузке,2-Оплата с отсрочкой платежа,3-Предоплата--
--activityhistory	--event
, NULL 			
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--

FROM	kat_tvr	
 
WHERE	kat_tvr.ТовАрт like '%w%'	

--UNION ALL
--SELECT
--	3 AS Tag			--attribute
--,	2 AS Parent			--attributes

----,'' AS [SKU!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
--, CAST(kat_tvr.ТовКод AS varchar(50))				--код товара--
--, NULL 		--артикул товара (уникальный смысловой код)--
--, NULL 		--наименование товара --
--, NULL		--краткое наименование товара (для КПК) (15 символов)--
--, NULL 		--код группы товара--
--, NULL		--код базовой единицы измерения для товара--
--, NULL		--вес базовой единицы измерения товара--
--, NULL		--код ставки НДС для товара--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--номер Грузовой Таможенной Декларации--
--, NULL		--Страна происхождения--
--, NULL		--признак того, что элемент был удален--
--, NULL		--тип товара--
--, NULL		--возможность ввода SKU только со считывателя штрих кодов--
--, NULL		--Порядковый номер товара в бланке заказа--
--, NULL		--код активной единицы измерения для товара--
----attributes	--attribute
--, NULL 			
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута--
----units		--unit
--, NULL 			
--, NULL --код единицы измерения--
--, NULL 		--коэффициент пересчета в базовую--
--, NULL 		--штрихкод--
--, NULL 		--видимость--
----prices	--price
--, NULL 			
--, NULL 		--код типа цены--
--, NULL		--код единицы измерения для товара - units--
--, NULL 		--цена--
--, NULL 		--1-Оплата при отгрузке,2-Оплата с отсрочкой платежа,3-Предоплата--
----activityhistory	--event
--, NULL 			
--, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
--, NULL 		--дата события--

--FROM	kat_tvr	
 
--WHERE	kat_tvr.ТовАрт like '%w%'	

UNION ALL
SELECT
	5 AS Tag			--unit
,	4 AS Parent			--units

--,'' AS [SKU!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_tvr.ТовКод AS varchar(50))				--код товара--
, NULL 		--артикул товара (уникальный смысловой код)--
, NULL 		--наименование товара --
, NULL		--краткое наименование товара (для КПК) (15 символов)--
, NULL 		--код группы товара--
, NULL		--код базовой единицы измерения для товара--
, NULL		--вес базовой единицы измерения товара--
, NULL		--код ставки НДС для товара--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
, NULL		--номер Грузовой Таможенной Декларации--
, NULL		--Страна происхождения--
, NULL		--признак того, что элемент был удален--
, NULL		--тип товара--
, NULL		--возможность ввода SKU только со считывателя штрих кодов--
, NULL		--Порядковый номер товара в бланке заказа--
, NULL		--код активной единицы измерения для товара--
--attributes	--attribute
--, NULL 			
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута--
--units		--unit
, NULL 			
--, CAST(kat_tvr.ТовУпак AS varchar(50))			--код единицы измерения--
, CASE WHEN LTRIM(RTRIM(kat_tvr.ТовЕИ))='' THEN '0' ELSE LTRIM(RTRIM(kat_tvr.ТовЕИ)) END --код единицы измерения--
, CAST(kat_upk.УпакКоэф AS varchar(50))	   			--коэффициент пересчета в базовую--
, NULL												--штрихкод--
, '1'												--видимость--
--prices	--price
, NULL 			
, NULL 		--код типа цены--
, NULL		--код единицы измерения для товара - units--
, NULL 		--цена--
, NULL 		--1-Оплата при отгрузке,2-Оплата с отсрочкой платежа,3-Предоплата--
--activityhistory	--event
, NULL 			
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--

FROM	kat_tvr	
LEFT OUTER JOIN kat_upk on kat_upk.УпакКод = kat_tvr.ТовУпак
 
WHERE	kat_tvr.ТовАрт like '%w%'	

UNION ALL
SELECT
	7 AS Tag			--price
,	6 AS Parent			--prices

--,'' AS [SKU!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_tvr.ТовКод AS varchar(50))				--код товара--
, NULL 		--артикул товара (уникальный смысловой код)--
, NULL 		--наименование товара --
, NULL		--краткое наименование товара (для КПК) (15 символов)--
, NULL 		--код группы товара--
, NULL		--код базовой единицы измерения для товара--
, NULL		--вес базовой единицы измерения товара--
, NULL		--код ставки НДС для товара--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
, NULL		--номер Грузовой Таможенной Декларации--
, NULL		--Страна происхождения--
, NULL		--признак того, что элемент был удален--
, NULL		--тип товара--
, NULL		--возможность ввода SKU только со считывателя штрих кодов--
, NULL		--Порядковый номер товара в бланке заказа--
, NULL		--код активной единицы измерения для товара--
--attributes	--attribute
--, NULL 			
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута--
--units		--unit
, NULL 			
, NULL		--код единицы измерения--
, NULL 		--коэффициент пересчета в базовую--
, NULL 		--штрихкод--
, NULL 		--видимость--
--prices	--price
, NULL 			
, CAST(M_GRPCEN.ГрпЦен AS varchar(50)) 				--код типа цены--
, CASE WHEN LTRIM(RTRIM(kat_tvr.ТовЕИ))='' THEN '0' ELSE LTRIM(RTRIM(kat_tvr.ТовЕИ)) END --код единицы измерения для товара - units--
, CAST(M_GRPCEN.Цена AS varchar(50))				--цена--
, '1' 		--1-Оплата при отгрузке,2-Оплата с отсрочкой платежа,3-Предоплата--
--activityhistory	--event
, NULL 			
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--

FROM	kat_tvr
LEFT OUTER JOIN M_GRPCEN ON M_GRPCEN.ТврКод = kat_tvr.ТовКод

 
WHERE	kat_tvr.ТовАрт like '%w%'	
		and M_GRPCEN.Цена < 600000
		and M_GRPCEN.Цена > 0

UNION ALL
SELECT
	9 AS Tag			--event
,	8 AS Parent			--activityhistory

--,'' AS [SKU!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_tvr.ТовКод AS varchar(50))				--код товара--
, NULL 		--артикул товара (уникальный смысловой код)--
, NULL 		--наименование товара --
, NULL		--краткое наименование товара (для КПК) (15 символов)--
, NULL 		--код группы товара--
, NULL		--код базовой единицы измерения для товара--
, NULL		--вес базовой единицы измерения товара--
, NULL		--код ставки НДС для товара--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
--, NULL		--код классификатора для товара - classifiers--
, NULL		--номер Грузовой Таможенной Декларации--
, NULL		--Страна происхождения--
, NULL		--признак того, что элемент был удален--
, NULL		--тип товара--
, NULL		--возможность ввода SKU только со считывателя штрих кодов--
, NULL		--Порядковый номер товара в бланке заказа--
, NULL		--код активной единицы измерения для товара--
--attributes	--attribute
--, NULL 			
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута--
--units		--unit
, NULL 			
, NULL --код единицы измерения--
, NULL 		--коэффициент пересчета в базовую--
, NULL 		--штрихкод--
, NULL 		--видимость--
--prices	--price
, NULL 			
, NULL 		--код типа цены--
, NULL		--код единицы измерения для товара - units--
, NULL 		--цена--
, NULL 		--1-Оплата при отгрузке,2-Оплата с отсрочкой платежа,3-Предоплата--
--activityhistory	--event
, NULL 			
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--

FROM	kat_tvr	
 
WHERE	kat_tvr.ТовАрт like '%w%'
) t4												
ORDER BY 
		[SKU!1!code!element]
		,Tag

FOR XML EXPLICIT,ROOT('SKUs')) 
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--Routes - Маршруты--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Routes.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT * FROM
(SELECT
	1 AS Tag			--route
,null AS Parent			--routes

--,'' AS [route!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kln_dkl.КодМенеджера AS varchar(50)) AS [route!1!code!element]			--код маршрута (outercode)--
, CAST(kln_dkl.КодМенеджера AS varchar(50)) AS [route!1!producercode!element]	--код маршрута--
, LTRIM(RTRIM(kat_ppl.СотрФамилия)) + '_' + CAST(kln_dkl.КодМенеджера AS varchar(50)) 
	AS [route!1!name!element]						--наименование маршрута--
, '83' AS [route!1!storecode!element]				--код склада, связанного с маршрутом - stores--
, CAST(kln_dkl.КодМенеджера AS varchar(50)) AS [route!1!agentcode!element]		--код агента--
, 0 AS [route!1!deleted!element]					--признак того, что элемент был удален--
--routebuypoints	--buypoint	
, NULL AS [routebuypoints!2] 							
, NULL AS [buypoint!3!buypointcode!element]			--код торговой точки--
, NULL AS [buypoint!3!day!element]					--день посещения торговой точки в 28-дневном цикле--
, NULL AS [buypoint!3!order!element]				--порядок посещения торговой точки в вышеуказанный день--
--skus		-- sku
, NULL AS [skus!4] 							
, NULL AS [sku!5!SKUcode!element] 					--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL AS [sku!5!unitcode!element] 					--код единицы измерения - units--
, NULL AS [sku!5!unitfactor!element] 				--коэфициент пересчета единицы измерения в базовую --
, NULL AS [sku!5!quantity!element] 					--количество в указанной единице измерения--
, NULL AS [sku!5!skuclassifier!element] 			--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kln_dkl 

INNER JOIN kat_ppl ON kat_ppl.СотрКод = kln_dkl.КодМенеджера
INNER JOIN kat_pdr on kat_ppl.СотрПодр = kat_pdr.ПдрКод

WHERE
kat_pdr.ПдрНаим like '%Отдел продаж%'
AND kat_pdr.ПдрНаим NOT like '%архив%'
AND kat_pdr.ПдрНаим NOT like '%MARS%'
AND kat_pdr.ПдрНаим NOT like '%Сургут%'
AND kat_pdr.ПдрНаим NOT like '%Безнад%'

AND kat_ppl.СотрФамилия NOT like 'яа%'
AND kat_ppl.СотрФамилия NOT like ''
AND kat_ppl.СотрФамилия NOT like '%вспомогат%'
AND kat_ppl.СотрФамилия NOT like '%сетевой%'

--		and kln_dkl.КодМенеджера = 1725--1773 --62

GROUP BY kln_dkl.КодМенеджера,
		kat_ppl.СотрФамилия
		
UNION ALL
SELECT
	2 AS Tag			--routebuypoints
,	1 AS Parent			--route

--,'' AS [route!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kln_dkl.КодМенеджера AS varchar(50))			--код маршрута (outercode)--
, NULL		--код маршрута--
, NULL		--наименование маршрута--
, NULL		--код склада, связанного с маршрутом - stores--
, NULL		--код агента--
, NULL		--признак того, что элемент был удален--
--routebuypoints	--buypoint	
, NULL 							
, NULL		--код торговой точки--
, NULL		--день посещения торговой точки в 28-дневном цикле--
, NULL		--порядок посещения торговой точки в вышеуказанный день--
--skus		-- sku
, NULL							
, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL 		--код единицы измерения - units--
, NULL 		--коэфициент пересчета единицы измерения в базовую --
, NULL		--количество в указанной единице измерения--
, NULL 		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kln_dkl 

INNER JOIN kat_ppl ON kat_ppl.СотрКод = kln_dkl.КодМенеджера
INNER JOIN kat_pdr on kat_ppl.СотрПодр = kat_pdr.ПдрКод

WHERE
kat_pdr.ПдрНаим like '%Отдел продаж%'
AND kat_pdr.ПдрНаим NOT like '%архив%'
AND kat_pdr.ПдрНаим NOT like '%MARS%'
AND kat_pdr.ПдрНаим NOT like '%Сургут%'
AND kat_pdr.ПдрНаим NOT like '%Безнад%'

AND kat_ppl.СотрФамилия NOT like 'яа%'
AND kat_ppl.СотрФамилия NOT like ''
AND kat_ppl.СотрФамилия NOT like '%вспомогат%'
AND kat_ppl.СотрФамилия NOT like '%сетевой%'

--		and kln_dkl.КодМенеджера = 1725--1773 --62

GROUP BY kln_dkl.КодМенеджера

UNION ALL
SELECT
	4 AS Tag			--skus
,	1 AS Parent			--route

--,'' AS [route!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kln_dkl.КодМенеджера AS varchar(50))			--код маршрута (outercode)--
, NULL		--код маршрута--
, NULL		--наименование маршрута--
, NULL		--код склада, связанного с маршрутом - stores--
, NULL		--код агента--
, NULL		--признак того, что элемент был удален--
--routebuypoints	--buypoint	
, NULL 							
, NULL		--код торговой точки--
, NULL		--день посещения торговой точки в 28-дневном цикле--
, NULL		--порядок посещения торговой точки в вышеуказанный день--
--skus		-- sku
, NULL							
, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL 		--код единицы измерения - units--
, NULL 		--коэфициент пересчета единицы измерения в базовую --
, NULL		--количество в указанной единице измерения--
, NULL 		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kln_dkl 

INNER JOIN kat_ppl ON kat_ppl.СотрКод = kln_dkl.КодМенеджера
INNER JOIN kat_pdr on kat_ppl.СотрПодр = kat_pdr.ПдрКод

WHERE
kat_pdr.ПдрНаим like '%Отдел продаж%'
AND kat_pdr.ПдрНаим NOT like '%архив%'
AND kat_pdr.ПдрНаим NOT like '%MARS%'
AND kat_pdr.ПдрНаим NOT like '%Сургут%'
AND kat_pdr.ПдрНаим NOT like '%Безнад%'

AND kat_ppl.СотрФамилия NOT like 'яа%'
AND kat_ppl.СотрФамилия NOT like ''
AND kat_ppl.СотрФамилия NOT like '%вспомогат%'
AND kat_ppl.СотрФамилия NOT like '%сетевой%'

--		and kln_dkl.КодМенеджера = 1725--1773 --62

GROUP BY kln_dkl.КодМенеджера

UNION ALL
SELECT
	3 AS Tag			--buypoint
,	2 AS Parent			--routebuypoints

--,'' AS [route!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kln_dkl.КодМенеджера AS varchar(50))			--код маршрута (outercode)--
, NULL		--код маршрута--
, NULL		--наименование маршрута--
, NULL		--код склада, связанного с маршрутом - stores--
, NULL		--код агента--
, NULL		--признак того, что элемент был удален--
--routebuypoints	--buypoint	
, NULL 							
, CAST(kln_adk.КодАдресаДоставки AS varchar(50))	--код торговой точки--
, NULL		--день посещения торговой точки в 28-дневном цикле--
, NULL		--порядок посещения торговой точки в вышеуказанный день--
--skus		-- sku
, NULL							
, NULL		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL 		--код единицы измерения - units--
, NULL 		--коэфициент пересчета единицы измерения в базовую --
, NULL		--количество в указанной единице измерения--
, NULL 		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kln_dkl 

INNER JOIN kat_ppl ON kat_ppl.СотрКод = kln_dkl.КодМенеджера
INNER JOIN kat_pdr on kat_ppl.СотрПодр = kat_pdr.ПдрКод
INNER JOIN kln_adk ON kln_adk.КодКлиента = kln_dkl.КодКлиента

WHERE
kat_pdr.ПдрНаим like '%Отдел продаж%'
AND kat_pdr.ПдрНаим NOT like '%архив%'
AND kat_pdr.ПдрНаим NOT like '%MARS%'
AND kat_pdr.ПдрНаим NOT like '%Сургут%'
AND kat_pdr.ПдрНаим NOT like '%Безнад%'

AND kat_ppl.СотрФамилия NOT like 'яа%'
AND kat_ppl.СотрФамилия NOT like ''
AND kat_ppl.СотрФамилия NOT like '%вспомогат%'
AND kat_ppl.СотрФамилия NOT like '%сетевой%'

		and NOT(kln_adk.АдресАрхив = -1)
--		and kln_dkl.КодМенеджера = 1725--1773 --62

GROUP BY kln_dkl.КодМенеджера,
		kln_adk.КодАдресаДоставки
		
UNION ALL
SELECT
	5 AS Tag			--sku
,	4 AS Parent			--skus

--,'' AS [route!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kln_dkl.КодМенеджера AS varchar(50))			--код маршрута (outercode)--
, NULL		--код маршрута--
, NULL		--наименование маршрута--
, NULL		--код склада, связанного с маршрутом - stores--
, NULL		--код агента--
, NULL		--признак того, что элемент был удален--
--routebuypoints	--buypoint	
, NULL 							
, NULL		--код торговой точки--
, NULL		--день посещения торговой точки в 28-дневном цикле--
, NULL		--порядок посещения торговой точки в вышеуказанный день--
--skus		-- sku
, NULL							
, CAST(kat_tvr.ТовКод AS varchar(50))					--код товара(указывать либо код товара либо код классификатора для товара)--
--, CAST(kat_tvr.ТовУпак AS varchar(50)) 				--код единицы измерения - units--
, CASE WHEN LTRIM(RTRIM(kat_tvr.ТовЕИ))='' THEN '0' ELSE LTRIM(RTRIM(kat_tvr.ТовЕИ)) END --код единицы измерения - units--
, CAST(CAST(kat_upk.УпакКоэф AS smallint) AS varchar(50))	--коэфициент пересчета единицы измерения в базовую --
--, CAST(tvr_def.ТовВесНетто AS varchar(50))			--количество в указанной единице измерения--
, '1'													--количество в указанной единице измерения--
, NULL 		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--

FROM 	kln_dkl 

INNER JOIN kat_ppl ON kat_ppl.СотрКод = kln_dkl.КодМенеджера
INNER JOIN kat_pdr on kat_ppl.СотрПодр = kat_pdr.ПдрКод
LEFT OUTER JOIN cenp_tab ON cenp_tab.КлнКод = kln_dkl.КодКлиента
LEFT OUTER JOIN kat_tvr ON kat_tvr.ТовКод = cenp_tab.ТовКод
LEFT OUTER JOIN kat_upk on kat_upk.УпакКод = kat_tvr.ТовУпак
LEFT OUTER JOIN tvr_def on tvr_def.ТовКод = kat_tvr.ТовКод

WHERE
kat_pdr.ПдрНаим like '%Отдел продаж%'
AND kat_pdr.ПдрНаим NOT like '%архив%'
AND kat_pdr.ПдрНаим NOT like '%MARS%'
AND kat_pdr.ПдрНаим NOT like '%Сургут%'
AND kat_pdr.ПдрНаим NOT like '%Безнад%'

AND kat_ppl.СотрФамилия NOT like 'яа%'
AND kat_ppl.СотрФамилия NOT like ''
AND kat_ppl.СотрФамилия NOT like '%вспомогат%'
AND kat_ppl.СотрФамилия NOT like '%сетевой%'

		and (kat_tvr.ТовАрт like '%w%')
--		and kln_dkl.КодМенеджера = 1725--1773 --62

GROUP BY kln_dkl.КодМенеджера
		,kat_tvr.ТовКод
--		,kat_tvr.ТовУпак
		,kat_tvr.ТовЕИ
		,kat_upk.УпакКоэф
		,tvr_def.ТовВесНетто

) t6												
ORDER BY 
		[route!1!code!element]
		,Tag

FOR XML EXPLICIT,ROOT('routes'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--Buypoints - Торговые точки
--------------------------------------------------------------------
--------------------------------------------------------------------
--Buypoints1 - Ограничение: kln_adk.КодАдресаДоставки <=2000 - Итого 3 файла ~ по 50Мб
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Buypoints1.xml'
--SELECT filename = '\\ts99\Public\CHICAGO\Buypoints1.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(
SELECT * FROM
(SELECT
	1 AS Tag			--buypoint
,null AS Parent			--buypoints

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) AS [buypoint!1!producercode!element]	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) AS [buypoint!1!code!element]			--код торговой точки (outercode)--
--, SUBSTRING(LTRIM(RTRIM(kat_kln.КлнНаим)),1,50) AS [buypoint!1!name!element]			--наименование торговой точки(вывеска)--
, SUBSTRING(LTRIM(RTRIM(kat_kln.КлнНаим)),1,50) + 
	CASE WHEN NOT(LTRIM(RTRIM(kln_adk.АдресДоставки))='') THEN ', ' + SUBSTRING(LTRIM(RTRIM(kln_adk.АдресДоставки)),1,50)
	ELSE ''	END
	 AS [buypoint!1!name!element]					--наименование торговой точки(вывеска)--
, SUBSTRING(CASE WHEN (LTRIM(RTRIM(kat_kln.КлнФс)+ ' ' + LTRIM(RTRIM(kat_kln.КлнНаим))) =  '' )
	 THEN LTRIM(RTRIM(cln_dkl.КлнНаим))					
	 ELSE LTRIM(RTRIM(kat_kln.КлнФс)+ ' ' + LTRIM(RTRIM(kat_kln.КлнНаим)))					
	 END,1,50)
	 AS [buypoint!1!juridicalname!element]			--юридическое наименование--
, SUBSTRING(LTRIM(RTRIM(kln_adk.АдресДоставки)),1,50) AS [buypoint!1!address!element]	--улица, дом, квартира--
, '' AS [buypoint!1!postindex!element]				--почтовый индекс--
, '' AS [buypoint!1!phone!element]					--телефон--
, '' AS [buypoint!1!contactperson!element]			--контактное лицо--
, CAST(kat_kln.КлнКод AS varchar(50)) AS [buypoint!1!buyercode!element]	--код покупателя, которому принадлежит торговая точка--
--, CAST(max(List_kdk1.КодДопХар) AS varchar(50)) AS [buypoint!1!buypointtypecode!element]	--тип ТТ--
, CASE 
	WHEN  max(List_kdk1.КодДопХар) in (59) THEN '1'-- 59-1Кэш энд Керри( 8.000м2 )
	WHEN  max(List_kdk1.КодДопХар) in (60) THEN '2'-- 60-2Гипермаркеты( 3.000-15.000м2)
	WHEN  max(List_kdk1.КодДопХар) in (61,63) THEN '3'-- 61-3Супермаркеты( 500-3.000м2), 63-5Универсамы( 500-3.000м2)
	WHEN  max(List_kdk1.КодДопХар) in (62) THEN '4'-- 62-4Минимаркеты( 300-500м2)
	WHEN  max(List_kdk1.КодДопХар) in (64) THEN '5'-- 64-6Дискаунтеры( >100м2)
	WHEN  max(List_kdk1.КодДопХар) in (65) THEN '6'-- 65-7Средние магазины без с/обсл.
  END AS [buypoint!1!buypointtypecode!element]	--тип ТТ--
, '' AS [buypoint!1!discountRate!element]			--процент скидки торговой точке--
, '0' AS [buypoint!1!creditlimit!element]			--лимит кредита торговой точки в основной валюте системы--
, '0' AS [buypoint!1!creditdeadline!element]		--срок кредита торговой точки в днях--
, '0' AS [buypoint!1!poscount!element]				--количество мест рассчета--
--, CAST(ISNULL(cenp_tab.ЦенГрп,0) AS varchar(50)) AS [buypoint!1!pricetypecode!element]	--тип цены для ТТ--
, '0' AS [buypoint!1!pricetypecode!element]			--тип цены для ТТ--
, NULL AS [buypoint!1!isworkload!element]			--обязательность к посещению--
--, CAST(max(List_kdk2.КодДопХар) AS varchar(50)) AS [buypoint!1!distrchannelcode!element]		--Канал сбыта--
, CASE 
	WHEN  max(List_kdk2.КодДопХар) in (49,50,7,8) THEN '1'-- Екб 49-1Крупный опт #опт, 50-2Опт #опт, Сур 7-1.Крупный опт,8-2.Опт
	WHEN  max(List_kdk2.КодДопХар) in (51,52,53,9,10,11) THEN '2'-- Екб 51-4Региональные сети #сеть, 52-3Федеральные сети #сеть, 53-5Прочие сети(от 3-х магазинов), Сур 9-3.Федеральные сети, 10-4.Региональные сети, 11-5.Прочие сети (от 3-х магазинов)
	WHEN  max(List_kdk2.КодДопХар) in (54,509,12) THEN '3'-- Екб 54-6Розница, 509-9Розница+Опт, Сур 12-6.Розница
	WHEN  max(List_kdk2.КодДопХар) in (55,13) THEN '4'-- Екб 55-7Общепит #хорека, Сур 13-7.Общепит
	WHEN  max(List_kdk2.КодДопХар) in (56,14) THEN '5'-- Екб 56-8Производство, Сур 14-8.Производство
	WHEN  max(List_kdk2.КодДопХар) in (520) THEN '6'-- Екб 520-10Аптека, Сур 
  END AS [buypoint!1!distrchannelcode!element]		--Канал сбыта--
--, NULL AS [buypoint!1!classifier1code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier2code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier3code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier4code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier5code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier6code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier7code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier8code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier9code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier10code!element]		--код классификатора для ТТ - classifiers--
, 0 AS [buypoint!1!deleted!element]					--признак того, что элемент был удален--
--attributes		attribute
--, NULL AS [attributes!2] 							
--, NULL AS [attribute!3!attributecode!element]		--код дополнительного атрибута--
--, NULL AS [attribute!3!name!element]				--название атрибута--
--, NULL AS [attribute!3!valuetype!element]			--тип значения (bool, integer, string, double, datetime)--
--, NULL AS [attribute!3!value!element]				--значение дополнительного атрибута-
--activityhistory	event
, NULL AS [activityhistory!4] 							
, NULL AS [event!5!eventtype!element]				--тип события, 0 - Деактивация, 1 - Активация--
, NULL AS [event!5!eventdate!element]				--дата события--
--skupricetypes		skupricetype
, NULL AS [skupricetypes!6] 							
, NULL AS [skupricetype!7!SKUcode!element]			--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL AS [skupricetype!7!pricetypecode!element]	--код типа цены - pricetypes--
, NULL AS [skupricetype!7!skuclassifier!element]	--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL AS [positions!8] 							
, NULL AS [position!9!positioncode!element]			--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента
INNER JOIN cln_dkl ON cln_dkl.КлнКод = kat_kln.КлнКод
--INNER JOIN cenp_tab ON cenp_tab.КлнКод = kln_adk.КодКлиента
LEFT OUTER JOIN List_kdk List_kdk1 ON (List_kdk1.КодКлн = kln_adk.КодКлиента and List_kdk1.КодГрпДопХар = 3)--Tbl_Kdk_code.Description = 'Тип торговой точки (формат)'
LEFT OUTER JOIN List_kdk List_kdk2 ON (List_kdk2.КодКлн = kln_adk.КодКлиента and List_kdk2.КодГрпДопХар = 2)--Tbl_Kdk_code.Description = 'Тип клиента (канал сбыта)'

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
													-- 0-не определена; чужие(>0): 1-покупатель,
													-- 2-пок.разовый, 3-пост.товара, 4-пост.услуг,
													-- 5-пост.проч., 6-расчеты по налогам, 7-банк;
													-- свои (<0): -1-головная орг., -2-филиал опт.,
													-- -3-филиал(магазин), -4-фил.(торг. агент),
													-- -5-фил.прочие
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
													-- 1-КЛИЕНТЫ ОП
	and kln_adk.КодАдресаДоставки <=2000

GROUP BY kat_kln.КлнКод, kat_kln.КлнНаим, cln_dkl.КлнНаим, kln_adk.КодАдресаДоставки, kln_adk.АдресДоставки, kat_kln.КлнФс

--GROUP BY
--		 kat_kln.КлнКод
--		,kln_adk.КодАдресаДоставки
--		,kln_adk.АдресДоставки
--		,kat_kln.КлнНаим
--		,kat_kln.КлнФс
--		,cln_dkl.КлнНаим
--		,cenp_tab.ЦенГрп

--UNION ALL
--SELECT
--	2 AS Tag			--attributes
--,	1 AS Parent			--buypoint

----,'' AS [buypoint!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
--, NULL 	--код торговой точки--
--, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
--, NULL 		--наименование торговой точки(вывеска)--
--, NULL 		--юридическое наименование--
--, NULL 		--улица, дом, квартира--
--, NULL 		--почтовый индекс--
--, NULL 		--телефон--
--, NULL 		--контактное лицо--
--, NULL 		--код покупателя, которому принадлежит торговая точка--
--, NULL 		--тип ТТ--
--, NULL 		--процент скидки торговой точке--
--, NULL 		--лимит кредита торговой точки в основной валюте системы--
--, NULL 		--срок кредита торговой точки в днях--
--, NULL 		--количество мест рассчета--
--, NULL 		--тип цены для ТТ--
--, NULL 		--обязательность к посещению--
--, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--признак того, что элемент был удален--
----attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
----activityhistory	event
--, NULL  							
--, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
--, NULL 		--дата события--
----skupricetypes		skupricetype
--, NULL 							
--, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
--, NULL		--код типа цены - pricetypes--
--, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
----positions			position
--, NULL 						
--, NULL 		--код позиции--

--FROM 	kln_adk
--INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

--WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
--	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
----	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
--	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

--	and kln_adk.КодАдресаДоставки <=2000

UNION ALL
SELECT
	4 AS Tag			--activityhistory
,	1 AS Parent			--buypoint

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки <=2000

UNION ALL
SELECT
	6 AS Tag			--skupricetypes
,	1 AS Parent			--buypoint

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки <=2000

UNION ALL
SELECT
	8 AS Tag			--positions
,	1 AS Parent			--buypoint

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки <=2000

--UNION ALL
--SELECT
--	3 AS Tag			--attribute
--,	2 AS Parent			--attributes

----,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
--, NULL 	--код торговой точки--
--, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
--, NULL 		--наименование торговой точки(вывеска)--
--, NULL 		--юридическое наименование--
--, NULL 		--улица, дом, квартира--
--, NULL 		--почтовый индекс--
--, NULL 		--телефон--
--, NULL 		--контактное лицо--
--, NULL 		--код покупателя, которому принадлежит торговая точка--
--, NULL 		--тип ТТ--
--, NULL 		--процент скидки торговой точке--
--, NULL 		--лимит кредита торговой точки в основной валюте системы--
--, NULL 		--срок кредита торговой точки в днях--
--, NULL 		--количество мест рассчета--
--, NULL 		--тип цены для ТТ--
--, NULL 		--обязательность к посещению--
--, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--признак того, что элемент был удален--
----attributes		attribute
--, NULL  							
--, 0 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
----activityhistory	event
--, NULL  							
--, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
--, NULL 		--дата события--
----skupricetypes		skupricetype
--, NULL 							
--, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
--, NULL		--код типа цены - pricetypes--
--, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
----positions			position
--, NULL 						
--, NULL 		--код позиции--

--FROM 	kln_adk
--INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

--WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
--	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
----	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
--	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

--	and kln_adk.КодАдресаДоставки <=2000

UNION ALL
SELECT
	5 AS Tag			--event
,	4 AS Parent			--activityhistory

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, '1' 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки <=2000

UNION ALL
SELECT
	7 AS Tag			--skupricetype
,	6 AS Parent			--skupricetypes

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, CAST(cenp_tab.ТовКод AS varchar(50)) 					--код товара(указывать либо код товара либо код классификатора для товара)--
, CAST(cenp_tab.ЦенГрп AS varchar(50))					--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента
LEFT OUTER JOIN cenp_tab ON cenp_tab.КлнКод = kln_adk.КодКлиента
LEFT OUTER JOIN kat_tvr ON kat_tvr.ТовКод = cenp_tab.ТовКод

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
	and kat_tvr.ТовАрт like '%w%'

	and kln_adk.КодАдресаДоставки <=2000

UNION ALL
SELECT
	9 AS Tag			--position
,	8 AS Parent			--positions

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, '0' 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки <=2000
) t7												
ORDER BY 
--		[buypoint!1!producercode!element]
		[buypoint!1!code!element]
		,Tag

FOR XML EXPLICIT,ROOT('buypoints'))  
+CONVERT(NVARCHAR(MAX),'</references>')
)

--*/
/*
UNION ALL

--------------------------------------------------------------------
--Buypoints2 - Ограничение: kln_adk.КодАдресаДоставки >2000
--и kln_adk.КодАдресаДоставки <=4200 - Итого 3 файла ~ по 50Мб
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Buypoints2.xml'
--SELECT filename = '\\ts99\Public\CHICAGO\Buypoints2.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(
SELECT * FROM
(SELECT
	1 AS Tag			--buypoint
,null AS Parent			--buypoints

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) AS [buypoint!1!producercode!element]	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) AS [buypoint!1!code!element]			--код торговой точки (outercode)--
--, SUBSTRING(LTRIM(RTRIM(kat_kln.КлнНаим)),1,50) AS [buypoint!1!name!element]			--наименование торговой точки(вывеска)--
, SUBSTRING(LTRIM(RTRIM(kat_kln.КлнНаим)),1,50) + 
	CASE WHEN NOT(LTRIM(RTRIM(kln_adk.АдресДоставки))='') THEN ', ' + SUBSTRING(LTRIM(RTRIM(kln_adk.АдресДоставки)),1,50)
	ELSE ''	END
	 AS [buypoint!1!name!element]					--наименование торговой точки(вывеска)--
, SUBSTRING(CASE WHEN (LTRIM(RTRIM(kat_kln.КлнФс)+ ' ' + LTRIM(RTRIM(kat_kln.КлнНаим))) =  '' )
	 THEN LTRIM(RTRIM(cln_dkl.КлнНаим))					
	 ELSE LTRIM(RTRIM(kat_kln.КлнФс)+ ' ' + LTRIM(RTRIM(kat_kln.КлнНаим)))					
	 END,1,50)
	 AS [buypoint!1!juridicalname!element]			--юридическое наименование--
, SUBSTRING(LTRIM(RTRIM(kln_adk.АдресДоставки)),1,50) AS [buypoint!1!address!element]	--улица, дом, квартира--
, '' AS [buypoint!1!postindex!element]				--почтовый индекс--
, '' AS [buypoint!1!phone!element]					--телефон--
, '' AS [buypoint!1!contactperson!element]			--контактное лицо--
, CAST(kat_kln.КлнКод AS varchar(50)) AS [buypoint!1!buyercode!element]	--код покупателя, которому принадлежит торговая точка--
--, CAST(max(List_kdk1.КодДопХар) AS varchar(50)) AS [buypoint!1!buypointtypecode!element]	--тип ТТ--
, CASE 
	WHEN  max(List_kdk1.КодДопХар) in (59) THEN '1'-- 59-1Кэш энд Керри( 8.000м2 )
	WHEN  max(List_kdk1.КодДопХар) in (60) THEN '2'-- 60-2Гипермаркеты( 3.000-15.000м2)
	WHEN  max(List_kdk1.КодДопХар) in (61,63) THEN '3'-- 61-3Супермаркеты( 500-3.000м2), 63-5Универсамы( 500-3.000м2)
	WHEN  max(List_kdk1.КодДопХар) in (62) THEN '4'-- 62-4Минимаркеты( 300-500м2)
	WHEN  max(List_kdk1.КодДопХар) in (64) THEN '5'-- 64-6Дискаунтеры( >100м2)
	WHEN  max(List_kdk1.КодДопХар) in (65) THEN '6'-- 65-7Средние магазины без с/обсл.
  END AS [buypoint!1!buypointtypecode!element]	--тип ТТ--
, '' AS [buypoint!1!discountRate!element]			--процент скидки торговой точке--
, '0' AS [buypoint!1!creditlimit!element]			--лимит кредита торговой точки в основной валюте системы--
, '0' AS [buypoint!1!creditdeadline!element]		--срок кредита торговой точки в днях--
, '0' AS [buypoint!1!poscount!element]				--количество мест рассчета--
--, CAST(ISNULL(cenp_tab.ЦенГрп,0) AS varchar(50)) AS [buypoint!1!pricetypecode!element]	--тип цены для ТТ--
, '0' AS [buypoint!1!pricetypecode!element]			--тип цены для ТТ--
, NULL AS [buypoint!1!isworkload!element]			--обязательность к посещению--
--, CAST(max(List_kdk2.КодДопХар) AS varchar(50)) AS [buypoint!1!distrchannelcode!element]		--Канал сбыта--
, CASE 
	WHEN  max(List_kdk2.КодДопХар) in (49,50,7,8) THEN '1'-- Екб 49-1Крупный опт #опт, 50-2Опт #опт, Сур 7-1.Крупный опт,8-2.Опт
	WHEN  max(List_kdk2.КодДопХар) in (51,52,53,9,10,11) THEN '2'-- Екб 51-4Региональные сети #сеть, 52-3Федеральные сети #сеть, 53-5Прочие сети(от 3-х магазинов), Сур 9-3.Федеральные сети, 10-4.Региональные сети, 11-5.Прочие сети (от 3-х магазинов)
	WHEN  max(List_kdk2.КодДопХар) in (54,509,12) THEN '3'-- Екб 54-6Розница, 509-9Розница+Опт, Сур 12-6.Розница
	WHEN  max(List_kdk2.КодДопХар) in (55,13) THEN '4'-- Екб 55-7Общепит #хорека, Сур 13-7.Общепит
	WHEN  max(List_kdk2.КодДопХар) in (56,14) THEN '5'-- Екб 56-8Производство, Сур 14-8.Производство
	WHEN  max(List_kdk2.КодДопХар) in (520) THEN '6'-- Екб 520-10Аптека, Сур 
  END AS [buypoint!1!distrchannelcode!element]		--Канал сбыта--
--, NULL AS [buypoint!1!classifier1code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier2code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier3code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier4code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier5code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier6code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier7code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier8code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier9code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier10code!element]		--код классификатора для ТТ - classifiers--
, 0 AS [buypoint!1!deleted!element]					--признак того, что элемент был удален--
--attributes		attribute
--, NULL AS [attributes!2] 							
--, NULL AS [attribute!3!attributecode!element]		--код дополнительного атрибута--
--, NULL AS [attribute!3!name!element]				--название атрибута--
--, NULL AS [attribute!3!valuetype!element]			--тип значения (bool, integer, string, double, datetime)--
--, NULL AS [attribute!3!value!element]				--значение дополнительного атрибута-
--activityhistory	event
, NULL AS [activityhistory!4] 							
, NULL AS [event!5!eventtype!element]				--тип события, 0 - Деактивация, 1 - Активация--
, NULL AS [event!5!eventdate!element]				--дата события--
--skupricetypes		skupricetype
, NULL AS [skupricetypes!6] 							
, NULL AS [skupricetype!7!SKUcode!element]			--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL AS [skupricetype!7!pricetypecode!element]	--код типа цены - pricetypes--
, NULL AS [skupricetype!7!skuclassifier!element]	--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL AS [positions!8] 							
, NULL AS [position!9!positioncode!element]			--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента
INNER JOIN cln_dkl ON cln_dkl.КлнКод = kat_kln.КлнКод
--INNER JOIN cenp_tab ON cenp_tab.КлнКод = kln_adk.КодКлиента
LEFT OUTER JOIN List_kdk List_kdk1 ON (List_kdk1.КодКлн = kln_adk.КодКлиента and List_kdk1.КодГрпДопХар = 3)--Tbl_Kdk_code.Description = 'Тип торговой точки (формат)'
LEFT OUTER JOIN List_kdk List_kdk2 ON (List_kdk2.КодКлн = kln_adk.КодКлиента and List_kdk2.КодГрпДопХар = 2)--Tbl_Kdk_code.Description = 'Тип клиента (канал сбыта)'

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
													-- 0-не определена; чужие(>0): 1-покупатель,
													-- 2-пок.разовый, 3-пост.товара, 4-пост.услуг,
													-- 5-пост.проч., 6-расчеты по налогам, 7-банк;
													-- свои (<0): -1-головная орг., -2-филиал опт.,
													-- -3-филиал(магазин), -4-фил.(торг. агент),
													-- -5-фил.прочие
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
													-- 1-КЛИЕНТЫ ОП
	and kln_adk.КодАдресаДоставки >2000
	and kln_adk.КодАдресаДоставки <=4200

GROUP BY kat_kln.КлнКод, kat_kln.КлнНаим, cln_dkl.КлнНаим, kln_adk.КодАдресаДоставки, kln_adk.АдресДоставки, kat_kln.КлнФс
--GROUP BY
--		 kat_kln.КлнКод
--		,kln_adk.КодАдресаДоставки
--		,kln_adk.АдресДоставки
--		,kat_kln.КлнНаим
--		,kat_kln.КлнФс
--		,cln_dkl.КлнНаим
--		,cenp_tab.ЦенГрп

--UNION ALL
--SELECT
--	2 AS Tag			--attributes
--,	1 AS Parent			--buypoint

----,'' AS [buypoint!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
--, NULL 	--код торговой точки--
--, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
--, NULL 		--наименование торговой точки(вывеска)--
--, NULL 		--юридическое наименование--
--, NULL 		--улица, дом, квартира--
--, NULL 		--почтовый индекс--
--, NULL 		--телефон--
--, NULL 		--контактное лицо--
--, NULL 		--код покупателя, которому принадлежит торговая точка--
--, NULL 		--тип ТТ--
--, NULL 		--процент скидки торговой точке--
--, NULL 		--лимит кредита торговой точки в основной валюте системы--
--, NULL 		--срок кредита торговой точки в днях--
--, NULL 		--количество мест рассчета--
--, NULL 		--тип цены для ТТ--
--, NULL 		--обязательность к посещению--
--, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--признак того, что элемент был удален--
----attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
----activityhistory	event
--, NULL  							
--, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
--, NULL 		--дата события--
----skupricetypes		skupricetype
--, NULL 							
--, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
--, NULL		--код типа цены - pricetypes--
--, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
----positions			position
--, NULL 						
--, NULL 		--код позиции--

--FROM 	kln_adk
--INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

--WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
--	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
----	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
--	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

--	and kln_adk.КодАдресаДоставки >2000
--	and kln_adk.КодАдресаДоставки <=4200

UNION ALL
SELECT
	4 AS Tag			--activityhistory
,	1 AS Parent			--buypoint

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки >2000
	and kln_adk.КодАдресаДоставки <=4200

UNION ALL
SELECT
	6 AS Tag			--skupricetypes
,	1 AS Parent			--buypoint

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки >2000
	and kln_adk.КодАдресаДоставки <=4200

UNION ALL
SELECT
	8 AS Tag			--positions
,	1 AS Parent			--buypoint

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки >2000
	and kln_adk.КодАдресаДоставки <=4200

--UNION ALL
--SELECT
--	3 AS Tag			--attribute
--,	2 AS Parent			--attributes

----,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
--, NULL 	--код торговой точки--
--, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
--, NULL 		--наименование торговой точки(вывеска)--
--, NULL 		--юридическое наименование--
--, NULL 		--улица, дом, квартира--
--, NULL 		--почтовый индекс--
--, NULL 		--телефон--
--, NULL 		--контактное лицо--
--, NULL 		--код покупателя, которому принадлежит торговая точка--
--, NULL 		--тип ТТ--
--, NULL 		--процент скидки торговой точке--
--, NULL 		--лимит кредита торговой точки в основной валюте системы--
--, NULL 		--срок кредита торговой точки в днях--
--, NULL 		--количество мест рассчета--
--, NULL 		--тип цены для ТТ--
--, NULL 		--обязательность к посещению--
--, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--признак того, что элемент был удален--
----attributes		attribute
--, NULL  							
--, 0 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
----activityhistory	event
--, NULL  							
--, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
--, NULL 		--дата события--
----skupricetypes		skupricetype
--, NULL 							
--, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
--, NULL		--код типа цены - pricetypes--
--, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
----positions			position
--, NULL 						
--, NULL 		--код позиции--

--FROM 	kln_adk
--INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

--WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
--	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
----	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
--	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

--	and kln_adk.КодАдресаДоставки >2000
--	and kln_adk.КодАдресаДоставки <=4200

UNION ALL
SELECT
	5 AS Tag			--event
,	4 AS Parent			--activityhistory

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, '1' 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки >2000
	and kln_adk.КодАдресаДоставки <=4200

UNION ALL
SELECT
	7 AS Tag			--skupricetype
,	6 AS Parent			--skupricetypes

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, CAST(cenp_tab.ТовКод AS varchar(50)) 					--код товара(указывать либо код товара либо код классификатора для товара)--
, CAST(cenp_tab.ЦенГрп AS varchar(50))					--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента
LEFT OUTER JOIN cenp_tab ON cenp_tab.КлнКод = kln_adk.КодКлиента
LEFT OUTER JOIN kat_tvr ON kat_tvr.ТовКод = cenp_tab.ТовКод

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
	and kat_tvr.ТовАрт like '%w%'

	and kln_adk.КодАдресаДоставки >2000
	and kln_adk.КодАдресаДоставки <=4200

UNION ALL
SELECT
	9 AS Tag			--position
,	8 AS Parent			--positions

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, '0' 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки >2000
	and kln_adk.КодАдресаДоставки <=4200
) t7												
ORDER BY 
--		[buypoint!1!producercode!element]
		[buypoint!1!code!element]
		,Tag

FOR XML EXPLICIT,ROOT('buypoints'))  
+CONVERT(NVARCHAR(MAX),'</references>')
)
*/
--UNION ALL
/*

--------------------------------------------------------------------
--Buypoints3 - Ограничение: kln_adk.КодАдресаДоставки >4200 - Итого 3 файла ~ по 50Мб
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Buypoints3.xml'
--SELECT filename = '\\ts99\Public\CHICAGO\Buypoints3.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(
SELECT * FROM
(SELECT
	1 AS Tag			--buypoint
,null AS Parent			--buypoints

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) AS [buypoint!1!producercode!element]	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) AS [buypoint!1!code!element]			--код торговой точки (outercode)--
--, SUBSTRING(LTRIM(RTRIM(kat_kln.КлнНаим)),1,50) AS [buypoint!1!name!element]			--наименование торговой точки(вывеска)--
, SUBSTRING(LTRIM(RTRIM(kat_kln.КлнНаим)),1,50) + 
	CASE WHEN NOT(LTRIM(RTRIM(kln_adk.АдресДоставки))='') THEN ', ' + SUBSTRING(LTRIM(RTRIM(kln_adk.АдресДоставки)),1,50)
	ELSE ''	END
	 AS [buypoint!1!name!element]					--наименование торговой точки(вывеска)--
, SUBSTRING(CASE WHEN (LTRIM(RTRIM(kat_kln.КлнФс)+ ' ' + LTRIM(RTRIM(kat_kln.КлнНаим))) =  '' )
	 THEN LTRIM(RTRIM(cln_dkl.КлнНаим))					
	 ELSE LTRIM(RTRIM(kat_kln.КлнФс)+ ' ' + LTRIM(RTRIM(kat_kln.КлнНаим)))					
	 END,1,50)
	 AS [buypoint!1!juridicalname!element]			--юридическое наименование--
, SUBSTRING(LTRIM(RTRIM(kln_adk.АдресДоставки)),1,50) AS [buypoint!1!address!element]	--улица, дом, квартира--
, '' AS [buypoint!1!postindex!element]				--почтовый индекс--
, '' AS [buypoint!1!phone!element]					--телефон--
, '' AS [buypoint!1!contactperson!element]			--контактное лицо--
, CAST(kat_kln.КлнКод AS varchar(50)) AS [buypoint!1!buyercode!element]	--код покупателя, которому принадлежит торговая точка--
--, CAST(max(List_kdk1.КодДопХар) AS varchar(50)) AS [buypoint!1!buypointtypecode!element]	--тип ТТ--
, CASE 
	WHEN  max(List_kdk1.КодДопХар) in (59) THEN '1'-- 59-1Кэш энд Керри( 8.000м2 )
	WHEN  max(List_kdk1.КодДопХар) in (60) THEN '2'-- 60-2Гипермаркеты( 3.000-15.000м2)
	WHEN  max(List_kdk1.КодДопХар) in (61,63) THEN '3'-- 61-3Супермаркеты( 500-3.000м2), 63-5Универсамы( 500-3.000м2)
	WHEN  max(List_kdk1.КодДопХар) in (62) THEN '4'-- 62-4Минимаркеты( 300-500м2)
	WHEN  max(List_kdk1.КодДопХар) in (64) THEN '5'-- 64-6Дискаунтеры( >100м2)
	WHEN  max(List_kdk1.КодДопХар) in (65) THEN '6'-- 65-7Средние магазины без с/обсл.
  END AS [buypoint!1!buypointtypecode!element]	--тип ТТ--
, '' AS [buypoint!1!discountRate!element]			--процент скидки торговой точке--
, '0' AS [buypoint!1!creditlimit!element]			--лимит кредита торговой точки в основной валюте системы--
, '0' AS [buypoint!1!creditdeadline!element]		--срок кредита торговой точки в днях--
, '0' AS [buypoint!1!poscount!element]				--количество мест рассчета--
--, CAST(ISNULL(cenp_tab.ЦенГрп,0) AS varchar(50)) AS [buypoint!1!pricetypecode!element]	--тип цены для ТТ--
, '0' AS [buypoint!1!pricetypecode!element]			--тип цены для ТТ--
, NULL AS [buypoint!1!isworkload!element]			--обязательность к посещению--
--, CAST(max(List_kdk2.КодДопХар) AS varchar(50)) AS [buypoint!1!distrchannelcode!element]		--Канал сбыта--
, CASE 
	WHEN  max(List_kdk2.КодДопХар) in (49,50,7,8) THEN '1'-- Екб 49-1Крупный опт #опт, 50-2Опт #опт, Сур 7-1.Крупный опт,8-2.Опт
	WHEN  max(List_kdk2.КодДопХар) in (51,52,53,9,10,11) THEN '2'-- Екб 51-4Региональные сети #сеть, 52-3Федеральные сети #сеть, 53-5Прочие сети(от 3-х магазинов), Сур 9-3.Федеральные сети, 10-4.Региональные сети, 11-5.Прочие сети (от 3-х магазинов)
	WHEN  max(List_kdk2.КодДопХар) in (54,509,12) THEN '3'-- Екб 54-6Розница, 509-9Розница+Опт, Сур 12-6.Розница
	WHEN  max(List_kdk2.КодДопХар) in (55,13) THEN '4'-- Екб 55-7Общепит #хорека, Сур 13-7.Общепит
	WHEN  max(List_kdk2.КодДопХар) in (56,14) THEN '5'-- Екб 56-8Производство, Сур 14-8.Производство
	WHEN  max(List_kdk2.КодДопХар) in (520) THEN '6'-- Екб 520-10Аптека, Сур 
  END AS [buypoint!1!distrchannelcode!element]		--Канал сбыта--
--, NULL AS [buypoint!1!classifier1code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier2code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier3code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier4code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier5code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier6code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier7code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier8code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier9code!element]		--код классификатора для ТТ - classifiers--
--, NULL AS [buypoint!1!classifier10code!element]		--код классификатора для ТТ - classifiers--
, 0 AS [buypoint!1!deleted!element]					--признак того, что элемент был удален--
--attributes		attribute
--, NULL AS [attributes!2] 							
--, NULL AS [attribute!3!attributecode!element]		--код дополнительного атрибута--
--, NULL AS [attribute!3!name!element]				--название атрибута--
--, NULL AS [attribute!3!valuetype!element]			--тип значения (bool, integer, string, double, datetime)--
--, NULL AS [attribute!3!value!element]				--значение дополнительного атрибута-
--activityhistory	event
, NULL AS [activityhistory!4] 							
, NULL AS [event!5!eventtype!element]				--тип события, 0 - Деактивация, 1 - Активация--
, NULL AS [event!5!eventdate!element]				--дата события--
--skupricetypes		skupricetype
, NULL AS [skupricetypes!6] 							
, NULL AS [skupricetype!7!SKUcode!element]			--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL AS [skupricetype!7!pricetypecode!element]	--код типа цены - pricetypes--
, NULL AS [skupricetype!7!skuclassifier!element]	--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL AS [positions!8] 							
, NULL AS [position!9!positioncode!element]			--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента
INNER JOIN cln_dkl ON cln_dkl.КлнКод = kat_kln.КлнКод
--INNER JOIN cenp_tab ON cenp_tab.КлнКод = kln_adk.КодКлиента
LEFT OUTER JOIN List_kdk List_kdk1 ON (List_kdk1.КодКлн = kln_adk.КодКлиента and List_kdk1.КодГрпДопХар = 3)--Tbl_Kdk_code.Description = 'Тип торговой точки (формат)'
LEFT OUTER JOIN List_kdk List_kdk2 ON (List_kdk2.КодКлн = kln_adk.КодКлиента and List_kdk2.КодГрпДопХар = 2)--Tbl_Kdk_code.Description = 'Тип клиента (канал сбыта)'

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
													-- 0-не определена; чужие(>0): 1-покупатель,
													-- 2-пок.разовый, 3-пост.товара, 4-пост.услуг,
													-- 5-пост.проч., 6-расчеты по налогам, 7-банк;
													-- свои (<0): -1-головная орг., -2-филиал опт.,
													-- -3-филиал(магазин), -4-фил.(торг. агент),
													-- -5-фил.прочие
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
													-- 1-КЛИЕНТЫ ОП
	and kln_adk.КодАдресаДоставки >4200

GROUP BY kat_kln.КлнКод, kat_kln.КлнНаим, cln_dkl.КлнНаим, kln_adk.КодАдресаДоставки, kln_adk.АдресДоставки, kat_kln.КлнФс
--GROUP BY
--		 kat_kln.КлнКод
--		,kln_adk.КодАдресаДоставки
--		,kln_adk.АдресДоставки
--		,kat_kln.КлнНаим
--		,kat_kln.КлнФс
--		,cln_dkl.КлнНаим
--		,cenp_tab.ЦенГрп

--UNION ALL
--SELECT
--	2 AS Tag			--attributes
--,	1 AS Parent			--buypoint

----,'' AS [buypoint!1!innercode]							--код в Чикаго - для предотвращения повторной выгрузки--
--, NULL 	--код торговой точки--
--, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
--, NULL 		--наименование торговой точки(вывеска)--
--, NULL 		--юридическое наименование--
--, NULL 		--улица, дом, квартира--
--, NULL 		--почтовый индекс--
--, NULL 		--телефон--
--, NULL 		--контактное лицо--
--, NULL 		--код покупателя, которому принадлежит торговая точка--
--, NULL 		--тип ТТ--
--, NULL 		--процент скидки торговой точке--
--, NULL 		--лимит кредита торговой точки в основной валюте системы--
--, NULL 		--срок кредита торговой точки в днях--
--, NULL 		--количество мест рассчета--
--, NULL 		--тип цены для ТТ--
--, NULL 		--обязательность к посещению--
--, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--признак того, что элемент был удален--
----attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
----activityhistory	event
--, NULL  							
--, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
--, NULL 		--дата события--
----skupricetypes		skupricetype
--, NULL 							
--, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
--, NULL		--код типа цены - pricetypes--
--, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
----positions			position
--, NULL 						
--, NULL 		--код позиции--

--FROM 	kln_adk
--INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

--WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
--	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
----	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
--	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

--	and kln_adk.КодАдресаДоставки >4200

UNION ALL
SELECT
	4 AS Tag			--activityhistory
,	1 AS Parent			--buypoint

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки >4200

UNION ALL
SELECT
	6 AS Tag			--skupricetypes
,	1 AS Parent			--buypoint

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки >4200

UNION ALL
SELECT
	8 AS Tag			--positions
,	1 AS Parent			--buypoint

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки >4200

--UNION ALL
--SELECT
--	3 AS Tag			--attribute
--,	2 AS Parent			--attributes

----,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
--, NULL 	--код торговой точки--
--, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
--, NULL 		--наименование торговой точки(вывеска)--
--, NULL 		--юридическое наименование--
--, NULL 		--улица, дом, квартира--
--, NULL 		--почтовый индекс--
--, NULL 		--телефон--
--, NULL 		--контактное лицо--
--, NULL 		--код покупателя, которому принадлежит торговая точка--
--, NULL 		--тип ТТ--
--, NULL 		--процент скидки торговой точке--
--, NULL 		--лимит кредита торговой точки в основной валюте системы--
--, NULL 		--срок кредита торговой точки в днях--
--, NULL 		--количество мест рассчета--
--, NULL 		--тип цены для ТТ--
--, NULL 		--обязательность к посещению--
--, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--признак того, что элемент был удален--
----attributes		attribute
--, NULL  							
--, 0 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
----activityhistory	event
--, NULL  							
--, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
--, NULL 		--дата события--
----skupricetypes		skupricetype
--, NULL 							
--, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
--, NULL		--код типа цены - pricetypes--
--, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
----positions			position
--, NULL 						
--, NULL 		--код позиции--

--FROM 	kln_adk
--INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

--WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
--	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
----	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
--	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

--	and kln_adk.КодАдресаДоставки >4200

UNION ALL
SELECT
	5 AS Tag			--event
,	4 AS Parent			--activityhistory

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, '1' 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки >4200

UNION ALL
SELECT
	7 AS Tag			--skupricetype
,	6 AS Parent			--skupricetypes

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, CAST(cenp_tab.ТовКод AS varchar(50)) 					--код товара(указывать либо код товара либо код классификатора для товара)--
, CAST(cenp_tab.ЦенГрп AS varchar(50))					--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, NULL 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента
LEFT OUTER JOIN cenp_tab ON cenp_tab.КлнКод = kln_adk.КодКлиента
LEFT OUTER JOIN kat_tvr ON kat_tvr.ТовКод = cenp_tab.ТовКод

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)
	and kat_tvr.ТовАрт like '%w%'

	and kln_adk.КодАдресаДоставки >4200

UNION ALL
SELECT
	9 AS Tag			--position
,	8 AS Parent			--positions

--,'' AS [buypoint!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, NULL 	--код торговой точки--
, CAST(kln_adk.КодАдресаДоставки AS varchar(50)) 		--код торговой точки (outercode)--
, NULL 		--наименование торговой точки(вывеска)--
, NULL 		--юридическое наименование--
, NULL 		--улица, дом, квартира--
, NULL 		--почтовый индекс--
, NULL 		--телефон--
, NULL 		--контактное лицо--
, NULL 		--код покупателя, которому принадлежит торговая точка--
, NULL 		--тип ТТ--
, NULL 		--процент скидки торговой точке--
, NULL 		--лимит кредита торговой точки в основной валюте системы--
, NULL 		--срок кредита торговой точки в днях--
, NULL 		--количество мест рассчета--
, NULL 		--тип цены для ТТ--
, NULL 		--обязательность к посещению--
, NULL 		--Канал сбыта--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
--, NULL 		--код классификатора для ТТ - classifiers--
, NULL 		--признак того, что элемент был удален--
--attributes		attribute
--, NULL  							
--, NULL 		--код дополнительного атрибута--
--, NULL 		--название атрибута--
--, NULL 		--тип значения (bool, integer, string, double, datetime)--
--, NULL 		--значение дополнительного атрибута-
--activityhistory	event
, NULL  							
, NULL 		--тип события, 0 - Деактивация, 1 - Активация--
, NULL 		--дата события--
--skupricetypes		skupricetype
, NULL 							
, NULL 		--код товара(указывать либо код товара либо код классификатора для товара)--
, NULL		--код типа цены - pricetypes--
, NULL		--код классификатора для товара (указывать либо код товара либо код классификатора для товара)--
--positions			position
, NULL 						
, '' 		--код позиции--

FROM 	kln_adk
INNER JOIN kat_kln ON kat_kln.КлнКод = kln_adk.КодКлиента

WHERE 	kat_kln.КлнТип in (0,1,2)					--Категория клиента:
	AND NOT kat_kln.КлнАрхив in (1,5)				--из Vw_KPK_Clients_1
--	AND NOT (ISNULL(kat_kln.Архивный,0) = 1)		--Клиент не является архивным
	AND kat_kln.КлнГрпКод = 1						--Код группы клиента (dbo.KAT_GRPK)

	and kln_adk.КодАдресаДоставки >4200

) t7												
ORDER BY 
--		[buypoint!1!producercode!element]
		[buypoint!1!code!element]
		,Tag

FOR XML EXPLICIT,ROOT('buypoints'))  
+CONVERT(NVARCHAR(MAX),'</references>')
)
*/
--/*
UNION ALL

--------------------------------------------------------------------
--Teams - Команды агентов - устаревшее, сейчас только импорт, использовать позиции орг. структуры--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Teams.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT
	1 AS Tag			--team
,null AS Parent			--teams

--,'' AS [team!1!innercode]						--код в Чикаго - для предотвращения повторной выгрузки--
, '1' AS [team!1!code!element]					--код команды--
, 'ОГД' AS [team!1!name!element]				--наименование команды--
, '' AS [team!1!supervisor!element]				--код сотрудника, являющегося супервайзером - employees--
, 0 AS [team!1!deleted!element]					--признак того, что элемент был удален--
/*
FROM 	 
WHERE 	
ORDER BY ;*/

FOR XML EXPLICIT,ROOT('teams'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--Agents - Агенты  - устаревшее, сейчас только импорт, использовать позиции орг. структуры--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Agents.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT
	1 AS Tag			--agent
,null AS Parent			--agents

--,'' AS [agent!1!innercode]					--код в Чикаго - для предотвращения повторной выгрузки--
, CAST(kat_ppl.СотрКод AS varchar(50)) AS [agent!1!code!element]  		 --код агента--
, CAST(kat_ppl.СотрКод AS varchar(50)) AS [agent!1!employeecode!element] --код сотрудника, являющегося агентом - employees--
, '1' AS [agent!1!teamcode!element]				--код команды--
, 0 AS [agent!1!deleted!element]				--признак того, что элемент был удален--

FROM 	kat_ppl 
INNER JOIN kat_pdr on kat_ppl.СотрПодр = kat_pdr.ПдрКод

WHERE
kat_pdr.ПдрНаим like '%Отдел продаж%'
AND kat_pdr.ПдрНаим NOT like '%архив%'
AND kat_pdr.ПдрНаим NOT like '%MARS%'
AND kat_pdr.ПдрНаим NOT like '%Сургут%'

AND kat_pdr.ПдрНаим NOT like '%Безнад%'
AND kat_ppl.СотрФамилия NOT like 'яа%'
AND kat_ppl.СотрФамилия NOT like ''
AND kat_ppl.СотрФамилия NOT like '%вспомогат%'
AND kat_ppl.СотрФамилия NOT like '%сетевой%'

FOR XML EXPLICIT,ROOT('agents'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--Distribchannels - Каналы сбыта--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Distribchannels.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT distinct
	1 AS Tag			--distribchannel
,null AS Parent			--distribchannels

--,'' AS [distribchannel!1!innercode]					--код в Чикаго - для предотвращения повторной выгрузки--
, CASE 
	WHEN  Kat_kdk.[КодДопХар] in (49,50,7,8) THEN '1'-- Екб 49-1Крупный опт #опт, 50-2Опт #опт, Сур 7-1.Крупный опт,8-2.Опт
	WHEN  Kat_kdk.[КодДопХар] in (51,52,53,9,10,11) THEN '2'-- Екб 51-4Региональные сети #сеть, 52-3Федеральные сети #сеть, 53-5Прочие сети(от 3-х магазинов), Сур 9-3.Федеральные сети, 10-4.Региональные сети, 11-5.Прочие сети (от 3-х магазинов)
	WHEN  Kat_kdk.[КодДопХар] in (54,509,12) THEN '3'-- Екб 54-6Розница, 509-9Розница+Опт, Сур 12-6.Розница
	WHEN  Kat_kdk.[КодДопХар] in (55,13) THEN '4'-- Екб 55-7Общепит #хорека, Сур 13-7.Общепит
	WHEN  Kat_kdk.[КодДопХар] in (56,14) THEN '5'-- Екб 56-8Производство, Сур 14-8.Производство
	WHEN  Kat_kdk.[КодДопХар] in (520) THEN '6'-- Екб 520-10Аптека, Сур 
  END AS [distribchannel!1!code!element]	--код канала сбыта--
, CASE 
	WHEN  Kat_kdk.[КодДопХар] in (49,50,7,8) THEN 'Оптовики'-- Екб 49-1Крупный опт #опт, 50-2Опт #опт, Сур 7-1.Крупный опт,8-2.Опт
	WHEN  Kat_kdk.[КодДопХар] in (51,52,53,9,10,11) THEN 'Сети'-- Екб 51-4Региональные сети #сеть, 52-3Федеральные сети #сеть, 53-5Прочие сети(от 3-х магазинов), Сур 9-3.Федеральные сети, 10-4.Региональные сети, 11-5.Прочие сети (от 3-х магазинов)
	WHEN  Kat_kdk.[КодДопХар] in (54,509,12) THEN 'Розница'-- Екб 54-6Розница, 509-9Розница+Опт, Сур 12-6.Розница
	WHEN  Kat_kdk.[КодДопХар] in (55,13) THEN 'Хорека'-- Екб 55-7Общепит #хорека, Сур 13-7.Общепит
	WHEN  Kat_kdk.[КодДопХар] in (56,14) THEN 'Производство'-- Екб 56-8Производство, Сур 14-8.Производство
	WHEN  Kat_kdk.[КодДопХар] in (520) THEN 'Аптека'-- Екб 520-10Аптека, Сур 
  END AS [distribchannel!1!name!element]				--название канала сбыта--
, 0 AS [distribchannel!1!deleted!element]				--признак того, что элемент был удален--

FROM	Kat_kdk 
INNER JOIN Tbl_Kdk_code ON Kat_kdk.КодГрДопХар = Tbl_Kdk_code.Kdk_ID  
WHERE     (Tbl_Kdk_code.Description = 'Тип клиента (канал сбыта)')  

FOR XML EXPLICIT,ROOT('distribchannels'))
+CONVERT(NVARCHAR(MAX),'</references>')
)

UNION ALL

--------------------------------------------------------------------
--Buypointtypes - Типы торговых точек--
--------------------------------------------------------------------
SELECT filename = '\\192.168.1.225\Public\CHICAGO\Buypointtypes.xml'
,A=
CONVERT(NVARCHAR(MAX),
CONVERT(NVARCHAR(MAX),'<?xml version="1.0" encoding="utf-8" ?>') +
CONVERT(NVARCHAR(MAX),'
<references>')
+
(SELECT distinct
	1 AS Tag			--buypointtype
,null AS Parent			--buypointtypes

--,'' AS [buypointtype!1!innercode]					--код в Чикаго - для предотвращения повторной выгрузки--
, CASE 
	WHEN  Kat_kdk.[КодДопХар] in (59) THEN '1'-- 59-1Кэш энд Керри( 8.000м2 )
	WHEN  Kat_kdk.[КодДопХар] in (60) THEN '2'-- 60-2Гипермаркеты( 3.000-15.000м2)
	WHEN  Kat_kdk.[КодДопХар] in (61,63) THEN '3'-- 61-3Супермаркеты( 500-3.000м2), 63-5Универсамы( 500-3.000м2)
	WHEN  Kat_kdk.[КодДопХар] in (62) THEN '4'-- 62-4Минимаркеты( 300-500м2)
	WHEN  Kat_kdk.[КодДопХар] in (64) THEN '5'-- 64-6Дискаунтеры( >100м2)
	WHEN  Kat_kdk.[КодДопХар] in (65) THEN '6'-- 65-7Средние магазины без с/обсл.
  END AS [buypointtype!1!code!element]	--код типа торговой точки--
, CASE 
	WHEN  Kat_kdk.[КодДопХар] in (59) THEN 'Кэш энд Керри'-- 59-1Кэш энд Керри( 8.000м2 )
	WHEN  Kat_kdk.[КодДопХар] in (60) THEN 'Гипермаркет'-- 60-2Гипермаркеты( 3.000-15.000м2)
	WHEN  Kat_kdk.[КодДопХар] in (61,63) THEN 'Супермаркет'-- 61-3Супермаркеты( 500-3.000м2), 63-5Универсамы( 500-3.000м2)
	WHEN  Kat_kdk.[КодДопХар] in (62) THEN 'Минимаркет'-- 62-4Минимаркеты( 300-500м2)
	WHEN  Kat_kdk.[КодДопХар] in (64) THEN 'Дискаунтер'-- 64-6Дискаунтеры( >100м2)
	WHEN  Kat_kdk.[КодДопХар] in (65) THEN 'Средние магазины без самообслуживания'-- 65-7Средние магазины без с/обсл.
  END AS [buypointtype!1!name!element]				--наименование типа--
, 0 AS [buypointtype!1!deleted!element]				--признак того, что элемент был удален--

FROM	Kat_kdk 
INNER JOIN Tbl_Kdk_code ON Kat_kdk.КодГрДопХар = Tbl_Kdk_code.Kdk_ID  
WHERE     (Tbl_Kdk_code.Description = 'Тип торговой точки (формат)')  

FOR XML EXPLICIT,ROOT('buypointtypes'))
+CONVERT(NVARCHAR(MAX),'</references>')
)
/*
--------------------------------------------------------------------
--Countries - Страны--
--------------------------------------------------------------------
/*	Пока не выгружаем
SELECT 

'' AS innercode			--код в Чикаго - для предотвращения повторной выгрузки--
, '' AS code			--код страны--
, '' AS name			--название страны--
, 0 AS deleted			--признак того, что элемент был удален--
*/
/*
FROM 	 
WHERE 	
ORDER BY ;*/
--+
--------------------------------------------------------------------
--Cashregisters - Кассы--
--------------------------------------------------------------------
/*	Пока не выгружаем
SELECT 

'' AS innercode			--код в Чикаго - для предотвращения повторной выгрузки--
, '' AS code			--код кассы--
, '' AS name			--наименование кассы--
, '' AS cashiercode		--код кассира--
, '' AS storecode		--код склада, к которому относится касса--
, 0 AS deleted			--признак того, что элемент был удален--
*/
/*
FROM 	 
WHERE 	
ORDER BY ;*/
+
*/
/*
--------------------------------------------------------------------
--Buyertypes - Типы покупателей--
--------------------------------------------------------------------
-- Не удалось загрузить!!!
(SELECT
	1 AS Tag			--buyertype
,null AS Parent			--buyertypes

--,'' AS [buyertype!1!innercode]					--код в Чикаго - для предотвращения повторной выгрузки--
, code AS [buyertype!1!code!element]				--код типа покупателя--
, producercode AS [buyertype!1!producercode!element]--код типа покупателя--
, name AS [buyertype!1!name!element]				--наименование типа покупателя--
, deleted AS [buyertype!1!deleted!element]			--признак того, что элемент был удален--

FROM (
SELECT 
--'' AS innercode									--код в Чикаго - для предотвращения повторной выгрузки--
  '0' AS code										--код типа покупателя--
, '0' AS producercode								--код типа покупателя--
, 'Не определена' AS name							--наименование типа покупателя--
, 0 AS deleted										--признак того, что элемент был удален--
UNION ALL
SELECT 
--'' AS innercode									--код в Чикаго - для предотвращения повторной выгрузки--
  '1' AS code										--код типа покупателя--
, '1' AS producercode								--код типа покупателя--
, 'Покупатель' AS name								--наименование типа покупателя--
, 0 AS deleted										--признак того, что элемент был удален--
UNION ALL
SELECT 
--'' AS innercode									--код в Чикаго - для предотвращения повторной выгрузки--
  '2' AS code										--код типа покупателя--
, '2' AS producercode								--код типа покупателя--
, 'Покупатель разовый' AS name						--наименование типа покупателя--
, 0 AS deleted										--признак того, что элемент был удален--
UNION ALL
SELECT 
--'' AS innercode									--код в Чикаго - для предотвращения повторной выгрузки--
  '3' AS code										--код типа покупателя--
, '3' AS producercode								--код типа покупателя--
, 'Поставщик товара' AS name						--наименование типа покупателя--
, 0 AS deleted										--признак того, что элемент был удален--
UNION ALL
SELECT 
--'' AS innercode									--код в Чикаго - для предотвращения повторной выгрузки--
  '4' AS code										--код типа покупателя--
, '4' AS producercode								--код типа покупателя--
, 'Поставщик услуг' AS name							--наименование типа покупателя--
, 0 AS deleted										--признак того, что элемент был удален--
UNION ALL
SELECT 
--'' AS innercode									--код в Чикаго - для предотвращения повторной выгрузки--
  '5' AS code										--код типа покупателя--
, '5' AS producercode								--код типа покупателя--
, 'Поставщик проч.' AS name							--наименование типа покупателя--
, 0 AS deleted										--признак того, что элемент был удален--
UNION ALL
SELECT 
--'' AS innercode									--код в Чикаго - для предотвращения повторной выгрузки--
  '6' AS code										--код типа покупателя--
, '6' AS producercode								--код типа покупателя--
, 'Расчеты по налогам' AS name						--наименование типа покупателя--
, 0 AS deleted										--признак того, что элемент был удален--
UNION ALL
SELECT 
--'' AS innercode									--код в Чикаго - для предотвращения повторной выгрузки--
  '7' AS code										--код типа покупателя--
, '7' AS producercode								--код типа покупателя--
, 'Банк' AS name									--наименование типа покупателя--
, 0 AS deleted										--признак того, что элемент был удален--
) t8

FOR XML EXPLICIT,ROOT('buyertypes'))


													-- 0-не определена; чужие(>0): 1-покупатель,
													-- 2-пок.разовый, 3-пост.товара, 4-пост.услуг,
													-- 5-пост.проч., 6-расчеты по налогам, 7-банк;
													-- свои (<0): -1-головная орг., -2-филиал опт.,
													-- -3-филиал(магазин), -4-фил.(торг. агент),
													-- -5-фил.прочие

*/
--*/
GO
/****** Object:  View [dbo].[VIEW13]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW13]
AS
SELECT     dbo.KAT_KLN.КлнКод, dbo.KAT_KLN.КлнНаим, dbo.KAT_PDR.ПдрНаим
FROM         dbo.CLN_DKL LEFT OUTER JOIN
                      dbo.KAT_PPL ON dbo.CLN_DKL.МнджКод = dbo.KAT_PPL.СотрКод RIGHT OUTER JOIN
                      dbo.KAT_KLN ON dbo.CLN_DKL.КлнКод = dbo.KAT_KLN.КлнКод LEFT OUTER JOIN
                      dbo.KAT_PDR ON dbo.KAT_PPL.СотрПодр = dbo.KAT_PDR.ПдрКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 5
               Left = 212
               Bottom = 206
               Right = 365
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 5
               Left = 4
               Bottom = 199
               Right = 155
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_PDR"
            Begin Extent = 
               Top = 26
               Left = 650
               Bottom = 104
               Right = 801
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_PPL"
            Begin Extent = 
               Top = 26
               Left = 435
               Bottom = 177
               Right = 589
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 4
         Width = 284
         Width = 1440
         Width = 1440
         Width = 2340
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW13'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW13'
GO
/****** Object:  View [ef].[tdt]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
CREATE view [ef].[tdt]
as
SELECT [idClient]
      ,[credit]
      ,[debit]
      ,
      (
		SELECT sum(t1.credit) FROM [T_DOLG_TAB] t1 WHERE t1.idClient = t.idClient and t1.dateSaldo<=t.dateSaldo
      ) -
      (
		SELECT sum(t1.debit) FROM [T_DOLG_TAB] t1 WHERE t1.idClient = t.idClient and t1.dateSaldo<=t.dateSaldo
      ) 
      [saldo]
      --,[srokSaldo]
      ,[dateSaldo]     
      ,[sumPeriod]            
      ,
      (
		SELECT sum(t1.credit) FROM [T_DOLG_TAB] t1 WHERE t1.idClient = t.idClient and t1.dateSaldo<=t.dateSaldo
      ) SumCredit
      , 
      (
		SELECT sum(t1.debit) FROM [T_DOLG_TAB] t1 WHERE t1.idClient = t.idClient and t1.dateSaldo<=t.dateSaldo
      ) SumDebit
      ,      
      (
		SELECT sum(t1.[saldo]) FROM [T_DOLG_TAB] t1 WHERE t1.idClient = t.idClient and t1.dateSaldo<=t.dateSaldo
      ) SumSaldo
  FROM [dbo].[T_DOLG_TAB] t
  --WHERE [idClient] = 24
  --order by datesaldo
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetSALOUTLD]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 25-06-2014
-- Description:	Вывод таблицы SALOUTLD (Продажи - табличная часть) для SalesWork поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetSALOUTLD]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	/*declare @zkztb table	(
								ЗкзКод int,
								ЗкзНом varchar(12),
								ОпНаклКод int,
								ПозТов int
							)
	
	insert into @zkztb (ЗкзКод, ЗкзНом, ОпНаклКод, ПозТов) (select 
											zak1.ЗкзКод,
											zak1.ЗкзНом,
											nkl1.ОпНаклКод,
											zt.ПозТов						
										from dbo.LIST_SKL as nkl1
											inner join dbo.list_sf as sf1 on nkl1.НомНаклНашФ = sf1.НомерСФ AND nkl1.АвтокодСФ = sf1.АвтокодСФ
											inner join dbo.zkz_nkl as znnakl1 on nkl1.ОпНакл = znnakl1.Накл
											inner join dbo.LIST_ZKZ as zak1 on zak1.ЗкзКод = znnakl1.ДокКод
											inner join dbo.[ZKZ_TVR] as zt on zak1.ЗкзКод = zt.ПозКодЗкз
											inner join dbo.KAT_TVR as kt on zt.ПозТов = kt.ТовКод
											inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
										where	cast(nkl1.ОпДатаРасч as date) BETWEEN @startDate and @endDate
												and (kv.ПользКод = '749' or kv.ПользКод = '747') 
												and nkl1.ОпСкл in (102, 103, 65, 110, 111)
										group by zak1.ЗкзКод, zak1.ЗкзНом, nkl1.ОпНаклКод, zt.ПозТов		
										) */

	select	
		'VAT' = kt.НДС,
		'LocalCode' = kt.ТовКод,
		'Price' = h.[ОпЦена], --ROUND(h.[ОпКол]*(h.[ОпЦена]/( 1+ ( kt.[НДС]/100 ))),4),
		'Qty' = case
					when nkl.ОпВозврат=0 and nkl.ОпКлнТип=2 and nkl.ОпТип=2 --отгрузка клиенту 
						then 1
					when nkl.ОпВозврат=1 and nkl.ОпТип=1 and nkl.ОпКлнТип=2 -- возврат от клиента
						then -1
  					when nkl.ОпТип=3                                    --списание
  						then 1
		  			when nkl.ОпТип=2 and nkl.ОпКлнТип=4 and nkl.ОпВозврат=0  --расход на другой склад
	  					then 1
  					when nkl.ОпТип=1 and nkl.ОпКлнТип=4 and nkl.ОпВозврат=0  --приход с др склада
  						then -1
	  				else 1
  				end	* SUM(h.ОпКол),
		'Invoice_No' = nkl.ОпНаклКод,
		--'Lot_id' = '',
		'DTLM' = @dt,
		'Status' = '2',
		'Order_No' = (
						select top 1
								case
									when zak1.ЗкзНом like 'bjm-%' then zak1.ЗкзНом
									else zak1.ЗкзКод
								end
						from /*@zkztb as tb */dbo.LIST_SKL as nkl1
											inner join dbo.list_sf as sf1 on nkl1.НомНаклНашФ = sf1.НомерСФ AND nkl1.АвтокодСФ = sf1.АвтокодСФ
											inner join dbo.zkz_nkl as znnakl1 on nkl1.ОпНакл = znnakl1.Накл
											inner join dbo.LIST_ZKZ as zak1 on zak1.ЗкзКод = znnakl1.ДокКод
											inner join dbo.[ZKZ_TVR] as zt on zak1.ЗкзКод = zt.ПозКодЗкз
											--inner join dbo.KAT_TVR as kt1 on zt.ПозТов = kt1.ТовКод
											--inner join KAT_VIDT as kv1 on kt1.ТовВид = kv1.ВидКод
						where nkl1.ОпНаклКод = nkl.ОпНаклКод and zt.ПозТов = kt.ТовКод --kt1.ТовКод = zt.ПозТов
								and cast(nkl1.ОпДатаРасч as date) BETWEEN @startDate and @endDate
								--and (kv1.ПользКод = '749' or kv1.ПользКод = '747') 
								and nkl1.ОпСкл in (102, 103, 65, 110, 111)
					 ),
		'AccPrice' = '0'
		
	from dbo.LIST_SKL as nkl
		inner join dbo.HIST_SKL as h on nkl.ОпНаклКод = h.ОпНаклКод
		inner join @tvr as tv on h.ОпКодТов = tv.ТовКод
		inner join dbo.KAT_TVR as kt on h.ОпКодТов = kt.ТовКод
		--left join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
	where	cast(nkl.ОпДатаРасч as date) BETWEEN @startDate and @endDate
				--and (kv.ПользКод = '749' or kv.ПользКод = '747')
				and nkl.ОпСкл in (102, 103, 65, 110, 111)
				and nkl.ОпНаклКод in (
										select L.ОпНаклКод
										from LIST_SKL as l
											inner join (select nakl.ОпНаклКод
														from dbo.LIST_SKL as nakl
															inner join dbo.list_sf as sf on nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ
															inner join dbo.zkz_nkl as znnakl on nakl.ОпНакл = znnakl.Накл
															inner join dbo.LIST_ZKZ as zak on zak.ЗкзКод = znnakl.ДокКод
														where	cast(nakl.ОпДатаРасч as date) BETWEEN @startDate and @endDate
														group by nakl.ОпНаклКод) as spnkl on spnkl.ОпНаклКод = l.ОпНаклКод
											INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод = H.ОпНаклКод
              								INNER JOIN @tvr as kt on H.ОпКодТов = kt.ТовКод
              								--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
              								left join KAT_KLN as k on k.КлнКод = l.ОпКлн
										where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
												--(kv.ПользКод = '749' or kv.ПользКод = '747') 
												and l.ОпСкл in (102, 103, 65, 110, 111)
												and  --k.КлнГрпКод = 1 and
												((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
												(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
												(l.ОпТип = 3) or										 --списание
												(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
												(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
												(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2)) --исключаем поставщик приход, возврат
										group by L.ОпНаклКод
									)
	group by nkl.ОпНаклКод, kt.ТовКод, kt.НДС, h.[ОпЦена], nkl.ОпВозврат, nkl.ОпКлнТип, nkl.ОпТип, nkl.ОпНакл
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetSALOUTH]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 25-06-2014
-- Description:	Вывод таблицы-списка документов SALOUTH (Фактические продажи) для SalesWork поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetSALOUTH]
	-- Add the parameters for the stored procedure here
	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate = DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)
	
	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	select *
	from
	(
		select 
			'Merch_ID' = '3800001',/*case
							when LEN(cd.МнджКод) = 8 then '38' + convert(varchar,cd.МнджКод)
							when LEN(cd.МнджКод) = 7 then '380' + convert(varchar,cd.МнджКод)
							when LEN(cd.МнджКод) = 6 then '3800' + convert(varchar,cd.МнджКод)
							when LEN(cd.МнджКод) = 5 then '38000' + convert(varchar,cd.МнджКод)
							when LEN(cd.МнджКод) = 4 then '380000' + convert(varchar,cd.МнджКод)
							when LEN(cd.МнджКод) = 3 then '3800000' + convert(varchar,cd.МнджКод)
							when LEN(cd.МнджКод) = 2 then '38000000' + convert(varchar,cd.МнджКод)
							when LEN(cd.МнджКод) = 1 then '380000000' + convert(varchar,cd.МнджКод)
						 end,*/
			'Date' = cast(nakl.ОпДатаРасч as date),
			'Ol_Code' = case when nakl.ОпТип != 3 then convert(varchar(40), nakl.ОпКлн) + '/' + coalesce(convert(varchar(40), ka.КодАдресаДоставки), '0') else '0' end,
			'Order_No'	= (
							select top 1
									case
										when zak1.ЗкзНом like 'bj-%' then '20038' + zak1.ЗкзНом
										else zak1.ЗкзКод
									end
							from dbo.LIST_SKL as nkl
								inner join dbo.list_sf as sf1 on nkl.НомНаклНашФ = sf1.НомерСФ AND nkl.АвтокодСФ = sf1.АвтокодСФ
								inner join dbo.zkz_nkl as znnakl1 on nkl.ОпНакл = znnakl1.Накл
								inner join dbo.LIST_ZKZ as zak1 on zak1.ЗкзКод = znnakl1.ДокКод
							where nkl.ОпНаклКод = nakl.ОпНаклКод
					  ),	
			'Invoice_No' = nakl.ОпНаклКод,
			'Status' = '2',
			'DateTo' = cast(nakl.ОпДатаРасч as date),
			'Param1' = '1',
			'VatCalcMod' = '1', --Цены c НДС
			'PrintCheck' = '0',
			'PrintOrder' = '0',
			'DTLM' = @dt,
			'PrnChkOnly' = '0',
			'Doc_Type' = case
				when nakl.ОпВозврат=0 and nakl.ОпКлнТип=2 and nakl.ОпТип=2 --отгрузка клиенту 
				then 2
				when nakl.ОпВозврат=1 and nakl.ОпТип=1 and nakl.ОпКлнТип=2 -- возврат от клиента
				then 4
  				when nakl.ОпТип=3                                    --списание
  				then 5
  				when nakl.ОпТип=2 and nakl.ОпКлнТип=4 and nakl.ОпВозврат=0  --расход на другой склад
	  			then 8
  				when nakl.ОпТип=1 and nakl.ОпКлнТип=4 and nakl.ОпВозврат=0  --приход с др склада
  				then 8
		  		else ''
  				end,
  			'WAREH_CODE' = --'SE_' + convert(varchar,nakl.ОпСкл)
  				 case 
					when nakl.ОпСкл = 65 then 'SE_T'
					when nakl.ОпСкл = 102 or nakl.ОпСкл = 103 then 'SE_S'
					when nakl.ОпСкл = 110 or nakl.ОпСкл = 111 then 'SE_E'
				 end
		from dbo.LIST_SKL as nakl
					inner join dbo.list_sf as sf on nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ
					/*inner join dbo.zkz_nkl as znnakl on nakl.ОпНакл = znnakl.Накл
					inner join dbo.LIST_ZKZ as zak on zak.ЗкзКод = znnakl.ДокКод*/
					--left join dbo.KAT_KLN kl on nakl.ОпКлн = kl.КлнКод
					--left join dbo.CLN_DKL cd on cd.КлнКод = kl.КлнКод 
					left join dbo.KLN_ADK ka on ka.КодАдресаДоставки = nakl.КодАдрДоставки
					--left join dbo.CLN_DKL cd on cd.КлнКод = nakl.ОпКлн
		where	cast(nakl.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
				nakl.ОпНаклКод in
					(select L.ОпНаклКод
					from dbo.LIST_SKL as l
						INNER JOIN dbo.HIST_SKL as h on l.ОпНаклКод=H.ОпНаклКод
              			INNER JOIN @tvr as kt on H.ОпКодТов=kt.ТовКод
              			--inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
              			left join KAT_KLN as k on k.КлнКод = l.ОпКлн
					where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate
							--(kv.ПользКод = '749' or kv.ПользКод = '747') 
							and l.ОпСкл in (102, 103, 65, 110, 111)
							and  --k.КлнГрпКод = 1 and
							((l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 2) or --отгрузка клиенту
							(l.ОпТип = 1 and l.ОпВозврат = 1 and  l.ОпКлнТип = 2) or --возврат от клиента
							(l.ОпТип = 3) or										 --списание
							(l.ОпТип = 2 and l.ОпВозврат = 0 and l.ОпКлнТип = 4) or  --разход на др. склад
							(l.ОпТип = 1 and l.ОпВозврат = 0 and l.ОпКлнТип = 4)) and not	 --приход с др. склада
							(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2)) --исключаем поставщик приход, возврат
					group by L.ОпНаклКод) 
		--order by nakl.ОпНаклКод asc
	) as tmp
	where tmp.Order_No is not NULL
	order by tmp.Invoice_No asc
		
END
GO
/****** Object:  StoredProcedure [dbo].[SWE_BorjomiGetSALINLD]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		СадыринСВ
-- Create date: 25-06-2014
-- Description:	Вывод таблицы SALINLD (Поступления - табличная часть) для SalesWork поставщик Borjomi
-- =============================================
CREATE PROCEDURE [dbo].[SWE_BorjomiGetSALINLD]
	-- Add the parameters for the stored procedure here
@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@enddate is NULL)
	begin
		set @enddate = DATEADD(DAY,-1,cast(GETDATE() as date))
	end
	
	if(@startdate is NULL)
	begin
		set @startdate =DATEADD(DAY,-14,@enddate)
	end
	
    declare @dt varchar(14)
	set @dt = convert(varchar(20), GETDATE(), 112) +SPACE(1)+ convert(varchar(20), GETDATE(), 108)

	--Таблица товаров Боржоми
	declare @tvr table (
						ТовКод int,
						КодПоставщика varchar(15),
						arh int
						)

	insert into @tvr exec SWE_BorjomiLOCALPRODFULL
	
	select 
		'VAT' = kt.НДС,
		'LocalCode' = kt.ТовКод,
		'Price' =	SUM(h.[ОпЦена]), -- Стоимость ( Без НДС ) ROUND(h.[ОпКол]*(h.[ОпЦена]/( 1+ ( kt.[НДС]/100 ))),4)
		'Qty' = SUM(case
					when nakl.ОпВозврат=0 and nakl.ОпТип=1 --приход от поставщика
						then 1
					when nakl.ОпВозврат=1 and nakl.ОпТип=2 --возврат поставщику
						then -1
  					else 1
  				end * h.ОпКол),
		'Invoice_No' = nakl.ОпНаклКод,
		--'Lot_id' = '',
		'DTLM' = @dt,
		'Status' = '2'
		--,nakl.ОпВозврат,nakl.ОпТип, nakl.ОпКлнТип, nakl.ОпКлн, cl.КлнНаим
	from dbo.LIST_SKL as nakl
			inner join dbo.HIST_SKL as h on nakl.ОпНаклКод = h.ОпНаклКод
			inner join @tvr as tv on h.ОпКодТов = tv.ТовКод
			inner join KAT_TVR as kt on h.ОпКодТов = kt.ТовКод
			--left join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
			--left join KAT_KLN as cl on cl.КлнКод = nakl.ОпКлн
	where	cast(nakl.ОпДатаРасч as date) BETWEEN @startDate and @endDate
			--and (kv.ПользКод = '749' or kv.ПользКод = '747')
			and nakl.ОпНаклКод in
					(select L.ОпНаклКод
					from dbo.LIST_SKL as l
								INNER JOIN dbo.HIST_SKL as h ON l.ОпНаклКод=H.ОпНаклКод
              					INNER JOIN dbo.KAT_TVR as kt on H.ОпКодТов=kt.ТовКод
              					inner join KAT_VIDT as kv on kt.ТовВид = kv.ВидКод
              					left join KAT_KLN as k on k.КлнКод = l.ОпКлн
					where	cast(l.ОпДатаРасч as date) BETWEEN @startDate and @endDate and
							(kv.ПользКод = '749' or kv.ПользКод = '747') 
							and l.ОпСкл in (102, 103, 65, 110, 111)
							and  --k.КлнГрпКод != 1 and
							(((l.ОпВозврат = 0 and l.ОпТип = 1) or (l.ОпВозврат = 1 and l.ОпТип = 2)) and (l.ОпКлнТип = 2))
					group by L.ОпНаклКод
					)
	group by kt.ТовКод,nakl.ОпНаклКод,kt.НДС
	order by 5
END
GO
/****** Object:  View [dbo].[VIEW22_test]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW22_test]
AS
SELECT     dbo.Vw_KPK_TovPrice.ТовКод, dbo.Vw_KPK_TovPrice.Цена AS price1, Vw_KPK_TovPrice_1.Цена AS price2, 
                      dbo.Vw_KPK_TovPrice.ГруппаЦен AS cln1, Vw_KPK_TovPrice_1.ГруппаЦен AS cln2, dbo.KAT_KLN.КлнНаим AS name1, KAT_KLN_1.КлнНаим, 
                      dbo.KAT_TVR.ТовНаим, dbo.Tbl_KPK_Ostatki.Наименование
FROM         dbo.Vw_KPK_TovPrice INNER JOIN
                      dbo.Vw_KPK_TovPrice Vw_KPK_TovPrice_1 ON dbo.Vw_KPK_TovPrice.ТовКод = Vw_KPK_TovPrice_1.ТовКод AND 
                      dbo.Vw_KPK_TovPrice.Цена <> Vw_KPK_TovPrice_1.Цена INNER JOIN
                      dbo.KAT_KLN ON dbo.Vw_KPK_TovPrice.ГруппаЦен = dbo.KAT_KLN.КлнКод INNER JOIN
                      dbo.KAT_KLN KAT_KLN_1 ON Vw_KPK_TovPrice_1.ГруппаЦен = KAT_KLN_1.КлнКод INNER JOIN
                      dbo.KAT_TVR ON dbo.Vw_KPK_TovPrice.ТовКод = dbo.KAT_TVR.ТовКод INNER JOIN
                      dbo.Tbl_KPK_Ostatki ON dbo.KAT_TVR.ТовАрт = dbo.Tbl_KPK_Ostatki.Код
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Vw_KPK_TovPrice"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 99
               Right = 287
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_KPK_TovPrice_1"
            Begin Extent = 
               Top = 6
               Left = 438
               Bottom = 99
               Right = 762
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 35
               Left = 235
               Bottom = 143
               Right = 386
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_KLN_1"
            Begin Extent = 
               Top = 6
               Left = 800
               Bottom = 114
               Right = 951
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 102
               Left = 38
               Bottom = 210
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 2
         End
         Begin Table = "Tbl_KPK_Ostatki"
            Begin Extent = 
               Top = 105
               Left = 521
               Bottom = 213
               Right = 698
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 10
         Width = 284
   ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW22_test'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'      Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 4605
         Width = 4515
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 2805
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 3150
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW22_test'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW22_test'
GO
/****** Object:  View [dbo].[VIEW22]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW22]
AS
SELECT     TOP 100 PERCENT dbo.KAT_KLN.КлнКод
FROM         dbo.KAT_KLN INNER JOIN
                      dbo.CLN_DKL ON dbo.KAT_KLN.КлнКод = dbo.CLN_DKL.КлнКод INNER JOIN
                      dbo.KAT_PPL ON dbo.CLN_DKL.МнджКод = dbo.KAT_PPL.СотрКод INNER JOIN
                      dbo.KAT_PDR ON dbo.KAT_PPL.СотрПодр = dbo.KAT_PDR.ПдрКод
WHERE     (dbo.KAT_PDR.ПдрНаим LIKE '%ООП%')
ORDER BY dbo.KAT_KLN.КлнКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 156
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 6
               Left = 416
               Bottom = 186
               Right = 569
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_PPL"
            Begin Extent = 
               Top = 6
               Left = 607
               Bottom = 160
               Right = 761
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_PDR"
            Begin Extent = 
               Top = 23
               Left = 803
               Bottom = 101
               Right = 954
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 2
         Width = 284
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW22'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW22'
GO
/****** Object:  View [cube].[sharp_t2_fill_hist]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [cube].[sharp_t2_fill_hist]
AS
SELECT hs.ОпКод,
       hs.ОпКодТов,
       k.ТовВид,
       hs.ОпКол,
       hs.ОпТип,
       hs.ОпЦена,
       hs.ОпКодУпак,
       hs.ОпСкл,
       hs.ОпВозвр,
       hs.ОпНакл,
       hs.ОпНаклКод,
       hs.ОпТипКлн,
       hs.ОпТовНом,
       hs.ОпЦена * hs.ОпКол AS ОпСтоим,
       ls.ОпКлн,
       ls.ОпДатаРасч,
-- было до 20141023 VG       ISNULL(dbo.KLN_ADK.КодАдресаДоставки, 0) AS КодАдрДоставки,
       ISNULL(CASE WHEN ls.ОпТип = 1 AND ls.ОпВозврат = 1 THEN ls.КодАдрВозвр ELSE ls.КодАдрДоставки END , 0) AS КодАдрДоставки,
       CONVERT (int,ls.ОпСотр) AS ОпСотр,
       ls.ОпТип AS ОпТипSKL,
       ls.НашаФирма,
       t.ТовВесБрутто * hs.ОпКол AS ВесБрутто,
       t.ТовВесНетто  * hs.ОпКол AS ВесНетто,
       t.Объем        * hs.ОпКол AS Объем,
       zkz_nkl.ДокКод AS КодТТН,
       ''       AS АдресДоставки,
       hsl.PercentLife,
       ws.veterinary_doc,
       hs.АкцияКод,
       hs.ОпКолВозвр AS Вычерк,
       hs.ОпЦена * -1*hs.ОпКолВозвр AS ВычеркСтоим
FROM dbo.LIST_SKL ls  with(nolock)
     INNER JOIN dbo.HIST_SKL hs ON ls.ОпНаклКод = hs.ОпНаклКод
     LEFT OUTER JOIN dbo.KLN_ADK ON dbo.KLN_ADK.КодАдресаДоставки =
    ls.КодАдрДоставки AND dbo.KLN_ADK.КодКлиента =ls.ОпКлн
     LEFT OUTER JOIN dbo.KAT_TVR AS k ON hs.ОпКодТов = k.ТовКод
     LEFT OUTER JOIN wms.sku AS ws ON ws.host_id = k.ТовКод
     LEFT OUTER JOIN dbo.TVR_DEF AS t ON k.ТовКод = t.ТовКод
     LEFT OUTER JOIN cube . sharp_zkz_nkl AS zkz_nkl ON ls.ОпСкл =
     zkz_nkl.Скл AND ls.ОпТип = zkz_nkl.ФлгОпер AND zkz_nkl.Накл =
    ls.ОпНакл
     LEFT OUTER JOIN cube . sharp_hsl AS hsl ON ls.ОпНакл =
     hsl.INVOICENUMBER AND ls.ОпТип = hsl.INVOICETYPE AND
    ls.ОпСкл = hsl.INVOICESKL AND hs.ОпКодТов = hsl.SKU
     /*
WHERE (dbo.LIST_SKL.ОпДатаРасч >=(CASE
                                    WHEN CAST (CAST (getdate() - 61 AS date) AS
                                    datetime) < '20140601' THEN '20140601'
                                    ELSE CAST (CAST (getdate() - 61 AS date) AS
                                    datetime)
                                  END))
                                  */
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "HIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 245
               Bottom = 114
               Right = 424
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 6
               Left = 462
               Bottom = 114
               Right = 648
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "k"
            Begin Extent = 
               Top = 6
               Left = 686
               Bottom = 114
               Right = 846
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ws"
            Begin Extent = 
               Top = 6
               Left = 884
               Bottom = 99
               Right = 1044
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "t"
            Begin Extent = 
               Top = 102
               Left = 884
               Bottom = 210
               Right = 1047
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "zkz_nkl"
            Begin Extent = 
               Top = 114
               Left = 38
               Bottom = 222
               Right = 198
            End
            DisplayFlags = 280
            TopCol' , @level0type=N'SCHEMA',@level0name=N'cube', @level1type=N'VIEW',@level1name=N'sharp_t2_fill_hist'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'umn = 0
         End
         Begin Table = "hsl"
            Begin Extent = 
               Top = 114
               Left = 236
               Bottom = 222
               Right = 399
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'cube', @level1type=N'VIEW',@level1name=N'sharp_t2_fill_hist'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'cube', @level1type=N'VIEW',@level1name=N'sharp_t2_fill_hist'
GO
/****** Object:  View [dbo].[Vw_Ehrmann_copy]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_Ehrmann_copy]
AS
SELECT     TOP 100 PERCENT dbo.wremEhrmann.[Код дистрибутора], dbo.wremEhrmann.Дата, dbo.wremEhrmann.[Код товара], dbo.wremEhrmann.Артикул, 
                      ISNULL(dbo.Vw_Ehrmann_mag.НаимДопХар, dbo.Vw_Ehrmann_name2.НаимДопХар) AS Название, ISNULL(dbo.Vw_Ehrmann_klient.НаимДопХар, 
                      dbo.wremEhrmann.КлнНаим) AS Клиент, dbo.Vw_Ehrmann_kanal.НаимДопХар AS [Канал магазина], 
                      dbo.Vw_Ehrmann_format.НаимДопХар AS [Формат магазина], ISNULL(ISNULL(dbo.Vw_Ehrmann_gorod.НаимДопХар, dbo.KAT_TWN.ГородНаим), 
                      dbo.D_ORG.ГородНаим) AS Город, ISNULL(ISNULL(dbo.Vw_Ehrmann_adress.НаимДопХар, dbo.KLN_ADK.АдресДоставки), 
                      ISNULL(dbo.CLN_DKL.КлнГрузАдрес, dbo.CLN_DKL.КлнАдрес)) AS Адрес, dbo.wremEhrmann.[Продажи (штуки)], '' AS [Продажи (короба)], 
                      '' AS [Продажи (поддоны)], dbo.wremEhrmann.[Продажи (рубли с НДС)], dbo.D_ORG.ГрпСотрНаим, dbo.wremEhrmann.КлнКод
FROM         dbo.Vw_Ehrmann_adress RIGHT OUTER JOIN
                      dbo.wremEhrmann INNER JOIN
                      dbo.D_ORG ON dbo.wremEhrmann.КлнКод = dbo.D_ORG.КлнКод INNER JOIN
                      dbo.CLN_DKL ON dbo.wremEhrmann.КлнКод = dbo.CLN_DKL.КлнКод ON 
                      dbo.Vw_Ehrmann_adress.КодКлн = dbo.wremEhrmann.КлнКод LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_gorod ON dbo.wremEhrmann.КлнКод = dbo.Vw_Ehrmann_gorod.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_klient ON dbo.wremEhrmann.КлнКод = dbo.Vw_Ehrmann_klient.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_name2 ON dbo.wremEhrmann.КлнКод = dbo.Vw_Ehrmann_name2.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_mag ON dbo.wremEhrmann.КлнКод = dbo.Vw_Ehrmann_mag.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_kanal ON dbo.wremEhrmann.КлнКод = dbo.Vw_Ehrmann_kanal.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_format ON dbo.wremEhrmann.КлнКод = dbo.Vw_Ehrmann_format.КодКлн LEFT OUTER JOIN
                      dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода ON 
                      dbo.wremEhrmann.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки LEFT OUTER JOIN
                      dbo.EhrmannKLNnew ON dbo.wremEhrmann.КодКлн_КодАдрДоставки = dbo.EhrmannKLNnew.КодКлн_КодАдрДоставки
ORDER BY dbo.wremEhrmann.Дата
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[39] 4[38] 2[13] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[68] 2[18] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1[56] 3) )"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = -96
      End
      Begin Tables = 
         Begin Table = "Vw_Ehrmann_adress"
            Begin Extent = 
               Top = 90
               Left = 837
               Bottom = 198
               Right = 993
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "wremEhrmann"
            Begin Extent = 
               Top = 0
               Left = 400
               Bottom = 108
               Right = 614
            End
            DisplayFlags = 280
            TopColumn = 8
         End
         Begin Table = "D_ORG"
            Begin Extent = 
               Top = 100
               Left = 6
               Bottom = 208
               Right = 174
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 163
               Left = 175
               Bottom = 271
               Right = 328
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_gorod"
            Begin Extent = 
               Top = 44
               Left = 891
               Bottom = 152
               Right = 1047
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_klient"
            Begin Extent = 
               Top = 0
               Left = 911
               Bottom = 108
               Right = 1067
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_name2"
            Begin Extent = 
               Top = 129
               Left = 461
               Bottom = 237
               Right = 617
     ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_copy'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'       End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_mag"
            Begin Extent = 
               Top = 178
               Left = 621
               Bottom = 286
               Right = 777
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_kanal"
            Begin Extent = 
               Top = 63
               Left = 545
               Bottom = 171
               Right = 701
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_format"
            Begin Extent = 
               Top = 112
               Left = 618
               Bottom = 190
               Right = 769
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 0
               Left = 2
               Bottom = 78
               Right = 153
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 0
               Left = 180
               Bottom = 108
               Right = 366
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "EhrmannKLNnew"
            Begin Extent = 
               Top = 105
               Left = 239
               Bottom = 213
               Right = 453
            End
            DisplayFlags = 280
            TopColumn = 2
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 8010
         Alias = 2520
         Table = 1995
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_copy'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Ehrmann_copy'
GO
/****** Object:  StoredProcedure [dbo].[VkusmanReport]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VkusmanReport] @actualDateStr varchar(20) = NULL AS
declare @lowDate as smalldatetime
declare @highDate as smalldatetime
declare @hlam as int
declare @actualDate as smalldatetime
--Вычисляем диапазон дат соответствующий предыдущей неделе по отношению
-- к текущей дате либо к дате заданной в @actualDateStr
set @actualDate=CONVERT(smalldatetime, ISNULL(@actualDateStr,GETDATE()),104)
set @hlam=@@DATEFIRST+DATEPART(weekday,@actualDate)-1
if @hlam>7 set @hlam=@hlam-7
set @highDate=@actualDate-@hlam
set @highDate=CAST( CONVERT(char(10),@highDate,102) as smalldatetime)
set @lowDate=@highDate-6
set @lowDate='20070606'
set @highDate='20070610'

--Очищаем временную таблицу с данными для отчета, оставшуюся с предыдущего запуска
truncate table wremVkusman

--Вставляем во временную таблицу все данные по отгрузкам Эрманн за указанный период по всем клиентам
INSERT INTO wremVkusman
SELECT	'0000700234' AS [Код дистрибутора],
	dbo.D_DATES.ДатыРасч AS Дата,
	dbo.D_TVR.ТовКод AS [Код товара],
	dbo.D_TVR.ТовНаим AS Артикул, 
	dbo.KAT_KLN.КлнНаим,
	dbo.F_RASH.ОпСтоим AS [Продажи (рубли с НДС)],
	dbo.F_RASH.ОпКол AS [Продажи (штуки)],
	dbo.D_TVR.ТовВидНаим, 
	dbo.KAT_KLN.КлнКод,
	NULL,
	dbo.F_RASH.КодКлн_КодАдрДоставки,
	dbo.D_ORGadk.КодАдрДоставки,
	dbo.D_ORGadk.[ТипКлиента],
	null,
	dbo.F_RASH.НаклСклНаим as Склад

FROM	dbo.D_TVR INNER JOIN
            dbo.F_RASH ON dbo.D_TVR.ТовКод = dbo.F_RASH.ОпКодТов INNER JOIN
            dbo.D_DATES ON dbo.F_RASH.ОпДата = dbo.D_DATES.ДатыКод INNER JOIN
            dbo.KAT_KLN ON dbo.F_RASH.ОпКодКлн = dbo.KAT_KLN.КлнКод INNER JOIN
            dbo.D_ORGadk ON dbo.D_ORGadk.КодКлн_КодАдрДоставки = dbo.F_RASH.КодКлн_КодАдрДоставки
WHERE  
 ( dbo.D_DATES.ДатыРасч BETWEEN @lowDate AND @highDate )
	--AND
	--( (dbo.D_TVR.ТовВидНаим LIKE '%Вкусман%')
	-- OR
	--  (dbo.D_TVR.ТовВидНаим LIKE '%VKUSMAN%') 
	-- OR
	--  (dbo.D_TVR.ТовВидНаим LIKE '%Вкус%') 
 --              )
GO
/****** Object:  View [dbo].[VIEW24]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW24]
AS
SELECT     TOP 100 PERCENT ISNULL(dbo.F_PRIH.ОпДатаРасч, dbo.Solvo_incomings.INCOMING_CLOSE_DATE) AS [DATE], 
                      dbo.F_PRIH.НаклНомер AS LOC_NAKL, REPLICATE('0', 7 - LEN(LTRIM(RTRIM(ISNULL(dbo.F_PRIH.НаклНомер, '0'))))) 
                      + LTRIM(RTRIM(ISNULL(dbo.F_PRIH.НаклНомер, '0'))) + '-1-' + REPLICATE('0', 5 - LEN(LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.НаклСклКод, '0')))))) 
                      + LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.НаклСклКод, '0')))) + '/' + LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.ОпКодТов, '0')))) AS LOC_DETAIL_ID, 
                      SUM(dbo.F_PRIH.ОпКол) AS LOC_QTY, SUM(CAST(ISNULL(dbo.Solvo_incomings.QTY, N'0') AS float)) AS SOLVO_QTY, 
                      SUM(ISNULL(dbo.F_PRIH.ОпКол, 0) - CAST(ISNULL(dbo.Solvo_incomings.QTY, 0) AS float)) AS QTY_DIFF, SUM((ISNULL(dbo.F_PRIH.ОпКол, 0) 
                      - CAST(ISNULL(dbo.Solvo_incomings.QTY, 0) AS float)) * ISNULL(dbo.F_PRIH.ОпСтоим, 0) / ISNULL(dbo.F_PRIH.ОпКол, 1)) AS SUM_DIFF, 
                      dbo.Solvo_incomings.NAME AS SOLVO_SKU, ISNULL(dbo.Solvo_incomings.DOC_NUMBER, N'-') 
                      + N'/' + LTRIM(RTRIM(STR(ISNULL(dbo.Solvo_incomings.SKU_ID, 0)))) AS SOLVO_DETAIL_ID, 
                      CAST(LEFT(ISNULL(dbo.Solvo_incomings.DOC_NUMBER, '0'), ISNULL(CHARINDEX('-', dbo.Solvo_incomings.DOC_NUMBER + '-'), 1) - 1) AS int) 
                      AS SOLVO_NAKL, dbo.F_PRIH.НаклСклКод AS loc_skl_id, dbo.F_PRIH.НаклСклНаим AS loc_skl, dbo.Solvo_incomings.CLIENT AS solvo_client, 
                      dbo.Solvo_incomings.CLIENT_ID AS solvo_client_id, dbo.F_PRIH.ОпДатаРасч AS loc_date, 
                      dbo.Solvo_incomings.INCOMING_CLOSE_DATE AS solvo_date, dbo.Solvo_incomings.UNITS AS solvo_units, 
                      dbo.Solvo_incomings.INCOMING_ID AS solvo_incoming_id, dbo.F_PRIH.ОпКодТов AS loc_sku_id
FROM         dbo.F_PRIH FULL OUTER JOIN
                      dbo.Solvo_incomings ON REPLICATE('0', 7 - LEN(LTRIM(RTRIM(ISNULL(dbo.F_PRIH.НаклНомер, '0'))))) 
                      + LTRIM(RTRIM(ISNULL(dbo.F_PRIH.НаклНомер, '0'))) + '-1-' + REPLICATE('0', 5 - LEN(LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.НаклСклКод, '0')))))) 
                      + LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.НаклСклКод, '0')))) + '/' + LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.ОпКодТов, '0')))) 
                      = ISNULL(dbo.Solvo_incomings.DOC_NUMBER, N'-') + N'/' + LTRIM(RTRIM(STR(ISNULL(dbo.Solvo_incomings.SKU_ID, 0))))
WHERE     (dbo.F_PRIH.ОпВозвр IS NULL OR
                      dbo.F_PRIH.ОпВозвр <> 1) AND (dbo.F_PRIH.НаклСклКод = 40 OR
                      dbo.F_PRIH.НаклСклКод = 42 OR
                      dbo.F_PRIH.НаклСклКод = 48 OR
                      dbo.F_PRIH.НаклСклКод = 49 OR
                      dbo.F_PRIH.НаклСклКод IS NULL)
GROUP BY REPLICATE('0', 7 - LEN(LTRIM(RTRIM(ISNULL(dbo.F_PRIH.НаклНомер, '0'))))) + LTRIM(RTRIM(ISNULL(dbo.F_PRIH.НаклНомер, '0'))) 
                      + '-1-' + REPLICATE('0', 5 - LEN(LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.НаклСклКод, '0')))))) + LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.НаклСклКод, 
                      '0')))) + '/' + LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.ОпКодТов, '0')))), dbo.F_PRIH.ОпКодТов, dbo.F_PRIH.НаклСклНаим, dbo.F_PRIH.ОпДатаРасч, 
                      ISNULL(dbo.Solvo_incomings.DOC_NUMBER, N'-') + N'/' + LTRIM(RTRIM(STR(ISNULL(dbo.Solvo_incomings.SKU_ID, 0)))), 
                      CAST(LEFT(ISNULL(dbo.Solvo_incomings.DOC_NUMBER, '0'), ISNULL(CHARINDEX('-', dbo.Solvo_incomings.DOC_NUMBER + '-'), 1) - 1) AS int), 
                      dbo.Solvo_incomings.NAME, dbo.Solvo_incomings.UNITS, dbo.Solvo_incomings.CLIENT_ID, dbo.Solvo_incomings.CLIENT, 
                      dbo.Solvo_incomings.INCOMING_CLOSE_DATE, dbo.Solvo_incomings.INCOMING_ID, ISNULL(dbo.F_PRIH.ОпДатаРасч, 
                      dbo.Solvo_incomings.INCOMING_CLOSE_DATE), dbo.F_PRIH.НаклНомер, dbo.F_PRIH.НаклСклКод
HAVING      (SUM(ISNULL(dbo.F_PRIH.ОпКол, 0) - CAST(ISNULL(dbo.Solvo_incomings.QTY, 0) AS float)) IS NULL OR
                      SUM(ISNULL(dbo.F_PRIH.ОпКол, 0) - CAST(ISNULL(dbo.Solvo_incomings.QTY, 0) AS float)) > 0.002) AND (ISNULL(dbo.F_PRIH.ОпДатаРасч, 
                      dbo.Solvo_incomings.INCOMING_CLOSE_DATE) BETWEEN '01.03.2007' AND '01.08.2007')
ORDER BY ISNULL(dbo.F_PRIH.ОпДатаРасч, dbo.Solvo_incomings.INCOMING_CLOSE_DATE), dbo.F_PRIH.НаклНомер, 
                      CAST(LEFT(ISNULL(dbo.Solvo_incomings.DOC_NUMBER, '0'), ISNULL(CHARINDEX('-', dbo.Solvo_incomings.DOC_NUMBER + '-'), 1) - 1) AS int), 
                      REPLICATE('0', 7 - LEN(LTRIM(RTRIM(ISNULL(dbo.F_PRIH.НаклНомер, '0'))))) + LTRIM(RTRIM(ISNULL(dbo.F_PRIH.НаклНомер, '0'))) 
                      + '-1-' + REPLICATE('0', 5 - LEN(LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.НаклСклКод, '0')))))) + LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.НаклСклКод, 
                      '0')))) + '/' + LTRIM(RTRIM(STR(ISNULL(dbo.F_PRIH.ОпКодТов, '0')))), ISNULL(dbo.Solvo_incomings.DOC_NUMBER, N'-') 
                      + N'/' + LTRIM(RTRIM(STR(ISNULL(dbo.Solvo_incomings.SKU_ID, 0)))), dbo.F_PRIH.ОпДатаРасч, dbo.Solvo_incomings.INCOMING_CLOSE_DATE
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "F_PRIH"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 205
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Solvo_incomings"
            Begin Extent = 
               Top = 6
               Left = 653
               Bottom = 114
               Right = 871
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 20
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW24'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW24'
GO
/****** Object:  View [dbo].[VIEW4]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW4]
AS
SELECT     dbo.D_ORG.ГлКлнНаим, dbo.D_ORG.СотрФамилияИмя
FROM         dbo.F_DEBET_SROK INNER JOIN
                      dbo.D_ORG ON dbo.F_DEBET_SROK.ДбтКлнКод = dbo.D_ORG.КлнКод
GROUP BY dbo.D_ORG.ГлКлнНаим, dbo.D_ORG.СотрФамилияИмя
HAVING      (dbo.D_ORG.ГлКлнНаим LIKE '%Кировский%')
GO
/****** Object:  View [dbo].[Vw_Cln_Ehrmann]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_Cln_Ehrmann]
AS
SELECT     TOP 100 PERCENT dbo.CLN_DKL.КлнКод, dbo.CLN_DKL.КлнНаим, ISNULL(dbo.Vw_Ehrmann_name2.НаимДопХар, 
                      dbo.Vw_Ehrmann_mag.НаимДопХар) AS Название, ISNULL(dbo.Vw_Ehrmann_klient.НаимДопХар, dbo.CLN_DKL.КлнНаим) AS Клиент, 
                      dbo.Vw_Ehrmann_kanal.НаимДопХар AS [Канал магазина], dbo.Vw_Ehrmann_format.НаимДопХар AS [Формат магазина], 
                      dbo.Vw_Ehrmann_adress.НаимДопХар AS Адрес_Ehrmann, dbo.Vw_Ehrmann_gorod.НаимДопХар AS Город_Ehrmann, 
                      dbo.D_ORG.ГрпСотрНаим AS Отдел, LTRIM(RTRIM(dbo.D_ORG.СотрФамилияИмя)) + ' ' + LTRIM(RTRIM(dbo.D_ORG.СотрОтчество)) 
                      AS Менеджер
FROM         dbo.CLN_DKL INNER JOIN
                      dbo.D_ORG ON dbo.CLN_DKL.КлнКод = dbo.D_ORG.КлнКод LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_gorod ON dbo.CLN_DKL.КлнКод = dbo.Vw_Ehrmann_gorod.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_adress ON dbo.CLN_DKL.КлнКод = dbo.Vw_Ehrmann_adress.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_klient ON dbo.CLN_DKL.КлнКод = dbo.Vw_Ehrmann_klient.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_name2 ON dbo.CLN_DKL.КлнКод = dbo.Vw_Ehrmann_name2.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_mag ON dbo.CLN_DKL.КлнКод = dbo.Vw_Ehrmann_mag.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_kanal ON dbo.CLN_DKL.КлнКод = dbo.Vw_Ehrmann_kanal.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_format ON dbo.CLN_DKL.КлнКод = dbo.Vw_Ehrmann_format.КодКлн
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[30] 2[10] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 6
               Left = 690
               Bottom = 114
               Right = 843
            End
            DisplayFlags = 280
            TopColumn = 3
         End
         Begin Table = "D_ORG"
            Begin Extent = 
               Top = 6
               Left = 484
               Bottom = 114
               Right = 652
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_gorod"
            Begin Extent = 
               Top = 114
               Left = 38
               Bottom = 222
               Right = 194
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_adress"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 194
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_klient"
            Begin Extent = 
               Top = 114
               Left = 232
               Bottom = 222
               Right = 432
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_name2"
            Begin Extent = 
               Top = 114
               Left = 426
               Bottom = 222
               Right = 582
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_mag"
            Begin Extent = 
               Top = 114
               Left = 620
               Bottom = 222
               Right = 776
      ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Cln_Ehrmann'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'      End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_kanal"
            Begin Extent = 
               Top = 114
               Left = 814
               Bottom = 222
               Right = 970
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_format"
            Begin Extent = 
               Top = 222
               Left = 38
               Bottom = 300
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 11
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 6960
         Alias = 2940
         Table = 2385
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Cln_Ehrmann'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_Cln_Ehrmann'
GO
/****** Object:  Table [xmt].[SalesAgentRetail]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[SalesAgentRetail](
	[salesAgentRetailId] [bigint] NOT NULL,
	[salesAgent] [nvarchar](255) NULL,
	[retail] [nvarchar](255) NULL,
 CONSTRAINT [PK_SalesAgentRetail] PRIMARY KEY CLUSTERED 
(
	[salesAgentRetailId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[PrihPlatDays]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[PrihPlatDays]
AS
SELECT     TOP 100 PERCENT ПлатКлнКод AS КлнКод, ПлатДата AS Дата, SUM(ПлатСумма) AS ДневнаяСтоим
FROM         dbo.F_PLATPRIH
WHERE     (ПлатТип < 20)
GROUP BY ПлатКлнКод, ПлатДата
ORDER BY ПлатКлнКод, ПлатДата
GO
/****** Object:  View [dbo].[OPT_KAT_PPL_MARS]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*test*/
CREATE VIEW [dbo].[OPT_KAT_PPL_MARS]
AS
SELECT     СотрФамилия, СотрКод, СотрИмя, СотрОтчество, СотрПодр
FROM         dbo.KAT_PPL
WHERE     (СотрОтчество NOT LIKE '') AND (СотрПодр = 34) OR
                      (СотрПодр = 34) AND (СотрИмя NOT LIKE '') OR
                      (СотрПодр = 34) AND (СотрФамилия NOT LIKE '')
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[22] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -96
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_PPL (dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 192
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'OPT_KAT_PPL_MARS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'OPT_KAT_PPL_MARS'
GO
/****** Object:  View [dbo].[OPT_ALL_KLN_MARS]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OPT_ALL_KLN_MARS]
AS
SELECT     dbo.OPT_TBL_KPK_ADRES_MARS.mng, dbo.OPT_TBL_KPK_ADRES_MARS.owner, dbo.OPT_TBL_KPK_ADRES_MARS.tt, 
                      dbo.OPT_TBL_KPK_ADRES_MARS.owner_tt, a.КлнНаим, a.КлнКод, a.КлнГрпКод, a.КлнАрхив, a.КлнТип, a.КлнФс, b.КлнКод AS Expr1, b.МнджКод, 
                      b.КодГлКлн, b.КодГород, b.КлнНаим AS КлнНаимЮр, b.КлнАдрес, CASE WHEN ltrim(КлнГрузАдрес) 
                      <> '' THEN КлнГрузАдрес WHEN ltrim(КлнГрузАдрес) = '' AND ltrim(КлнАдрес) <> '' THEN КлнАдрес WHEN ltrim(КлнГрузАдрес) = '' AND 
                      ltrim(КлнАдрес) = '' AND ltrim(a.КлнНаим) <> '' THEN a.КлнНаим WHEN ltrim(КлнГрузАдрес) = '' AND ltrim(КлнАдрес) = '' AND ltrim(a.КлнНаим) 
                      = '' THEN 'Не известно' END AS ГрузАдрес
FROM         dbo.OPT_TBL_KPK_ADRES_MARS INNER JOIN
                      dbo.KAT_KLN AS a ON a.КлнКод = dbo.OPT_TBL_KPK_ADRES_MARS.owner LEFT OUTER JOIN
                      dbo.CLN_DKL AS b ON a.КлнКод = b.КлнКод
WHERE     (a.КлнГрпКод = 1)
GO
/****** Object:  View [trend_sales].[WeekSales]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [trend_sales].[WeekSales]
AS
 SELECT L.ОпКлн ,
       L.КодАдрДоставки , 
       H.ОпКодТов, 
       wk.wStart,
       wk.wEnd,	
       wk.wNum,
       wk.yNum,	
       SUM(((1-L.ОпВозврат*2)* H.ОпКол)) as kol --, 
    --   H.ОпЦена as stoim
from pr_euras.dbo.LIST_SKL (NOLOCK) l 
	INNER JOIN pr_euras.dbo.HIST_SKL (NOLOCK) h ON L.ОпНаклКод=H.ОпНаклКод
	--INNER JOIN pr_euras.dbo.KAT_TVR k ON H.ОпКодТов=K.ТовКод
	left join pr_euras.dbo.KAT_PPL (NOLOCK) p on L.ОпСотр=p.СотрКод
	left join PR_Euras.dbo.KAT_PDR (NOLOCK) AS pdrk ON pdrk.ПдрКод = p.СотрПодр
	INNER JOIN weeks wk ON datepart(ww,L.ОпДатаРасч) = wk.wNum AND datepart(yy,L.ОпДатаРасч)= wk.yNum
WHERE (L.ОпКлнТип=2) 
	and pdrk.ПдрКод in (14,15,16,17,20,21,29,55, 4)  -- 20141027 добавил 55 VG
	and (l.ОпСкл in (88,65,92,93,110,111,102,103)) -- (88,75,65,92,93) )
	AND ((L.ОпТип=2 AND L.ОпВозврат=0) or (L.ОпТип=1 AND L.ОпВозврат=1))
	AND L.ОпКлн not in (SELECT id FROM dbo.OurFirms)
	AND L.ОпКлн not in (select kk.КлнКод from pr_euras.dbo.KAT_KLN (NOLOCK) kk where kk.КлнГрпКод in (7,73))
GROUP BY L.ОпКлн ,
       L.КодАдрДоставки , 
       H.ОпКодТов, 
       wk.wStart,
       wk.wEnd,	
       wk.wNum,
       wk.yNum
GO
/****** Object:  UserDefinedFunction [dbo].[Vw_KPK_Units_2]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[Vw_KPK_Units_2] ()
RETURNS TABLE AS  return
select * 
from Vw_KPK_Units_1() t1,dbo.KAT_UPK t2
where t1.ТовУпак=УпакКод
GO
/****** Object:  View [dbo].[Vw_SpisUpakAll]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_SpisUpakAll]
AS
SELECT     TOP 100 PERCENT TVR.ТовКод, Rtrim(TVR.ТовАрт) as ТовАрт, rtrim(TVR.ТовНаим) as ТовНаим, UPK.УпакАббр, UPK.УпакКоэф, UPK.ПоУмолчанию
FROM         dbo.KAT_TVR TVR INNER JOIN
                          (SELECT     KAT_TVR.ТовКод, kat_upk.УпакАббр, kat_upk.УпакКоэф, 'Да' AS ПоУмолчанию
                            FROM          KAT_TVR LEFT JOIN
                                                   kat_upk ON KAT_TVR.ТовУпак = kat_upk.УпакКод
                            UNION
                            SELECT     Vw_SpisUpakDop.ТовКод, kat_upk.УпакАббр, kat_upk.УпакКоэф, 'Нет' AS ПоУмолчанию
                            FROM         Vw_SpisUpakDop LEFT JOIN
                                                  kat_upk ON Vw_SpisUpakDop.ТовУпак = kat_upk.УпакКод) UPK ON TVR.ТовКод = UPK.ТовКод
ORDER BY TVR.ТовАрт, UPK.ПоУмолчанию, - UPK.УпакКоэф
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SpisUpakAll'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SpisUpakAll'
GO
/****** Object:  View [dbo].[Vw_KPK_SBR_Ostatki]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_SBR_Ostatki]
AS
SELECT     dbo.KAT_TVR.ТовКод + 9900000000000 AS ТовКод, dbo.KAT_TVR.ТовНаим, 9900000 AS ТовГрп, 9900000 + dbo.KAT_TVR.ТовВид AS ТовВид, 
                      dbo.KAT_TVR.ТовАрт, dbo.KAT_TVR.ТовЕИ, dbo.KAT_TVR.ТовУпак AS ТовОтгрЕИ, 
                      dbo.Tbl_KPK_Ostatki_SBR.[Остаток на складе] AS ОстатокНаСкладе, dbo.Tbl_KPK_Ostatki_SBR.[Остаток на складе] AS СвободныйОстаток, 
                      0 AS ТоварВпути, 1 AS КодСклада, 'СБР' AS НаимСклада, dbo.Price_Order_Ind(dbo.KAT_TVR.ТовАрт) + 5000 AS ПорядокУDDR, 
                      '999 CБР' AS ТовГрпНаим, 'БР-' + dbo.D_TVR.ТовВидНаим AS ТовВидНаим, dbo.D_TVR.ТовВесБрутто, dbo.KAT_UPK.УпакКоэф
FROM         dbo.Tbl_KPK_Ostatki_SBR INNER JOIN
                      dbo.KAT_TVR ON dbo.Tbl_KPK_Ostatki_SBR.Код = dbo.KAT_TVR.ТовАрт INNER JOIN
                      dbo.D_TVR ON dbo.KAT_TVR.ТовКод = dbo.D_TVR.ТовКод INNER JOIN
                      dbo.KAT_UPK ON dbo.KAT_TVR.ТовУпак = dbo.KAT_UPK.УпакКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Tbl_KPK_Ostatki_SBR"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 215
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 6
               Left = 253
               Bottom = 114
               Right = 404
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_TVR"
            Begin Extent = 
               Top = 114
               Left = 38
               Bottom = 222
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_UPK"
            Begin Extent = 
               Top = 114
               Left = 227
               Bottom = 207
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_SBR_Ostatki'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_SBR_Ostatki'
GO
/****** Object:  View [dbo].[vRaznDates2]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vRaznDates2]
AS
SELECT     dbo.vRaznDates1.ТовКод, dbo.vRaznDates1.ПрихДата, dbo.vRaznDates1.ПрихДатаКод, 
dbo.D_DATES.ДатыРасч AS РасхДата, dbo.vRaznDates1.РасхДатаКод
FROM         dbo.D_DATES INNER JOIN
                      dbo.vRaznDates1 ON dbo.vRaznDates1.РасхДатаКод = dbo.D_DATES.ДатыКод
GO
/****** Object:  View [dbo].[Vw_SIMPLE_MovesALL]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_SIMPLE_MovesALL]
AS
SELECT     TOP 100 PERCENT DATEADD([second], dbo.LIST_SKL.ОпДатаИсх, CONVERT(datetime, '31.12.1969 19:00:00', 104)) AS Дата, 
                      dbo.Vw_SIMPLE_Positions.Идентификатор AS ИДпозиции, dbo.LIST_SKL.ОпКлн AS ИДпоставщика, dbo.HIST_SKL.ОпКол AS Количество, 
                      dbo.HIST_SKL.ОпЦена * dbo.HIST_SKL.ОпКол AS Сумма, dbo.LIST_SKL.ОпТип AS ТипОперации
FROM         dbo.HIST_SKL INNER JOIN
                      dbo.LIST_SKL ON dbo.HIST_SKL.ОпНакл = dbo.LIST_SKL.ОпНакл AND dbo.HIST_SKL.ОпТип = dbo.LIST_SKL.ОпТип AND 
                      dbo.HIST_SKL.ОпСкл = dbo.LIST_SKL.ОпСкл INNER JOIN
                      dbo.KAT_SKL ON dbo.HIST_SKL.ОпСкл = dbo.KAT_SKL.СклКод INNER JOIN
                      dbo.Vw_SIMPLE_Positions ON dbo.HIST_SKL.ОпКодТов = dbo.Vw_SIMPLE_Positions.Идентификатор
WHERE     (dbo.LIST_SKL.ОпТип <> 4)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "HIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_SKL"
            Begin Extent = 
               Top = 6
               Left = 434
               Bottom = 99
               Right = 585
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_SIMPLE_Positions"
            Begin Extent = 
               Top = 6
               Left = 623
               Bottom = 54
               Right = 774
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SIMPLE_MovesALL'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SIMPLE_MovesALL'
GO
/****** Object:  View [dbo].[RashPlatDays_testSrok]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[RashPlatDays_testSrok]
AS
SELECT     TOP 100 PERCENT ПлатКлнКод AS КлнКод, ПлатДата AS Дата, SUM(ПлатСумма) AS ДневнаяСтоим
FROM         dbo.F_PLATRASH_testSrok WHERE ПлатТип<20
GROUP BY ПлатКлнКод, ПлатДата
ORDER BY ПлатКлнКод, ПлатДата
GO
/****** Object:  View [dbo].[RashPlatDays]    Script Date: 08/10/2015 12:56:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[RashPlatDays]
AS
SELECT     TOP 100 PERCENT ПлатКлнКод AS КлнКод, ПлатДата AS Дата, SUM(ПлатСумма) AS ДневнаяСтоим
FROM         dbo.F_PLATRASH WHERE ПлатТип<20
GROUP BY ПлатКлнКод, ПлатДата
ORDER BY ПлатКлнКод, ПлатДата
GO
/****** Object:  View [dbo].[PrihTovDays]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[PrihTovDays]
AS
SELECT     ОпКодКлн AS КлнКод, ОпДата AS Дата, SUM(ОпСтоим) AS ДневнаяСтоим
FROM         dbo.F_PRIH
GROUP BY ОпКодКлн, ОпДата
GO
/****** Object:  View [dbo].[PrihPlatDays_testSrok]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[PrihPlatDays_testSrok]
AS
SELECT     TOP 100 PERCENT ПлатКлнКод AS КлнКод, ПлатДата AS Дата, SUM(ПлатСумма) AS ДневнаяСтоим
FROM         dbo.F_PLATPRIH_testSrok
WHERE     (ПлатТип < 20)
GROUP BY ПлатКлнКод, ПлатДата
ORDER BY ПлатКлнКод, ПлатДата
GO
/****** Object:  View [dbo].[OPT_TEMP_ALL_KLN_MARS]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OPT_TEMP_ALL_KLN_MARS]
AS
SELECT     dbo.OPT_TBL_KPK_ADRES_MARS.mng, dbo.OPT_TBL_KPK_ADRES_MARS.owner, dbo.OPT_TBL_KPK_ADRES_MARS.tt, dbo.OPT_TBL_KPK_ADRES_MARS.owner_tt, 
                      a.КлнНаим, a.КлнКод, a.КлнГрпКод, a.КлнАрхив, a.КлнТип, a.КлнФс, b.КлнКод AS Expr1, b.МнджКод, b.КодГлКлн, b.КодГород, 
                      b.КлнНаим AS КлнНаимЮр, b.КлнАдрес, CASE WHEN ltrim(КлнГрузАдрес) <> '' THEN КлнГрузАдрес WHEN ltrim(КлнГрузАдрес) = '' AND 
                      ltrim(КлнАдрес) <> '' THEN КлнАдрес WHEN ltrim(КлнГрузАдрес) = '' AND ltrim(КлнАдрес) = '' AND ltrim(a.КлнНаим) 
                      <> '' THEN a.КлнНаим WHEN ltrim(КлнГрузАдрес) = '' AND ltrim(КлнАдрес) = '' AND ltrim(a.КлнНаим) 
                      = '' THEN 'Не известно' END AS ГрузАдрес
FROM         dbo.OPT_TBL_KPK_ADRES_MARS INNER JOIN
                      dbo.KAT_KLN AS a ON a.КлнКод = dbo.OPT_TBL_KPK_ADRES_MARS.owner LEFT OUTER JOIN
                      dbo.CLN_DKL AS b ON a.КлнКод = b.КлнКод
GO
/****** Object:  StoredProcedure [dbo].[AllTovarReport]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[AllTovarReport] @actualDateStr varchar(20) = NULL AS
declare @lowDate as smalldatetime
declare @highDate as smalldatetime
declare @hlam as int
declare @actualDate as smalldatetime
--Вычисляем диапазон дат соответствующий предыдущей неделе по отношению
-- к текущей дате либо к дате заданной в @actualDateStr
set @actualDate=CONVERT(smalldatetime, ISNULL(@actualDateStr,GETDATE()),104)
set @hlam=@@DATEFIRST+DATEPART(weekday,@actualDate)-1
if @hlam>7 set @hlam=@hlam-7
set @highDate=@actualDate-@hlam
set @highDate=CAST( CONVERT(char(10),@highDate,102) as smalldatetime)
set @lowDate=@highDate-6
--set @lowDate='20070701'
--set @highDate='20070707'

--Очищаем временную таблицу с данными для отчета, оставшуюся с предыдущего запуска
truncate table wremAllTovar

--Вставляем во временную таблицу все данные по отгрузкам Эрманн за указанный период по всем клиентам
INSERT INTO wremAllTovar
SELECT	'0000700234' AS [Код дистрибутора],
	dbo.D_DATES.ДатыРасч AS Дата,
	dbo.D_TVR.ТовКод AS [Код товара],
	dbo.D_TVR.ТовНаим AS Артикул, 
	dbo.KAT_KLN.КлнНаим,
	dbo.F_RASH.ОпСтоим AS [Продажи (рубли с НДС)],
	dbo.F_RASH.ОпКол AS [Продажи (штуки)],
	dbo.D_TVR.ТовВидНаим, 
	dbo.KAT_KLN.КлнКод,
	NULL,
	dbo.F_RASH.КодКлн_КодАдрДоставки,
	dbo.D_ORGadk.КодАдрДоставки,
	dbo.D_ORGadk.[ТипКлиента],
	null,
	dbo.F_RASH.НаклСклНаим as Склад

FROM	dbo.D_TVR INNER JOIN
            dbo.F_RASH ON dbo.D_TVR.ТовКод = dbo.F_RASH.ОпКодТов INNER JOIN
            dbo.D_DATES ON dbo.F_RASH.ОпДата = dbo.D_DATES.ДатыКод INNER JOIN
            dbo.KAT_KLN ON dbo.F_RASH.ОпКодКлн = dbo.KAT_KLN.КлнКод INNER JOIN
            dbo.D_ORGadk ON dbo.D_ORGadk.КодКлн_КодАдрДоставки = dbo.F_RASH.КодКлн_КодАдрДоставки
WHERE  
 ( dbo.D_DATES.ДатыРасч BETWEEN @lowDate AND @highDate )
--	AND
--	( (dbo.D_TVR.ТовВидНаим LIKE '%EHRMANN%')
--	 OR
--	  (dbo.D_TVR.ТовВидНаим LIKE '%Эрман%') 
--	 OR
--	  (dbo.D_TVR.ТовВидНаим LIKE '%Альпенл%') 
--               )
GO
/****** Object:  View [dbo].[_T_AllDebt]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--ЕФ 24,10,2011
--Представление заменяет таблицу
--skl_with_debt заполняется [GetSKL], которая отрабатывает за значительно короткое время
CREATE VIEW [dbo].[_T_AllDebt]
AS
SELECT skl.ОпКлн [ClientID]
      ,skl.НашаФирма [OurFirmID]
      ,f.Name [OurFirm]
      ,c.МнджКод [ManagerID]
      ,kp.СотрФамилия [Manager]
      ,k.КлнНаим [Client]
      ,pk.КлнНаим [ClientParent]
      ,debt.Сумма [InvoiceSum]
      ,debt.НаклДЗ [InvoiceDebt]
      ,skl.ОпНакл [InvoiceNumber]
      ,skl.ОпДатаРасч [InvoiceDate]
      ,0 [DebtSum]
      ,p.СотрФамилия [InvoiceManager]
      ,DATEDIFF(day, skl.ОпДатаРасч , GETDATE()) [DebtDays]
      ,skl.ОпСотр [InvoiceManagerID]
  FROM 
  dbo.skl_with_debt debt
  inner join dbo.list_skl skl on debt.ОпНаклКод = skl.ОпНаклКод
  inner join dbo.ourfirms f on skl.НашаФирма = f.id
  inner join dbo.kat_kln k on k.КлнКод = skl.ОпКлн
  inner join dbo.cln_dkl c on c.КлнКод = k.КлнКод
  left join dbo.kat_kln pk on pk.КлнКод = c.КодГлКлн
  inner join dbo.kat_ppl p on p.СотрКод = skl.ОпСотр
  inner join dbo.kat_ppl kp on kp.СотрКод = c.МнджКод
  --where 1<>1
  --[dbo].[T_AllDebt]
GO
/****** Object:  Table [xmt].[ChannelItem]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [xmt].[ChannelItem](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[title] [nvarchar](150) NULL,
	[link] [nvarchar](500) NULL,
	[description] [text] NULL,
	[pubDate] [nvarchar](50) NULL,
	[guid] [nvarchar](50) NULL,
	[channelId] [int] NULL,
 CONSTRAINT [PK_ChannelItem] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  View [dbo].[akc_list_kategor]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[akc_list_kategor]
AS
SELECT     at.АкцияКод, al.bit02 AS procent, 
                      CASE WHEN al.Наименование LIKE '%закрепл%' THEN 'Закрепление' WHEN al.Номер LIKE '%Т%' THEN 'Тендер' WHEN al.bit02 = 0 THEN 'По цене' WHEN AVG(at.ПроцентЦена)
                       <= 5 THEN 'до 05%' WHEN AVG(at.ПроцентЦена) <= 15 THEN 'до 15%' WHEN AVG(at.ПроцентЦена) <= 25 THEN 'до 25%' WHEN AVG(at.ПроцентЦена) 
                      <= 35 THEN 'до 35%' ELSE 'свыше 35' END AS 'Категория'
FROM         dbo.akc_tvr AS at INNER JOIN
                      dbo.akc_list_bit AS al ON at.АкцияКод = al.АкцияКод
GROUP BY at.АкцияКод, al.bit02, al.Наименование, al.Номер
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "at"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "al"
            Begin Extent = 
               Top = 6
               Left = 252
               Bottom = 114
               Right = 452
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'akc_list_kategor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'akc_list_kategor'
GO
/****** Object:  View [cube].[D_SOTRNAKLadk]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [cube].[D_SOTRNAKLadk]
AS
SELECT [СотрКод]
      ,[СотрФамилияИмя]
      ,[СотрОтчество]
      ,[ГрпСотрНаим]
      ,[ОпНаклКод]
      ,[КлнНаим]
      ,[ГрпКлнНаим]
      ,[ГородНаим]
      ,[КлнКод]
      ,[КодГлКлн]
      ,[ГлКлнНаим]
      ,[Повтор]
      ,[КодКлн_КодАдрДоставки]
      ,[КодАдрДоставки]
      ,[АдрДоставки]
  FROM [dbo].[D_SOTRNAKLadk]
GO
/****** Object:  View [dbo].[F_PROGNOS_CURR_PRICE]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [dbo].[F_PROGNOS_CURR_PRICE] as
select f.*,
	case
	when ЦенаАльтГрп <> 0 and ЦенаАльтГрп is not null then
		case
			when КлнНаТов<>0 then ЦенаАльтГрп*(1-КлнНаТов/100)
			when КлнНаВид<>0 then ЦенаАльтГрп*(1-КлнНаВид/100)
			when КлнНаГрп<>0 then ЦенаАльтГрп*(1-КлнНаГрп/100)
			else ЦенаАльтГрп
		end
	when ЦенаГрп <> 0 and ЦенаГрп is not null then
		case
			when КлнНаТов<>0 then ЦенаГрп*(1-КлнНаТов/100)
			when КлнНаВид<>0 then ЦенаГрп*(1-КлнНаВид/100)
			when КлнНаГрп<>0 then ЦенаГрп*(1-КлнНаГрп/100)
			else ЦенаГрп
		end
	else
		case
			when КлнНаТов<>0 then ЦенаКат*(1-КлнНаТов/100)
			when КлнНаВид<>0 then ЦенаКат*(1-КлнНаВид/100)
			when КлнНаГрп<>0 then ЦенаКат*(1-КлнНаГрп/100)
			else ЦенаКат
		end
	end 	 as ТекЦена
	,a.ПроцентЦена
	,a.БитовыеФлаги
from F_PROGNOS f
OUTER APPLY dbo.AKC(f.КлнКод,f.ТовГрп,f.ТовВид,f.ТовКод) a
GO
/****** Object:  View [dbo].[F_RASH_UNIQ]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE    VIEW [dbo].[F_RASH_UNIQ]
AS
SELECT    F_RASH.*
	, d_orgadk.ПолнАдресХеш

FROM F_RASH
	inner join d_orgadk on F_RASH.КодКлн_КодАдрДоставки
		 = d_orgadk.КодКлн_КодАдрДоставки
GO
/****** Object:  View [dbo].[F_RASH_TTN]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE       VIEW [dbo].[F_RASH_TTN]
AS
SELECT    F_RASH.*
	, (select top 1 ttn_nkl.КодТТН from ttn_nkl
		where F_RASH.НаклСклКод = ttn_nkl.КодСкл
		and F_RASH.НаклНомер = ttn_nkl.НомДок
		and F_RASH.НаклТип = ttn_nkl.ТипОпер) as КодТТН
	, ( select ttn_dkm.ДатаРасч from ttn_dkm
		where ttn_dkm.КодТТН = (select top 1 ttn_nkl.КодТТН from ttn_nkl
		where F_RASH.НаклСклКод = ttn_nkl.КодСкл
		and F_RASH.НаклНомер = ttn_nkl.НомДок
		and F_RASH.НаклТип = ttn_nkl.ТипОпер)) as ТТН_Дата
-- select top 1 так как по-нормальному накладная только в одной ТТН
-- если больше - то это ошибка
FROM F_RASH
GO
/****** Object:  UserDefinedFunction [dbo].[Get_Cust_Saldo]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE FUNCTION [dbo].[Get_Cust_Saldo] (@Customer_Code_ int)  
RETURNS money AS  
begin
declare @Get_Cust_Saldo_ money
SELECT @Get_Cust_Saldo_=ДбтСальдо
  FROM F_DEBET_SROK
  WHERE ДбтКлнКод=@Customer_Code_
    AND (ДбтДатаРасч IN
           (SELECT MAX(ДбтДатаРасч)
              FROM F_DEBET_SROK
              where ДбтКлнКод=@Customer_Code_))
return @Get_Cust_Saldo_
end
GO
/****** Object:  StoredProcedure [dbo].[getBonus_test_cur]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[getBonus_test_cur]
@dateBeg as varchar(30), @dateEnd as varchar(30)
AS
declare @sales as cursor, @bonTypes as cursor
declare @naklKod bigint, @tvrKod bigint, @tvrGrp bigint, @tvrVid bigint, @klnKod bigint, @dateRash datetime, @bontype int
declare @IsVFetch int, @IsPFetch int

set @sales=cursor local FAST_FORWARD READ_ONLY
for select q.ОпНаклКод, q.ОпКодТов, k.ТовГрп, k.ТовВид, q.ОпКлн, q.ОпДатаРасч from cube.[Hist_skl_bonus_test_MEGAMART] q
    inner join kat_tvr k on k.ТовКод=q.ОпКодТов
    where q.ОпДатаРасч between @dateBeg and @dateEnd

set nocount on;

open @sales

--set @bonTypes=cursor local SCROLL READ_ONLY
--for select id_type from [Бонус].[dbo].[Bon_type]
--open @bonTypes

fetch next from @sales into  @naklKod, @tvrKod, @tvrGrp, @tvrVid, @klnKod, @dateRash
set @IsVFetch = @@FETCH_STATUS
while @IsVFetch = 0
  begin
		--fetch first from @bonTypes into @bontype
		--set @IsPFetch = @@FETCH_STATUS
		--	while @IsPFetch = 0
				begin
					exec dbo.getBonus_test2_optim @naklKod, @tvrKod, @tvrGrp, @tvrVid, @klnKod, @dateRash, 1
					exec dbo.getBonus_test2_optim @naklKod, @tvrKod, @tvrGrp, @tvrVid, @klnKod, @dateRash, 2
					exec dbo.getBonus_test2_optim @naklKod, @tvrKod, @tvrGrp, @tvrVid, @klnKod, @dateRash, 3
					--exec dbo.getBonus_test @naklKod, @tvrKod, @tvrGrp, @tvrVid, @klnKod, @dateRash, @bontype
					--fetch next from @bonTypes into @bontype
					--set @IsPFetch = @@FETCH_STATUS
				end
	fetch next from @sales into  @naklKod, @tvrKod, @tvrGrp, @tvrVid, @klnKod, @dateRash
    set @IsVFetch = @@FETCH_STATUS
  end

--CLOSE @bonTypes;
--DEALLOCATE @bonTypes;

CLOSE @sales;
DEALLOCATE @sales;
GO
/****** Object:  View [cube].[F_Sale]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create view [cube].[F_Sale]
as
SELECT [ОпКод]
      ,[НаклНомер]
      ,[НаклСклКод]
      ,[НаклСклНаим]
      ,[ОпКодКлн]
      ,[НаклСотр]
      ,[ОпДата]
      ,[ОпДатаРасч]
      ,[ОпНаклКод]
      ,[ОпКодТов]
      ,[ОпКол]
      ,[ОпСтоим]
      ,[ОпВесБрутто]
      ,[ОпКолУпак]
      ,[ОпВесНетто]
      ,[ОпВозвр]
      ,[НаклТип]
      ,[НаклКод]
      ,[ОпТип]
      ,[КодКлн_КодАдрДоставки]
      ,[КодАдрДоставки]
  FROM [dbo].[F_Sale]
GO
/****** Object:  View [dbo].[M_RealPrice_prognos]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE    VIEW [dbo].[M_RealPrice_prognos]
AS
/* Вид расчитывает реальную цену товара для клиента с учетом всех скидок 
и групп цен */
select КлнКод, ТовКод, ТовЦенаРСХ, ГрпЦен, ЦенаПоГруппеЦен, ЦенаПоАльтГруппеЦен,
	ТоварнаяСкидка, КлнНаТовар, КлнНаВид, КлнНаГруппу,
	case
		/* Если назначена группа цен */
		when ЦенаПоАльтГруппеЦен <> 0 and ЦенаПоАльтГруппеЦен is not null then
			case
				when КлнНаТовар<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаГруппу/100)
				else ЦенаПоАльтГруппеЦен
			end
		when ЦенаПоГруппеЦен <> 0 and ЦенаПоГруппеЦен is not null then
			case
				when КлнНаТовар<>0 then ЦенаПоГруппеЦен*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ЦенаПоГруппеЦен*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ЦенаПоГруппеЦен*(1-КлнНаГруппу/100)
				else ЦенаПоГруппеЦен
			end
		else
			case
				when КлнНаТовар<>0 then ТовЦенаРСХ*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ТовЦенаРСХ*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ТовЦенаРСХ*(1-КлнНаГруппу/100)
				else ТовЦенаРСХ
			end
	end as РеальнаяЦена
from m_skds
GO
/****** Object:  View [dbo].[M_RealPrice_FULL]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE    VIEW [dbo].[M_RealPrice_FULL]
AS
/* Вид расчитывает реальную цену товара для клиента с учетом всех скидок 
и групп цен */
select КлнКод, ТовКод, ТовЦенаРСХ, ГрпЦен, ЦенаПоГруппеЦен, ЦенаПоАльтГруппеЦен,
	ТоварнаяСкидка, КлнНаТовар, КлнНаВид, КлнНаГруппу,
	case
		/* Если назначена группа цен */
		when ЦенаПоАльтГруппеЦен <> 0 and ЦенаПоАльтГруппеЦен is not null then
			case
				when КлнНаТовар<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаГруппу/100)
				when ТоварнаяСкидка<>0 then ЦенаПоАльтГруппеЦен*(1-ТоварнаяСкидка/100)
				else ЦенаПоАльтГруппеЦен
			end
		when ЦенаПоГруппеЦен <> 0 and ЦенаПоГруппеЦен is not null then
			case
				when КлнНаТовар<>0 then ЦенаПоГруппеЦен*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ЦенаПоГруппеЦен*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ЦенаПоГруппеЦен*(1-КлнНаГруппу/100)
				when ТоварнаяСкидка<>0 then ЦенаПоГруппеЦен*(1-ТоварнаяСкидка/100)
				else ЦенаПоГруппеЦен
			end
		else
			case
				when КлнНаТовар<>0 then ТовЦенаРСХ*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ТовЦенаРСХ*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ТовЦенаРСХ*(1-КлнНаГруппу/100)
				when ТоварнаяСкидка<>0 then ТовЦенаРСХ*(1-ТоварнаяСкидка/100)
				else ТовЦенаРСХ
			end
	end as РеальнаяЦена
from m_skds_FULL
GO
/****** Object:  View [dbo].[M_RealPrice]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE    VIEW [dbo].[M_RealPrice]
AS
/* Вид расчитывает реальную цену товара для клиента с учетом всех скидок 
и групп цен */
select КлнКод, ТовКод, ТовЦенаРСХ, ГрпЦен, ЦенаПоГруппеЦен, ЦенаПоАльтГруппеЦен,
	ТоварнаяСкидка, КлнНаТовар, КлнНаВид, КлнНаГруппу,
	case
		/* Если назначена группа цен */
		when ЦенаПоАльтГруппеЦен <> 0 and ЦенаПоАльтГруппеЦен is not null then
			case
				when КлнНаТовар<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ЦенаПоАльтГруппеЦен*(1-КлнНаГруппу/100)
				when ТоварнаяСкидка<>0 then ЦенаПоАльтГруппеЦен*(1-ТоварнаяСкидка/100)
				else ЦенаПоАльтГруппеЦен
			end
		when ЦенаПоГруппеЦен <> 0 and ЦенаПоГруппеЦен is not null then
			case
				when КлнНаТовар<>0 then ЦенаПоГруппеЦен*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ЦенаПоГруппеЦен*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ЦенаПоГруппеЦен*(1-КлнНаГруппу/100)
				when ТоварнаяСкидка<>0 then ЦенаПоГруппеЦен*(1-ТоварнаяСкидка/100)
				else ЦенаПоГруппеЦен
			end
		else
			case
				when КлнНаТовар<>0 then ТовЦенаРСХ*(1-КлнНаТовар/100)
				when КлнНаВид<>0 then ТовЦенаРСХ*(1-КлнНаВид/100)
				when КлнНаГруппу<>0 then ТовЦенаРСХ*(1-КлнНаГруппу/100)
				when ТоварнаяСкидка<>0 then ТовЦенаРСХ*(1-ТоварнаяСкидка/100)
				else ТовЦенаРСХ
			end
	end as РеальнаяЦена
from m_skds
GO
/****** Object:  View [dbo].[KonturOrderStatPr]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KonturOrderStatPr]
AS
 -----------групировка по статистике  
  SELECT     [Box], [addresMag], COUNT([id]) AS countorder, cast(k.DocumentDate AS Date) AS dd, 0 AS counterror, 0 AS error_order, torgS, NameMag , 0 AS sumStr
FROM         [PR_Euras].[dbo].[KonturOrderStat] k
GROUP BY [Box], [addresMag], cast(k.DocumentDate AS Date), torgS, NameMag
UNION
SELECT     [Box], [addresMag], 0 AS countorder, cast(k.DocumentDate AS Date) AS dd, COUNT(k.id) AS counterror, 0 AS error_order, torgS, NameMag, 0 AS sumStr
FROM         [PR_Euras].[dbo].[KonturOrderStat] AS k LEFT OUTER JOIN
                      [PR_Euras].edi.Kontur_error AS er ON k.id = er.[order]
WHERE     er.[order] IS NOT NULL
GROUP BY [Box], [addresMag], cast(k.DocumentDate AS Date), torgS, NameMag
UNION
SELECT     [Box], [addresMag], countorder, dd, counterror, count(ее.[order]) AS error_order, torgS, NameMag, 0 AS sumStr
FROM         (SELECT DISTINCT [Box], [addresMag], 0 AS countorder, cast(k.DocumentDate AS Date) AS dd, 0 AS counterror, er.[order], k.torgS, NameMag
                       FROM          [PR_Euras].[dbo].[KonturOrderStat] AS k LEFT OUTER JOIN
                                              [PR_Euras].edi.Kontur_error AS er ON k.id = er.[order]
                       WHERE      er.[order] IS NOT NULL) ее
GROUP BY [Box], [addresMag], dd, counterror, countorder, torgS, NameMag
--сумма загруженных строк
UNION
SELECT     [Box], [addresMag]
, COUNT([id]) AS countorder,
 cast(k.DocumentDate AS Date) AS dd, 0 AS counterror, 0 AS error_order, torgS, NameMag,sum(cast([colstrZ] as int)) sumStr
FROM  [PR_Euras].[dbo].[KonturOrderStat] k
 GROUP BY [Box], [addresMag], cast(k.DocumentDate AS Date), torgS, NameMag
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1830
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KonturOrderStatPr'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KonturOrderStatPr'
GO
/****** Object:  StoredProcedure [dbo].[PlatRaznoska]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[PlatRaznoska] AS
declare @Prih as cursor 
declare @PClnCode int, @PrihDate bigint, @PrihKol money, @PrihDateReal datetime, @PType tinyint
declare @Rash as cursor
declare @RClnCode int, @RashDate bigint, @RashKol money, @RashDateReal datetime,@RType tinyint
declare @CurPrih money, @CurRash money
declare @IsPrihFetch decimal, @IsRashFetch decimal, @IsPOFetch decimal
declare @CurCln int,@CurDate bigint,@CurDateReal datetime
declare @IsFirst integer
declare @PrihOnly as cursor 
declare @POClnCode int, @PODate bigint, @POKol money, @PODateReal datetime,@POType money
declare @LastPrihDateReal datetime, @LastRashDateReal datetime, @OperDate bigint
declare @LastPrihDate bigint, @LastRashDate bigint
declare @Razn money, @FDate datetime,@LDate datetime,@ODate datetime 

set @Prih=cursor for select f_stream.Клн,Кол,
Дата,d_dates.ДатыРасч,Тип
from (f_stream join ClnTmp on f_stream.Клн=Clntmp.Клн)
join d_dates on f_stream.Дата=d_dates.ДатыКод 
where Кол>0 and (Тип=2 or Тип=4 or Тип=6)
order by f_stream.Клн,d_dates.ДатыРасч,Тип

set @Rash=cursor for SELECT f_stream.Клн,Кол,
Дата,d_dates.ДатыРасч,Тип
--выборка прихода по клиенту
FROM f_stream join d_dates on f_stream.Дата=d_dates.ДатыКод
where Клн<>0 and (Тип=1 or Тип=3 or Тип=5)
ORDER BY f_stream.Клн, d_dates.ДатыРасч,Тип

set @CurPrih=0
set @CurRash=0
set @CurCln=0
set @CurDateReal=CONVERT(datetime,CAST(DATEPART(d,GETDATE()) as char(2))+'.'+CAST(DATEPART(m,GETDATE()) as char(2))+'.'+CAST(DATEPART(yy,GETDATE()) as char(4)),104)
if ((select ДатыКод from D_DATES where ДатыРасч=@CurDateReal) IS NULL)
  begin
    insert D_DATES (ДатыРасч) VALUES (@CurDateReal)
  end
set @CurDate=(select ДатыКод from D_DATES where ДатыРасч=@CurDateReal)   
--цикл по расходу
open @Rash
fetch next from @Rash into @RClnCode, @RashKol, @RashDate,@RashDateReal,@RType
set @IsRashFetch = @@FETCH_STATUS
set @IsFirst=0
set @CurRash=@RashKol
while @IsRashFetch = 0
  begin
    set @LastRashDateReal=@RashDateReal
    set @LastRashDate=@RashDate
    if @CurCln=@RClnCode
--это текущий клиент
     begin
Prih_Loop:
        if @CurRash>=@CurPrih
--приход не покрывает расход-в тек идет приход дата сальдо приход
          begin
             if (@CurRash<>0 or @CurPrih<>0)
               begin
                 set @Razn=@CurPrih
                 set @FDate=@LastRashDateReal
                 set @LDate=@LastPrihDateReal
                 set @ODate=@LastPrihDateReal
                 if (@Razn<>0) insert F_SROK (Клн,Разнесено,ДатаНачало,ДатаКонец,ДатаОпер) VALUES (@CurCln,@Razn,@FDate,@LDate,@ODate)
               end
             set @CurRash=@CurRash-@CurPrih
--перейдем к след приходу
             fetch next from @Prih into @PClnCode,@PrihKol, @PrihDate, @PrihDateReal,@PType
             set @IsPrihFetch=@@FETCH_STATUS
             if @IsPrihFetch=0
--есть след приход-переход к его обработке
               begin
                 set @CurPrih=@PrihKol
                 set @LastPrihDateReal=@PrihDateReal
                 set @LastPrihDate=@PrihDate
                 goto Prih_Loop
               end
             else
               begin
--так как прихода нету (кончился) в приход ставим 0
--неопл отгрузку просто опускаем
                 set @CurPrih=0
--                 if (@CurRash<>0 or @CurPrih<>0)
--                   begin
--                     set @Razn=@CurRash
--                     set @FDate=@CurDateReal
--                     set @LDate=@LastRashDateReal
--                     set @ODate=@CurDateReal
--                     if (@Razn<>0) insert F_SROK (Клн,Разнесено,ДатаНачало,ДатаКонец,ДатаОпер) VALUES (@CurCln,@Razn,@FDate,@LDate,@ODate)
--                   end            
                 set @PrihDateReal=NULL
               end
          end
        else
--приход больше расхода (аванс)
         begin
--приход ушел не полностью             
            if (@CurRash<>0)
              begin
                set @Razn=@CurRash
                set @FDate=@LastRashDateReal
                set @LDate=@LastPrihDateReal
                set @ODate=@LastPrihDateReal
                if (@Razn<>0) insert F_SROK (Клн,Разнесено,ДатаНачало,ДатаКонец,ДатаОпер) VALUES (@CurCln,@Razn,@FDate,@LDate,@ODate)
             end
            set @CurPrih=@CurPrih - @CurRash
          end
     end
   else
--новый клиент
          begin
--остался ли неотгр платеж по предыд клиенту
            if (@CurPrih<>0)
              begin
                set @Razn=@CurPrih
                set @FDate=@LastPrihDateReal
                set @LDate=@CurDateReal 
                set @ODate=@LastPrihDateReal   
                if (@Razn<>0) insert F_SROK (Клн,Разнесено,ДатаНачало,ДатаКонец,ДатаОпер) VALUES (@CurCln,@Razn,@FDate,@LDate,@ODate)
              end 
            set @CurCln = @RClnCode
            set @CurPrih=0
--не смог выполнить параметризованный курсор - пришлось через доптаблицу передать параметр
            delete from ClnTmp
            exec InsertClnTmp @CurCln 
--закроем курсор прихода если есть и откроем новый
            if CURSOR_STATUS ('variable','@Prih')>=0
              begin
                close @Prih
              end
            open @Prih
            fetch  next from @Prih into @PClnCode,@PrihKol, @PrihDate, @PrihDateReal,@PType
            set @IsPrihFetch=@@FETCH_STATUS
            if @IsPrihFetch=0
              begin
                 set @CurPrih=@PrihKol
                 set @LastPrihDateReal=@PrihDateReal
                 set @LastPrihDate=@PrihDate
                 goto Prih_Loop
               end
             else
               begin
--случай когда вообще нету оплаты просто опускаем
              set @CurPrih=0
--              if (@CurRash<>0 or @CurPrih<>0)
--                begin
--                  set @Razn=@CurRash
--                  set @FDate=@CurDateReal
--                  set @LDate=@LastRashDateReal
--                  set @ODate=@CurDateReal
--                  if (@Razn<>0) insert F_SROK (Клн,Разнесено,ДатаНачало,ДатаКонец,ДатаОпер) VALUES (@CurCln,@Razn,@FDate,@LDate,@ODate)
--                end 
              set @PrihDateReal=NULL
--признак что прихода таки нет
              set @CurCln=0
           end
      end
      fetch next from @Rash into @RClnCode, @RashKol, @RashDate, @RashDateReal,@RType
      set @IsRashFetch = @@FETCH_STATUS
      set @CurRash=@RashKol
 end
--остался ли неотгр платеж по предыд клиенту
 if (@CurPrih<>0)
   begin
      set @Razn=@CurPrih
      set @FDate=@LastPrihDateReal
      set @LDate=@CurDateReal 
      set @ODate=@LastPrihDateReal
      if (@Razn<>0) insert F_SROK (Клн,Разнесено,ДатаНачало,ДатаКонец,ДатаОпер) VALUES (@CurCln,@Razn,@FDate,@LDate,@ODate)
--вроде так?
      set @CurPrih=0
   end 
--случай когда один приход-кол по приходу, расх дата=приходной, а приходная-текущей
--есть оплата а товара нету Остаток=2
set @PrihOnly=cursor for select f_stream.Клн,Кол,
Дата,d_dates.ДатыРасч,Тип
from (f_stream join v_ClnPrihOnly on f_stream.Клн=v_ClnPrihOnly.Клн)
join d_dates on f_stream.Дата=d_dates.ДатыКод 
where Кол>0  and (Тип=2 or Тип=4 or Тип=6)
order by f_stream.Клн,d_dates.ДатыРасч,Тип
open @PrihOnly
fetch next from @PrihOnly into @POClnCode,@POKol,@PODate,@PODateReal,@POType
set @IsPOFetch = @@FETCH_STATUS
while @IsPOFetch = 0
  begin
     set @Razn=@POKol
     set @FDate=@PODateReal
     set @LDate=@CurDateReal 
     set @ODate=@CurDateReal
     if (@Razn<>0) insert F_SROK (Клн,Разнесено,ДатаНачало,ДатаКонец,ДатаОпер) VALUES (@POClnCode,@Razn,@FDate,@LDate,@ODate)
     fetch next from @PrihOnly into @POClnCode,@POKol,@PODate,@PODateReal,@POType
     set @IsPOFetch = @@FETCH_STATUS
  end
GO
/****** Object:  View [dbo].[pcn_v]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[pcn_v]
AS
SELECT     dbo.list_pcn.pc1_pcn, dbo.list_pcn.pc1_dat_normal, dbo.list_pcn.pc1_dfx_normal, dbo.KAT_TVR.ТовНаим, dbo.hist_pcn.pc2_ceno1, dbo.hist_pcn.pc2_ceno3, 
                      dbo.hist_pcn.pc2_ceno4, dbo.hist_pcn.pc2_ceno5, dbo.hist_pcn.pc2_cenn1, dbo.hist_pcn.pc2_cenn2, dbo.hist_pcn.pc2_cenn3, dbo.hist_pcn.pc2_cenn4, 
                      dbo.hist_pcn.hist_pcnId
FROM         dbo.hist_pcn LEFT OUTER JOIN
                      dbo.KAT_TVR ON dbo.hist_pcn.pc2_tvr = dbo.KAT_TVR.ТовКод LEFT OUTER JOIN
                      dbo.list_pcn ON dbo.hist_pcn.c2_pcn = dbo.list_pcn.pc1_pcn
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "list_pcn"
            Begin Extent = 
               Top = 6
               Left = 233
               Bottom = 234
               Right = 390
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "hist_pcn"
            Begin Extent = 
               Top = 116
               Left = 467
               Bottom = 339
               Right = 624
            End
            DisplayFlags = 280
            TopColumn = 4
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 50
               Left = 741
               Bottom = 158
               Right = 892
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 13
         Width = 284
         Width = 1500
         Width = 2280
         Width = 1500
         Width = 3015
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'pcn_v'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'pcn_v'
GO
/****** Object:  View [dbo].[M_RealPriceNDS]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE     VIEW [dbo].[M_RealPriceNDS]
AS
select m_RealPrice.*,
	kat_tvr.НДС as НДС,
	kat_tvr.ТовАрт as ТовАрт,	 
	kat_tvr.ТовГрп as ТовГрп,
	(case 
		when (БитовыеФлаги & 2) = 2 then m_RealPrice.РеальнаяЦена*(1+kat_tvr.НДС/100)*(1-a.ПроцентЦена/100) 
		when (БитовыеФлаги & 2) = 0 then a.ПроцентЦена --'фиксированная цена'
		else m_RealPrice.РеальнаяЦена*(1+kat_tvr.НДС/100)
	end) 
	
		as ЦенаНДС,
	kat_tvr.ТовВид 	
	
		
from m_RealPrice
	inner join kat_tvr on kat_tvr.товКод = m_RealPrice.ТовКод
	OUTER APPLY dbo.AKC(КлнКод,kat_tvr.ТовГрп,kat_tvr.ТовВид,kat_tvr.ТовКод) a
where (БФ & 1 ) <> 1 --архивный
and (БФ & 524288) <> 524288 -- запрет продаж
GO
/****** Object:  View [dbo].[OPT_TEMP_TBL_KPK_ADRES_MARS]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OPT_TEMP_TBL_KPK_ADRES_MARS]
AS
SELECT DISTINCT 
                      [ФИО менеджера] AS mng, SUBSTRING([Код адреса], 0, CHARINDEX('/', [Код адреса])) AS owner, SUBSTRING([Код адреса], CHARINDEX('/', 
                      [Код адреса]) + 1, LEN([Код адреса])) AS tt, [Код адреса] AS owner_tt
FROM         dbo.Tbl_KPK_Address
WHERE     ([ФИО менеджера] IN
                          (SELECT     СотрКод
                            FROM          dbo.OPT_KAT_PPL_MARS))
GO
/****** Object:  View [dbo].[OPT_TEMP_LIST_ZKZ_MARS]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OPT_TEMP_LIST_ZKZ_MARS]
AS
SELECT     ЗкзКод, ЗкзНом, ЗкзКлн, ЗкзДатаРасч, CAST(ЗкзСумма AS money) AS ЗкзСумм, ЗкзМндж, ЗкзДатаЗавершРасч
FROM         dbo.LIST_ZKZ
WHERE     (ЗкзКлн IN
                          (SELECT DISTINCT owner
                            FROM          dbo.OPT_TBL_KPK_ADRES_MARS)) AND (ЗкзМндж IN
                          (SELECT DISTINCT СотрКод
                            FROM          dbo.OPT_KAT_PPL_MARS AS _KAT_PPL_MARS_1))
GO
/****** Object:  View [dbo].[M_RealPrice_wo_NDS]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[M_RealPrice_wo_NDS]
AS
select r.*,
	k.НДС as НДС,
	k.ТовАрт as ТовАрт,	 
	k.ТовГрп as ТовГрп,
	a.ПроцентЦена,
		(case 
		 when (БитовыеФлаги & 2) = 0 then a.ПроцентЦена --'фиксированная цена'
		 else (case when (r.РеальнаяЦена>k.ТовЦенаУчет * 10) AND (r.РеальнаяЦена > 0)
                    then k.ТовЦенаУчет else r.РеальнаяЦена end)*(1+k.НДС/100)*(1-isnull(a.ПроцентЦена,0)/100)
	     end) as Цена_Акции_НДС,
		(case
		 when (БитовыеФлаги & 2) = 0 then a.ПроцентЦена --'фиксированная цена'
		 else (case when (r.РеальнаяЦена>k.ТовЦенаУчет * 10) AND (r.РеальнаяЦена > 0)
                    then k.ТовЦенаУчет else r.РеальнаяЦена end)*(1+k.НДС/100)
	     end) as Цена_НДС,
		(case 
		 when (БитовыеФлаги & 2) = 0 then a.ПроцентЦена --'фиксированная цена'
		 else (case when (r.РеальнаяЦена>k.ТовЦенаУчет * 10) AND (r.РеальнаяЦена > 0)
                    then k.ТовЦенаУчет else r.РеальнаяЦена end)*(1-isnull(a.ПроцентЦена,0)/100)
	     end) as Цена_Акции,
		(case 
		 when (БитовыеФлаги & 2) = 0 then a.ПроцентЦена --'фиксированная цена'
		 else (case when (r.РеальнаяЦена>k.ТовЦенаУчет * 10) AND (r.РеальнаяЦена > 0)
                    then k.ТовЦенаУчет else r.РеальнаяЦена end)
		 end) as Цена,
	k.ТовВид
from m_RealPrice_prognos r
inner join kat_tvr k on k.товКод = r.ТовКод
OUTER APPLY dbo.AKC(КлнКод,k.ТовГрп,k.ТовВид,k.ТовКод) a
where (БФ & 1 ) <> 1 --архивный
and (БФ & 524288) <> 524288 -- запрет продаж
GO
/****** Object:  View [dbo].[M_RashCurrentPrice]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE         VIEW [dbo].[M_RashCurrentPrice]
AS

SELECT  F_RASH.ОпКодКлн, F_RASH.ОпКодТов, F_RASH.ОпСтоим,
	F_RASH.ОпСтоим as СуммаПродажи,
	F_RASH.ОпДатаРасч,
	F_RASH.ОпНаклКод,
	F_RASH.НаклСклКод,
	F_RASH.ОпКол,
	(select top 1 РеальнаяЦена from m_RealPrice
	where m_RealPrice.КлнКод=F_RASH.ОпКодКлн
		and m_RealPrice.ТовКод=F_RASH.ОпКодТов)*F_RASH.ОпКол 
	as СуммаПоТекЦене

FROM F_RASH
GO
/****** Object:  View [dbo].[KonturOrderStatDay]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KonturOrderStatDay]
AS
SELECT     TOP (100) PERCENT Box, addresMag, SUM(countorder) AS countorder, dd, SUM(counterror) AS counterror, SUM(error_order) AS error_order, torgS, NameMag, 
                      SUM(sumStr) AS sumstr
FROM         dbo.KonturOrderStatPr
WHERE     (dd BETWEEN DATEADD(day, - 5, GETDATE()) AND GETDATE())
GROUP BY Box, addresMag, dd, torgS, NameMag
ORDER BY dd
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KonturOrderStatPr"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 223
            End
            DisplayFlags = 280
            TopColumn = 5
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 10
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 2790
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KonturOrderStatDay'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'KonturOrderStatDay'
GO
/****** Object:  StoredProcedure [dbo].[DebtProccessor]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[DebtProccessor]
AS
-----------------------------------------------------------------
-- DebtProccessor 2010/11/13 v.4
--
-- 2010/05/19, v.1
-- Титаренко В. v.titarenko@gmail.com, +7 950 635 02 06
--
-- Процедура первичного формирования таблицы задолженности по накладным( T_AllDebt ).
-- Эта процедура ПОЛНОСТЬЮ пересчитывает все долги по каждому контрагенту, за которым числится 
-- положительное сальдо > 1 руб. на текущую дату ( данные берет из VIEW vt.T_AllDebit ).
-- ( На момент написания процедуры процесс обработки 424 000 накладных ( в M_TRANS ) занимает
-- 1час 10мин. Нагрузка на процессоры виртуальной машины TS99 + MS SQL 2008 ~100%. )
--
--	Необходимые таблицы и представления:
--	1. VIEW vt.T_AllDebit: расчет ДЗ из таблицы M_TRANS с разноской по Нашим Фирмам ( платежи клиентов )
--		( расчитывается в витрине )
--	2. Table dbo.T_ClientDebt: общий долг по клиенту с разноской по Нашим Фирмам.
--		( заполняется этой процедурой )
--	3. Table dbo.T_AllDebt: таблица, в которой хранятся данные отчета, результат.
--		( заполняется этой процедурой на основе dbo.T_ClientDebt )
--
--	На базе этого отчета строится детализация по задолженности для СЭБ.
--
--
-- 2010/05/21, v.2
-- Алгоритм оптимизирован:
--  - убрал все лишние операторы JOIN;
--  - добавил поля в таблицу [dbo].[T_AllDebt];
--  - создал отдельную таблицу отношений "Клиент-ДЗ" ( T_ClientDebt ), которая наполняется из View vt.T_AllDebit.
-- 
-- Процедура обновления данных в таблице T_AllDebt занимает 10 мин. 30 сек.
--
-- 2010/08/04, v.3 Титаренко В.
-- mod1: Изменил обработчик для отображения признака закрытого клиента ( X ) в наименовании
--
-- 2010/11/13, v.4 Титаренко В.
-- добавил DROP/CREATE для таблиц обработчика ( T_AllDebt и T_ClientDebt )
-----------------------------------------------------------------


--2011/03/31, Евгений Федяков
--
--Попарвка в коде, комментарий в коде 
--use PR_Euras;

SET NOCOUNT ON

/*IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[T_ClientDebt]') AND type in (N'U'))
DROP TABLE [dbo].[T_ClientDebt];
GO

CREATE TABLE [dbo].[T_ClientDebt](
	[ClientID] [int] NULL,
	[OurFirmID] [int] NULL,	
	[Debt] [money] NULL	
) ON [PRIMARY]

GO*/


-- Создать таблицу для размещения данных
--use PR_Euras;
/*IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[T_AllDebt]') AND type in (N'U'))
DROP TABLE [dbo].[T_AllDebt];
GO

CREATE TABLE [dbo].[T_AllDebt](
	[ClientID] [int] NULL,				-- Клиент, Автокод
	[OurFirmID] [int] NULL,				-- Наша Фирма, Автокод
	[OurFirm] nvarchar(200) NULL,		-- Наша Фирма
	[ManagerID] [int] NULL,				-- Менеджер, Автокод
	[Manager] nvarchar(200) NULL,		-- Менеджер Клиента
	[Client] nvarchar(250) NULL,		-- Клиент
	[ClientParent] nvarchar(250) NULL,	-- Головной клиент
	[InvoiceSum] [money] NULL,			-- Сумма по Накладной
	[InvoiceDebt] [money] NULL,			-- Долг по Накладной
	[InvoiceNumber] [int] NULL,			-- Номер накладной
	[InvoiceDate] [datetime] NULL,		-- Дата накладной
	[DebtSum] [money] NULL,				-- Остаточный долг ( ДЛЯ КОНТРОЛЯ РАСЧЕТОВ )
	[InvoiceManager] nvarchar(250) NULL,-- Менеджер из накладной	
	[DebtDays] [int] NULL				-- Дней долга
) ON [PRIMARY]
GO
*/
DECLARE @DebtSum money;			-- Общий долг по Клиенту

-- Блок параметров для курсоров
DECLARE @OurFirmID int;			-- Наша фирма, Автокод 
DECLARE @OurFirm nvarchar(250);	-- Наша фирма, Наименование
DECLARE @ClientID int;			-- Идентификатор Клиента

-- Блок параметров для записи в временную таблицу
DECLARE @InvoiceDebt money;		-- Долг по Накладной
DECLARE @InvoiceNumber int;		-- Номер накладной
DECLARE @InvoiceDate datetime;	-- Дата накладной


TRUNCATE TABLE [T_ClientDebt];

INSERT INTO [T_ClientDebt]
SELECT	Клн, НашаФирма, ДЗ 	FROM	vt.T_AllDebit;

-- Очистка таблицы с Долгами
TRUNCATE TABLE dbo.T_AllDebt

-- Перебор всех Наших Фирм
DECLARE OurFirmsCursor CURSOR FOR
	SELECT	id, Name
	FROM	OurFirms	
	--WHERE id <> 1848
OPEN OurFirmsCursor
FETCH NEXT FROM OurFirmsCursor into @OurFirmID, @OurFirm
WHILE ( @@FETCH_STATUS =0 ) BEGIN

	-- Перебор Клиентов-должников
	-- select TOP 1 * from T_ClientDebt
	DECLARE ClientsCursor CURSOR FOR
		SELECT	ClientID --, Клиент
		FROM	T_ClientDebt	
		GROUP BY ClientID
	OPEN ClientsCursor
	FETCH NEXT FROM ClientsCursor into @ClientID --, @ClientIDName
	WHILE ( @@FETCH_STATUS =0 ) BEGIN

		-- Получить размер долга по Клиенту
		SET @DebtSum = ( 
		SELECT TOP 1 ISNULL(d.Debt, 0)
		FROM	T_ClientDebt AS d
		WHERE	d.ClientID = @ClientID
		AND		d.OurFirmID = @OurFirmID 
		AND		d.Debt > 1
		AND d.ClientID != 378		--Пересортица  
		AND d.ClientID != 8832		--'Аякс'    
		AND d.ClientID != 9069		--'Продуктовый Центр'                  
		AND d.ClientID != 9990		--'Союз-Продресурс'               
		AND d.ClientID != 9993		--'Союз-Евразия Сургут'   
		AND d.ClientID != 10098	--'Августа'        
		AND d.ClientID != 10262	--'Восточный Альянс'              
		AND d.ClientID != 10351	--'Валио'                         
		AND d.ClientID != 10508	--'Прот-Ком'                      
		AND d.ClientID != 10686	--'Марс'                          
		AND d.ClientID != 10825	--'РМ-Дистрибьюшн'                
		AND d.ClientID != 11393	--'ТК 'СЕ Дистрибуция'            
		AND d.ClientID != 11643	--'Прод-Лайт'                     
		AND d.ClientID != 11693	--'ТК 'Альянс-Ресурс'             
		AND d.ClientID != 11816	--'МЕРКУРИЙ'                      
		AND d.ClientID != 12325	--'ЮНАЙТЕД БЕЙКЕРС'               
		AND d.ClientID != 12336	--'Водная комп.'Старый Источник'  
		AND d.ClientID != 12374	--'ПРОДАКТИВ'       
		AND d.ClientID != 12395	--'Фудкорт'                     
		AND d.ClientID != 12837	--'Продуктовый Центр'             
		ORDER BY d.Debt desc		
		)
		
			--SELECT TOP 10 * FROM M_TRANS
			-- Получить отгруженные Клиенту накладные 
		DECLARE InvoicesCursor CURSOR FOR
				SELECT	m.Сумма , m.Накл, m.ДатаРасч
				FROM	M_TRANS as m
				WHERE	m.ОпТип = 2
						AND m.Возврат = 0
						AND m.Клн = @ClientID
						AND m.НашаФирма = @OurFirmID
				ORDER BY m.ДатаРасч desc, m.Накл desc
		OPEN InvoicesCursor
		FETCH NEXT FROM InvoicesCursor into @InvoiceDebt, @InvoiceNumber, @InvoiceDate
		WHILE ( @@FETCH_STATUS =0 AND @DebtSum > 0 ) BEGIN	-- Пока сумма общего долга не 0

			IF  ( @DebtSum >= @InvoiceDebt ) BEGIN -- Если Сумма общего долга превышает сумму следующей накладной
													-- 2011/03/31 Евгений Федяков, еще если и равно 
				INSERT INTO dbo.T_AllDebt ( ClientID, InvoiceSum, InvoiceDebt, InvoiceNumber, InvoiceDate, DebtSum, OurFirmID, OurFirm )
				VALUES		( @ClientID, @InvoiceDebt, @InvoiceDebt, @InvoiceNumber, @InvoiceDate, @DebtSum, @OurFirmID, @OurFirm );
				SET			@DebtSum = @DebtSum - @InvoiceDebt;
			END 
	
			ELSE IF ( @DebtSum < @InvoiceDebt ) BEGIN -- Если Сумма долга превышает сумму следующей накладной		
				INSERT INTO dbo.T_AllDebt ( ClientID, InvoiceSum, InvoiceDebt, InvoiceNumber, InvoiceDate, DebtSum, OurFirmID, OurFirm )
				VALUES		(  @ClientID, @InvoiceDebt, @DebtSum, @InvoiceNumber, @InvoiceDate, @DebtSum, @OurFirmID, @OurFirm );
				SET			@DebtSum = 0;		
			END 
		
		FETCH NEXT FROM InvoicesCursor into @InvoiceDebt, @InvoiceNumber, @InvoiceDate		
		END -- Перебор накладных Пока сумма общего долга не 0
		CLOSE InvoicesCursor
		DEALLOCATE InvoicesCursor	

	FETCH NEXT FROM ClientsCursor into @ClientID
	END -- Перебор Клиентов-должников
	CLOSE ClientsCursor
	DEALLOCATE ClientsCursor

FETCH NEXT FROM OurFirmsCursor into @OurFirmID, @OurFirm
END -- Перебор "Наших Фирм"
CLOSE OurFirmsCursor
DEALLOCATE OurFirmsCursor


-- Заполнить поле "Менеджер"
UPDATE	T_AllDebt
SET		Manager = kat_ppl.СотрФамилия
		,ManagerID = kat_ppl.СотрКод
FROM	kat_ppl 
JOIN	cln_dkl on  cln_dkl.МнджКод = kat_ppl.СотрКод
WHERE	cln_dkl.КлнКод = T_AllDebt.ClientID

-- Заполнить поле "НашаФирма"
UPDATE	T_AllDebt
SET		OurFirm =  OurFirms.Name
FROM	OurFirms
WHERE	OurFirmID = OurFirms.id;


-- Заполнить поле "Клиент"
--UPDATE	T_AllDebt
--SET		Client =  LTRIM(RTRIM(kat_kln.КлнНаим)) + ', ' + kat_kln.КлнФс		
--FROM	kat_kln
--WHERE	kat_kln.КлнКод = T_AllDebt.ClientID;
--GO

-- 2010/08/04 Титаренко В.
-- mod1:Изменил обработчик для отображения признака закрытого клиента ( X ) в наименовании
UPDATE	T_AllDebt
SET		Client =  LTRIM(RTRIM(КлнНаим))
FROM	D_ORG
WHERE	D_ORG.КлнКод = T_AllDebt.ClientID;



-- Заполнить поле "Головной клиент"
UPDATE	T_AllDebt
SET		ClientParent = ISNULL(KAT_KLN.КлнНаим, '')
FROM	cln_dkl
LEFT JOIN kat_kln ON kat_kln.КлнКод = cln_dkl.КодГлКлн
WHERE	cln_dkl.КлнКод = T_AllDebt.ClientID;


-- Заполнить поле "Менеджер Накладной"
UPDATE	T_AllDebt
SET		InvoiceManager = ISNULL(m_trans.[МенеджерНакладной], '')
		,InvoiceManagerID = m_trans.Сотрудник
FROM	m_trans
WHERE	m_trans.[Клн] = T_AllDebt.ClientID
		AND M_TRANS.[Накл] = T_AllDebt.InvoiceNumber		
		AND M_TRANS.[НашаФирма] = T_AllDebt.OurFirmID
;


-- Подсчитать срок долга в Днях
UPDATE T_AllDebt
SET DebtDays = DATEDIFF(day, InvoiceDate, GETDATE())
;
GO
/****** Object:  View [dbo].[CD_DolgTab]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CD_DolgTab]
AS
SELECT      --ad.OurFirm,  
ad.Client, ad.ClientParent, ad.ClientID, ad.Manager, max(ad.Department) Department
			,SUM(ad.InvoiceDebt) InvoiceDebt
			,MAX(ad.DebtDays) DebtDays
			,CASE WHEN ISNULL(MAX(s.ДнейКредита),0) = 0 THEN 23 ELSE ISNULL(MAX(s.ДнейКредита),21)+3 END
				 DaysLimit
			,SUM(CASE WHEN (CASE WHEN ISNULL(s.ДнейКредита,0) = 0 THEN 23 ELSE ISNULL(s.ДнейКредита,21)+3 END) <= ad.DebtDays THEN ad.InvoiceDebt ELSE 0 END) InvoiceDebtOver
			,(SELECT TOP 1
					ABS((CONVERT(bit,[FinishWork]))-1)
				FROM [dbo].[CD_DolgEvent] de
				WHERE de.ClientID = ad.ClientID
				ORDER BY de.DateTime DESC) InWork
			--ad.InvoiceDebt, ad.DebtDays, s.ДнейКредита, (CASE WHEN s.ДнейКредита <= ad.DebtDays THEN ad.InvoiceDebt ELSE 0 END) InvoiceDebtOver
           
FROM         T_AllDebt_allfirms AS ad
			LEFT JOIN [dbo].[SLD_KLN] s ON ad.ClientID = s.КлнКод 			
WHERE 
--s.ДнейКредита > 0 AND
ad.OurFirmID <> 1848 and
(EXISTS (  
SELECT * FROM M_USER_R AS ur 
				INNER JOIN M_USER u on ur.ПользКод = u.ПользКод
WHERE  
(ad.ManagerID = ur.МнгКод
and u.LoginName = SUSER_SNAME()
	
) )
/*OR
                      (@UserID IS NULL)*/
)
                      			
GROUP BY --ad.OurFirm,  
ad.Client, ad.ClientParent, ad.ClientID, ad.Manager
--HAVING SUM(CASE WHEN (CASE WHEN ISNULL(s.ДнейКредита,0) = 0 THEN 35 ELSE ISNULL(s.ДнейКредита,0) END) <= ad.DebtDays THEN ad.InvoiceDebt ELSE 0 END) > 0
GO
/****** Object:  View [edi].[Address_2]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [edi].[Address_2]
AS
SELECT DISTINCT 
                      dbo.KLN_ADK.КодАдресаДоставки, dbo.Vw_KPK_Address_1.КлнКод, ISNULL(dbo.KLN_ADK.АдресДоставки, dbo.Vw_KPK_Address_1.КлнАдрес) AS КлнАдрес, 
                      ISNULL(dbo.KLN_ADK.КодГорода, dbo.Vw_KPK_Address_1.КодГород) AS КодГород, ISNULL(dbo.KAT_TWN.ГородНаим, dbo.Vw_KPK_Address_1.Город) 
                      AS Город, LTRIM(RTRIM(RTRIM(CAST(dbo.Vw_KPK_Address_1.КлнКод AS varchar)) + '/' + LTRIM(ISNULL(CAST(dbo.KLN_ADK.КодАдресаДоставки AS varchar), '0')))) 
                      AS КодКлн_КодАдрДоставки, dbo.Vw_KPK_Clients.КлнНаим + ' / ' + ISNULL(dbo.KLN_ADK.АдресДоставки, dbo.Vw_KPK_Address_1.КлнАдрес) AS НазваниеТочки,
                       dbo.Vw_KPK_Clients.СотрФамилияИмя AS Менеджер
FROM         dbo.Vw_KPK_Clients RIGHT OUTER JOIN
                      dbo.Vw_KPK_Address_1 ON dbo.Vw_KPK_Clients.КлнКод = dbo.Vw_KPK_Address_1.КлнКод LEFT OUTER JOIN
                      dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода ON dbo.Vw_KPK_Address_1.КлнКод = dbo.KLN_ADK.КодКлиента
WHERE     (dbo.KLN_ADK.КодАдресаДоставки IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Vw_KPK_Clients"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 252
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_KPK_Address_1"
            Begin Extent = 
               Top = 6
               Left = 290
               Bottom = 114
               Right = 450
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 114
               Left = 38
               Bottom = 207
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 114
               Left = 236
               Bottom = 222
               Right = 422
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 2610
         Width = 1500
         Width = 2730
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 135' , @level0type=N'SCHEMA',@level0name=N'edi', @level1type=N'VIEW',@level1name=N'Address_2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'0
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'edi', @level1type=N'VIEW',@level1name=N'Address_2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'edi', @level1type=N'VIEW',@level1name=N'Address_2'
GO
/****** Object:  View [dbo].[OPT_TBL_KPK_ADRES]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OPT_TBL_KPK_ADRES]
AS
SELECT DISTINCT 
                      [ФИО менеджера] AS mng, SUBSTRING([Код адреса], 0, CHARINDEX('/', [Код адреса])) AS owner, SUBSTRING([Код адреса], CHARINDEX('/', 
                      [Код адреса]) + 1, LEN([Код адреса])) AS tt, [Код адреса] AS owner_tt
FROM         dbo.Tbl_KPK_Address
WHERE     ([ФИО менеджера] IN
                          (SELECT     СотрКод
                            FROM          dbo.OPT_KAT_PPL_MARS))
GO
/****** Object:  View [dbo].[OPT_M_SKDS]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OPT_M_SKDS]
AS
SELECT     dbo.OPT_ALL_KLN_MARS.КлнНаим, dbo.OPT_ALL_KLN_MARS.КлнКод, dbo.OPT_KAT_TVR_MARS.ТовКод, dbo.OPT_KAT_TVR_MARS.ТовЦенаРСХ, 
                      dbo.SLD_KLN.ГрпЦен,
                          (SELECT     TOP 1 Цена
                            FROM          dbo.M_GRPCEN
                            WHERE      (ТврКод = dbo.OPT_KAT_TVR_MARS.ТовКод) AND (ГрпЦен = dbo.SLD_KLN.ГрпЦен)) AS ЦенаПоГруппеЦен,
                          (SELECT     TOP 1 M_GRPCEN_1.Цена
                            FROM          dbo.M_GRPCEN AS M_GRPCEN_1 INNER JOIN
                                                   dbo.CENP_TAB ON M_GRPCEN_1.ГрпЦен = dbo.CENP_TAB.ЦенГрп
                            WHERE      (M_GRPCEN_1.ТврКод = dbo.OPT_KAT_TVR_MARS.ТовКод) AND (dbo.CENP_TAB.КлнКод = dbo.OPT_ALL_KLN_MARS.КлнКод) AND 
                                                   (dbo.CENP_TAB.ТовКод = dbo.OPT_KAT_TVR_MARS.ТовКод)) AS ЦенаПоАльтГруппеЦен,
                          (SELECT     TOP 1 СкдПрц1
                            FROM          dbo.SKD_TAB
                            WHERE      (СкдКод = dbo.OPT_KAT_TVR_MARS.ТовКод) AND (СкдТип = 1)) AS ТоварнаяСкидка,
                          (SELECT     TOP 1 СкдПрц1
                            FROM          dbo.SKD_TAB AS SKD_TAB_3
                            WHERE      (СкдКод = dbo.OPT_ALL_KLN_MARS.КлнКод) AND (СкдДоп = dbo.OPT_KAT_TVR_MARS.ТовКод) AND (СкдТип = 6)) 
                      AS КлнНаТовар, NULL AS КлнНаВид,
                          (SELECT     TOP 1 СкдПрц1
                            FROM          dbo.SKD_TAB AS SKD_TAB_1
                            WHERE      (СкдКод = dbo.OPT_ALL_KLN_MARS.КлнКод) AND (СкдДоп = dbo.OPT_KAT_TVR_MARS.ТовГрп) AND (СкдТип = 0)) 
                      AS КлнНаГруппу
FROM         dbo.SLD_KLN INNER JOIN
                      dbo.OPT_ALL_KLN_MARS ON dbo.SLD_KLN.КлнКод = dbo.OPT_ALL_KLN_MARS.КлнКод CROSS JOIN
                      dbo.OPT_KAT_TVR_MARS
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "SLD_KLN (dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 206
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "OPT_ALL_KLN_MARS (dbo)"
            Begin Extent = 
               Top = 6
               Left = 244
               Bottom = 114
               Right = 395
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "OPT_KAT_TVR_MARS (dbo)"
            Begin Extent = 
               Top = 114
               Left = 38
               Bottom = 222
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1590
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'OPT_M_SKDS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'OPT_M_SKDS'
GO
/****** Object:  View [dbo].[OPT_LIST_ZKZ_MARS]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OPT_LIST_ZKZ_MARS]
AS
SELECT     ЗкзКод, ЗкзНом, ЗкзКлн, ЗкзФио, ЗкзДатаРасч, CAST(ЗкзСумма AS money) AS ЗкзСумм, ЗкзМндж, ЗкзДатаЗавершРасч
FROM         dbo.LIST_ZKZ
WHERE     (ЗкзМндж IN
                          (SELECT DISTINCT СотрКод
                            FROM          dbo.OPT_KAT_PPL_MARS AS _KAT_PPL_MARS_1))
GO
/****** Object:  View [dbo].[Vw_SIMPLE_Remnants]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_SIMPLE_Remnants]
AS
SELECT     CONVERT(DATETIME, '2005-09-01 00:00:00', 102) as Дата, SUM(Количество * CASE WHEN ТипОперации = 1 THEN 1 ELSE -1 END) AS Количество, ИДпозиции,ИДпоставщика
FROM         dbo.Vw_SIMPLE_MovesALL
WHERE     (Дата < CONVERT(DATETIME, '2005-09-01 00:00:00', 102))
GROUP BY ИДпозиции,ИДпоставщика
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Vw_SIMPLE_MovesALL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 211
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SIMPLE_Remnants'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SIMPLE_Remnants'
GO
/****** Object:  View [dbo].[Vw_SIMPLE_Moves]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_SIMPLE_Moves]
AS
SELECT     CONVERT(char(10), Дата, 104) AS Дата, ИДпозиции, ИДпоставщика, Количество, Сумма, ТипОперации
FROM         dbo.Vw_SIMPLE_MovesALL
WHERE     (Дата BETWEEN CONVERT(DATETIME, '2005-01-09 00:00:00', 102) AND CONVERT(DATETIME, '2006-04-30 00:00:00', 102))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Vw_SIMPLE_MovesALL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 195
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SIMPLE_Moves'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SIMPLE_Moves'
GO
/****** Object:  UserDefinedFunction [dbo].[Vw_KPK_Units]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[Vw_KPK_Units] ()
RETURNS TABLE AS  return
select ТовКод, ТовУпак, УпакКод, УпакАббр, УпакКоэф
from Vw_KPK_Units_2()
union
select ТовКод + 9900000000000 AS ТовКод, ТовУпак, УпакКод, УпакАббр, УпакКоэф
from Vw_KPK_Units_2()
GO
/****** Object:  View [dbo].[Vw_VkusmanReport]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_VkusmanReport]
AS
SELECT     TOP 100 PERCENT dbo.wremVkusman.[Код дистрибутора], dbo.wremVkusman.Дата, dbo.wremVkusman.[Код товара], dbo.wremVkusman.Артикул, 
                      ISNULL(dbo.EhrmannKLNnew.Название, dbo.wremVkusman.КлнНаим) AS Название, dbo.wremVkusman.КлнНаим AS Клиент, 
                      ISNULL(ISNULL(dbo.EhrmannKLNnew.Адрес, dbo.KLN_ADK.АдресДоставки), ISNULL(dbo.CLN_DKL.КлнГрузАдрес, dbo.CLN_DKL.КлнАдрес)) 
                      AS Адрес, ISNULL(ISNULL(dbo.EhrmannKLNnew.Город, dbo.KAT_TWN.ГородНаим), dbo.D_ORG.ГородНаим) AS Город, 
                      ISNULL(dbo.EhrmannKLNnew.[Канал сбыта], dbo.Vw_Cln_Ehrmann.[Канал магазина]) AS [Канал магазина], 
                      ISNULL(dbo.EhrmannKLNnew.[Формат магазина], dbo.Vw_Cln_Ehrmann.[Формат магазина]) AS [Формат магазина], 
                      dbo.wremVkusman.[Продажи (штуки)], '' AS [Продажи (короба)], '' AS [Продажи (поддоны)], dbo.wremVkusman.[Продажи (рубли с НДС)], 
                      dbo.Vw_Cln_Ehrmann.Отдел, dbo.Vw_Cln_Ehrmann.Менеджер AS [Менеджер из карточки клиента], dbo.wremVkusman.Склад,dbo.wremVkusman.КлнКод as [Код клиента]
FROM         dbo.CLN_DKL RIGHT OUTER JOIN
                      dbo.wremVkusman ON dbo.CLN_DKL.КлнКод = dbo.wremVkusman.КлнКод LEFT OUTER JOIN
                      dbo.D_ORG ON dbo.wremVkusman.КлнКод = dbo.D_ORG.КлнКод LEFT OUTER JOIN
                      dbo.Vw_Cln_Ehrmann ON dbo.wremVkusman.КлнКод = dbo.Vw_Cln_Ehrmann.КлнКод LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_adress ON dbo.wremVkusman.КлнКод = dbo.Vw_Ehrmann_adress.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_gorod ON dbo.wremVkusman.КлнКод = dbo.Vw_Ehrmann_gorod.КодКлн LEFT OUTER JOIN
                      dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода ON 
                      dbo.wremVkusman.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки LEFT OUTER JOIN
                      dbo.EhrmannKLNnew ON dbo.wremVkusman.КодКлн_КодАдрДоставки = dbo.EhrmannKLNnew.КодКлн_КодАдрДоставки
ORDER BY dbo.wremVkusman.Дата
GO
/****** Object:  UserDefinedFunction [cube].[sharp_t2_fill_hist_f]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [cube].[sharp_t2_fill_hist_f]
( @BegDate DATE , @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT * FROM [cube].[sharp_t2_fill_hist] WHERE ОпДатаРасч BETWEEN @BegDate AND @EndDate
)
GO
/****** Object:  View [dbo].[Price_For_Manager_39]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Price_For_Manager_39]
AS
SELECT     ТовКод, КлнКод, РеальнаяЦена
FROM         dbo.M_RealPrice
WHERE     (КлнКод IN
                          (SELECT     КлнКод
                            FROM          Vw_KPK_Clients_1
                            WHERE      СотрФамилияИмя = 39)) AND (ТовКод IN
                          (SELECT     ТовКод
                            FROM          Vw_KPK_Assortiment))
GO
/****** Object:  View [dbo].[Vw_AllTovarReport]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_AllTovarReport]
AS
SELECT     TOP 100 PERCENT dbo.wremAllTovar.[Код дистрибутора], dbo.wremAllTovar.Дата, dbo.wremAllTovar.[Код товара], dbo.wremAllTovar.Артикул, 
                      ISNULL(dbo.EhrmannKLNnew.Название, dbo.wremAllTovar.КлнНаим) AS Название, dbo.wremAllTovar.КлнНаим AS Клиент, 
                      ISNULL(ISNULL(dbo.EhrmannKLNnew.Адрес, dbo.KLN_ADK.АдресДоставки), ISNULL(dbo.CLN_DKL.КлнГрузАдрес, dbo.CLN_DKL.КлнАдрес)) 
                      AS Адрес, ISNULL(ISNULL(dbo.EhrmannKLNnew.Город, dbo.KAT_TWN.ГородНаим), dbo.D_ORG.ГородНаим) AS Город, 
                      ISNULL(dbo.EhrmannKLNnew.[Канал сбыта], dbo.Vw_Cln_Ehrmann.[Канал магазина]) AS [Канал магазина], 
                      ISNULL(dbo.EhrmannKLNnew.[Формат магазина], dbo.Vw_Cln_Ehrmann.[Формат магазина]) AS [Формат магазина], 
                      dbo.wremAllTovar.[Продажи (штуки)], '' AS [Продажи (короба)], '' AS [Продажи (поддоны)], dbo.wremAllTovar.[Продажи (рубли с НДС)], 
                      dbo.Vw_Cln_Ehrmann.Отдел, dbo.Vw_Cln_Ehrmann.Менеджер AS [Менеджер из карточки клиента], dbo.wremAllTovar.Склад, 
                      dbo.wremAllTovar.КлнКод AS [Код клиента]
FROM         dbo.CLN_DKL RIGHT OUTER JOIN
                      dbo.wremAllTovar ON dbo.CLN_DKL.КлнКод = dbo.wremAllTovar.КлнКод LEFT OUTER JOIN
                      dbo.D_ORG ON dbo.wremAllTovar.КлнКод = dbo.D_ORG.КлнКод LEFT OUTER JOIN
                      dbo.Vw_Cln_Ehrmann ON dbo.wremAllTovar.КлнКод = dbo.Vw_Cln_Ehrmann.КлнКод LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_adress ON dbo.wremAllTovar.КлнКод = dbo.Vw_Ehrmann_adress.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_gorod ON dbo.wremAllTovar.КлнКод = dbo.Vw_Ehrmann_gorod.КодКлн LEFT OUTER JOIN
                      dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода ON 
                      dbo.wremAllTovar.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки LEFT OUTER JOIN
                      dbo.EhrmannKLNnew ON dbo.wremAllTovar.КодКлн_КодАдрДоставки = dbo.EhrmannKLNnew.КодКлн_КодАдрДоставки
ORDER BY dbo.wremAllTovar.Дата
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 191
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "wremAllTovar"
            Begin Extent = 
               Top = 6
               Left = 229
               Bottom = 114
               Right = 443
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D_ORG"
            Begin Extent = 
               Top = 6
               Left = 481
               Bottom = 114
               Right = 649
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Cln_Ehrmann"
            Begin Extent = 
               Top = 6
               Left = 687
               Bottom = 114
               Right = 854
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_adress"
            Begin Extent = 
               Top = 114
               Left = 38
               Bottom = 222
               Right = 194
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_gorod"
            Begin Extent = 
               Top = 114
               Left = 232
               Bottom = 222
               Right = 388
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 114
               Left = 426
               Bottom = 192
               Right = 577
            End
     ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_AllTovarReport'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'       DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 114
               Left = 615
               Bottom = 222
               Right = 801
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "EhrmannKLNnew"
            Begin Extent = 
               Top = 222
               Left = 38
               Bottom = 330
               Right = 252
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_AllTovarReport'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_AllTovarReport'
GO
/****** Object:  View [cube].[sharp_t1_fill_hist]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [cube].[sharp_t1_fill_hist]
AS
SELECT  *
,SUM(ОпСтоим) OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки) Отгрузка --АдресДоставки
,SUM(Объем)  OVER (PARTITION BY КодТТН) ОбъемОтгрузки
,SUM(ВесБрутто)  OVER (PARTITION BY КодТТН) ВесОтгрузки
,SUM(CAST([veterinary_doc] AS INT)) 
         OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки,НашаФирма, 
         case when ТовВид in (1218,1219,1220,1221,1222,1231,1232,1351,1357) then 1 else 0 end) РасхНаВет
 FROM cube.sharp_t2_fill_hist t  with(nolock)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "VozvratSale"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 84
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'cube', @level1type=N'VIEW',@level1name=N'sharp_t1_fill_hist'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'cube', @level1type=N'VIEW',@level1name=N'sharp_t1_fill_hist'
GO
/****** Object:  View [ef].[TDT_WITH_SumPeriod]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [ef].[TDT_WITH_SumPeriod]
AS
SELECT

		t.[idClient]		
      ,MAX(t.[credit]) [credit]
      ,MAX(t.[debit]) [debit]
      ,MAX(t.saldo) saldo
      ,(t.[dateSaldo])
      ,MAX(t.sumperiod) sumperiod
      ,SUM(AvgSaldo) AvgSaldo
FROM
(
SELECT t.[idClient]		
      ,(t.[credit])
      ,(t.[debit])
      ,(t.saldo)
      ,(t.[dateSaldo])
      ,(t.sumperiod)
      ,-((case when tt.debit -tt.sumDebit +t.sumcredit <= 0  then tt.debit * (datediff(dd,tt.datesaldo,t.datesaldo) + 1)
									      else (tt.sumdebit-t.sumcredit)*(datediff(dd,tt.datesaldo,t.datesaldo) )
      end)) AvgSaldo
      --,tt.datesaldo,tt.sumdebit,tt.debit,t.sumcredit
  FROM ef.[tdt] t
  
  left join [ef].[tdt] tt on tt.idClient = t.idClient and tt.dateSaldo <= t.dateSaldo and tt.sumdebit >= t.sumcredit and tt.debit>0--and tt.debit  - tt.sumdebit+t.sumcredit > 0
  
  --left join [ef].[tdt] tc on tt.idClient = t.idClient and tt.dateSaldo <= t.dateSaldo and tt.sumcredit >= t.sumdebit and tt.debit>0--and tt.debit  - tt.sumdebit+t.sumcredit > 0

  
  --where t.idClient = 24 --and t.[dateSaldo] = '20100127'
  
  --group by t.[idClient],t.[dateSaldo]

UNION ALL

SELECT t.[idClient]		
      ,(t.[credit])
      ,(t.[debit])
      ,(t.saldo)
      ,t.[dateSaldo]		
      ,(t.sumperiod)
      ,((case when tt.credit -tt.sumcredit +t.sumdebit <= 0  then tt.credit * (datediff(dd,tt.datesaldo,t.datesaldo) + 1)
									      else (tt.sumcredit-t.sumdebit)*(datediff(dd,tt.datesaldo,t.datesaldo) )
      end))      
  FROM ef.[tdt] t
  
  left join [ef].[tdt] tt on tt.idClient = t.idClient and tt.dateSaldo <= t.dateSaldo 
							and tt.sumcredit >= t.sumdebit and tt.credit>0
  --where t.idClient = 24 


) t  

GROUP BY t.[idClient],t.[dateSaldo]
GO
/****** Object:  View [dbo].[Tbl_SIMPLE_Moves]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Tbl_SIMPLE_Moves]
AS
SELECT     CONVERT(char(10), Дата, 104) AS Дата, ИДпозиции, ИДпоставщика, Количество, Сумма, ТипОперации, 
                      CASE WHEN ТипОперации = 1 THEN Количество END AS Поставка, CASE WHEN ТипОперации = 1 THEN Сумма END AS ПоставкаСумма, 
CASE WHEN ТипОперации = 1 THEN Сумма/Количество END AS ПоставкаЦена, 
                      CASE WHEN ТипОперации <> 1 THEN Количество END AS Отгрузка, CASE WHEN ТипОперации <> 1 THEN Сумма END AS ОтгрузкаСумма,
CASE WHEN ТипОперации <> 1 THEN Сумма/Количество END AS ОтгрузкаЦена
FROM         dbo.Vw_SIMPLE_MovesALL
WHERE     (Дата BETWEEN CONVERT(DATETIME, '2005-01-09 00:00:00', 102) AND CONVERT(DATETIME, '2006-04-30 00:00:00', 102))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Vw_SIMPLE_MovesALL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 195
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 11
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Tbl_SIMPLE_Moves'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Tbl_SIMPLE_Moves'
GO
/****** Object:  StoredProcedure [dbo].[CreditProccessor]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[CreditProccessor]
as
/*

	24,01,2011 Евгений Федяков 
	Добавлен расчет полей	[ПродажиЗаПериод Прошлый Месяц] [ПродажиЗаПериод Позопрошлый Месяц]
	
	
	2010/11/13 Титаренко В.Н. v.titarenko@gmail.com
	- Добавлена доп. информация по клиенту ( срок кредита )
	
	Таблицы и представления:
	1. dbo.T_CreditInfo: таблица с результатами, отчет.
	2. dbo.lim_kln: временный лимит кредита по клиенту. Выгружается из БД Локиса.
	3. dbo.T_AllDebt: детализация долгов по клиентам. Формируется процедурой DebtProccessor на TS99.
	4. VIEW dbo.F_Sale: продажи клиентам.
	5. dbo.KAT_KLN: наим. клиента.
	6. dbo.SLD_KLN: постоянный лимит кредита.
	7. dbo.CLN_DKL: Доп. сведения, Срок кредита.
	8. dbo.D_ORG: Отдел, менеджер.
	
	Кредитная история по Клиентам за Месяц.
	
	Отчет для подразделений:
	- СЭБ
	- Менеджеры
	
	Схема:
	1. Отчет строится на TS99 после выполнения процедуры DebtProccessor.
	2. Отчет работает только с БД PR_Euras. Для других баз не настроен DebtProcessor.
	3. Для построения отчета должна быть сформирована таблица T_CreditInfo.
	
	
	
*/

--USE [PR_Euras];


/*
	Создание рабочей таблицы 
*/
/*
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[T_CreditInfo]') AND type in (N'U'))
DROP TABLE [dbo].[T_CreditInfo]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[T_CreditInfo](
	[КлнКод] [int] NULL,	
	[Клиент] [nvarchar](250) NULL,
	[Отдел] [nvarchar](250) NULL,
	[МенеджерНакл] [nvarchar](250) NULL,
	[ПостЛимитКредита] [money] NULL,
	[ВремЛимитЗаПериод] [money] NULL,
	[Изменений] [int] NULL,
	[АктивныйВремЛимит] [money] NULL,
	[ПродажиЗаПериод] [money] NULL,
	[ПродажиЗаПериод Прошлый Месяц] [money] NULL,
	[ПродажиЗаПериод Позопрошлый Месяц] [money] NULL,
	[Долг] [money] NULL,
	[ОстатокКредита]  AS (([ПостЛимитКредита]+[АктивныйВремЛимит])-[Долг]),
	[ДопСведения] [nvarchar](100) NULL
) ON [PRIMARY]
GO
*/

/*
	Установка периода отчета	
*/

DECLARE @period varchar(10);

--SET @period = 'week';

SET @period = 'month';

-- Инициализация первого и последнего дня отчетного периода
DECLARE @FirstDay datetime,
		@LastDay datetime;		 

 SET @FirstDay = 
        CASE 
        WHEN @period = 'month' THEN dateadd( day,1-day(dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) ), dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) )
		WHEN @period = 'week' THEN dateadd( day,-7, convert(char(8),getdate(),112) )
		END;

SET @LastDay = 
        CASE 
        WHEN @period = 'month' THEN dateadd( month,1,dateadd(day,1-day( dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) ), dateadd(month,-1, CONVERT(char(8),GETDATE(),112) ) ) )-1
		WHEN @period = 'week' THEN convert(char(8),getdate(),112)
		END;



TRUNCATE TABLE T_CreditInfo;

INSERT INTO T_CreditInfo

select s.ОпКодКлн as [Код]					-- Автокод клиента
	, k.КлнНаим as [Клиент]					-- Наименование клиента
	, org.ГрпСотрНаим as [Отдел]			-- Отдел
	, org.СотрФамилияИмя as [Менеджер]		-- Менеджер клиента
	, sld.ЛимитКредита as [Пост. Лимит]		--	Постоянный лимит
	
	--, sld.ДнейКредита as [ДнейКредита]	-- Можно добавить по необходимости. 
											-- На момент создания данных в Локисе не было ( СЭБ не установил ).

-- Сумма всех временных лимитов за месяц
	,ISNULL(
	(SELECT sum(l.Overdraft) 
	FROM lim_kln as l
	WHERE s.ОпКодКлн = l.ClientID
	AND l.EndDate between @FirstDay AND @LastDay )
	 , '') as [Врем. лим. за мес.] 	
	
-- Число изменений/превышений лимита кредита за период
	,ISNULL(
	(SELECT count(l.Overdraft) 
	FROM lim_kln as l
	WHERE s.ОпКодКлн = l.ClientID
	AND l.EndDate between @FirstDay AND @LastDay )
	 , '') as [Изменений за период] 	
	
-- Активный временный лимит на дату построения отчета
	,ISNULL(
	(SELECT sum(l.Overdraft) 
	FROM lim_kln as l
	WHERE s.ОпКодКлн = l.ClientID
	AND l.EndDate > @LastDay )
	 , '') as [Активный Врем. лим.] -- на конец периода.
	
-- Объем продаж
	, ISNULL(	
	sum(
			CASE 
				WHEN s.ОпДатаРасч between @FirstDay AND @LastDay 
					THEN	s.ОпСтоим
				ELSE 0
			END
		), '') as [Продажи]
		
-- Объем продаж за прошлый месяц
	, ISNULL(	
	sum(
			CASE 
				WHEN s.ОпДатаРасч between DateAdd(month,-1,@FirstDay) AND DateAdd(month,-1,@LastDay) 
					THEN	s.ОпСтоим
				ELSE 0
			END
		), '') as [Продажи1]	
-- Объем продаж за позопрошлый месяц
	, ISNULL(	
	sum(
			CASE 
				WHEN s.ОпДатаРасч between DateAdd(month,-2,@FirstDay) AND DateAdd(month,-2,@LastDay) 
					THEN	s.ОпСтоим
				ELSE 0
			END
		), '') as [Продажи2]			
	
-- Общий долг клиента
	, ISNULL(
	(
	SELECT top 1 d.DebtSum 
	FROM dbo.T_AllDebt as d
	WHERE d.ClientID = s.ОпКодКлн
	ORDER BY d.DebtSum desc	)
	, '') AS [Долг]	
	
	, d.ДопСведения AS [СрокКредита]
	,max(s.НаклСотр)

from F_Sale as s 
INNER JOIN KAT_KLN as k on k.КлнКод = s.ОпКодКлн
INNER JOIN SLD_KLN as sld on sld.КлнКод = s.ОпКодКлн 
INNER JOIN CLN_DKL as d on d.КлнКод = s.ОпКодКлн 
JOIN D_ORG as org on org.КлнКод = s.ОпКодКлн

WHERE 
s.ОпДатаРасч between DateAdd(month,-2,@FirstDay) AND @LastDay
AND s.ОпСтоим > 0
AND s.ОпВозвр =0

-- Исключить собственные Юр.Лица и склад
AND (
	s.ОпКодКлн <> 6375 -- Клиент склада
	AND s.ОпКодКлн <> 12837 -- Прод. центр
	AND s.ОпКодКлн <> 11643 -- Прод-Лайт
)
	
group by s.ОпКодКлн, k.КлнНаим, sld.ЛимитКредита, org.ГрпСотрНаим, org.СотрФамилияИмя, org.КлнПользКод, d.ДопСведения
GO
/****** Object:  StoredProcedure [edi].[CreateUralAptDesadv]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[CreateUralAptDesadv]	--119	
@NumberOrder varchar =null
as

set nocount on;

declare @oedinum varchar(20);
--declare @NumberOrder varchar(20) =null  --'s74007842'

declare oedi_cursor CURSOR FOR 		
SELECT zak.ЗкзНом	 
  FROM [PR_Euras].[dbo].[LIST_SKL] nakl
  join [dbo].[KLN_ADK] cln on cln.[КодКлиента] =nakl.[ОпКлн] and cln.КодАдресаДоставки=nakl.КодАдрДоставки
   INNER JOIN  dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл 
   INNER JOIN  dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод 
  where [КодАдрДоставки] >0
   and  len(cln.[ExtFile])>4
   and [ОпДатаРасч] between dateadd(day,-20,getdate()) and getdate() 
   and cln.[ExtFile] like ('%;u%')	
   and zak.ЗкзНом not in
	( SELECT  [DocumentNumber] from [PR_Euras].[edi].[Kontur] edi_z
	WHERE [DocumentType] = 'OrdersSvd' 
	and [stamp] > dateadd(day,-20,getdate()) and desadv is not  null)
	and (@NumberOrder = zak.ЗкзНом or @NumberOrder is null)

/*старый вариант поиска через сводный заказ*/	
--declare oedi_cursor CURSOR FOR 		
--  SELECT distinct [DocumentNumber] from [PR_Euras].[edi].[Kontur] edi_z
--join dbo.LIST_ZKZ  zk on zk.[ЗкзНом] = edi_z.[DocumentNumber]
----join [dbo].[CLN_DKL] cln on cln.[КлнКод] =zk.[ЗкзКлн]
--join [dbo].[KLN_ADK] cln on cln.[КодКлиента] =zk.[ЗкзКлн]
--WHERE [DocumentType] = 'OrdersSvd' 
----только аптечные заказы + проверка по существоанию адреса
--and [Box]='Apt ' and cln.[ExtFile] like ('%;u%') and  len(cln.ExtFile)>3 
----and zk.[зкздатарасч] between edi_z.[stamp] and  dateadd(day,30,edi_z.[stamp])
--and ((@NumberOrder = [DocumentNumber]) or
--(
--	( [Desadv] is null) and (@NumberOrder is null)
--))
-- and [stamp] > dateadd(day,-20,getdate())
-- and [Desadv] is null

open oedi_cursor;

FETCH NEXT FROM oedi_cursor 
INTO @oedinum

WHILE @@FETCH_STATUS = 0
BEGIN  
	--проверка выбранного заказа
    PRINT @oedinum 
    --тест  9/04/15
  -- set @oedinum ='s74007842'
    
    declare @orders table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						driver varchar(50),
						our_description varchar(150),
						internalSupplierCode varchar(50),
						transport varchar(15),
						datedespatchAdvice varchar(10),
						prise float,	
						priseNds float,
						Nds smallint					
						); 	
	delete from @orders;	
	
		/*альтернативные щк  18-09-14*/
	 declare @orders_temp table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						driver varchar(50),
						our_description varchar(150),
						internalSupplierCode varchar(50),
						transport varchar(15),
						datedespatchAdvice varchar(10),
						prise float,	
						priseNds float,
						Nds smallint							
						); 	
						
						declare @ordersV table (
						order_num varchar(50),
						upc numeric(15,0),
						prise float,
						priseNds float,
						our_description varchar(100),
						Nds smallint
				
						); 	
	delete from @ordersV;
	delete from @orders_temp;
	/*альтернативные щк  18-09-14*/
						
	declare @osql varchar(max);
	set @osql = 'WITH tbl1 AS
              (                    
  SELECT 
                        o.HOST_NUMBER,
                        o.DOC_NO,
                      od.line,
                      sku.upc upc,
                      od.planned_qty/uomdiv.UOM_DIV qty,
                    o.driver
                    ,s.name
                    ,sku.skucode 
                    ,dd.transport  
                    ,o.date_shipped
                    , row_number() over(partition BY s.name ORDER BY s.name DESC) num
                    
                    FROM orders o
                        INNER JOIN order_details od ON o.id = od.order_id
                        inner join sku s on s.id = od.sku_id 
                        inner join DELIVERY_DIRECTION dd on  dd.ID = o.DELIVERY_DIR_ID
                        inner join code_info ci on ci.sku_id = s.id and ci.disabled = ''f''
                        INNER JOIN  
                        (
                                  SELECT 
                                          s.id
                                              ,s.upc
                                              ,s.skucode
                                              ,s.name
                                               
                                    FROM wms.sku s
                                    
                                  union all  
                                  SELECT 
                                       
                                       b.sku_id
                                        ,b.barcode,'''',''''
                                    FROM wms.sku_barcode b
                              ) sku
                
                            ON od.sku_id = sku.id 
                        INNER JOIN sku uomdiv ON od.sku_id = uomdiv.id 
                    WHERE o.status <> ''I''  -- статус заказа не должен быть "Начальный"
      and (rtrim(o.HOST_NUMBER) = ltrim(rtrim('''+cast(@oedinum as varchar(20))+''')) or rtrim(o.HOST_NUMBER) = ltrim(rtrim(''action-'+cast(@oedinum as varchar(20))+''')) )     
order by od.line  )
            select   HOST_NUMBER, DOC_NO, line,upc, qty,driver, replace(replace(name,CHR(26),''''),CHR(3), '''')name
                    ,skucode ,transport  ,date_shipped  from  tbl1 
                    where num=1 and  qty>0  '
                    
                    
--print @osql
	
	--order_id OrderResponceNumber-- номер накладной он будет номером ответа на заказа в EDI	
	insert into	@orders(order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	execute (@osql) at wms
	
	
		/*альтернативные щк  18-09-14*/
		--select * from  @orders
	--insert into @orders_temp (order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	--select order_num,order_id,line,sb.upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice from @orders ord
	--join [PR_Euras].[edi].[SKU_BARCODE]  sb on ord.internalSupplierCode=sb.[SKUCODE]
	
	--select * from  @orders_temp
	
	--delete from @orders;
	--insert into	@orders(order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	--select order_num,order_id,line, upc ,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice from @orders_temp
	/*альтернативные щк  18-09-14*/
	
	/*попытка укорить обработку через заранее найденый код заказа 20/03/15 тест  */
	
	--select * from  @orders
	
	declare @oedinumcod int = 0

	select  @oedinumcod = ЗкзКод
	FROM         dbo.LIST_ZKZ   where [ЗкзНом] like cast(@oedinum as varchar(20)) 
	
	print @oedinumcod
	 
	/* к попытка укорить обработку через заранее найденый код заказа 20/03/15 */
	
	insert into	@ordersv(order_num,our_description,prise, upc ,priseNds,Nds)                              
	SELECT  [НомерСФ],Sbar.ТовНаим, ROUND(ОпЦена/( 1+ ( Ktv.[НДС]/100 )),4) ,Sbar.[UPC],ОпЦена,Ktv.[НДС]
  FROM         dbo.LIST_SKL AS nakl INNER JOIN
                      dbo.list_sf AS sf ON nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ INNER JOIN
                      dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл INNER JOIN
                      dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод INNER JOIN
                      dbo.KLN_ADK ON nakl.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки
                      INNER JOIN  [PR_Euras].[dbo].[HIST_SKL] on nakl.[ОпНаклКод]=[HIST_SKL].[ОпНаклКод]
                      INNER JOIN [PR_Euras].[dbo].[KAT_TVR] Ktv on  [PR_Euras].[dbo].[HIST_SKL].ОпКодТов =Ktv.[ТовКод]
                      INNER JOIN  [PR_Euras].[edi].[SKU_BARCODE] Sbar  on Sbar.[ТовКод]=Ktv.[ТовКод]
                      where ЗкзКод=@oedinumcod --попытка ускорить обработку  20/03/15 тест
                      --[ЗкзНом] like 'k-'+cast(@oedinum as varchar(20))
                      and (ABS(DATEDIFF(day, zak.ЗкзДатаРасч, DATEADD(second, CONVERT(numeric, sf.ДатаСФ), CONVERT(datetime, '31.12.1969 19:00:00', 
                      104)))) BETWEEN 0 AND 10)
                     -- order by Ktv.ТовНаим --попытка ускорить обработку  20/03/15 рабочая +
                      
	

	/*обновление через  эсф*/
	/* update o
    set  o.prise=os.prise,o.priseNds=os.priseNds,o.Nds=os.Nds--,o.order_num=os.order_num
     from  @orders  o                                                 
     INNER JOIN @ordersv os on os.upc=o.upc*/
     	  
    
    	--проверка данных во временной таблице
	--select* from 	@orders
	--select* from  @ordersv

    
         --если сформирован ответ то заказ точно был в слово 
    IF (EXISTS(SELECT * FROM @orders))
                                                                         
		   /*подготовка итогов тест*/
		DECLARE @order_id int
		DECLARE @nom_tek_nakl bigint
		DECLARE @order_id_date date  
		select top 1 @order_id= order_id from @orders where not(order_id is null)
		select top 1 @order_id_date=cast (datedespatchAdvice as date) from @orders where not(order_id is null)
		
		select @nom_tek_nakl =[ОпНаклКод] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date)
		and ОпНакл = @order_id
		
		--print @nom_tek_nakl
		
		/*обновление через накладную в2*/
		update o
		set  o.prise=([ОпЦена]*(1-(НДС/(100+НДС)))),o.priseNds=[ОпЦена],o.Nds=НДС
		from  @orders  o  
		 inner join (
		SELECT s2.ТовАрт,s2.ТовНаим,ОпЦена,НДС
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl) temp on temp.ТовАрт=o.internalSupplierCode

	
	
	 --<!ELEMENT СуммаОпт -- сумма поставки без НДС -->
		declare @sum_opt_nonds decimal(10,2)
		SELECT @sum_opt_nonds=sum(([ОпЦена]*(1-(НДС/(100+НДС))))*ОпКол)
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl
		  
		--<!ELEMENT Поставщик -- наименование организации поставщика -->
		declare @postv varchar(50)
		select  @postv=kl.КлнНаим from [PR_Euras].[dbo].[LIST_SKL] s3  
		  inner join PR_Euras.dbo.KAT_KLN kl on s3.НашаФирма= kl.КлнКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl
		  
		 --<!ELEMENT Получатель -- наименование организации получателя -->
		declare @poluch varchar(50)
		select @poluch = kl.КлнНаим from [PR_Euras].[dbo].[LIST_SKL] s3  
		  inner join PR_Euras.dbo.KAT_KLN kl on s3.ОпКлн= kl.КлнКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl
				  
		  --<!ELEMENT СуммаОптВклНДС -- сумма поставки с НДС -->
		declare @sum_opt_nds decimal(10,2)
		  SELECT  @sum_opt_nds =Sum([ОпКол]*[ОпЦена])
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl

		--<!ELEMENT СуммаНДС -- сумма НДС поставки -->
		declare @clear_nds decimal(10,2)
		set @clear_nds=@sum_opt_nds-@sum_opt_nonds

--тестирование полученных агрегатов 
		--select @sum_opt_nonds,@sum_opt_nds,@clear_nds
		--select @order_id,@order_id_date,@nom_tek_nakl
	
	 /*подготовка итогов тест конец*/
	
	
	                                                                        
      BEGIN
    
								DECLARE @idoc int
								DECLARE @doc xml
								DECLARE @PartnerIln varchar(15)
								DECLARE @OurFirmIln varchar(15)
								DECLARE @DocType varchar(15)
								DECLARE @originOrder varchar(15)
								DECLARE @originOrderDate varchar(10)
								
								--(select @doc = body,@PartnerIln = null
								--,@OurFirmIln = null
								--,@DocType = [DocumentType]  
								--,@originOrderDate= null
								--,@originOrder= null
								--from edi.[Kontur] km where id = @oedinum);
								
								 	
								EXEC sp_xml_preparedocument @idoc OUTPUT, @doc;
								DECLARE @OrderResponseLines xml;
								DECLARE @desadv xml;
								
								
								
--select @doc,@PartnerIln,@OurFirmIln,@idoc

--select @idoc,@doc,@originOrder


													

								WITH 

							_OrderResponseLines AS
								(
								--order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice
									select	
																	eo.upc ean,
																	eo.internalSupplierCode,
																	eo.line orderLineNumber,
																	eo.our_description,
																	LTRIM(STR (ISNULL(eo.qty,0) ,20,3)) despatchedQuantity,
																	eo.prise ,	
																	eo.priseNds ,
																	eo.Nds 	 --,eo.qty,ISNULL(ps.qty,0) t		
															 from @orders eo 
															 where  ISNULL(eo.qty,0)>0

								)
				--select * from _OrderResponseLines				
								
								
								,OrderResponseLines AS
								(select OrderResponseLines = 
								'<ТоварныеПозиции >'+
											 cast(	
											 --пробую упростить схему

															 (
		
															 select  
															our_description as Товар
															,despatchedQuantity  Количество 
															,cast((prise) as numeric(15,4))   ЦенаОпт 
															,cast((prise*despatchedQuantity) as numeric(15,4)) as СуммаОпт  
															,cast((Nds) as numeric(5,2))as  СтавкаНДС
															,cast((priseNds) as numeric(15,4))   ЦенаОптНДС  
															,cast((priseNds*despatchedQuantity) as numeric(15,4)) as СуммаОптВклНДС 
															,internalSupplierCode  as КодТовара    
															 ,ean as ЕАН13  	 --требования по формату аптеки														 
															 from _OrderResponseLines [Line-Item] 
															 where  our_description is not null
															 FOR XML PATH ('ТоварнаяПозиция'),TYPE,ELEMENTS
															 													 
											 
											    ) as varchar(max))
								+'</ТоварныеПозиции >')
			--select cast(OrderResponseLines as xml)from OrderResponseLines					
								
								,desadv AS
								(
								select desadv = 
								
								'<Документ Идентификатор=" '+cast( NEWID() as varchar(50))+'">'
								+'<ЗаголовокДокумента><ТипДок>ПРХ</ТипДок>'
								
								 +' <НомерДок>'+isnull((select top 1 [НомНаклНашФ] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date)
		and ОпНакл = @order_id and	[НомНаклНашФ]>0	),'')+'</НомерДок>
								  <ДатаДок>'+ convert(varchar(10),getdate(),104)+'</ДатаДок>
								  <Поставщик>'+@postv+'</Поставщик>
								  <Получатель >'+@poluch+'</Получатель>
								   <Позиций>'+isnull((select  cast(count(our_description)as varchar(10))  FROM _OrderResponseLines),'')+'</Позиций>
								   <СуммаОпт>'+cast(@sum_opt_nonds as varchar(max) )+'</СуммаОпт>
                                   <СуммаНДС>'+cast(@clear_nds as varchar(max) )+'</СуммаНДС>
                                   <СуммаОптВклНДС>'+cast(@sum_opt_nds as varchar(max) )+'</СуммаОптВклНДС>'

		
								+'</ЗаголовокДокумента>'
								+cast((select OrderResponseLines from OrderResponseLines) as varchar(max))+
								'</Документ>'
								)
						    --
							    --select * from desadv;
								select @desadv = desadv from desadv; -- XML ГОТОВ ДЛЯ ПЕРЕДАЧИ ПРОВАЙДЕРУ
								 
    --
								--удаление представления документа 
								exec sp_xml_removedocument @idoc;
								
								--проверяю что во временной таблице
								select @desadv
								
								
								declare @NumberOurDecadv int = null
								select @NumberOurDecadv =[НомНаклНашФ] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date) and ОпНакл = @order_id
								print @NumberOurDecadv
								
							if @clear_nds is not null and @NumberOurDecadv is not null
							begin

									
								INSERT INTO [PR_Euras].[edi].[Kontur]
                               ([id_massge] ,[body],[DocumentType],[box],[DocumentNumber],[Desadv],desadv_time
                               )VALUES
                               ('from locooffice','','OrdersSvd','Apt',@oedinum,@desadv,cast(getdate() as smalldatetime))
                               
                               
                               
								--ОБНОВЛЕНИЕ ТАБЛИЦЫ С СООБЩЕНИЯМИ
								-- допонительно записываю дату обновления ordsp_time
								--UPDATE [PR_Euras].edi.[Kontur]
								--set 
								--Desadv = @desadv,
								--desadv_time=cast(getdate() as smalldatetime )
								--WHERE [DocumentType] = 'OrdersSvd'
								--and [DocumentNumber] = @oedinum
								--and Desadv is null
								
							END;	
								    
		END;
    
    
    
    
    
    
FETCH NEXT FROM oedi_cursor 
INTO @oedinum
END 
CLOSE oedi_cursor;
DEALLOCATE oedi_cursor;
GO
/****** Object:  StoredProcedure [edi].[CreateKonturResponse]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[CreateKonturResponse]	--119	
@NumberOrder int = null
as

set nocount on;

declare @oedinum int;
--declare @NumberOrder int = 563459
		
declare oedi_cursor CURSOR FOR 		
--select distinct cast(right(order_num,len(order_num)-2) as int) from @orders
--первоначальный запрос с фильтрами  !!!
SELECT [id] from [PR_Euras].[edi].[Kontur] edi_z
WHERE [DocumentType] = 'Orders' 
and [Box]!='ugra'
and ((@NumberOrder = [id]) or
(
	(ordsp is null or ordsp =0) and (@NumberOrder is null)
	and CAST(edi_z.body.query('/eDIMessage/order/buyer/gln/text()')  AS varchar(MAX)) not in ('4607081905932','4607099139992')
	--запрет на мегамарт 4607081905932,окей 4607099139992
))
 and [DocumentDate] > dateadd(day,-20,getdate())
;

open oedi_cursor;

FETCH NEXT FROM oedi_cursor 
INTO @oedinum

WHILE @@FETCH_STATUS = 0
BEGIN  

    PRINT @oedinum 
    
   
    
    
    declare @orders table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						our_description varchar(150),
						internalSupplierCode varchar(50)					
						); 	
	delete from @orders;	
	/*альтернативные щк  18-09-14*/
	 declare @orders_temp table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						our_description varchar(150),
						internalSupplierCode varchar(50)					
						); 	
	delete from @orders_temp;
	/*альтернативные щк  18-09-14*/
						
	declare @osql varchar(max);
	
	set @osql = '
					WITH tbl1 AS
              (SELECT 
                        o.HOST_NUMBER,
                        o.DOC_NO,
                      od.line,
                      sku.upc upc,
                      od.qty/uomdiv.UOM_DIV qty
                      ,sku.skucode
                      ,sku.name
                      , row_number() over(partition BY  sku.upc ORDER BY  sku.upc DESC) num
                    FROM orders o
                        INNER JOIN order_details od ON o.id = od.order_id
                        INNER JOIN  
                        (
                                SELECT 
                                          s.id
                                              ,s.upc
                                              ,s.skucode
                                              ,s.name
                                               
                                    FROM wms.sku s
                                    
                                 -- union all  
                                 -- SELECT 
                                       
                                     --  b.sku_id
                                       -- ,b.barcode,'''',''''
                                   -- FROM wms.sku_barcode b
                              ) sku
                
                            ON od.sku_id = sku.id 
                        INNER JOIN sku uomdiv ON od.sku_id = uomdiv.id 
                    WHERE (rtrim(o.HOST_NUMBER) = ''k-'+cast(@oedinum as varchar(20))+''' or rtrim(o.HOST_NUMBER) = ''action-k-'+cast(@oedinum as varchar(20))+''' )
                    )
                    select HOST_NUMBER,DOC_NO,line,upc,qty,replace(replace(name,CHR(26),''''),CHR(3), '''')name
                    ,skucode from tbl1
                     where num=1 and qty>0					
				'
				--WHERE rtrim(o.HOST_NUMBER) = ''k-'+cast(@oedinum as varchar(20))+''' старый вариант  без акционных заказов
	/*name*/
	/*set @osql = '
					SELECT 
						o.HOST_NUMBER,
						o.DOC_NO,
					  od.line,
					  sku.upc upc,
					  od.qty/uomdiv.UOM_DIV qty
					  
					FROM orders o
						INNER JOIN order_details od ON o.id = od.order_id
						INNER JOIN  
						(
								  SELECT 
										  s.id
											  ,s.upc 
									FROM wms.sku s
							        
								  union all  
								  SELECT 
							           
									   b.sku_id
										,b.barcode
									FROM wms.sku_barcode b
							  ) sku
				
							ON od.sku_id = sku.id 
						INNER JOIN sku uomdiv ON od.sku_id = uomdiv.id 
					WHERE rtrim(o.HOST_NUMBER) = ''k-'+cast(@oedinum as varchar(20))+'''				
				'*/
	
	--order_id OrderResponceNumber-- номер накладной он будет номером ответа на заказа в EDI	
	insert into	@orders(order_num,order_id,line,upc,qty,our_description,internalSupplierCode)
	execute (@osql) at wms
	
		/*альтернативные щк  18-09-14*/
	insert into @orders_temp (order_num,order_id,line,upc,qty,our_description,internalSupplierCode)
	select order_num,order_id,line,sb.upc,qty,our_description,internalSupplierCode from @orders ord
	join [PR_Euras].[edi].[SKU_BARCODE]  sb on ord.internalSupplierCode=sb.[SKUCODE]
	
	delete from @orders;
	insert into	@orders(order_num,order_id,line,upc,qty,our_description,internalSupplierCode)
	select * from @orders_temp
	/*альтернативные щк  18-09-14*/
	
    
     --ЕСЛИ ЗАКАЗ ПЕРЕДАН В СОЛВО, ТО ТОЛЬКО ТОГДА ЕГО ОБРАБАТЫВАЕМ
    IF (EXISTS(SELECT * FROM @orders))
                                                                                                                                       
                                                                               
      BEGIN
      
     
    
								DECLARE @idoc int
								DECLARE @doc xml
								DECLARE @PartnerIln varchar(15)
								DECLARE @DocType varchar(15)
								(select @doc = body,@PartnerIln = cast( Body.query('/eDIMessage/interchangeHeader/sender/text()') as varchar(max)),@DocType = [DocumentType]  from edi.[Kontur] km where id = @oedinum); 	
								EXEC sp_xml_preparedocument @idoc OUTPUT, @doc;
								
								DECLARE @OrderResponseLines xml;
								DECLARE @ordrsp xml;
								
								

								
								WITH 
								EDI_PARTIES AS
								(
												SELECT * FROM OPENXML (@idoc, '/eDIMessage/order',1)
															 WITH (	Buyer			varchar(25)         './buyer/gln',
																	Seller			varchar(25)         './seller/gln',
																	DeliveryPoint   varchar(25)         './deliveryInfo/shipTo/gln',
																	Invoice			varchar(25)         './invoicee/gln')
								)
								,EDI_ORDER_T AS
								(
									SELECT * FROM OPENXML (@idoc, '/eDIMessage/order/lineItems/lineItem',2)
															 WITH (
																 LineNumber       int         './LineNumber', --?
																	ean				varchar(25)	'./gtin', --?
																	qty				float		'./requestedQuantity',
																	BuyerItemCode	varchar(40) './internalBuyerCode',
																	nametov varchar(100) './description',
																	psi varchar(4) './requestedQuantity/@unitOfMeasure')

								)
								,EDI_ORDER AS
								(
									SELECT 
																 LineNumber      ,
																	
																	case 
																	when ean is null then BuyerItemCode	
																	when ean is  not null then ean	
																	end ean,
																	qty	,
																	BuyerItemCode,
																	nametov,
																	psi  from EDI_ORDER_T

								)
								--select * from EDI_ORDER
								,PLAN_TO_SHIPPING AS (
												SELECT 						
													LineNumber,
													ean,
													--BuyerItemCode,
													sum(qty) qty,
													psi,
													nametov
												 FROM	(
															SELECT 
																--'k-'+cast(@oedinum as varchar(25)) order_num, -- номер заказа
																		
																edio.LineNumber,
																edio.ean,
																--BuyerItemCode,
																edio.qty need_qty,
																o.qty,
																nametov,
																psi,					
																row_number() over (partition by o.line order by LineNumber) rw
																
															
															FROM  EDI_ORDER  edio
																JOIN @orders o ON cast(right(order_num,len(order_num)-(CHARINDEX('k-', order_num)+1)) as int) = @oedinum and o.upc = edio.ean				
												) tab	WHERE rw = 1
												GROUP BY LineNumber,ean,psi,nametov--,BuyerItemCode
												
								)
								--SELECT * from PLAN_TO_SHIPPING
								
								,ADD_TO_SHIPPING AS (
								select order_num,order_id,line,upc EAN,qty,our_description,internalSupplierCode 
								from  @orders
								where upc not in(select ean from PLAN_TO_SHIPPING)
								)
								--select	* from ADD_TO_SHIPPING	 
								
								,_OrderResponseLines AS
								(
									select	eo.LineNumber,
																	--eo.LineNumber OrderLineNumber,
																	eo.ean EAN,
																	CASE 
																		WHEN ISNULL(ps.qty,0)>0 AND ISNULL(ps.qty,0)<>eo.qty THEN 'Changed'
																		WHEN ISNULL(ps.qty,0)=eo.qty THEN 'Accepted'
																		ELSE 'Rejected'
																	END LineItemStatus,
																	eo.BuyerItemCode internalBuyerCode,
																	--eo.qty,
																	LTRIM(STR (ISNULL(ps.qty,0) ,20,3)) QuantityToBeDelivered,
																	eo.psi UnitOfMeasure,eo.nametov description,null internalSupplierCode			
															 from EDI_ORDER eo LEFT JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
															 union all
									/*select null,EAN,'Changed',null,LTRIM(STR (ISNULL(qty,0) ,20,3)) QuantityToBeDelivered,
																	'PCE' UnitOfMeasure ,our_description,internalSupplierCode
																	from 	ADD_TO_SHIPPING	*/
															select null,ats.EAN,'Changed',null,LTRIM(STR (ISNULL(ats.qty,0) ,20,3)) QuantityToBeDelivered,
																	'PCE' UnitOfMeasure ,ats.our_description,ats.internalSupplierCode
																	from 	ADD_TO_SHIPPING ats	
																	/*блок модифицирован, чтоб отсечь дубли по штрих коду 
																	проеряю именно номер позиции в данных от солво  */
																	inner join @orders ord on ats.EAN=ord.upc
																	where  ord.line not in (select	ord.line from EDI_ORDER eo LEFT JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
															 inner join @orders ord on eo.EAN=ord.upc)
								)
--select	* from _OrderResponseLines

								,OrderResponseLines AS
								(select OrderResponseLines = 
								'<lineItems>'+
								+'<currencyISOCode>RUB</currencyISOCode>'+
													cast((
															
															
															select  
															'@status'=LineItemStatus, 
															ean gtin,
															internalBuyerCode,
															--09-09-14 причина код может быть только цифровой у на так не всегда
															--internalSupplierCode,
															description,
															UnitOfMeasure as 'confirmedQuantity/@unitOfMeasure',
															QuantityToBeDelivered confirmedQuantity											 
															 from _OrderResponseLines [Line-Item] 
															-- where  our_description is not null
															  FOR XML PATH ('lineItem')														
														
											 
											 ) as varchar(max))
								+'</lineItems>')
								,ordrsp AS
								(
								select ordrsp = 
								'<eDIMessage'
								+' id="'+'orsp_'+isnull((select top 1 order_id from @orders where not(order_id is null)),'')+'"' 
								+' creationDateTime="'+convert(varchar(10),getdate(),20)+'"'
								+'>'+
								'<interchangeHeader>
										<sender>'+(select top 1 Seller from EDI_PARTIES) +'</sender>
										<recipient>'+@PartnerIln+'</recipient>
										
										<documentType>ORDRSP</documentType>
									</interchangeHeader>'+
								'<orderResponse number="'+isnull((select top 1 order_id from @orders where not(order_id is null)),'')+'" date="'+convert(varchar(10),getdate(),20)
										+'" status="'+
									+
											(
												CASE WHEN NOT EXISTS( SELECT * FROM EDI_ORDER eo 
																				LEFT JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
																		WHERE ISNULL(ps.qty,0)<>eo.qty )
																		THEN 'Accepted' --заказ полностью принят
													 WHEN NOT EXISTS( SELECT * FROM EDI_ORDER eo 
																				LEFT JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
																		WHERE ISNULL(ps.qty,0)<>0 )
																		THEN 'Changed' --заказ не принят
													ELSE 'Changed'					
													END								
											)	
											+
									+'">'+
								'<originOrder number="'+ @doc.value('(/eDIMessage/order/@number)[1]', 'varchar(max)')+'" date="'+@doc.value('(/eDIMessage/order/@date)[1]', 'varchar(10)')+'"/>'+
								'<Seller><gln>'+(select top 1 Seller from EDI_PARTIES) +'</gln></Seller>'+
								'<Buyer><gln>'+(select top 1 Buyer from EDI_PARTIES) +'</gln></Buyer>'+
								'<deliveryInfo><estimatedDeliveryDateTime>'
											+ convert(varchar(10),getdate(),20)
											+'</estimatedDeliveryDateTime>
								<shipFrom><gln>'+(select top 1 Seller from EDI_PARTIES) +'</gln>
											 </shipFrom>
											<shipTo><gln>'+(select top 1 DeliveryPoint from EDI_PARTIES) +'</gln>
											</shipTo></deliveryInfo>'+														
									+cast((select OrderResponseLines from OrderResponseLines) as varchar(max))+
								+'</orderResponse>'
								+'</eDIMessage>'
								)
 --<recipient>'+(select top 1 Buyer from EDI_PARTIES) +'</recipient> произвел замену строки 12/01/14 отпрвитель не всегда равен покупателю
								select @ordrsp = ordrsp from ordrsp; -- XML ГОТОВ ДЛЯ ПЕРЕДАЧИ ПРОВАЙДЕРУ
								 
    
								
								exec sp_xml_removedocument @idoc;
								--select @ordrsp
								
								
								
								declare @rr varchar(max);

								
								 -- убрать после релиза
								select @oedinum,@ordrsp  
								--select @ordrsp 
								
								--ОБНОВЛЕНИЕ ТАБЛИЦЫ С СООБЩЕНИЯМИ
								-- допонительно записываю дату обновления ordsp_time
								 UPDATE edi.[Kontur]
								set 
								[ordsp] = 1,
								Response = @ordrsp,
								ordsp_time=cast(getdate() as smalldatetime )
								WHERE [DocumentType] = 'Orders'
								and [id] = @oedinum
								
								
								
								
																--select @ordrsp,@login,@password
																
															--	select @ordrsp
			 													
								    
		END;
   
        
    FETCH NEXT FROM oedi_cursor 
INTO @oedinum
END 
CLOSE oedi_cursor;
DEALLOCATE oedi_cursor;
GO
/****** Object:  StoredProcedure [edi].[CreateKonturInvoic]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--declare @NumberOrder int =  null --430557;


CREATE procedure [edi].[CreateKonturInvoic]	--119	
@NumberOrder int = null
as




set nocount on;

declare @oedinum int;
--declare @NumberOrder int = 746203
		
declare oedi_cursor CURSOR FOR 		
--select distinct cast(right(order_num,len(order_num)-2) as int) from @orders
select distinct edi_z.[id] 
 FROM         dbo.LIST_SKL AS nakl
 INNER JOIN dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл 
INNER JOIN  dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод
INNER JOIN [PR_Euras].[dbo].[DKM_STL] dks on nakl.ОпНакл = dks.[ОпНакл]
inner join  [PR_Euras].[dbo].[dochod] doh on dks.[Статус1]=doh.[dchd_kod]   and [dchd_kod]='66'
inner join [PR_Euras].[edi].[Kontur] edi_z on zak.[ЗкзНом] = 'k-'+cast(edi_z.[id] as varchar(20))
WHERE [DocumentType] = 'Orders' 
--учитывая что работа идет через солво то  югру проводим отдельной процедурой
and [Box]!='ugra'
and ((@NumberOrder = [id]) or
(
	(desadv_out =1 and INVOIC is null) and (@NumberOrder is null)
	and CAST(edi_z.body.query('/eDIMessage/order/buyer/gln/text()')  AS varchar(MAX))in ('4607938529991','4607014139984','4620013909990')
	--фильтр по сетке , работа только с елисеем,кировским,звездным
))
and [DocumentDate] between dateadd(day,-20,getdate()) and dateadd(day,-13,getdate()) 
and (ABS(DATEDIFF(day, zak.ЗкзДатаРасч, DATEADD(second, CONVERT(numeric, [ДатаИсх]), CONVERT(datetime, '31.12.1969 19:00:00', 
                      104)))) BETWEEN 0 AND 30)

--первоначальный запрос с фильтрами  !!!
--SELECT [id] from [PR_Euras].[edi].[Kontur]
--WHERE [DocumentType] = 'Orders' 
----учитывая что работа идет через солво то  югру проводим отдельной процедурой
--and [Box]!='ugra'
--and ((@NumberOrder = [id]) or
--(
--	(desadv_out =1 and INVOIC is null) and (@NumberOrder is null)
--))
--and [DocumentDate] between dateadd(day,-7,getdate()) and dateadd(day,-5,getdate()) --будем считать что за 5 дней сф готова 

;

open oedi_cursor;

FETCH NEXT FROM oedi_cursor 
INTO @oedinum

WHILE @@FETCH_STATUS = 0
BEGIN  
	--проверка выбранного заказа
    PRINT @oedinum 
   
      declare @orders table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc numeric(15,0),
						qty float,
						driver varchar(50),
						our_description varchar(100),
						internalSupplierCode varchar(50),
						transport varchar(10),
						datedespatchAdvice varchar(10),
						prise float,	
						priseNds float,
						Nds smallint
						); 	
	
	
/*альтернативные щк  27-10-14*/
	 declare @orders_temp table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc numeric(15,0),
						qty float,
						driver varchar(50),
						our_description varchar(100),
						internalSupplierCode varchar(50),
						transport varchar(10),
						datedespatchAdvice varchar(10),
						prise float,	
						priseNds float,
						Nds smallint						
						); 	
	delete from @orders_temp;
/*альтернативные щк  27-10-14*/	
	
declare @ordersV table (
						order_num varchar(50),
						upc numeric(15,0),
						prise float,
						priseNds float,
						our_description varchar(100),
						Nds smallint
				
						); 	
	delete from @ordersV;
	delete from @orders;
						
	declare @osql varchar(max);
	-- изменения od.shiped работаю через отгружено , не запланировано od.planned_qty 15/03/15
	set @osql = 'WITH tbl1 AS
              (                    
  SELECT 
                        o.HOST_NUMBER,
                        o.DOC_NO,
                      od.line,
                      sku.upc upc,
                      od.shiped/uomdiv.UOM_DIV qty,
                    o.driver
                    ,s.name
                    ,s.id 
                    ,sku.skucode 
                    ,dd.transport  
                    ,o.date_shipped
                    , row_number() over(partition BY s.name ORDER BY s.name DESC) num
                    
                   
                    
                    FROM orders o
                        INNER JOIN order_details od ON o.id = od.order_id
                        inner join sku s on s.id = od.sku_id 
                        inner join DELIVERY_DIRECTION dd on  dd.ID = o.DELIVERY_DIR_ID
                        inner join code_info ci on ci.sku_id = s.id and ci.disabled = ''f''
                        INNER JOIN  
                        (
                                  SELECT 
                                          s.id
                                              ,s.upc
                                              ,s.skucode
                                              ,s.name
                                               
                                    FROM wms.sku s
                                    
                                  --union all  
                                  --SELECT 
                                       
                                  --      b.sku_id
                                  --      ,b.barcode,'''',''''
                                  --  FROM wms.sku_barcode b
                              ) sku
                
                            ON od.sku_id = sku.id 
                        INNER JOIN sku uomdiv ON od.sku_id = uomdiv.id 
                    WHERE o.status <> ''I''  -- статус заказа не должен быть "Начальный"
      and (rtrim(o.HOST_NUMBER) = ''k-'+cast(@oedinum as varchar(20))+''' or rtrim(o.HOST_NUMBER) = ''action-k-'+cast(@oedinum as varchar(20))+''' )     
order by od.line  )
            select   HOST_NUMBER, DOC_NO, line,cast(upc as INT), qty,driver, replace(replace(name,CHR(26),''''),CHR(3), '''')name
                    ,skucode ,transport  ,date_shipped  from  tbl1 
                    where num=1 and  qty>0 order by name  '
    -- изменения от 03/04/15 закоментировал  в базовых данных wms.sku_barcode           
	
	--order_id OrderResponceNumber-- номер накладной он будет номером ответа на заказа в EDI	
	insert into	@orders(order_num,order_id,line, upc ,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	execute (@osql) at wms
	
/*альтернативные щк  27-10-14*/
		--select * from  @orders
	insert into @orders_temp (order_num,order_id,line, upc ,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	select order_num,order_id,line, sb.upc ,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice from @orders ord
	join [PR_Euras].[edi].[SKU_BARCODE]  sb on cast(ord.upc as varchar )=sb.[UPC]  --//31/03/15
	--join [PR_Euras].[edi].[SKU_BARCODE]  sb on ord.internalSupplierCode=sb.[SKUCODE]
	
	--select * from  @orders_temp
	
	delete from @orders;
	insert into	@orders(order_num,order_id,line, upc ,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	select order_num,order_id,line, upc ,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice from @orders_temp
/*альтернативные щк  27-10-14*/

	/*попытка укорить обработку через заранее найденый код заказа 20/03/15 тест  */
	
	declare @oedinumcod int = 0

	select  @oedinumcod = ЗкзКод
	FROM         dbo.LIST_ZKZ   where [ЗкзНом] like 'k-'+cast(@oedinum as varchar(20)) 
	 
	/* к попытка укорить обработку через заранее найденый код заказа 20/03/15 */
	
	
	insert into	@ordersv(order_num,our_description,prise, upc ,priseNds,Nds)                              
	SELECT  [НомерСФ],Sbar.ТовНаим, ROUND(ОпЦена/( 1+ ( Ktv.[НДС]/100 )),4) ,Sbar.[UPC],ОпЦена,Ktv.[НДС]
  FROM         dbo.LIST_SKL AS nakl INNER JOIN
                      dbo.list_sf AS sf ON nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ INNER JOIN
                      dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл INNER JOIN
                      dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод INNER JOIN
                      dbo.KLN_ADK ON nakl.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки
                      INNER JOIN  [PR_Euras].[dbo].[HIST_SKL] on nakl.[ОпНаклКод]=[HIST_SKL].[ОпНаклКод]
                      INNER JOIN [PR_Euras].[dbo].[KAT_TVR] Ktv on  [PR_Euras].[dbo].[HIST_SKL].ОпКодТов =Ktv.[ТовКод]
                      INNER JOIN  [PR_Euras].[edi].[SKU_BARCODE] Sbar  on Sbar.[ТовКод]=Ktv.[ТовКод]
                      where ЗкзКод=@oedinumcod --попытка ускорить обработку  20/03/15 тест
                     -- where [ЗкзНом] like 'k-'+cast(@oedinum as varchar(20))
                      and (ABS(DATEDIFF(day, zak.ЗкзДатаРасч, DATEADD(second, CONVERT(numeric, sf.ДатаСФ), CONVERT(datetime, '31.12.1969 19:00:00', 
                      104)))) BETWEEN 0 AND 10)
                     -- order by Ktv.ТовНаим
                      
     --select o.our_description,os.prise from  @ordersv os   
     --INNER JOIN @orders o on os.upc=o.upc
    
             
    update o
    set  o.prise=os.prise,o.priseNds=os.priseNds,o.Nds=os.Nds--,o.order_num=os.order_num
     from  @orders  o                                                 
     INNER JOIN @ordersv os on os.upc=o.upc

	
	--проверка данных во временной таблице
	--select* from 	@orders
    
    
         --если сформирован ответ то заказ точно был в слово 
    IF (EXISTS(SELECT * FROM @orders))
                                                                         
		   /*подготовка итогов тест*/
		DECLARE @order_id int,@nom_tek_nakl bigint
		DECLARE @order_id_date date  
		select top 1 @order_id= order_id from @orders where not(order_id is null)
		select top 1 @order_id_date=cast (datedespatchAdvice as date) from @orders where not(order_id is null)
		
		select @nom_tek_nakl =[ОпНаклКод] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date)
		and ОпНакл = @order_id
		
	
	 --<!ELEMENT СуммаОпт -- сумма поставки без НДС -->
		declare @sum_opt_nonds decimal(10,2)
		SELECT @sum_opt_nonds=sum(([ОпЦена]*(1-(НДС/(100+НДС))))*ОпКол)
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl
		  
		  --<!ELEMENT СуммаОптВклНДС -- сумма поставки с НДС -->
		declare @sum_opt_nds decimal(10,2)
		  SELECT  @sum_opt_nds =Sum([ОпКол]*[ОпЦена])
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl

		--<!ELEMENT СуммаНДС -- сумма НДС поставки -->
		declare @clear_nds decimal(10,2)
		set @clear_nds=@sum_opt_nds-@sum_opt_nonds

--тестирование полученных агрегатов 
		--select @sum_opt_nonds,@sum_opt_nds,@clear_nds
		--select @order_id,@order_id_date,@nom_tek_nakl
	
	 /*подготовка итогов тест конец*/
	
 	
	                                                                        
      BEGIN
    
								DECLARE @idoc int
								DECLARE @doc xml
								DECLARE @PartnerIln varchar(15)
								DECLARE @OurFirmIln varchar(15)
								DECLARE @DocType varchar(15)
								DECLARE @originOrder varchar(15)
								DECLARE @originOrderDate varchar(10)
								
								(select @doc = RECADV,@PartnerIln = cast( Body.query('/eDIMessage/interchangeHeader/sender/text()') as varchar(max))
								,@OurFirmIln = cast( Body.query('/eDIMessage/interchangeHeader/recipient/text()') as varchar(max))
								,@DocType = [DocumentType]  
								--,@originOrder= cast( Body.query('/eDIMessage/order/@number/text()') as varchar(max))
								,@originOrderDate= Body.value('(/eDIMessage/order/@date)[1]', 'varchar(10)')
								,@originOrder= Body.value('(/eDIMessage/order/@number)[1]', 'varchar(max)' 
								)
								from edi.[Kontur] km where id = @oedinum); 	
								EXEC sp_xml_preparedocument @idoc OUTPUT, @doc;
								DECLARE @OrderResponseLines xml;
								DECLARE @invoic xml;
								
								
								------------nakl 1/07/14
								DECLARE @originNackl varchar(15)
								DECLARE @originNacklDate varchar(10)
								
								(select @originNacklDate= desadv.value('(/eDIMessage/despatchAdvice/@date)[1]', 'varchar(10)')
								,@originNackl= desadv.value('(/eDIMessage/despatchAdvice/@number)[1]', 'varchar(max)' 
								)
								from edi.[Kontur] km where id = @oedinum); 	
								------------nakl 1/07/14
								
								
--select @doc,@PartnerIln,@OurFirmIln,@idoc

--select @idoc,@doc,@originOrder


													

								WITH 
								EDI_PARTIES AS
								(
												SELECT * FROM OPENXML (@idoc, '/eDIMessage/receivingAdvice',1)
															 WITH (	Buyer			varchar(25)         './buyer/gln',
																	Seller			varchar(25)         './seller/gln',
																	DeliveryPoint   varchar(25)         './deliveryInfo/shipTo/gln',
																	Invoice			varchar(25)         './invoicee/gln'
																	
																	)
								)					
							--шапка
								,EDI_ORDER AS
								(
								
								SELECT * FROM OPENXML (@idoc, '/eDIMessage/receivingAdvice/lineItems/lineItem',2)
															 WITH (
																 LineNumber       int         './LineNumber', --?
																	ean				varchar(25)	'./gtin', --?
																	qty				float		'./acceptedQuantity',
																	BuyerItemCode	varchar(40) './internalBuyerCode',
																	nametov varchar(100) './description',
																	psi varchar(4) './acceptedQuantity/@unitOfMeasure',
																	netPrice float './netPrice',
																	netPriceWithVAT float './netPriceWithVAT',
																	vATRate int './vATRate')
								
												--SELECT * FROM OPENXML (@idoc, '//eDIMessage/order/lineItems',1)
												--			 WITH (LineNumber       int         './lineItem/LineNumber', --?
												--					ean				varchar(25)	'./lineItem/gtin', --?
												--					qty				float		'./lineItem/requestedQuantity',
												--					BuyerItemCode	varchar(40) './lineItem/internalBuyerCode')
								)
									
		---select * from 	EDI_ORDER --проходим по строкам заказа										
		--	select *	FROM	@orders 					
								,PLAN_TO_SHIPPING AS (
												SELECT 						
													LineNumber,
													ean,
													--BuyerItemCode,
													sum(qty) qty
													,internalSupplierCode
													,our_description
													,psi
													,line
													,prise ,	
													priseNds ,
													Nds 
													
												 FROM	(
															SELECT 
																--'k-'+cast(@oedinum as varchar(25)) order_num, -- номер заказа
																		
																edio.LineNumber,
																edio.ean,
																--BuyerItemCode,
																edio.qty need_qty,
																edio.psi,
																o.qty,	
																o.internalSupplierCode,
																o.our_description,
																o.line,				
																row_number() over (partition by o.line order by LineNumber) rw
																,COALESCE (o.prise,edio.netPrice) prise ,	
																COALESCE (o.priseNds,edio.netPriceWithVAT) priseNds ,
																COALESCE (o.Nds,edio.vATRate) Nds 
																														
															FROM  EDI_ORDER  edio
																JOIN @orders o ON cast(right(order_num,len(order_num)-(CHARINDEX('k-', order_num)+1)) as int) = @oedinum and o.upc = edio.ean				
												) tab	WHERE rw = 1
												GROUP BY LineNumber,ean
												,internalSupplierCode
												,our_description
												,line
												,prise ,priseNds ,Nds
												,psi
												--,BuyerItemCode
								)
																				
							,ADD_TO_SHIPPING AS (
								select order_num,order_id,line,upc ean,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice,
								prise ,	
								priseNds ,
								Nds  
								from  @orders
								where upc not in(select ean from PLAN_TO_SHIPPING)
								)
					
					/*select '','',ean,'',internalSupplierCode,line,our_description, 'Changed',
					LTRIM(STR (ISNULL(qty,0) ,20,3)) despatchedQuantity,
					'PCE' UnitOfMeasure	 from ADD_TO_SHIPPING --order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice*/
									
							,_OrderResponseLines AS
								(
									select	eo.LineNumber,
																	--eo.LineNumber OrderLineNumber,
																	eo.ean ean,
																	eo.BuyerItemCode internalBuyerCode,
																	ps.internalSupplierCode,
																	ps.line orderLineNumber,
																	ps.our_description,
																	CASE 
																		WHEN ISNULL(ps.qty,0)>0 AND ISNULL(ps.qty,0)<>eo.qty THEN 3
																		WHEN ISNULL(ps.qty,0)=eo.qty THEN 5
																		ELSE 7
																	END LineItemStatus,	
																	--eo.qty,
																	LTRIM(STR (ISNULL(eo.qty,0) ,20,3)) despatchedQuantity,
																	eo.psi UnitOfMeasure	
																	,ps.prise ,	
																	ps.priseNds ,
																	ps.Nds  	
															 from EDI_ORDER eo inner JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
															 where  ISNULL(ps.qty,0)>0
					--закоментировал от 02/04/15 дублей на этом не должно быть, т.к. орентируюсь связку  на акт приемки =данные  из солво  										 
					--										 union all
					--select '',ats.ean,'',ats.internalSupplierCode,ats.line,ats.our_description, 3,
					--LTRIM(STR (ISNULL(ats.qty,0) ,20,3)) despatchedQuantity,
					--'PCE' UnitOfMeasure,ats.prise ,ats.priseNds ,ats.Nds from 	ADD_TO_SHIPPING ats	
					--												/*блок модифицирован, чтоб отсечь дубли по штрих коду 
					--												проеряю именно номер позиции в данных от солво  */
					--												inner join @orders ord on ats.EAN=ord.upc
					--												where  ord.line not in (select	ord.line from EDI_ORDER eo LEFT JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
					--										 inner join @orders ord on eo.EAN=ord.upc)
															  
									
								)
				--select * from _OrderResponseLines				
								
								
								,OrderResponseLines AS
								(select OrderResponseLines = 
								'<lineItems> <currencyISOCode>RUB</currencyISOCode>'+
												--	cast((
																													
														
												--			 --такая фигня нагарожена из-за вложености line  
												--			 select
												--			 (
												--			 --select top 1 * 
												--			 select   ean as gtin ,internalBuyerCode
												--			 ,internalSupplierCode
												--			 ,orderLineNumber
												--			 , our_description as description
												--			 ,UnitOfMeasure as 'despatchedQuantity/@unitOfMeasure'
												--			 ,despatchedQuantity
															 
												--			 from _OrderResponseLines [Line-Item] 
												--			 where [Line-Item].ean = [Line].ean FOR XML PATH ('lineItem'),TYPE,ELEMENTS
												--			 --FOR XML Auto,TYPE,ELEMENTS
												--			 )  
												--			 from _OrderResponseLines [Line] 															 
												--			 FOR XML Auto,TYPE,ELEMENTS
															 
															 
											 
											 --) as varchar(max))
											 cast(	
											 --пробую упростить схему

															 (
		
															 select   [Line-Item].ean as gtin 
															 --,CASE 
																--		WHEN internalBuyerCode is not null THEN internalBuyerCode
																--		ELSE internalSupplierCode
																--	END  
															 ,ISNULL(internalBuyerCode,null) internalBuyerCode
															 ,internalSupplierCode
															 ,orderLineNumber
															 , our_description as description
															 ,UnitOfMeasure as 'quantity/@unitOfMeasure'
															 ,despatchedQuantity as quantity	
															 ,cast((prise) as numeric(15,2)) as netPrice 
															 ,cast((priseNds) as numeric(15,2))  as netPriceWithVAT 
															 ,cast((prise*despatchedQuantity) as numeric(15,2)) as netAmount 
															 ,Nds as vATRate
															 ,cast(( (priseNds*despatchedQuantity) -(prise*despatchedQuantity)) as numeric(15,2)) as vATAmount	
															  ,cast((priseNds*despatchedQuantity) as numeric(15,2)) as amount  													 
															 from _OrderResponseLines [Line-Item] 
															 where  our_description is not null
															 FOR XML PATH ('lineItem'),TYPE,ELEMENTS
															 													 
											 
											    ) as varchar(max))
											    +'<totalSumExcludingTaxes>'+cast(@sum_opt_nonds as varchar(max) )+'</totalSumExcludingTaxes>'+ 
											    +'<totalVATAmount>'+cast(@clear_nds as varchar(max) )+'</totalVATAmount>'+ 
											    +'<totalAmount>'+cast(@sum_opt_nds as varchar(max) )+'</totalAmount>'+ 
								+'</lineItems>')
			--select cast(OrderResponseLines as xml)from OrderResponseLines					
								
								,invoic AS
								(
								select invoic = 
								'<eDIMessage'
								+' id="'+isnull((select top 1 order_id from @orders where not(order_id is null)),'')+'"' 
								+' creationDateTime="'+ convert(varchar(10),getdate(),20)+'"'
								+'>'+
									'<interchangeHeader>
										<sender>'+(select top 1 Seller from EDI_PARTIES) +'</sender>
										<recipient>'+@PartnerIln+'</recipient>
										<documentType>invoic</documentType>
									</interchangeHeader>
									<invoice'
									+' number="'+isnull((select top 1 order_id from @orders where not(order_id is null)),'')+'"' 
/* в связи с тем что дата это дата накладной а у нас происходит запаздывание экспорта в витрину  беру дату генерации отчета */	
--+' date="'+isnull((select top 1 datedespatchAdvice from @orders where not(datedespatchAdvice is null)),'')+'"'								
									--+' date="'+ convert(varchar(10),getdate(),20)+'"'
									+' date="'+ @originNacklDate+'"'
									+' type="Original">'
									+'<originOrder'
									+' number="'+@originOrder+' "' 
									+' date="'+@originOrderDate+'"'
									+'/>'
									+'<despatchIdentificator '
									+' number="'+@originNackl+' "' 
									+' date="'+@originNacklDate+'"'
									+'/>'
									--22/07/14 add
									+'<receivingIdentificator '
									+' number="'+ isnull((select
									-- rec.body.value('(/eDIMessage/receivingAdvice/despatchIdentificator/@number)[1]', 'varchar(max)')
									ord.[RECADV].value('(/eDIMessage/receivingAdvice/@number)[1]', 'varchar(max)')  
									FROM [PR_Euras].[edi].[Kontur] ord  
									--inner join  [PR_Euras].[edi].[Kontur] rec on ord.RECADV_id =rec.[id]
									where ord.[id]=@oedinum),'')+' "' 
									+' date="'+ isnull((select
									  ord.[RECADV].value('(/eDIMessage/receivingAdvice/@date)[1]', 'varchar(max)') 
									FROM [PR_Euras].[edi].[Kontur] ord  
									--inner join  [PR_Euras].[edi].[Kontur] rec on ord.RECADV_id =rec.[id]
									where ord.[id]=@oedinum),'')+'"'
									+'/>'
									--
									--+'<OrderResponse-Header>
									--<OrderResponseNumber>'+isnull((select top 1 order_id from @orders where not(order_id is null)),'')+'</OrderResponseNumber>'+
									--'<OrderResponseDate>'+convert(varchar(10),getdate(),20)+'</OrderResponseDate>'+
									----'<ExpectedDeliveryDate>'+cast( @doc.query('/Document-Order/Order-Header/ExpectedDeliveryDate/text()') as varchar(10))+'</ExpectedDeliveryDate>'+
									--'<OrderNumber>'+rtrim(substring(cast( @doc.query('/Document-Order/Order-Header/OrderNumber/text()') as varchar(max)),1,20))+'</OrderNumber>'+
									--'<OrderDate>'+cast( @doc.query('/Document-Order/Order-Header/OrderDate/text()') as varchar(10))+'</OrderDate>'+
									--'<ResponseType>'+
									--		(
									--			CASE WHEN NOT EXISTS( SELECT * FROM EDI_ORDER eo 
									--											LEFT JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
									--									WHERE ISNULL(ps.qty,0)<>eo.qty )
									--									THEN '29' --заказ полностью принят
									--				 WHEN NOT EXISTS( SELECT * FROM EDI_ORDER eo 
									--											LEFT JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
									--									WHERE ISNULL(ps.qty,0)<>0 )
									--									THEN '27' --заказ не принят
									--				ELSE '4'					
									--				END								
									--		)	
									--		+'</ResponseType>
									--</OrderResponse-Header>'
									+
									--'<OrderResponse-Transport></OrderResponse-Transport>'+
									--'<OrderResponse-Parties>'+
									/*cast( (select @doc.query('Document-Order/Order-Parties/Buyer')) as varchar(max))+
									cast( (select @doc.query('Document-Order/Order-Parties/Seller')) as varchar(max))+
									cast( (select @doc.query('Document-Order/Order-Parties/DeliveryPoint')) as varchar(max))+*/
									+'<seller><gln>'+(select top 1 Seller from EDI_PARTIES) +'</gln></seller>'+
									+'<buyer><gln>'+(select top 1 Buyer from EDI_PARTIES) +'</gln></buyer>'+
									+'<deliveryInfo>'
											--время приемки товара
											--+'<estimatedDeliveryDateTime>'
											--+ convert(varchar(10),getdate(),20)
											--+'</estimatedDeliveryDateTime>'
											+' <shipFrom><gln>'+(select top 1 Seller from EDI_PARTIES) +'</gln>
											 </shipFrom>
											<shipTo><gln>'+(select top 1 DeliveryPoint from EDI_PARTIES) +'</gln>
											</shipTo>'
											--+'<transportation>
											--<transportMode>roadTransport</transportMode>
											--<vehicleNumber>'
											--+isnull((select top 1 transport from @orders where not(transport is null)),'')+
											--'</vehicleNumber>
											--<nameOfCarrier>'
											--+isnull((select top 1 driver from @orders where not(driver is null)),'')+
											--'</nameOfCarrier>
											--</transportation>' 
									+'</deliveryInfo>'+
									--  '</OrderResponse-Parties>'+
									--+replace(cast( (select @doc.query('Document-Order/Order-Parties')) as varchar(max)),'Order-Parties','OrderResponse-Parties')+									
									+cast((select OrderResponseLines from OrderResponseLines) as varchar(max))+
									--+'<OrderResponse-Summary>'+
									--+cast( (select @doc.query('Document-Order/Order-Summary/TotalLines')) as varchar(max))+
									--+'</OrderResponse-Summary>'
									+'</invoice>'
								+'</eDIMessage>'
								)
						    
							    --select * from EDI_ORDER;
							    -- select * from @orders
--<recipient>'+(select top 1 Buyer from EDI_PARTIES) +'</recipient> изменение от 12/1/2015

								select @invoic = invoic from invoic; -- XML ГОТОВ ДЛЯ ПЕРЕДАЧИ ПРОВАЙДЕРУ
								 
    
								--удаление представления документа 
								exec sp_xml_removedocument @idoc;
								
								--проверяю что во временной таблице
								select @invoic

							if @invoic is not null
							begin
							--	--select @invoic, @oedinum	
							--	--ОБНОВЛЕНИЕ ТАБЛИЦЫ С СООБЩЕНИЯМИ
							--	-- допонительно записываю дату обновления ordsp_time
								UPDATE [PR_Euras].edi.[Kontur]
								set 
								invoic = @invoic,
								invoic_time=cast(getdate() as smalldatetime )
								WHERE [DocumentType] = 'Orders'
								and [id] = @oedinum
								and invoic is null
								
							END;
								--select @invoic,@login,@password
									--select @idoc,@doc,@originOrder,@originOrderDate
																
								    
		END;
    
    
    
    
    
    
FETCH NEXT FROM oedi_cursor 
INTO @oedinum
END 
CLOSE oedi_cursor;
DEALLOCATE oedi_cursor;
GO
/****** Object:  StoredProcedure [dbo].[SQL_ProdRes_65_]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--Евгений Федяков
-- Все запросы из ProdRes_65

CREATE PROCEDURE [dbo].[SQL_ProdRes_65_]
AS


truncate table m_debit

INSERT INTO DBO.[M_DEBIT]
(
		[НаклКод]
      ,[НаклНом]
      ,[НаклСклКод]
      ,[НаклКлн]
      ,[НаклСотр]
      ,[НаклДата]
      ,[НаклДатаРасч]
      ,[НаклТип]
      ,[НаклВозвр]
      ,[НаклКол]
      ,[НаклСтоим]
      ,[НаклКодТов]
      ,[ЦенаАльтГрп]
      ,[ЦенаГрп]
      ,[ЦенаКат]
      ,[ТовСкидка]
      ,[КлнНаТов]
      ,[КлнНаВид]
      ,[КлнНаГрп]
      ,[ТекЦена]
      --,[СуммаПродажа]
      --,[СуммаПрогноз]
      ,[НДС]
      ,[ЦенаКатУчет]
      --,[СуммаУчет]
      ,[КодКлн_КодАдрДоставки]

)
SELECT  [НаклКод]
      ,[НаклНом]
      ,[НаклСклКод]
      ,[НаклКлн]
      ,[НаклСотр]
      ,[НаклДата]
      ,[НаклДатаРасч]
      ,[НаклТип]
      ,[НаклВозвр]
      ,[НаклКол]
      ,[НаклСтоим]
      ,[НаклКодТов]
      ,[ЦенаАльтГрп]
      ,[ЦенаГрп]
      ,[ЦенаКат]
      ,[ТовСкидка]
      ,[КлнНаТов]
      ,[КлнНаВид]
      ,[КлнНаГрп]
      ,[ТекЦена]
      --,[СуммаПродажа]
      --,[СуммаПрогноз]
      ,[НДС]
      ,[ЦенаКатУчет]
      --,[СуммаУчет]
      ,[КодКлн_КодАдрДоставки]
  FROM [dbo].[M_DEBIT_VIEW]
GO
/****** Object:  View [dbo].[Vw_F_PRIH_last_100_days]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_F_PRIH_last_100_days]
AS
SELECT     dbo.F_PRIH_SumOnTovar.*, dbo.LIST_SKL.Основание
FROM         dbo.F_PRIH_SumOnTovar LEFT OUTER JOIN
                      dbo.LIST_SKL ON dbo.F_PRIH_SumOnTovar.ОпНаклКод = dbo.LIST_SKL.ОпНаклКод
WHERE    (dbo.F_PRIH_SumOnTovar.ОпДатаРасч BETWEEN { fn NOW() } - 100 AND { fn NOW() })
		--(F_PRIH_SumOnTovar.ОпДатаРасч BETWEEN '20070701' AND '20070930')
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "F_PRIH"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 218
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 5
         End
         Begin Table = "LIST_SKL"
            Begin Extent = 
               Top = 8
               Left = 315
               Bottom = 184
               Right = 484
            End
            DisplayFlags = 280
            TopColumn = 5
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 18
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_F_PRIH_last_100_days'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_F_PRIH_last_100_days'
GO
/****** Object:  View [dbo].[Vw_EhrmannReport_v2]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_EhrmannReport_v2]
AS
SELECT     TOP 100 PERCENT dbo.wremEhrmann.[Код дистрибутора], dbo.wremEhrmann.Дата, dbo.wremEhrmann.[Код товара], dbo.wremEhrmann.Артикул, 
                      dbo.Vw_Cln_Ehrmann.Название, dbo.Vw_Cln_Ehrmann.Клиент, ISNULL(ISNULL(dbo.Vw_Cln_Ehrmann.Адрес_Ehrmann, 
                      dbo.KLN_ADK.АдресДоставки), ISNULL(dbo.CLN_DKL.КлнГрузАдрес, dbo.CLN_DKL.КлнАдрес)) AS Адрес, 
                      ISNULL(ISNULL(dbo.Vw_Cln_Ehrmann.Город_Ehrmann, dbo.KAT_TWN.ГородНаим), dbo.D_ORG.ГородНаим) AS Город, 
                      dbo.Vw_Cln_Ehrmann.[Канал магазина], dbo.Vw_Cln_Ehrmann.[Формат магазина], dbo.wremEhrmann.[Продажи (штуки)], '' AS [Продажи (короба)], 
                      '' AS [Продажи (поддоны)], dbo.wremEhrmann.[Продажи (рубли с НДС)], dbo.Vw_Cln_Ehrmann.Отдел, 
                      dbo.Vw_Cln_Ehrmann.Менеджер AS [Менеджер из карточки клиента]
FROM         dbo.CLN_DKL RIGHT OUTER JOIN
                      dbo.wremEhrmann ON dbo.CLN_DKL.КлнКод = dbo.wremEhrmann.КлнКод LEFT OUTER JOIN
                      dbo.D_ORG ON dbo.wremEhrmann.КлнКод = dbo.D_ORG.КлнКод LEFT OUTER JOIN
                      dbo.Vw_Cln_Ehrmann ON dbo.wremEhrmann.КлнКод = dbo.Vw_Cln_Ehrmann.КлнКод LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_adress ON dbo.wremEhrmann.КлнКод = dbo.Vw_Ehrmann_adress.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_gorod ON dbo.wremEhrmann.КлнКод = dbo.Vw_Ehrmann_gorod.КодКлн LEFT OUTER JOIN
                      dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода ON 
                      dbo.wremEhrmann.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки
ORDER BY dbo.wremEhrmann.Дата
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[33] 4[29] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 84
               Left = 552
               Bottom = 192
               Right = 705
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "wremEhrmann"
            Begin Extent = 
               Top = 3
               Left = 237
               Bottom = 111
               Right = 451
            End
            DisplayFlags = 280
            TopColumn = 6
         End
         Begin Table = "D_ORG"
            Begin Extent = 
               Top = 140
               Left = 772
               Bottom = 248
               Right = 940
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Cln_Ehrmann"
            Begin Extent = 
               Top = 13
               Left = 760
               Bottom = 121
               Right = 927
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_adress"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 194
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_gorod"
            Begin Extent = 
               Top = 48
               Left = 48
               Bottom = 156
               Right = 204
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 127
               Left = 337
               Bottom = 205
               Right = 488
            End
     ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_EhrmannReport_v2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'       DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 27
               Left = 532
               Bottom = 135
               Right = 718
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 11490
         Alias = 900
         Table = 2040
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_EhrmannReport_v2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_EhrmannReport_v2'
GO
/****** Object:  View [dbo].[Vw_EhrmannReport_060911]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_EhrmannReport_060911]
AS
SELECT distinct  TOP 100 PERCENT dbo.wremEhrmann.[Код дистрибутора], dbo.wremEhrmann.Дата, dbo.wremEhrmann.[Код товара], dbo.wremEhrmann.Артикул, 
                      ISNULL(dbo.EhrmannKLNnew.Название, dbo.wremEhrmann.КлнНаим) AS Название, dbo.wremEhrmann.КлнНаим AS Клиент, 
                      ISNULL(ISNULL(dbo.EhrmannKLNnew.Адрес, dbo.KLN_ADK.АдресДоставки), ISNULL(dbo.CLN_DKL.КлнГрузАдрес, dbo.CLN_DKL.КлнАдрес)) 
                      AS Адрес, ISNULL(ISNULL(dbo.EhrmannKLNnew.Город, dbo.KAT_TWN.ГородНаим), dbo.D_ORG.ГородНаим) AS Город, 
                      ISNULL(dbo.EhrmannKLNnew.[Канал сбыта], dbo.Vw_Cln_Ehrmann.[Канал магазина]) AS [Канал магазина], 
                      ISNULL(dbo.EhrmannKLNnew.[Формат магазина], dbo.Vw_Cln_Ehrmann.[Формат магазина]) AS [Формат магазина], 
                      dbo.wremEhrmann.[Продажи (штуки)], '' AS [Продажи (короба)], '' AS [Продажи (поддоны)], dbo.wremEhrmann.[Продажи (рубли с НДС)], 
                      dbo.Vw_Cln_Ehrmann.Отдел, dbo.Vw_Cln_Ehrmann.Менеджер AS [Менеджер из карточки клиента], dbo.wremEhrmann.Склад,dbo.wremEhrmann.КлнКод as [Код клиента]
FROM         dbo.CLN_DKL RIGHT OUTER JOIN
                      dbo.wremEhrmann ON dbo.CLN_DKL.КлнКод = dbo.wremEhrmann.КлнКод LEFT OUTER JOIN
                      dbo.D_ORG ON dbo.wremEhrmann.КлнКод = dbo.D_ORG.КлнКод LEFT OUTER JOIN
                      dbo.Vw_Cln_Ehrmann ON dbo.wremEhrmann.КлнКод = dbo.Vw_Cln_Ehrmann.КлнКод LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_adress ON dbo.wremEhrmann.КлнКод = dbo.Vw_Ehrmann_adress.КодКлн LEFT OUTER JOIN
                      dbo.Vw_Ehrmann_gorod ON dbo.wremEhrmann.КлнКод = dbo.Vw_Ehrmann_gorod.КодКлн LEFT OUTER JOIN
                      dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода ON 
                      dbo.wremEhrmann.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки LEFT OUTER JOIN
                      dbo.EhrmannKLNnew ON dbo.wremEhrmann.КодКлн_КодАдрДоставки = dbo.EhrmannKLNnew.КодКлн_КодАдрДоставки
ORDER BY dbo.wremEhrmann.Дата
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CLN_DKL"
            Begin Extent = 
               Top = 84
               Left = 38
               Bottom = 192
               Right = 191
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "wremEhrmann"
            Begin Extent = 
               Top = 5
               Left = 476
               Bottom = 113
               Right = 690
            End
            DisplayFlags = 280
            TopColumn = 11
         End
         Begin Table = "D_ORG"
            Begin Extent = 
               Top = 6
               Left = 703
               Bottom = 114
               Right = 871
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Cln_Ehrmann"
            Begin Extent = 
               Top = 114
               Left = 481
               Bottom = 222
               Right = 648
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_adress"
            Begin Extent = 
               Top = 114
               Left = 686
               Bottom = 222
               Right = 842
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_Ehrmann_gorod"
            Begin Extent = 
               Top = 192
               Left = 38
               Bottom = 300
               Right = 194
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 84
               Right = 189
            End
      ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_EhrmannReport_060911'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'      DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 413
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "EhrmannKLNnew"
            Begin Extent = 
               Top = 132
               Left = 193
               Bottom = 240
               Right = 407
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 7050
         Alias = 1740
         Table = 3450
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_EhrmannReport_060911'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_EhrmannReport_060911'
GO
/****** Object:  UserDefinedFunction [dbo].[f_LIST_MLST]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_LIST_MLST]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
select * from f_LIST_MLST_VIEW
where ДатаРасч between @BegDate and @EndDate and АвтокодМЛ>0 
)

/* так было до 20141128
(
SELECT ml.[Затрата],
       ml.АвтокодМЛ * 10 + ml.[Затрата] АвтокодМЛ,
       ml.НомерМЛ,
       Cast (ml.ДатаРасч as date) Дата,
       ml.Перевозчик,
       ml.Авто,
       ml.Водитель,
       ml.Экспедитор,
       ml.Маршрут,
       cast (ml.АвтокодМЛ as varchar (20)) + '-' + cast (ls.Опклн as varchar (20
       )) + '-' + cast (ls.КодАдрДоставки as varchar (20)) кодточки,
       ls.Опклн,
       hs.ОпКол,
       hs.ОпКол * hs.ОпЦена СуммаНакладной,
       hs.ОпКодТов,
       ml.[ЗатратаНазвание],
       ml.ЗатратыФакт,
       ml.ЗатратыПлан,
       (case ls.ОпТип
          when 1 then 'приход'
          when 2 then 'расход'
          else 'неизвестный тип накладной'
        end) ТипНакладной,
       ls.ОпСотр МенеджерНакладной,
       f.Name НашаФирма
		,ISNULL(k.КодАдресаДоставки, 0) AS КодАдрДоставки
        ,ls.ОпСкл as Склад
        ,kdk.КодДопХар
FROM (
       SELECT 1 [Затрата],
              [НомерМЛ],
              [АвтокодМЛ] [АвтокодМЛ],
              [Дата],
              [Перевозчик],
              [Авто],
              [Водитель],
              [СтатусМЛ],
              [Маршрут],
              [Экспедитор],
              [ДатаВыезда],
              [ДатаРасч],
              [ДатаВыездаРасч],
              [ЗатратаНазвание1] [ЗатратаНазвание],
              [ЗатратаПлан1] [ЗатратыПлан],
              [ЗатратаФакт1] [ЗатратыФакт]
       FROM [dbo].[list_mlst]
       UNION ALL
       SELECT 2 [Затрата],
              [НомерМЛ],
              [АвтокодМЛ],
              [Дата],
              [Перевозчик],
              [Авто],
              [Водитель],
              [СтатусМЛ],
              [Маршрут],
              [Экспедитор],
              [ДатаВыезда],
              [ДатаРасч],
              [ДатаВыездаРасч],
              [ЗатратаНазвание2] [ЗатратаНазвание],
              [ЗатратаПлан2] [ЗатратыПлан],
              [ЗатратаФакт2] [ЗатратыФакт]
       FROM [dbo].[list_mlst]
       UNION ALL
       SELECT 3 [Затрата],
              [НомерМЛ],
              [АвтокодМЛ],
              [Дата],
              [Перевозчик],
              [Авто],
              [Водитель],
              [СтатусМЛ],
              [Маршрут],
              [Экспедитор],
              [ДатаВыезда],
              [ДатаРасч],
              [ДатаВыездаРасч],
              [ЗатратаНазвание3] [ЗатратаНазвание],
              [ЗатратаПлан3] [ЗатратыПлан],
              [ЗатратаФакт3] [ЗатратыФакт]
       FROM [dbo].[list_mlst]
       UNION ALL
       SELECT 4 [Затрата],
              [НомерМЛ],
              [АвтокодМЛ],
              [Дата],
              [Перевозчик],
              [Авто],
              [Водитель],
              [СтатусМЛ],
              [Маршрут],
              [Экспедитор],
              [ДатаВыезда],
              [ДатаРасч],
              [ДатаВыездаРасч],
              [ЗатратаНазвание4] [ЗатратаНазвание],
              [ЗатратаПлан4] [ЗатратыПлан],
              [ЗатратаФакт4] [ЗатратыФакт]
       FROM [dbo].[list_mlst]
       UNION ALL
       SELECT 5 [Затрата],
              [НомерМЛ],
              [АвтокодМЛ],
              [Дата],
              [Перевозчик],
              [Авто],
              [Водитель],
              [СтатусМЛ],
              [Маршрут],
              [Экспедитор],
              [ДатаВыезда],
              [ДатаРасч],
              [ДатаВыездаРасч],
              [ЗатратаНазвание5] [ЗатратаНазвание],
              [ЗатратаПлан5] [ЗатратыПлан],
              [ЗатратаФакт5] [ЗатратыФакт]
       FROM [dbo].[list_mlst]
     ) ml
     INNER JOIN 
     (
       SELECT zvk.АвтКодМЛ,
              НомДок
       FROM zvk_dkm
            INNER JOIN list_zvk ZVK on zvk.АвтКодЗвк = zvk_dkm.АвтКодЗвкДост
            --WHERE (ТипДок = 4)
       GROUP BY zvk.АвтКодМЛ,
                НомДок
     ) AS ttndkm ON ttndkm.АвтКодМЛ = ml.АвтокодМЛ
     --INNER JOIN TTN_DKM AS ttn ON ttn.КодТТН = ttndkm.НомДок
     INNER JOIN 
     (
       SELECT MAX(ДокКод) AS ДокКод,
              Скл,
              ФлгОпер,
              Накл,
              MAX(ДокКод) AS Зкз
              --SELECT MAX(CASE WHEN тип = 4 THEN ДокКод END) AS ДокКод, Скл, ФлгОпер, Накл, MAX(CASE WHEN тип = 0 THEN ДокКод END) AS Зкз
              FROM zkz_nkl AS z
            --WHERE (Тип IN (4))
       GROUP BY Накл,
                Скл,
                ФлгОпер
     ) AS zkz_nkl ON zkz_nkl.ДокКод = ttndkm.НомДок
     INNER JOIN HIST_SKL AS hs ON hs.ОпСкл = zkz_nkl.Скл AND hs.ОпТип =
     zkz_nkl.ФлгОпер AND zkz_nkl.Накл = hs.ОпНакл
     JOIN LIST_SKL AS ls ON ls.ОпСкл = zkz_nkl.Скл AND ls.ОпТип =
     zkz_nkl.ФлгОпер AND zkz_nkl.Накл = ls.ОпНакл
     left join OurFirms f ON ls.НашаФирма = f.id
	LEFT OUTER JOIN KLN_ADK as k ON k.КодАдресаДоставки = ls.КодАдрДоставки and k.КодКлиента = ls.ОпКлн  
    LEFT OUTER JOIN List_kdk kdk ON k.КодАдресаДоставки=kdk.КодКлн AND kdk.КодГрпДопХар = 3 AND kdk.mode = 1 ----убрал 20141029 VG
where ml.ДатаРасч between @BegDate and
      @EndDate);
*/
GO
/****** Object:  StoredProcedure [dbo].[FillDebetSrokAllQueryInsert]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[FillDebetSrokAllQueryInsert] AS
-- прцедура заполнения f_Debet_Srok датами сплошь запросом а не по записи
declare @Debet as cursor 
declare @DCln int,@DSaldo money,@DSP money,@DS money,@DDate bigint,@DRealDate datetime
--declare @FDDate datetime,@LDDate datetime
--declare @IsDFetch decimal
--declare @CurDDate datetime
--declare @TestDate int, @TestDDate datetime
--declare @LSaldo money,@LSum money, @LSumPer money

--declare @DateInsert as datetime

declare @EmptyDate datetime, @LDate datetime, @PrevDate datetime, @PrevCln int, @CurDate datetime
declare @PrevSaldo money, @PrevSP money, @PrevS money
--declare @Period int, @NextDate bigint, @NextRDate datetime

set @EmptyDate=CONVERT(datetime,'01.01.1900',104)
set @LDate=CONVERT(datetime,CAST(DATEPART(dd,GetDate()) as char(2))+'.'+
CAST(DATEPART(mm,GetDate()) as char(2))+'.'+
CAST(DATEPART(yyyy,GetDate()) as char(4)),104)

set @Debet=cursor for select ДбтКлнКод,ДбтСальдо,ДбтСумПер,ДбтСум,ДбтДата,ДатыРасч from f_debet_srok
join d_dates on f_debet_srok.ДбтДата=d_dates.ДатыКод
order by f_debet_srok.ДбтКлнКод,d_dates.ДатыРасч
open @Debet

fetch next from @Debet into @DCln, @DSaldo,@DSP,@DS,@DDate,@DRealDate
set @PrevDate=@DRealDate
set @PrevCln=@DCln
set @PrevSaldo=@DSaldo
set @PrevSP=@DSP
set @PrevS=@DS
while @@FETCH_STATUS=0
  begin
    if @PrevCln=@DCln
      begin
        set @CurDate=@DRealDate
--        set @Period=DateDiff(dd,@PrevDate,@CurDate)
--        while @Period>1 and @PrevSaldo<>0
--           begin
--              select @NextDate=ДатыКод, @NextRDate=ДатыРасч from d_dates where ДатыРасч=DateAdd(dd,-@Period+1,@CurDate)
            if (@PrevSaldo<>0)
              begin                            
                  exec InsertDebetSrokAllQueryInsert @DCln,@PrevDate,@CurDate,@PrevSaldo,@PrevSP,@PrevS
              end
--              set @Period=@Period-1
--           end
        set @PrevCln=@DCln
        set @PrevDate=@DRealDate
        set @PrevSaldo=@DSaldo
        set @PrevSP=@DSP
        set @PrevS=@DS
      end
   else
      begin
        set @CurDate=dateadd(dd,1,@LDate)
--        set @Period=DateDiff(dd,@PrevDate,@CurDate)
----        while @Period>0 and @PrevSaldo<>0
--        while @Period>1 and @PrevSaldo<>0
--           begin
--              select @NextDate=ДатыКод, @NextRDate=ДатыРасч from d_dates where ДатыРасч=DateAdd(dd,-@Period+1,@CurDate)
----              if (select ДбтКлнКод from f_debet_srok where ДбтКлнКод=@PrevCln and ДбтДата=@NextDate) is NULL
----                begin
              if (Abs(@PrevSaldo)>0.05)
                begin            
                    exec InsertDebetSrokAllQueryInsert @PrevCln,@PrevDate,@CurDate,@PrevSaldo,@PrevSP,@PrevS                
                end
----                end
--              set @Period=@Period-1
--           end
        set @PrevCln=@DCln
        set @PrevDate=@DRealDate
        set @PrevSaldo=@DSaldo
        set @PrevSP=@DSP
        set @PrevS=@DS
      end 
    fetch next from @Debet into @DCln, @DSaldo,@DSP, @DS,@DDate,@DRealDate
  end
  set @CurDate=dateadd(dd,1,@LDate)
--  set @Period=DateDiff(dd,@DRealDate,@CurDate)
----  while @Period>0 and @DSaldo<>0
--  while @Period>1 and @DSaldo<>0
--     begin
--        select @NextDate=ДатыКод, @NextRDate=ДатыРасч from d_dates where ДатыРасч=DateAdd(dd,-@Period+1,@CurDate)
----        if (select ДбтКлнКод from f_debet_srok where ДбтКлнКод=@PrevCln and ДбтДата=@NextDate) is NULL
----           begin
            if (@DSaldo<>0)
              begin            
                 exec InsertDebetSrokAllQueryInsert @PrevCln,@DRealDate,@CurDate,@DSaldo,@DSP,@DS                
              end
----           end
--        set @Period=@Period-1
--     end
GO
/****** Object:  View [dbo].[Vw_KPK_Address_2]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_Address_2]
AS
SELECT distinct    dbo.Vw_KPK_Address_1.КлнКод, ISNULL(dbo.KLN_ADK.АдресДоставки, dbo.Vw_KPK_Address_1.КлнАдрес) AS КлнАдрес, 
                      ISNULL(dbo.KLN_ADK.КодГорода, dbo.Vw_KPK_Address_1.КодГород) AS КодГород, ISNULL(dbo.KAT_TWN.ГородНаим, 
                      dbo.Vw_KPK_Address_1.Город) AS Город, LTRIM(RTRIM(RTRIM(CAST(dbo.Vw_KPK_Address_1.КлнКод AS varchar)) 
                      + '/' + LTRIM(ISNULL(CAST(dbo.KLN_ADK.КодАдресаДоставки AS varchar), '0')))) AS КодКлн_КодАдрДоставки, 
                      dbo.Vw_KPK_Clients.КлнНаим + ' / ' + ISNULL(dbo.KLN_ADK.АдресДоставки, dbo.Vw_KPK_Address_1.КлнАдрес) AS НазваниеТочки, 
                      dbo.Vw_KPK_Clients.СотрФамилияИмя AS Менеджер
FROM         dbo.Vw_KPK_Clients RIGHT OUTER JOIN
                      dbo.Vw_KPK_Address_1 ON dbo.Vw_KPK_Clients.КлнКод = dbo.Vw_KPK_Address_1.КлнКод LEFT OUTER JOIN
                      dbo.KAT_TWN RIGHT OUTER JOIN
                      dbo.KLN_ADK ON dbo.KAT_TWN.КодГород = dbo.KLN_ADK.КодГорода ON dbo.Vw_KPK_Address_1.КлнКод = dbo.KLN_ADK.КодКлиента
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Vw_KPK_Clients"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 252
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_KPK_Address_1"
            Begin Extent = 
               Top = 6
               Left = 290
               Bottom = 114
               Right = 441
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TWN"
            Begin Extent = 
               Top = 6
               Left = 479
               Bottom = 84
               Right = 630
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KLN_ADK"
            Begin Extent = 
               Top = 84
               Left = 479
               Bottom = 192
               Right = 665
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 6750
         Alias = 2670
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Address_2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Address_2'
GO
/****** Object:  View [dbo].[Vw_KPK_Assortiment_SBR]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_Assortiment_SBR]
AS
SELECT     dbo.Vw_KPK_SBR_Ostatki.ТовКод, dbo.Vw_KPK_SBR_Ostatki.ТовНаим, dbo.Vw_KPK_SBR_Ostatki.ТовГрпНаим, 
                      dbo.Vw_KPK_SBR_Ostatki.ТовВидНаим, dbo.Vw_KPK_SBR_Ostatki.ТовАрт, dbo.Vw_KPK_SBR_Ostatki.ТовЕИ, dbo.Vw_KPK_SBR_Ostatki.ТовОтгрЕИ, 
                      dbo.Vw_KPK_SBR_Ostatki.УпакКоэф AS КоэфЕИ, dbo.Vw_KPK_SBR_Ostatki.ТовВесБрутто, dbo.Vw_KPK_SBR_Ostatki.ОстатокНаСкладе, 
                      dbo.Vw_KPK_SBR_Ostatki.СвободныйОстаток, dbo.Vw_KPK_SBR_Ostatki.ТоварВпути, dbo.Tbl_KPK_SBR_Price.Цена AS БазоваяЦена, 
                      dbo.Vw_KPK_SBR_Ostatki.КодСклада, dbo.Vw_KPK_SBR_Ostatki.НаимСклада, dbo.Vw_KPK_SBR_Ostatki.ТовГрп, 
                      dbo.Vw_KPK_SBR_Ostatki.ТовВид, dbo.Vw_KPK_SBR_Ostatki.ПорядокУDDR
FROM         dbo.Vw_KPK_SBR_Ostatki INNER JOIN
                      dbo.Tbl_KPK_SBR_Price ON dbo.Vw_KPK_SBR_Ostatki.ТовАрт = dbo.Tbl_KPK_SBR_Price.Код
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Vw_KPK_SBR_Ostatki"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 219
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Tbl_KPK_SBR_Price"
            Begin Extent = 
               Top = 6
               Left = 257
               Bottom = 99
               Right = 410
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 19
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Assortiment_SBR'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Assortiment_SBR'
GO
/****** Object:  StoredProcedure [cube].[Fill_Hist_skl]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [cube].[Fill_Hist_skl]
AS

/*  

-- обязательно добавить индекс 

CREATE NONCLUSTERED INDEX [index_HIST_SKL_ОпНаклКод] ON [dbo].[HIST_SKL] 
(
    [ОпНаклКод] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

*/

 SELECT [INVOICENUMBER],
        [INVOICETYPE],
        [INVOICESKL],
        [SKU],
        min(PercentLife) PercentLife
 into #hsl
 FROM [PR_Euras].[wms].[HIST_SKL_SKULife]
 where not ([INVOICENUMBER] is null) and
       not ([INVOICETYPE] is null) and
       not ([INVOICESKL] is null) and
       not ([SKU] is null)
 group by [INVOICENUMBER],
          [INVOICETYPE],
          [INVOICESKL],
          [SKU]
          --CREATE NONCLUSTERED INDEX ix_hsl on #hsl(INVOICENUMBER,INVOICETYPE,INVOICESKL,SKU) include (PercentLife)
          SELECT max(ДокКод) ДокКод,
        Скл,
        ФлгОпер,
        Накл
 into #zkz_nkl
 FROM dbo.zkz_nkl AS z
 where z.Тип = 4
 GROUP BY Скл,
          ФлгОпер,
          Накл
          --CrEATE NONCLUSTERED INDEX ix_zkz_nkl on #zkz_nkl(Скл,ФлгОпер,Накл) include (ДокКод)
          SELECT dbo.HIST_SKL.ОпКод,
        dbo.HIST_SKL.ОпКодТов,
        k.ТовВид,
        dbo.HIST_SKL.ОпКол,
        dbo.HIST_SKL.ОпТип,
        dbo.HIST_SKL.ОпЦена,
        dbo.HIST_SKL.ОпКодУпак,
        dbo.HIST_SKL.ОпСкл,
        dbo.HIST_SKL.ОпВозвр,
        dbo.HIST_SKL.ОпНакл,
        dbo.HIST_SKL.ОпНаклКод,
        dbo.HIST_SKL.ОпТипКлн,
        dbo.HIST_SKL.ОпТовНом,
        dbo.HIST_SKL.ОпЦена * dbo.HIST_SKL.ОпКол AS ОпСтоим,
        dbo.LIST_SKL.ОпКлн,
        dbo.LIST_SKL.ОпДатаРасч, -- ОпДатаРасч                     
        ISNULL(KLN_ADK.КодАдресаДоставки, 0) AS КодАдрДоставки, --если адреса не существует, то берем адрес клиента
        CONVERT (int, dbo.LIST_SKL.ОпСотр) AS ОпСотр,
        dbo.LIST_SKL.ОпТип AS ОпТипSKL,
        dbo.LIST_SKL.НашаФирма,
        t.ТовВесБрутто * dbo.HIST_SKL.ОпКол AS ВесБрутто,
        t.ТовВесНетто * dbo.HIST_SKL.ОпКол AS ВесНетто,
        t.Объем * dbo.HIST_SKL.ОпКол AS Объем,
        zkz_nkl.ДокКод AS КодТТН,
        ''        AS АдресДоставки,
        hsl.PercentLife,
        ws.[veterinary_doc],
        HIST_SKL.АкцияКод,
        HIST_SKL.ОпКолВозвр AS Вычерк,
        dbo.HIST_SKL.ОпЦена * dbo.HIST_SKL.ОпКолВозвр AS ВычеркСтоим
 INTO #t2
 FROM dbo.LIST_SKL
      INNER JOIN dbo.HIST_SKL ON dbo.LIST_SKL.ОпНаклКод = dbo.HIST_SKL.ОпНаклКод
      LEFT OUTER JOIN --нужно для проверки правильности адреса клиента
      dbo.KLN_ADK ON dbo.KLN_ADK.КодАдресаДоставки = dbo.LIST_SKL.КодАдрДоставки
      and KLN_ADK.КодКлиента = LIST_SKL.ОпКлн      
      LEFT OUTER JOIN --dbo.CLN_DKL ON dbo.LIST_SKL.ОпКлн = dbo.CLN_DKL.КлнКод LEFT OUTER JOIN
      dbo.KAT_TVR AS k ON HIST_SKL.ОпКодТов = k.ТовКод
      LEFT OUTER JOIN [wms].[sku] ws ON ws.[host_id] = k.ТовКод
      LEFT JOIN dbo.TVR_DEF AS t ON k.ТовКод = t.ТовКод
      LEFT OUTER JOIN #zkz_nkl zkz_nkl ON (dbo.LIST_SKL.ОпСкл = zkz_nkl.Скл) AND
      (dbo.LIST_SKL.ОпТип = zkz_nkl.ФлгОпер) AND (zkz_nkl.Накл =
      dbo.LIST_SKL.ОпНакл)
      LEFT JOIN #hsl hsl on LIST_SKL.ОпНакл = hsl.INVOICENUMBER and
      LIST_SKL.ОпТип = hsl.INVOICETYPE and LIST_SKL.ОпСкл = hsl.INVOICESKL and
      HIST_SKL.ОпКодТов = hsl.SKU
 where dbo.LIST_SKL.ОпДатаРасч >=(case
                                    when cast (cast (getdate() - 61 as date) as datetime) < '20140601' 
                                    then '20140601'
                                    else cast (cast (getdate() - 61 as date) as datetime)
                                  end)
       --where dbo.LIST_SKL.ОпДатаРасч>='20140601'
       --CREATE NONCLUSTERED INDEX ix1_t2 on #t2(КодТТН,ОпКлн,КодАдрДоставки) include (ОпСтоим)
       --CREATE NONCLUSTERED INDEX ix2_t2 on #t2(КодТТН) include (Объем,ВесБрутто)
       --CREATE NONCLUSTERED INDEX ix3_t2 on #t2(КодТТН,ОпКлн,КодАдрДоставки,НашаФирма,ТовВид) include (veterinary_doc)
       SELECT *,
        SUM(ОпСтоим) OVER (PARTITION BY КодТТН, ОпКлн, КодАдрДоставки) Отгрузка, --АдресДоставки
        SUM(Объем) OVER (PARTITION BY КодТТН) ОбъемОтгрузки,
        SUM(ВесБрутто) OVER (PARTITION BY КодТТН) ВесОтгрузки,
        SUM(CAST ([veterinary_doc] AS INT)) OVER (PARTITION BY КодТТН, ОпКлн,
        КодАдрДоставки, НашаФирма, 
        case
          when ТовВид in (1218, 1219, 1220, 1221,1222, 1231, 1232, 1351, 1357) 
          then 1 else 0
          end) РасхНаВет
 INTO #t1
 FROM #t2 t
      --CREATE CLUSTERED INDEX ix_t1 on #t1(КодТТН,КодАдрДоставки,ОпКлн,ОпКодТов)
      TRUNCATE TABLE [cube].[Hist_skl]
 INSERT INTO [cube].[Hist_skl]([ОпКод], [ОпКодТов], [ОпКодТовГрп], [ОпКодТовВид]
 , [ОпКол], [ОпТип], [ОпЦена], [ОпКодУпак], [ОпСкл], [ОпВозвр], [ОпНакл],
 [ОпНаклКод], [ОпТипКлн], [ОпТовНом], [ОпСтоим], [ОпКлн], [ОпДатаРасч],
 [КодАдрДоставки], [ОпСотр], [ОпТипSKL], [НашаФирма], [ВесБрутто], [ВесНетто],
 [КодТТН], [АдресДоставки], [Отгрузка], Объем, ЦенаТранспОтОбъема,
 ЦенаТранспОтВеса, [SippingGradientID], ОставшийсяСрокГодности, РасхНаВет,
 КолВетТов, АкцияКод, dst, Бонус_1, Бонус_2, Бонус_3, Возврат_ТР, Возврат_Эксп,
 Транс_расх, СуммаПрогноз_Акции_НДС, СуммаПрогноз_НДС, СуммаПрогноз_Акции,
 СуммаПрогноз, Прогноз_Кол, Прогноз_ЦенаУчет, Прогноз_ЦенаУчет_безНДС, Вычерк,
 ВычеркСтоим)
 SELECT [ОпКод],
        [ОпКодТов],
        k.ТовГрп [ОпКодТовГрп],
        k.ТовВид [ОпКодТовВид],
        [ОпКол],
        [ОпТип],
        [ОпЦена],
        [ОпКодУпак],
        [ОпСкл],
        [ОпВозвр],
        [ОпНакл],
        [ОпНаклКод],
        [ОпТипКлн],
        [ОпТовНом],
        [ОпСтоим],
        [ОпКлн],
        [ОпДатаРасч],
        [КодАдрДоставки],
        [ОпСотр],
        [ОпТипSKL],
        t.[НашаФирма],
        [ВесБрутто],
        [ВесНетто],
        t.[КодТТН],
        [АдресДоставки],
        [Отгрузка],
        [Объем],
        case
          when ОбъемОтгрузки = 0 then 0
          else ttn.СуммЗатр * [Объем] / ОбъемОтгрузки
        end ЦенаТранспОтОбъема,
        case
          when ВесОтгрузки = 0 then 0
          else ttn.СуммЗатр * [ВесБрутто] / ВесОтгрузки
        end ЦенаТранспОтВеса,
        CASE
          WHEN Отгрузка > 0 AND Отгрузка <= 1500 THEN 1
          WHEN Отгрузка > 1500 AND Отгрузка <= 4000 THEN 2
          WHEN Отгрузка > 4000 AND Отгрузка <= 10000 THEN 3
          WHEN Отгрузка > 10000 THEN 4
        END SippingGradientID,
        PercentLife ОставшийсяСрокГодности,
        CASE
          WHEN (РасхНаВет <> 0) AND ([veterinary_doc] = 1) THEN 1.0 / РасхНаВет
          ELSE NULL
        END РасхНаВет,
        CASE [veterinary_doc]
          WHEN 0 THEN NULL
          ELSE [veterinary_doc]
        END КолВетТов,
        АкцияКод,
        kgvt.dst,
        0 as [Бонус_1] --dbo.getBonus_byType3(ОпКодТов, k.ТовГрп, k.ТовВид, ОпКлн, ОпДатаРасч, 1, ОпСтоим) as [Бонус_1]
		,0 as [Бонус_2] -- dbo.getBonus_byType3(ОпКодТов, k.ТовГрп, k.ТовВид, ОпКлн, ОпДатаРасч, 2, ОпСтоим) as [Бонус_2]
        ,0 as [Бонус_3] -- dbo.getBonus_byType3(ОпКодТов, k.ТовГрп, k.ТовВид, ОпКлн, ОпДатаРасч, 3, ОпСтоим) as [Бонус_3]
        ,0 Возврат_ТР -- dbo.get_VozvratTR(ОпНаклКод,ОпТип,ОпВозвр,ОпКол*ОпЦена)
        ,0 Возврат_Эксп -- dbo.get_VozvratEXP(ОпНаклКод,ОпТип,ОпВозвр,ОпКол*ОпЦена)
        ,0 Транс_расх,
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then  (t.ОпКол *(case when (r.ТекЦена > r.ЦенаКатУчет * 10) 
          	AND ( r.ЦенаКатУчет > 0) 
          then r.ЦенаКатУчет else r.ТекЦена end) *(1 + r.НДС / 100)*(1 - isnull(r.ПроцентЦена, 0) / 100))
          else 0
        END СуммаПрогноз_Акции_НДС,
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then (t.ОпКол *(
          	case when ( r.ТекЦена > r.ЦенаКатУчет * 10) 
            AND (r.ЦенаКатУчет > 0) 
            then r.ЦенаКатУчет else r.ТекЦена end) *(1 + r.НДС / 100))
          else 0
        END СуммаПрогноз_НДС,
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then (t.ОпКол *(case
          when (r.ТекЦена > r.ЦенаКатУчет * 10) 
          AND (r.ЦенаКатУчет > 0) 
          then r.ЦенаКатУчет else r.ТекЦена end) *(1 - isnull(r.ПроцентЦена, 0) / 100))
          else 0
        END СуммаПрогноз_Акции,
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then (t.ОпКол *(case
          when (r.ТекЦена > r.ЦенаКатУчет * 10) 
          AND (r.ЦенаКатУчет > 0) then r.ЦенаКатУчет else r.ТекЦена end))
          else 0
        END СуммаПрогноз,
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then t.ОпКол
          else 0
        END Прогноз_Кол -- Прогноз_Кол
,
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then r.ЦенаКатУчет * t.ОпКол
          else 0
        END Прогноз_ЦенаУчет -- Прогноз_ЦенаУчет
,
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then r.ЦенаКатУчет_безНДС *
          t.ОпКол
          else 0
        END Прогноз_ЦенаУчет_безНДС, -- Прогноз_ЦенаУчет_безНДС
        Вычерк,
        ВычеркСтоим
 FROM #t1 t
      LEFT JOIN ttn_dkm ttn ON ttn.КодТТН = t.КодТТН
      LEFT JOIN dbo.KGVT AS kgvt ON t.КодАдрДоставки = kgvt.КодАдресаДоставки
      AND t.ОпКлн = kgvt.КлнКод AND t.ОпКодТов = kgvt.ТовКод
      inner join kat_tvr k ON t.ОпКодТов = k.ТовКод
      LEFT join F_PROGNOS_CURR_PRICE r on t.ОпКлн = r.КлнКод and t.ОпКодТов =
      r.ТовКод
/*
-- так было до 20140618

TRUNCATE TABLE [cube].[Hist_skl]
INSERT INTO [cube].[Hist_skl]
           ([ОпКод]
           ,[ОпКодТов]
           ,[ОпКол]
           ,[ОпТип]
           ,[ОпЦена]
           ,[ОпКодУпак]
           ,[ОпСкл]
           ,[ОпВозвр]
           ,[ОпНакл]
           ,[ОпНаклКод]
           ,[ОпТипКлн]
           ,[ОпТовНом]
           ,[ОпСтоим]
           ,[ОпКлн]
           ,[ОпДатаРасч]
           ,[КодАдрДоставки]
           ,[ОпСотр]
           ,[ОпТипSKL]
           ,[НашаФирма]
           --,[МнджКлн]
           --,[МнджАдр]
           ,[ВесБрутто]
           ,[ВесНетто]
           ,[КодТТН]
           ,[АдресДоставки]
           ,[Отгрузка]           
           ,Объем           
           ,ЦенаТранспОтОбъема
           ,ЦенаТранспОтВеса
           ,[SippingGradientID]
           ,ОставшийсяСрокГодности
           ,РасхНаВет
           ,КолВетТов
           ,АкцияКод
           ,dst
           )           
SELECT  
[ОпКод]
           ,[ОпКодТов]
           ,[ОпКол]
           ,[ОпТип]
           ,[ОпЦена]
           ,[ОпКодУпак]
           ,[ОпСкл]
           ,[ОпВозвр]
           ,[ОпНакл]
           ,[ОпНаклКод]
           ,[ОпТипКлн]
           ,[ОпТовНом]           
           ,[ОпСтоим]           
           ,[ОпКлн]
           ,[ОпДатаРасч]
           ,[КодАдрДоставки]
           ,[ОпСотр]
           ,[ОпТипSKL]
           ,t.[НашаФирма]                               
           ,[ВесБрутто]
           ,[ВесНетто]
           ,t.[КодТТН]
           ,[АдресДоставки]
           ,[Отгрузка]
           ,[Объем]           
           ,case when ОбъемОтгрузки = 0 then 0 else ttn.СуммЗатр*[Объем]/ОбъемОтгрузки end ЦенаТранспОтОбъема
           ,case when ВесОтгрузки = 0 then 0 else ttn.СуммЗатр*[ВесБрутто]/ВесОтгрузки end ЦенаТранспОтВеса
,
--1500, 1501 - 4000, 4001 -10000, 10001
CASE
WHEN Отгрузка > 0 AND Отгрузка <= 1500 THEN 1
WHEN Отгрузка > 1500 AND Отгрузка <= 4000 THEN 2
WHEN Отгрузка > 4000 AND Отгрузка <= 10000 THEN 3
WHEN Отгрузка > 10000 THEN 4
END
SippingGradientID
,PercentLife
,CASE WHEN (РасхНаВет <> 0) AND ([veterinary_doc] = 1) THEN 1.0/РасхНаВет ELSE NULL END РасхНаВет
,CASE [veterinary_doc] WHEN 0 THEN NULL ELSE [veterinary_doc] END
,АкцияКод
,kgvt.dst
FROM
(SELECT *

,SUM(ОпСтоим) OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки) Отгрузка --АдресДоставки
,SUM(Объем)  OVER (PARTITION BY КодТТН) ОбъемОтгрузки
,SUM(ВесБрутто)  OVER (PARTITION BY КодТТН) ВесОтгрузки
,SUM(CAST([veterinary_doc] AS INT)) OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки,НашаФирма, case when ТовВид in (1218,1219,1220,1221,1222,1231,1232,1351,1357) then 1 else 0 end) РасхНаВет
 FROM
(
SELECT        dbo.HIST_SKL.ОпКод, dbo.HIST_SKL.ОпКодТов, k.ТовВид, dbo.HIST_SKL.ОпКол, dbo.HIST_SKL.ОпТип, dbo.HIST_SKL.ОпЦена, dbo.HIST_SKL.ОпКодУпак, 
                         dbo.HIST_SKL.ОпСкл, dbo.HIST_SKL.ОпВозвр, dbo.HIST_SKL.ОпНакл, dbo.HIST_SKL.ОпНаклКод, dbo.HIST_SKL.ОпТипКлн, 
                         dbo.HIST_SKL.ОпТовНом,                          
                         dbo.HIST_SKL.ОпЦена * dbo.HIST_SKL.ОпКол AS ОпСтоим, 
                         dbo.LIST_SKL.ОпКлн, dbo.LIST_SKL.ОпДатаРасч,                         
                         ISNULL(KLN_ADK.КодАдресаДоставки, 0) AS КодАдрДоставки, --если адреса не существует, то берем адрес клиента
                         CONVERT(int,dbo.LIST_SKL.ОпСотр) AS ОпСотр, 
                         dbo.LIST_SKL.ОпТип AS ОпТипSKL, dbo.LIST_SKL.НашаФирма, 
                         --dbo.CLN_DKL.МнджКод AS МнджКлн, 
                         --dbo.KLN_ADK.МнджКод AS МнджАдр,                           						 
                         t.ТовВесБрутто * dbo.HIST_SKL.ОпКол AS ВесБрутто, 
                         t.ТовВесНетто * dbo.HIST_SKL.ОпКол AS ВесНетто, 
                         t.Объем * dbo.HIST_SKL.ОпКол AS Объем,                         
                         zkz_nkl.ДокКод AS КодТТН
                         ,''--COALESCE (KLN_ADK.АдресДоставки, CLN_DKL.КлнАдрес)
                          AS АдресДоставки    
                         ,hsl.PercentLife 
                         ,ws.[veterinary_doc]                     
                         ,HIST_SKL.АкцияКод
FROM            dbo.LIST_SKL INNER JOIN
                         dbo.HIST_SKL ON dbo.LIST_SKL.ОпНаклКод = dbo.HIST_SKL.ОпНаклКод LEFT OUTER JOIN
                         --нужно для проверки правильности адреса клиента
                         dbo.KLN_ADK ON dbo.KLN_ADK.КодАдресаДоставки = dbo.LIST_SKL.КодАдрДоставки and KLN_ADK.КодКлиента = LIST_SKL.ОпКлн  LEFT OUTER JOIN 
                         --dbo.CLN_DKL ON dbo.LIST_SKL.ОпКлн = dbo.CLN_DKL.КлнКод LEFT OUTER JOIN
                         dbo.KAT_TVR AS k ON HIST_SKL.ОпКодТов = k.ТовКод LEFT OUTER JOIN
                         [wms].[sku] ws ON ws.[host_id] = k.ТовКод LEFT JOIN
                         dbo.TVR_DEF AS t ON k.ТовКод = t.ТовКод LEFT OUTER JOIN                         
                         (
                            SELECT        max(ДокКод) ДокКод, Скл, ФлгОпер, Накл
                               FROM            dbo.zkz_nkl AS z
                               where  z.Тип = 4
                               GROUP BY Скл, ФлгОпер, Накл
                               
                         ) zkz_nkl ON (dbo.LIST_SKL.ОпСкл = zkz_nkl.Скл) AND (dbo.LIST_SKL.ОпТип = zkz_nkl.ФлгОпер) AND (zkz_nkl.Накл = dbo.LIST_SKL.ОпНакл)
                         LEFT JOIN 
                         (SELECT 
                                  [INVOICENUMBER]
                                  ,[INVOICETYPE]
                                  ,[INVOICESKL]
                                  ,[SKU]
                                  ,min(PercentLife) PercentLife
                                  
                              FROM [PR_Euras].[wms].[HIST_SKL_SKULife]
                              where 
                              not ([INVOICENUMBER] is null)
                              and not ([INVOICETYPE]is null)
                              and not ([INVOICESKL] is null)
                              and not ([SKU] is null)
                            group by [INVOICENUMBER]
                                  ,[INVOICETYPE]
                                  ,[INVOICESKL]
                                    ,[SKU]
                        )  hsl on LIST_SKL.ОпНакл = hsl.INVOICENUMBER and LIST_SKL.ОпТип = hsl.INVOICETYPE and  LIST_SKL.ОпСкл = hsl.INVOICESKL and HIST_SKL.ОпКодТов = hsl.SKU
                         
                         
) t 
) t 
LEFT JOIN ttn_dkm ttn ON ttn.КодТТН = t.КодТТН
LEFT JOIN dbo.KGVT AS kgvt ON t.КодАдрДоставки = kgvt.КодАдресаДоставки AND t.ОпКлн = kgvt.КлнКод AND 
                                                    t.ОпКодТов = kgvt.ТовКод



--exec cube.fill_skl_ost;                      
*/
GO
/****** Object:  View [dbo].[Vw_KPK_clients2]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_clients2]
AS
SELECT     dbo.Tbl_KPK_Address.[ФИО менеджера], dbo.Vw_kpk_clients_copy.КодКлн_КодАдрДоставки
FROM         dbo.Vw_kpk_clients_copy RIGHT OUTER JOIN
                      dbo.Tbl_KPK_Address ON dbo.Vw_kpk_clients_copy.КодКлн_КодАдрДоставки = dbo.Tbl_KPK_Address.[Код адреса]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Vw_kpk_clients_copy"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 252
            End
            DisplayFlags = 280
            TopColumn = 10
         End
         Begin Table = "Tbl_KPK_Address"
            Begin Extent = 
               Top = 6
               Left = 290
               Bottom = 84
               Right = 453
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 2430
         Alias = 2385
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_clients2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_clients2'
GO
/****** Object:  StoredProcedure [dbo].[FillBalanceOptima]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Евгений Ф. 10,05,2011
-- Заполнение баланса клиентов

--select * from KAT_KLN where КлнНаим like '%Рудный С.В%'
--select * from [T_CreditInfo] where КлнКод = 7175
--select * from KLN_ADK where --КодАдресаДоставки = 2511 
--КодКлиента = 7175
--select * from [T_CreditInfo] where КлнКод = 7175
--select * from CLN_DKL where КлнКод = 7175
--select TOP 1 InvoiceManagerID from t_allDebt where ClientID =  7175
--select * from dbo.SLD_KLN where КлнКод = 7175





CREATE PROCEDURE [dbo].[FillBalanceOptima]
AS
DECLARE @КлнКод int,@Долг money,@ПостЛимитКредита money, @dt date,@InvoiceManagerID int;
DECLARE CursorCreditInfo CURSOR 
	LOCAL FAST_FORWARD
	FOR
		SELECT a.ClientID КлнКод, sum(a.InvoiceDebt) Долг, MAX(s.ЛимитКредита) ПостЛимитКредита, a.InvoiceManagerID 
		FROM dbo.t_allDebt a 
			INNER JOIN dbo.SLD_KLN s ON a.ClientID = s.КлнКод
		GROUP BY ClientID,InvoiceManagerID

SET @dt = CONVERT(Date,GetDate());

OPEN CursorCreditInfo;

FETCH NEXT FROM CursorCreditInfo 
	INTO @КлнКод,@Долг,@ПостЛимитКредита,@InvoiceManagerID;

WHILE @@FETCH_STATUS = 0
BEGIN
	
	--EXEC [192.168.1.27].Mars_D_308.dbo.DMT_Set_Balance @КлнКод,@dt,@Долг,@ПостЛимитКредита,@InvoiceManagerID;
	print @КлнКод;
	FETCH NEXT FROM CursorCreditInfo 
		INTO @КлнКод,@Долг,@ПостЛимитКредита,@InvoiceManagerID;		
END;		

CLOSE CursorCreditInfo;
DEALLOCATE CursorCreditInfo;
GO
/****** Object:  View [dbo].[kln_g_tvr_altG]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[kln_g_tvr_altG]
AS
SELECT     КлнКод, ГрпЦен, ТовКод, ТовГрп, ТовВид, ТовЦенаРСХ, dbo.Get_Alt_Group(КлнКод, ТовКод) AS Expr1
FROM         dbo.KLN_G_TVR
GO
/****** Object:  View [dbo].[ПрайсЛист]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[ПрайсЛист]
AS
SELECT     dbo.D_TVR.ТовГрпНаим, dbo.D_TVR.ТовВидНаим, dbo.D_TVR.ТовНаим, dbo.M_RealPrice.РеальнаяЦена AS ЦенаИтог, 
                      dbo.M_RealPrice.ТовЦенаРСХ AS ЦенаКаталога, dbo.D_TVR.ТовАрт
FROM         dbo.M_RealPrice INNER JOIN
                      dbo.D_TVR ON dbo.M_RealPrice.ТовКод = dbo.D_TVR.ТовКод
GO
/****** Object:  View [dbo].[Перекресток_Edi_body]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Перекресток_Edi_body]
AS
SELECT     TOP (100) PERCENT dbo.[Заказы_Номера Перекресток].ЗкзНомИсп, dbo.[Заказы_Номера Перекресток].ЗкзНомОриг, 
                      dbo.[Заказы_Номера Перекресток].ЗкзДатаРасч, dbo.[Заказы_Номера Перекресток].ЗкзКод, dbo.[Заказы_Номера Перекресток].ДатаНаклад, 
                      edi.KorusMessages.Body, dbo.[Заказы_Номера Перекресток].ДатаСФ, dbo.[Заказы_Номера Перекресток].НомерСФ, 
                      dbo.[Заказы_Номера Перекресток].АвтокодСФ, edi.KorusMessages.Response, dbo.[Заказы_Номера Перекресток].GLN
FROM         dbo.[Заказы_Номера Перекресток] INNER JOIN
                      edi.KorusMessages ON dbo.[Заказы_Номера Перекресток].ЗкзНомИсп = edi.KorusMessages.iddoc
ORDER BY dbo.[Заказы_Номера Перекресток].ЗкзДатаРасч
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[27] 4[35] 2[10] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KorusMessages (edi)"
            Begin Extent = 
               Top = 20
               Left = 431
               Bottom = 139
               Right = 600
            End
            DisplayFlags = 280
            TopColumn = 6
         End
         Begin Table = "Заказы_Номера Перекресток"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 4
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 2025
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 2595
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Перекресток_Edi_body'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Перекресток_Edi_body'
GO
/****** Object:  StoredProcedure [edi].[CreateKonturDesadv]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[CreateKonturDesadv]	--119	
@NumberOrder int = null
as

set nocount on;

declare @oedinum int;
--declare @NumberOrder int =794363 
		
declare oedi_cursor CURSOR FOR 		
--select distinct cast(right(order_num,len(order_num)-2) as int) from @orders
--первоначальный запрос с фильтрами  !!!
SELECT [id] from [PR_Euras].[edi].[Kontur] edi_z
WHERE [DocumentType] = 'Orders' 
--учитывая что работа идет через солво то  югру проводим отдельной процедурой
and [Box]!='ugra'
and ((@NumberOrder = [id]) or
(
	([DELNOT] =1 
	--and  ordsp =1 --в окей нет ordersp  1/04/15
	 and [Desadv] is null) and (@NumberOrder is null)
	and CAST(edi_z.body.query('/eDIMessage/order/buyer/gln/text()')  AS varchar(MAX)) not in ('4607081905932')
	--запрет на мегамарт 4607081905932
))
 and [DocumentDate] > dateadd(day,-10,getdate())
;

open oedi_cursor;

FETCH NEXT FROM oedi_cursor 
INTO @oedinum

WHILE @@FETCH_STATUS = 0
BEGIN  
	--проверка выбранного заказа
    PRINT @oedinum 
    
    declare @orders table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						driver varchar(50),
						our_description varchar(150),
						internalSupplierCode varchar(50),
						transport varchar(15),
						datedespatchAdvice varchar(10),
						prise float,	
						priseNds float,
						Nds smallint,
						comments varchar(50)					
						); 	
	delete from @orders;	
	
		/*альтернативные щк  18-09-14*/
	 declare @orders_temp table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						driver varchar(50),
						our_description varchar(150),
						internalSupplierCode varchar(50),
						transport varchar(15),
						datedespatchAdvice varchar(10),
						prise float,	
						priseNds float,
						Nds smallint,
						comments varchar(50)							
						); 	
						
						declare @ordersV table (
						order_num varchar(50),
						--upc numeric(15,0),
						upc varchar(15),
						prise float,
						priseNds float,
						our_description varchar(100),
						Nds smallint
				--+isnull((select top 1 datedespatchAdvice from @orders where not(order_id is null)),'')+
						); 	
	delete from @ordersV;
	delete from @orders_temp;
	/*альтернативные щк  18-09-14*/
						
	declare @osql varchar(max);
	set @osql = 'WITH tbl1 AS
              (                    
  SELECT 
                        o.HOST_NUMBER,
                        o.DOC_NO,
                      od.line,
                      sku.upc upc,
                      od.planned_qty/uomdiv.UOM_DIV qty,
                    COALESCE (dd.driver, o.driver) driver
                    ,s.name
                    ,sku.skucode 
                    ,dd.transport  
                    ,COALESCE (dd.SHIPDATE, o.date_shipped) date_shipped
                    , row_number() over(partition BY s.name ORDER BY s.name DESC) num
                    , o.comments
                    
                    FROM orders o
                        INNER JOIN order_details od ON o.id = od.order_id
                        inner join sku s on s.id = od.sku_id 
                        inner join DELIVERY_DIRECTION dd on  dd.ID = o.DELIVERY_DIR_ID
                        inner join code_info ci on ci.sku_id = s.id and ci.disabled = ''f''
                        INNER JOIN  
                        (
                                  SELECT 
                                          s.id
                                              ,s.upc
                                              ,s.skucode
                                              ,s.name
                                               
                                    FROM wms.sku s
                                    
                                --  union all  
                               --   SELECT 
                                       
                                     --  b.sku_id
                                     --   ,b.barcode,'''',''''
                                  --  FROM wms.sku_barcode b
                              ) sku
                
                            ON od.sku_id = sku.id 
                        INNER JOIN sku uomdiv ON od.sku_id = uomdiv.id 
                    WHERE o.status <> ''I''  -- статус заказа не должен быть "Начальный"
      and (rtrim(o.HOST_NUMBER) = ''k-'+cast(@oedinum as varchar(20))+''' or rtrim(o.HOST_NUMBER) = ''action-k-'+cast(@oedinum as varchar(20))+''' )     
order by od.line  )
            select   HOST_NUMBER, DOC_NO, line,upc, qty,driver, replace(replace(name,CHR(26),''''),CHR(3), '''')name
                    ,skucode ,transport  ,date_shipped ,comments from  tbl1 
                    where num=1 and  qty>0  '
                 --   and rtrim(o.HOST_NUMBER) = ''k-'+cast(@oedinum as varchar(20))+''' - первоначальный вариант без акционных заказов
                    /*
                    od.qty/uomdiv.UOM_DIV qty --                    
                    WHERE  rtrim(o.HOST_NUMBER) = ''k-'+cast(@oedinum as varchar(20))+'''	   
                    order by od.line  )    так было до 20140411*/
                     
                    
                    /*replace(name,CHR(26),'''')name --проверка по одному символу*/
	/*
	set @osql = '
					SELECT 
						o.HOST_NUMBER,
						o.DOC_NO,
					  od.line,
					  sku.upc upc,
					  od.qty/uomdiv.UOM_DIV qty,
					o.driver
					,s.name
					,s.id 
					,dd.transport  
					,o.date_shipped
					
					FROM orders o
						INNER JOIN order_details od ON o.id = od.order_id
						inner join sku s on s.id = od.sku_id 
						inner join DELIVERY_DIRECTION dd on  dd.ID = o.DELIVERY_DIR_ID
						inner join code_info ci on ci.sku_id = s.id and ci.disabled = ''f''
						INNER JOIN  
						(
								  SELECT 
										  s.id
											  ,s.upc
											   
									FROM wms.sku s
							        
								  union all  
								  SELECT 
							           
									   b.sku_id
										,b.barcode
									FROM wms.sku_barcode b
							  ) sku
				
							ON od.sku_id = sku.id 
						INNER JOIN sku uomdiv ON od.sku_id = uomdiv.id 
					WHERE rtrim(o.HOST_NUMBER) = ''k-'+cast(@oedinum as varchar(20))+'''	
					order by od.line			
				'*/
	
	--order_id OrderResponceNumber-- номер накладной он будет номером ответа на заказа в EDI	
	insert into	@orders(order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice,comments)
	execute (@osql) at wms
	
	
		--/*альтернативные щк  18-09-14*/
		--select * from  @orders
	insert into @orders_temp (order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice,comments)
	select order_num,order_id,line,sb.upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice,comments from @orders ord
	join [PR_Euras].[edi].[SKU_BARCODE]  sb on ord.internalSupplierCode=sb.[SKUCODE]
	
	--select * from  @orders_temp
	
	delete from @orders;
	insert into	@orders(order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice,comments)
	select order_num,order_id,line, upc ,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice,comments from @orders_temp
	/*альтернативные щк  18-09-14*/
	
	/*попытка укорить обработку через заранее найденый код заказа 20/03/15 тест  */
	
	declare @oedinumcod int = 0

	select  @oedinumcod = ЗкзКод
	FROM         dbo.LIST_ZKZ   where [ЗкзНом] like 'k-'+cast(@oedinum as varchar(20)) 
	
	
	-- select @oedinumcod
	/* к попытка укорить обработку через заранее найденый код заказа 20/03/15 */
	
	insert into	@ordersv(order_num,our_description,prise, upc ,priseNds,Nds)                              
	SELECT  null,Sbar.ТовНаим, ROUND(ОпЦена/( 1+ ( Ktv.[НДС]/100 )),4) ,Sbar.[UPC],ОпЦена,Ktv.[НДС]
  FROM         dbo.LIST_SKL AS nakl 
					--INNER JOIN --прверка на существование сф деакт 07/05/15
     --                 dbo.list_sf AS sf ON nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ 
                      INNER JOIN
                      dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл INNER JOIN
                      dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод INNER JOIN
                      dbo.KLN_ADK ON nakl.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки
                      INNER JOIN  [PR_Euras].[dbo].[HIST_SKL] on nakl.[ОпНаклКод]=[HIST_SKL].[ОпНаклКод]
                      INNER JOIN [PR_Euras].[dbo].[KAT_TVR] Ktv on  [PR_Euras].[dbo].[HIST_SKL].ОпКодТов =Ktv.[ТовКод]
                      INNER JOIN  [PR_Euras].[edi].[SKU_BARCODE] Sbar  on Sbar.[ТовКод]=Ktv.[ТовКод]
                      where ЗкзКод=@oedinumcod --попытка ускорить обработку  20/03/15 тест
                      --[ЗкзНом] like 'k-'+cast(@oedinum as varchar(20))
                      --and (ABS(DATEDIFF(day, zak.ЗкзДатаРасч, DATEADD(second, CONVERT(numeric, sf.ДатаСФ), CONVERT(datetime, '31.12.1969 19:00:00', 
                      --104)))) BETWEEN 0 AND 10) --прверка на существование сф деакт 07/05/15
                     -- order by Ktv.ТовНаим --попытка ускорить обработку  20/03/15 рабочая +
                      
	

	/*вставка цен из накладной актив 07/05/15 */
	 update o
    set  o.prise=os.prise,o.priseNds=os.priseNds,o.Nds=os.Nds--,o.order_num=os.order_num
     from  @orders  o                                                 
     INNER JOIN @ordersv os on os.upc=o.upc
     	  
    
    	--проверка данных во временной таблице
	--select* from 	@orders
	--select* from 	@ordersv
    
         --если сформирован ответ то заказ точно был в слово 
    IF (EXISTS(SELECT * FROM @orders))
                                                                         
		   /*подготовка итогов тест*/
		DECLARE @order_id int
		DECLARE @nom_tek_nakl bigint
		DECLARE @order_id_date date  
		DECLARE @datetoship date =isnull((select top 1 datedespatchAdvice from @orders where not(datedespatchAdvice is null)),'')
		
		if @datetoship<getdate()
		BEGIN
			 set @datetoship=getdate()
		end
		
		--select @datetoship
		
		select top 1 @order_id= order_id from @orders where not(order_id is null)
		select top 1 @order_id_date=cast (datedespatchAdvice as date) from @orders where not(order_id is null)
		
		
		
		
		
		if @order_id_date is null 
		begin
		 set @order_id_date =  getdate()
		end
		
		
		select @nom_tek_nakl =[ОпНаклКод] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date)
		and ОпНакл = @order_id
		
		--print @nom_tek_nakl
		
		/*обновление через накладную в2*/
		update o
		set  o.prise=([ОпЦена]*(1-(НДС/(100+НДС)))),o.priseNds=[ОпЦена],o.Nds=НДС
		from  @orders  o  
		 inner join (
		SELECT s2.ТовАрт,s2.ТовНаим,ОпЦена,НДС
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl) temp on temp.ТовАрт=o.internalSupplierCode

	
	
	 --<!ELEMENT СуммаОпт -- сумма поставки без НДС -->
		declare @sum_opt_nonds decimal(10,2)
		SELECT @sum_opt_nonds=sum(([ОпЦена]*(1-(НДС/(100+НДС))))*ОпКол)
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl
		  
		
		  
		  
		  --<!ELEMENT СуммаОптВклНДС -- сумма поставки с НДС -->
		declare @sum_opt_nds decimal(10,2)
		  SELECT  @sum_opt_nds =Sum([ОпКол]*[ОпЦена])
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl

		--<!ELEMENT СуммаНДС -- сумма НДС поставки -->
		declare @clear_nds decimal(10,2)
		set @clear_nds=@sum_opt_nds-@sum_opt_nonds

--тестирование полученных агрегатов 
		--select @sum_opt_nonds,@sum_opt_nds,@clear_nds
		--select @order_id,@order_id_date,@nom_tek_nakl
	
	 /*подготовка итогов тест конец*/
	
	
	                                                                        
      BEGIN
    
								DECLARE @idoc int
								DECLARE @doc xml
								DECLARE @PartnerIln varchar(15)
								DECLARE @OurFirmIln varchar(15)
								DECLARE @DocType varchar(15)
								DECLARE @originOrder varchar(15)
								DECLARE @originOrderDate varchar(10)
								DECLARE @idmessage varchar(10)
								
								  
								
								(select @doc = body,@PartnerIln = cast( Body.query('/eDIMessage/interchangeHeader/sender/text()') as varchar(max))
								,@OurFirmIln = cast( Body.query('/eDIMessage/interchangeHeader/recipient/text()') as varchar(max))
								,@DocType = [DocumentType]  
								--,@originOrder= cast( Body.query('/eDIMessage/order/@number/text()') as varchar(max))
								,@originOrderDate= Body.value('(/eDIMessage/order/@date)[1]', 'varchar(10)')
								,@originOrder= Body.value('(/eDIMessage/order/@number)[1]', 'varchar(max)' 
								)
								from edi.[Kontur] km where id = @oedinum); 	
								
								set @idmessage=	cast(abs(DATEDIFF ( hh , cast(@originOrderDate as date) , GETDATE() ))+isnull((select top 1  order_id  from @orders where not(order_id is null)),'') as varchar(10))
							   -- select @idmessage
								
							  
							     
								
								EXEC sp_xml_preparedocument @idoc OUTPUT, @doc;
								DECLARE @OrderResponseLines xml;
								DECLARE @desadv xml;
								
								
								
							
--select @doc,@PartnerIln,@OurFirmIln,@idoc

--select @idoc,@doc,@originOrder


													

								WITH 
								EDI_PARTIES AS
								(
												SELECT * FROM OPENXML (@idoc, '/eDIMessage/order',1)
															 WITH (	Buyer			varchar(25)         './buyer/gln',
																	Seller			varchar(25)         './seller/gln',
																	DeliveryPoint   varchar(25)         './deliveryInfo/shipTo/gln',
																	Invoice			varchar(25)         './invoicee/gln'
																	
																	)
								)					
							--шапка
								,EDI_ORDER_T AS
								(
									SELECT * FROM OPENXML (@idoc, '/eDIMessage/order/lineItems/lineItem',2)
															 WITH (
																 LineNumber       int         './LineNumber', --?
																	ean				varchar(25)	'./gtin', --?
																	qty				float		'./requestedQuantity',
																	BuyerItemCode	varchar(40) './internalBuyerCode',
																	nametov varchar(100) './description',
																	psi varchar(4) './requestedQuantity/@unitOfMeasure')

								)
								,EDI_ORDER AS
								(
									SELECT 
																 LineNumber      ,
																	
																	case 
																	when ean is null then BuyerItemCode	
																	when ean is  not null then ean	
																	end ean,
																	qty	,
																	BuyerItemCode,
																	nametov,
																	psi  from EDI_ORDER_T

								)
									
		---select * from 	EDI_ORDER --проходим по строкам заказа										
		--	select *	FROM	@orders 					
								,PLAN_TO_SHIPPING AS (
												SELECT 						
													LineNumber,
													ean,
													--BuyerItemCode,
													sum(qty) qty
													,internalSupplierCode
													,psi
													,our_description
													,line
													,prise ,	
													priseNds ,
													Nds
													
												 FROM	(
															SELECT 
																--'k-'+cast(@oedinum as varchar(25)) order_num, -- номер заказа
																		
																edio.LineNumber,
																edio.ean,
																--BuyerItemCode,
																edio.qty need_qty,
																edio.psi,
																o.qty,	
																o.internalSupplierCode,
																o.our_description,
																o.line,				
																row_number() over (partition by o.line order by LineNumber) rw
																,o.prise ,	
																o.priseNds ,
																o.Nds 
																														
															FROM  EDI_ORDER  edio
																JOIN @orders o ON cast(right(order_num,len(order_num)-(CHARINDEX('k-', order_num)+1)) as int) = @oedinum and o.upc = edio.ean				
												) tab	WHERE rw = 1
												GROUP BY LineNumber,ean
												,internalSupplierCode
												,our_description
												,line
												,prise ,priseNds ,Nds
												,psi
												--,BuyerItemCode
								)
																				
							,ADD_TO_SHIPPING AS (
								select order_num,order_id,line,upc ean,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice
								,prise ,	
								priseNds ,
								Nds 
								from  @orders
								where upc not in(select ean from PLAN_TO_SHIPPING)
								)
					
					/*select '','',ean,'',internalSupplierCode,line,our_description, 'Changed',
					LTRIM(STR (ISNULL(qty,0) ,20,3)) despatchedQuantity,
					'PCE' UnitOfMeasure	 from ADD_TO_SHIPPING --order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice*/
									
							,_OrderResponseLines AS
								(
									select	eo.LineNumber,
																	--eo.LineNumber OrderLineNumber,
																	eo.ean ean,
																	eo.BuyerItemCode internalBuyerCode,
																	ps.internalSupplierCode,
																	ps.line orderLineNumber,
																	ps.our_description,
																	CASE 
																		WHEN ISNULL(ps.qty,0)>0 AND ISNULL(ps.qty,0)<>eo.qty THEN 3
																		WHEN ISNULL(ps.qty,0)=eo.qty THEN 5
																		ELSE 7
																	END LineItemStatus,	
																	--eo.qty,
																	LTRIM(STR (ISNULL(ps.qty,0) ,20,3)) despatchedQuantity,
																	eo.psi UnitOfMeasure
																	,cast(ps.prise as numeric(15,2)) prise,	
																	ps.priseNds ,
																	ps.Nds 	 --,eo.qty,ISNULL(ps.qty,0) t		
															 from EDI_ORDER eo LEFT JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
															 where  ISNULL(ps.qty,0)>0
															 union all
						/*старый вариант*/									 
					/* select '',ean,'',internalSupplierCode,line,our_description, 3,
					LTRIM(STR (ISNULL(qty,0) ,20,3)) despatchedQuantity,
					'PCE' UnitOfMeasure	 from ADD_TO_SHIPPING*/
					
					
					
					select '',ats.ean,'',ats.internalSupplierCode,ats.line,ats.our_description, 3,
					LTRIM(STR (ISNULL(ats.qty,0) ,20,3)) despatchedQuantity,
					'PCE' UnitOfMeasure,ats.prise ,ats.priseNds ,ats.Nds	 from 	ADD_TO_SHIPPING ats	
																	/*блок модифицирован, чтоб отсечь дубли по штрих коду 
																	проеряю именно номер позиции в данных от солво  */
																	inner join @orders ord on ats.EAN=ord.upc
																	where  ord.line not in (select	ord.line from EDI_ORDER eo LEFT JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
															 inner join @orders ord on eo.EAN=ord.upc)
															  
									
								)
				--select * from _OrderResponseLines				
								
								
								,OrderResponseLines AS
								(select OrderResponseLines = 
								'<lineItems>'+
												--	cast((
																													
														
												--			 --такая фигня нагарожена из-за вложености line  
												--			 select
												--			 (
												--			 --select top 1 * 
												--			 select   ean as gtin ,internalBuyerCode
												--			 ,internalSupplierCode
												--			 ,orderLineNumber
												--			 , our_description as description
												--			 ,UnitOfMeasure as 'despatchedQuantity/@unitOfMeasure'
												--			 ,despatchedQuantity
															 
												--			 from _OrderResponseLines [Line-Item] 
												--			 where [Line-Item].ean = [Line].ean FOR XML PATH ('lineItem'),TYPE,ELEMENTS
												--			 --FOR XML Auto,TYPE,ELEMENTS
												--			 )  
												--			 from _OrderResponseLines [Line] 															 
												--			 FOR XML Auto,TYPE,ELEMENTS
															 
															 
											 
											 --) as varchar(max))
											 cast(	
											 --пробую упростить схему

															 (
		
															 select   [Line-Item].ean as gtin 
															 --,CASE 
																--		WHEN internalBuyerCode is not null THEN internalBuyerCode
																--		ELSE internalSupplierCode
																--	END  
															 ,ISNULL(internalBuyerCode,null)
															-- ,internalSupplierCode /*альтернативные щк  18-09-14*/
															 ,orderLineNumber
															 , our_description as description
															 ,UnitOfMeasure as 'despatchedQuantity/@unitOfMeasure'
															 ,despatchedQuantity
															 ,cast((prise*despatchedQuantity) as numeric(15,2)) as netAmount
															 ,Nds  as vATRate 
															 ,cast((priseNds*despatchedQuantity) as numeric(15,2)) as amount 															 
															 from _OrderResponseLines [Line-Item] 
															 where  our_description is not null
															 FOR XML PATH ('lineItem'),TYPE,ELEMENTS
															 													 
											 
											    ) as varchar(max))
											     +'<totalSumExcludingTaxes>'+isnull(cast(@sum_opt_nonds as varchar(max) ),'')+'</totalSumExcludingTaxes>'+ 
											    +'<totalVATAmount>'+isnull(cast(@clear_nds as varchar(max) ),'')+'</totalVATAmount>'+ 
											    +'<totalAmount>'+isnull(cast(@sum_opt_nds as varchar(max) ),'')+'</totalAmount>'+ 
								+'</lineItems>')
			--select cast(OrderResponseLines as xml)from OrderResponseLines					
								
								,desadv AS
								(
								select desadv = 
								'<eDIMessage'
								+' id="'+@idmessage+'"'
								--+' id="'+isnull((select top 1  order_id  from @orders where not(order_id is null)),'')+'"' 
								+' creationDateTime="'+ convert(varchar(10),getdate(),20)+'"'
								+'>'+
									'<interchangeHeader>
										<sender>'+(select top 1 Seller from EDI_PARTIES) +'</sender>
										<recipient>'+@PartnerIln+'</recipient>
										<documentType>DESADV</documentType>
										<isTest>1</isTest>
									</interchangeHeader>
									<despatchAdvice'
																		+' number="'+isnull((select top 1 comments from @orders where not(order_id is null)),'')
		--							+' number="'+isnull((select top 1 [НомНаклНашФ] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date)
		--and ОпНакл = @order_id and	[НомНаклНашФ]>0	),'')
		--старый вариант ид ло,сейчас из солво  
		+'"' 
/* в связи с тем что дата это дата накладной а у нас происходит запаздывание экспорта в витрину  беру дату генерации отчета */	
--+' date="'+isnull((select top 1 datedespatchAdvice from @orders where not(datedespatchAdvice is null)),'')+'"'								
									+' date="'
									--+isnull((select top 1 datedespatchAdvice from @orders where not(order_id is null)),'')
									+ convert(varchar(10),@datetoship,20)
									+'"'
									+'>'
									+'<originOrder'
									+' number="'+@originOrder+' "' 
									+' date="'+@originOrderDate+'"'
									+'/>'
									--
									--+'<OrderResponse-Header>
									--<OrderResponseNumber>'+isnull((select top 1 order_id from @orders where not(order_id is null)),'')+'</OrderResponseNumber>'+
									--'<OrderResponseDate>'+convert(varchar(10),getdate(),20)+'</OrderResponseDate>'+
									----'<ExpectedDeliveryDate>'+cast( @doc.query('/Document-Order/Order-Header/ExpectedDeliveryDate/text()') as varchar(10))+'</ExpectedDeliveryDate>'+
									--'<OrderNumber>'+rtrim(substring(cast( @doc.query('/Document-Order/Order-Header/OrderNumber/text()') as varchar(max)),1,20))+'</OrderNumber>'+
									--'<OrderDate>'+cast( @doc.query('/Document-Order/Order-Header/OrderDate/text()') as varchar(10))+'</OrderDate>'+
									--'<ResponseType>'+
									--		(
									--			CASE WHEN NOT EXISTS( SELECT * FROM EDI_ORDER eo 
									--											LEFT JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
									--									WHERE ISNULL(ps.qty,0)<>eo.qty )
									--									THEN '29' --заказ полностью принят
									--				 WHEN NOT EXISTS( SELECT * FROM EDI_ORDER eo 
									--											LEFT JOIN PLAN_TO_SHIPPING ps on eo.ean = ps.ean
									--									WHERE ISNULL(ps.qty,0)<>0 )
									--									THEN '27' --заказ не принят
									--				ELSE '4'					
									--				END								
									--		)	
									--		+'</ResponseType>
									--</OrderResponse-Header>'
									+
									--'<OrderResponse-Transport></OrderResponse-Transport>'+
									--'<OrderResponse-Parties>'+
									/*cast( (select @doc.query('Document-Order/Order-Parties/Buyer')) as varchar(max))+
									cast( (select @doc.query('Document-Order/Order-Parties/Seller')) as varchar(max))+
									cast( (select @doc.query('Document-Order/Order-Parties/DeliveryPoint')) as varchar(max))+*/
									+'<seller><gln>'+(select top 1 Seller from EDI_PARTIES) +'</gln></seller>'+
									+'<buyer><gln>'+(select top 1 Buyer from EDI_PARTIES) +'</gln></buyer>'+
									+'<deliveryInfo>
											<estimatedDeliveryDateTime>'
											--+isnull((select top 1 datedespatchAdvice from @orders where not(datedespatchAdvice is null)),'')
											+ convert(varchar(10),@datetoship,20)
											+'</estimatedDeliveryDateTime>
											 <shipFrom><gln>'+(select top 1 Seller from EDI_PARTIES) +'</gln>
											 </shipFrom>
											<shipTo><gln>'+(select top 1 DeliveryPoint from EDI_PARTIES) +'</gln>
											</shipTo>
											<transportation>
											<transportMode>roadTransport</transportMode>
											<vehicleNumber>'
											+isnull((select top 1 transport from @orders where not(transport is null)),'')+
											'</vehicleNumber>
											<nameOfCarrier>'
											+isnull((select top 1 driver from @orders where not(driver is null)),'')+
											'</nameOfCarrier>
											</transportation> 
									</deliveryInfo>'+
									--  '</OrderResponse-Parties>'+
									--+replace(cast( (select @doc.query('Document-Order/Order-Parties')) as varchar(max)),'Order-Parties','OrderResponse-Parties')+									
									+cast((select OrderResponseLines from OrderResponseLines) as varchar(max))+
									--+'<OrderResponse-Summary>'+
									--+cast( (select @doc.query('Document-Order/Order-Summary/TotalLines')) as varchar(max))+
									--+'</OrderResponse-Summary>'
									+'</despatchAdvice>'
								+'</eDIMessage>'
								)
						    
							    --select * from _OrderResponseLines;
								select @desadv = desadv from desadv; -- XML ГОТОВ ДЛЯ ПЕРЕДАЧИ ПРОВАЙДЕРУ
								 
    
								--удаление представления документа 
								exec sp_xml_removedocument @idoc;
								
								--проверяю что во временной таблице
								select @desadv
								
								
								declare @NumberOurDecadv int = null
								select @NumberOurDecadv =[НомНаклНашФ] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date) and ОпНакл = @order_id
								print @NumberOurDecadv
								
							if @clear_nds is not null and @NumberOurDecadv is not null
							begin
								--select @desadv, @oedinum	
								--ОБНОВЛЕНИЕ ТАБЛИЦЫ С СООБЩЕНИЯМИ
								-- допонительно записываю дату обновления ordsp_time
								UPDATE [PR_Euras].edi.[Kontur]
								set 
								Desadv = @desadv,
								desadv_time=cast(getdate() as smalldatetime )
								WHERE [DocumentType] = 'Orders'
								and [id] = @oedinum
								and Desadv is null
								
							END;	--select @desadv,@login,@password
									--select @idoc,@doc,@originOrder,@originOrderDate
																
								    
		END;
    
    
    
    
    
    
FETCH NEXT FROM oedi_cursor 
INTO @oedinum
END 
CLOSE oedi_cursor;
DEALLOCATE oedi_cursor;
GO
/****** Object:  StoredProcedure [edi].[CreateInfoAptTDesadv]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[CreateInfoAptTDesadv]	--119	
@NumberOrder varchar =null
as

set nocount on;
/*формат для инфоаптеки в  тюмени*/
declare @oedinum varchar(20);
--declare @NumberOrder varchar(20) =null-- ='s74007842'


SELECT zak.ЗкзНом	 
  FROM [PR_Euras].[dbo].[LIST_SKL] nakl
  join [dbo].[KLN_ADK] cln on cln.[КодКлиента] =nakl.[ОпКлн] and cln.КодАдресаДоставки=nakl.КодАдрДоставки
   INNER JOIN  dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл 
   INNER JOIN  dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод 
  where [КодАдрДоставки] >0
   and  len(cln.[ExtFile])>4
   and [ОпДатаРасч] between dateadd(day,-20,getdate()) and getdate() 
   and zak.ЗкзНом not in
		( SELECT  [DocumentNumber] from [PR_Euras].[edi].[Kontur] edi_z
		WHERE [DocumentType] = 'OrdersSvd' 
		and [stamp] > dateadd(day,-20,getdate()) and desadv is not  null)
		and cln.[ExtFile] like ('%;i%')	
		and (@NumberOrder = zak.ЗкзНом or @NumberOrder is null)

/*старый вариант */
--declare oedi_cursor CURSOR FOR 		
--  SELECT distinct [DocumentNumber] from [PR_Euras].[edi].[Kontur] edi_z
--join dbo.LIST_ZKZ  zk on zk.[ЗкзНом] = edi_z.[DocumentNumber]
----join [dbo].[CLN_DKL] cln on cln.[КлнКод] =zk.[ЗкзКлн]
--join [dbo].[KLN_ADK] cln on cln.[КодКлиента] =zk.[ЗкзКлн]
--WHERE [DocumentType] = 'OrdersSvd' 
----только аптечные заказы + проверка по существоанию адреса
--and [Box]='Apt ' and cln.[ExtFile] like ('%;i%') and  len(cln.ExtFile)>3 
--and zk.[зкздатарасч] between dateadd(day,-30,edi_z.[stamp]) and  dateadd(day,30,edi_z.[stamp])
--and ((@NumberOrder = [DocumentNumber]) or
--(
--	( [Desadv] is null) and (@NumberOrder is null)
--))
-- and [stamp] > dateadd(day,-20,getdate())
-- and [Desadv] is null
--;

open oedi_cursor;

FETCH NEXT FROM oedi_cursor 
INTO @oedinum

WHILE @@FETCH_STATUS = 0
BEGIN  
	--проверка выбранного заказа
    PRINT @oedinum 
    --тест  9/04/15

    
    declare @orders table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						driver varchar(50),
						our_description varchar(150),
						internalSupplierCode varchar(50),
						transport varchar(15),
						datedespatchAdvice varchar(10),
						prise float,	
						priseNds float,
						Nds smallint					
						); 	
	delete from @orders;	
	
		/*альтернативные щк  18-09-14*/
	 declare @orders_temp table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						driver varchar(50),
						our_description varchar(150),
						internalSupplierCode varchar(50),
						transport varchar(15),
						datedespatchAdvice varchar(10),
						prise float,	
						priseNds float,
						Nds smallint							
						); 	
						
						declare @ordersV table (
						order_num varchar(50),
						upc numeric(15,0),
						prise float,
						priseNds float,
						our_description varchar(100),
						Nds smallint
				
						); 	
	delete from @ordersV;
	delete from @orders_temp;
	/*альтернативные щк  18-09-14*/
						
	declare @osql varchar(max);
	set @osql = 'WITH tbl1 AS
              (                    
  SELECT 
                        o.HOST_NUMBER,
                        o.DOC_NO,
                      od.line,
                      sku.upc upc,
                      od.planned_qty/uomdiv.UOM_DIV qty,
                    o.driver
                    ,s.name
                    ,sku.skucode 
                    ,dd.transport  
                    ,o.date_shipped
                    , row_number() over(partition BY s.name ORDER BY s.name DESC) num
                    
                    FROM orders o
                        INNER JOIN order_details od ON o.id = od.order_id
                        inner join sku s on s.id = od.sku_id 
                        inner join DELIVERY_DIRECTION dd on  dd.ID = o.DELIVERY_DIR_ID
                        inner join code_info ci on ci.sku_id = s.id and ci.disabled = ''f''
                        INNER JOIN  
                        (
                                  SELECT 
                                          s.id
                                              ,s.upc
                                              ,s.skucode
                                              ,s.name
                                               
                                    FROM wms.sku s
                                    
                                  union all  
                                  SELECT 
                                       
                                       b.sku_id
                                        ,b.barcode,'''',''''
                                    FROM wms.sku_barcode b
                              ) sku
                
                            ON od.sku_id = sku.id 
                        INNER JOIN sku uomdiv ON od.sku_id = uomdiv.id 
                    WHERE o.status <> ''I''  -- статус заказа не должен быть "Начальный"
      and (rtrim(o.HOST_NUMBER) = ltrim(rtrim('''+cast(@oedinum as varchar(20))+''')) or rtrim(o.HOST_NUMBER) = ltrim(rtrim(''action-'+cast(@oedinum as varchar(20))+''')) )    
order by od.line  )
            select   HOST_NUMBER, DOC_NO, line,upc, qty,driver, replace(replace(name,CHR(26),''''),CHR(3), '''')name
                    ,skucode ,transport  ,date_shipped  from  tbl1 
                    where num=1 and  qty>0  '

	
	--order_id OrderResponceNumber-- номер накладной он будет номером ответа на заказа в EDI	
	insert into	@orders(order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	execute (@osql) at wms
	
	
		/*альтернативные щк  18-09-14*/
		--select * from  @orders
	--insert into @orders_temp (order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	--select order_num,order_id,line,sb.upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice from @orders ord
	--join [PR_Euras].[edi].[SKU_BARCODE]  sb on ord.internalSupplierCode=sb.[SKUCODE]
	
	--select * from  @orders_temp
	
	--delete from @orders;
	--insert into	@orders(order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	--select order_num,order_id,line, upc ,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice from @orders_temp
	/*альтернативные щк  18-09-14*/
	
	/*попытка укорить обработку через заранее найденый код заказа 20/03/15 тест  */
	
	--select * from  @orders
	
	declare @oedinumcod int = 0

	select  @oedinumcod = ЗкзКод
	FROM         dbo.LIST_ZKZ   where [ЗкзНом] like cast(@oedinum as varchar(20)) 
	
	print @oedinumcod
	 
	/* к попытка укорить обработку через заранее найденый код заказа 20/03/15 */
	
	insert into	@ordersv(order_num,our_description,prise, upc ,priseNds,Nds)                              
	SELECT  [НомерСФ],Sbar.ТовНаим, ROUND(ОпЦена/( 1+ ( Ktv.[НДС]/100 )),4) ,Sbar.[UPC],ОпЦена,Ktv.[НДС]
  FROM         dbo.LIST_SKL AS nakl INNER JOIN
                      dbo.list_sf AS sf ON nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ INNER JOIN
                      dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл INNER JOIN
                      dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод INNER JOIN
                      dbo.KLN_ADK ON nakl.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки
                      INNER JOIN  [PR_Euras].[dbo].[HIST_SKL] on nakl.[ОпНаклКод]=[HIST_SKL].[ОпНаклКод]
                      INNER JOIN [PR_Euras].[dbo].[KAT_TVR] Ktv on  [PR_Euras].[dbo].[HIST_SKL].ОпКодТов =Ktv.[ТовКод]
                      INNER JOIN  [PR_Euras].[edi].[SKU_BARCODE] Sbar  on Sbar.[ТовКод]=Ktv.[ТовКод]
                      where ЗкзКод=@oedinumcod --попытка ускорить обработку  20/03/15 тест
                      --[ЗкзНом] like 'k-'+cast(@oedinum as varchar(20))
                      and (ABS(DATEDIFF(day, zak.ЗкзДатаРасч, DATEADD(second, CONVERT(numeric, sf.ДатаСФ), CONVERT(datetime, '31.12.1969 19:00:00', 
                      104)))) BETWEEN 0 AND 10)
                     -- order by Ktv.ТовНаим --попытка ускорить обработку  20/03/15 рабочая +
                      
	

	/*обновление через  эсф*/
	/* update o
    set  o.prise=os.prise,o.priseNds=os.priseNds,o.Nds=os.Nds--,o.order_num=os.order_num
     from  @orders  o                                                 
     INNER JOIN @ordersv os on os.upc=o.upc*/
     	  
    
    	--проверка данных во временной таблице
	--select* from 	@orders
	--select* from  @ordersv

    
         --если сформирован ответ то заказ точно был в слово 
    IF (EXISTS(SELECT * FROM @orders))
                                                                         
		   /*подготовка итогов тест*/
		DECLARE @order_id int
		DECLARE @nom_tek_nakl bigint
		DECLARE @order_id_date date  
		DECLARE @ourfirmname  varchar(30)
		DECLARE @clnfirmname  varchar(30)
		select top 1 @order_id= order_id from @orders where not(order_id is null)
		select top 1 @order_id_date=cast (datedespatchAdvice as date) from @orders where not(order_id is null)
		
		select @nom_tek_nakl =[ОпНаклКод] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-5,isnull(@order_id_date,getdate())) and DATEADD(day,2,isnull(@order_id_date,getdate()))
		and ОпНакл = @order_id
		
		select @ourfirmname = rtrim( ltrim([КлнФс]))+cast([КлнНаим] as varchar(30) ) FROM [PR_Euras].[dbo].[LIST_SKL] ls
		inner join [PR_Euras].[dbo].[KAT_KLN] cd on ls.НашаФирма=cd.КлнКод where [ОпНаклКод] =@nom_tek_nakl
		
		select @clnfirmname =rtrim( ltrim([КлнФс]))+ltrim(cast([КлнНаим] as varchar(30) )) FROM [PR_Euras].[dbo].[LIST_SKL] ls
		inner join [PR_Euras].[dbo].[KAT_KLN] cd on ls.ОпКлн=cd.КлнКод where [ОпНаклКод] =@nom_tek_nakl
		
		--select @ourfirmname,@nom_tek_nakl,@clnfirmname
		
		/*обновление через накладную в2*/
		update o
		set  o.prise=([ОпЦена]*(1-(НДС/(100+НДС)))),o.priseNds=[ОпЦена],o.Nds=НДС
		from  @orders  o  
		 inner join (
		SELECT s2.ТовАрт,s2.ТовНаим,ОпЦена,НДС
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl) temp on temp.ТовАрт=o.internalSupplierCode

	
	
	 --<!ELEMENT СуммаОпт -- сумма поставки без НДС -->
		declare @sum_opt_nonds decimal(10,2)
		SELECT @sum_opt_nonds=sum(([ОпЦена]*(1-(НДС/(100+НДС))))*ОпКол)
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl
		  
		
		  
		  
		  --<!ELEMENT СуммаОптВклНДС -- сумма поставки с НДС -->
		declare @sum_opt_nds decimal(10,2)
		  SELECT  @sum_opt_nds =Sum([ОпКол]*[ОпЦена])
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl

		--<!ELEMENT СуммаНДС -- сумма НДС поставки -->
		declare @clear_nds decimal(10,2)
		set @clear_nds=@sum_opt_nds-@sum_opt_nonds

--тестирование полученных агрегатов 
		--select @sum_opt_nonds,@sum_opt_nds,@clear_nds
		--select @order_id,@order_id_date,@nom_tek_nakl
	
	 /*подготовка итогов тест конец*/
	
	
	                                                                        
      BEGIN
    
								DECLARE @idoc int
								DECLARE @doc xml
								DECLARE @PartnerIln varchar(15)
								DECLARE @OurFirmIln varchar(15)
								DECLARE @DocType varchar(15)
								DECLARE @originOrder varchar(40)
								DECLARE @originOrderDate varchar(10)
								
								--select 
								select   top 1 @originOrder = cast(order_num as varchar(max) )  from @orders
								WHILE @originOrder LIKE '%[^0-9]%' SET @originOrder=STUFF(@originOrder,PATINDEX('%[^0-9]%',@originOrder),1,'');
								--print @originOrder
								--select '@originOrder ' +@originOrder
								--(select @doc = body,@PartnerIln = null
								--,@OurFirmIln = null
								--,@DocType = [DocumentType]  
								--,@originOrderDate= null
								--,@originOrder= null
								--from edi.[Kontur] km where id = @oedinum);
								
								 	
								EXEC sp_xml_preparedocument @idoc OUTPUT, @doc;
								DECLARE @OrderResponseLines xml;
								DECLARE @desadv xml;
								
								
								
--select @doc,@PartnerIln,@OurFirmIln,@idoc

--select @idoc,@doc,@originOrder


													

								WITH 

							_OrderResponseLines AS
								(
								--order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice
									select	
																	eo.upc ean,
																	eo.internalSupplierCode,
																	eo.line orderLineNumber,
																	eo.our_description,
																	LTRIM(STR (ISNULL(eo.qty,0) ,20,3)) despatchedQuantity,
																	eo.prise ,	
																	eo.priseNds ,
																	eo.Nds 	 --,eo.qty,ISNULL(ps.qty,0) t		
															 from @orders eo 
															 where  ISNULL(eo.qty,0)>0

								)
				--select * from _OrderResponseLines				
								
								
								,OrderResponseLines AS
								(select OrderResponseLines = 
								'<ITEMS>'+
											 cast(	
											 --пробую упростить схему

															 (
		
															 select  

															internalSupplierCode  as CODE
															, our_description as NAME
															--,despatchedQuantity  QTTY
															,cast(cast((despatchedQuantity) as numeric(5)) as int) as QTTY
															--,[Line-Item].ean as gtin 
															-- ,orderLineNumber
															 ,cast((prise) as numeric(15,4))   SPRICE --priseNds
															 ,cast((Nds) as numeric(5,2))as  Nds
															 ,cast((priseNds*despatchedQuantity) as numeric(15,4)) as SNDSSUM 
															 ,SUBSTRING(ean,1,12) as VENDORBARCODE  	 --требования по формату аптеки														 
															 from _OrderResponseLines [Line-Item] 
															 where  our_description is not null
															 FOR XML PATH ('ITEM'),TYPE,ELEMENTS
															 													 
											 
											    ) as varchar(max))
								+'</ITEMS>')
			--select cast(OrderResponseLines as xml)from OrderResponseLines					
								
								,desadv AS
								(
								select desadv = 
								
		--						'
		--						<PACKET TYPE="12" id="'+isnull((select top 1 [НомНаклНашФ] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date)
		--and ОпНакл = @order_id and	[НомНаклНашФ]>0	),'')+'" NAME="Электронная накладная" FROM="'+@ourfirmname+'">'
								'<SUPPLY>
								<INVOICE>'+
								 '<INVOICE_NUM>'+isnull((select top 1 [НомНаклНашФ] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,isnull(@order_id_date,getdate())) and DATEADD(day,2,isnull(@order_id_date,getdate()))
		and ОпНакл = @order_id and	[НомНаклНашФ]>0	),'')+'</INVOICE_NUM>'+
								  '<INVOICE_DATE>'+ convert(varchar(10),getdate(),104)+'</INVOICE_DATE>'+
								   '<NAME>'+@clnfirmname+'</NAME>'+
								  '<FROM>'+@ourfirmname+'</FROM>'+
								 '</INVOICE>'+
								 -- '<ORDER_ID>'+isnull((select @originOrder),'')+'</ORDER_ID>'+
		--						  <PAYDATE>'+isnull((select top 1  convert(varchar(10),[ОпДатаРасч],104)  FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date)
		--and ОпНакл = @order_id and	[НомНаклНашФ]>0	),'')+'</PAYDATE>'
								+cast((select OrderResponseLines from OrderResponseLines) as varchar(max))+
								'</SUPPLY>'
								--'</PACKET>'
								)
						    --
							    --select * from desadv;
								select @desadv = desadv from desadv; -- XML ГОТОВ ДЛЯ ПЕРЕДАЧИ ПРОВАЙДЕРУ
								 
    --
								--удаление представления документа 
								exec sp_xml_removedocument @idoc;
								
								--проверяю что во временной таблице
								--select @desadv
								
								
								declare @NumberOurDecadv int = null
								select @NumberOurDecadv =[НомНаклНашФ] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-5,isnull(@order_id_date,getdate())) and DATEADD(day,2,isnull(@order_id_date,getdate())) and ОпНакл = @order_id
								--print @NumberOurDecadv
								
							if @clear_nds is not null and @NumberOurDecadv is not null
							begin

								INSERT INTO [PR_Euras].[edi].[Kontur]
                               ([id_massge] ,[body],[DocumentType],[box],[DocumentNumber],[Desadv],desadv_time
                               )VALUES
                               ('from locooffice','','OrdersSvd','Apt',@oedinum,@desadv,cast(getdate() as smalldatetime))
								
								--ОБНОВЛЕНИЕ ТАБЛИЦЫ С СООБЩЕНИЯМИ
								-- допонительно записываю дату обновления ordsp_time
								--UPDATE [PR_Euras].edi.[Kontur]
								--set 
								--Desadv = @desadv,
								--desadv_time=cast(getdate() as smalldatetime )
								--WHERE [DocumentType] = 'OrdersSvd'
								--and [DocumentNumber] = @oedinum
								--and Desadv is null
								
							END;	
								    
		END;
    
    
    
    
    
    
FETCH NEXT FROM oedi_cursor 
INTO @oedinum
END 
CLOSE oedi_cursor;
DEALLOCATE oedi_cursor;
GO
/****** Object:  StoredProcedure [edi].[CreateInfoAptDesadv]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [edi].[CreateInfoAptDesadv]	--119	
@NumberOrder varchar =null
as

set nocount on;

declare @oedinum varchar(20);
--declare @NumberOrder varchar(20) ='s75233529'

declare oedi_cursor CURSOR FOR 		
  SELECT distinct [DocumentNumber] from [PR_Euras].[edi].[Kontur] edi_z
join dbo.LIST_ZKZ  zk on zk.[ЗкзНом] = edi_z.[DocumentNumber]
--join [dbo].[CLN_DKL] cln on cln.[КлнКод] =zk.[ЗкзКлн]
join [dbo].[KLN_ADK] cln on cln.[КодКлиента] =zk.[ЗкзКлн]
WHERE [DocumentType] = 'OrdersSvd' 
--только аптечные заказы + проверка по существоанию адреса
and [Box]='Apt ' and cln.[ExtFile] like ('%;i%') and  len(cln.ExtFile)>3 
and zk.[зкздатарасч] between edi_z.[stamp] and  dateadd(day,30,edi_z.[stamp])
and ((@NumberOrder = [DocumentNumber]) or
(
	( [Desadv] is null) and (@NumberOrder is null)
))
 and [stamp] > dateadd(day,-10,getdate())
;

open oedi_cursor;

FETCH NEXT FROM oedi_cursor 
INTO @oedinum

WHILE @@FETCH_STATUS = 0
BEGIN  
	--проверка выбранного заказа
    PRINT @oedinum 
    --тест  9/04/15

    
    declare @orders table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						driver varchar(50),
						our_description varchar(150),
						internalSupplierCode varchar(50),
						transport varchar(15),
						datedespatchAdvice varchar(10),
						prise float,	
						priseNds float,
						Nds smallint					
						); 	
	delete from @orders;	
	
		/*альтернативные щк  18-09-14*/
	 declare @orders_temp table (
						order_num varchar(50),
						order_id varchar(50),
						line varchar(50),
						upc varchar(50),
						qty float,
						driver varchar(50),
						our_description varchar(150),
						internalSupplierCode varchar(50),
						transport varchar(15),
						datedespatchAdvice varchar(10),
						prise float,	
						priseNds float,
						Nds smallint							
						); 	
						
						declare @ordersV table (
						order_num varchar(50),
						upc numeric(15,0),
						prise float,
						priseNds float,
						our_description varchar(100),
						Nds smallint
				
						); 	
	delete from @ordersV;
	delete from @orders_temp;
	/*альтернативные щк  18-09-14*/
						
	declare @osql varchar(max);
	set @osql = 'WITH tbl1 AS
              (                    
  SELECT 
                        o.HOST_NUMBER,
                        o.DOC_NO,
                      od.line,
                      sku.upc upc,
                      od.planned_qty/uomdiv.UOM_DIV qty,
                    o.driver
                    ,s.name
                    ,sku.skucode 
                    ,dd.transport  
                    ,o.date_shipped
                    , row_number() over(partition BY s.name ORDER BY s.name DESC) num
                    
                    FROM orders o
                        INNER JOIN order_details od ON o.id = od.order_id
                        inner join sku s on s.id = od.sku_id 
                        inner join DELIVERY_DIRECTION dd on  dd.ID = o.DELIVERY_DIR_ID
                        inner join code_info ci on ci.sku_id = s.id and ci.disabled = ''f''
                        INNER JOIN  
                        (
                                  SELECT 
                                          s.id
                                              ,s.upc
                                              ,s.skucode
                                              ,s.name
                                               
                                    FROM wms.sku s
                                    
                                  union all  
                                  SELECT 
                                       
                                       b.sku_id
                                        ,b.barcode,'''',''''
                                    FROM wms.sku_barcode b
                              ) sku
                
                            ON od.sku_id = sku.id 
                        INNER JOIN sku uomdiv ON od.sku_id = uomdiv.id 
                    WHERE o.status <> ''I''  -- статус заказа не должен быть "Начальный"
      and (rtrim(o.HOST_NUMBER) = '''+cast(@oedinum as varchar(20))+''' or rtrim(o.HOST_NUMBER) = ''action-'+cast(@oedinum as varchar(20))+''' )     
order by od.line  )
            select   HOST_NUMBER, DOC_NO, line,upc, qty,driver, replace(replace(name,CHR(26),''''),CHR(3), '''')name
                    ,skucode ,transport  ,date_shipped  from  tbl1 
                    where num=1 and  qty>0  '

	
	--order_id OrderResponceNumber-- номер накладной он будет номером ответа на заказа в EDI	
	insert into	@orders(order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	execute (@osql) at wms
	
	
		/*альтернативные щк  18-09-14*/
		--select * from  @orders
	--insert into @orders_temp (order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	--select order_num,order_id,line,sb.upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice from @orders ord
	--join [PR_Euras].[edi].[SKU_BARCODE]  sb on ord.internalSupplierCode=sb.[SKUCODE]
	
	--select * from  @orders_temp
	
	--delete from @orders;
	--insert into	@orders(order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice)
	--select order_num,order_id,line, upc ,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice from @orders_temp
	/*альтернативные щк  18-09-14*/
	
	/*попытка укорить обработку через заранее найденый код заказа 20/03/15 тест  */
	
	--select * from  @orders
	
	declare @oedinumcod int = 0

	select  @oedinumcod = ЗкзКод
	FROM         dbo.LIST_ZKZ   where [ЗкзНом] like cast(@oedinum as varchar(20)) 
	
	print @oedinumcod
	 
	/* к попытка укорить обработку через заранее найденый код заказа 20/03/15 */
	
	insert into	@ordersv(order_num,our_description,prise, upc ,priseNds,Nds)                              
	SELECT  [НомерСФ],Sbar.ТовНаим, ROUND(ОпЦена/( 1+ ( Ktv.[НДС]/100 )),4) ,Sbar.[UPC],ОпЦена,Ktv.[НДС]
  FROM         dbo.LIST_SKL AS nakl INNER JOIN
                      dbo.list_sf AS sf ON nakl.НомНаклНашФ = sf.НомерСФ AND nakl.АвтокодСФ = sf.АвтокодСФ INNER JOIN
                      dbo.zkz_nkl AS znnk ON nakl.ОпНакл = znnk.Накл INNER JOIN
                      dbo.LIST_ZKZ AS zak ON zak.ЗкзКод = znnk.ДокКод INNER JOIN
                      dbo.KLN_ADK ON nakl.КодАдрДоставки = dbo.KLN_ADK.КодАдресаДоставки
                      INNER JOIN  [PR_Euras].[dbo].[HIST_SKL] on nakl.[ОпНаклКод]=[HIST_SKL].[ОпНаклКод]
                      INNER JOIN [PR_Euras].[dbo].[KAT_TVR] Ktv on  [PR_Euras].[dbo].[HIST_SKL].ОпКодТов =Ktv.[ТовКод]
                      INNER JOIN  [PR_Euras].[edi].[SKU_BARCODE] Sbar  on Sbar.[ТовКод]=Ktv.[ТовКод]
                      where ЗкзКод=@oedinumcod --попытка ускорить обработку  20/03/15 тест
                      --[ЗкзНом] like 'k-'+cast(@oedinum as varchar(20))
                      and (ABS(DATEDIFF(day, zak.ЗкзДатаРасч, DATEADD(second, CONVERT(numeric, sf.ДатаСФ), CONVERT(datetime, '31.12.1969 19:00:00', 
                      104)))) BETWEEN 0 AND 10)
                     -- order by Ktv.ТовНаим --попытка ускорить обработку  20/03/15 рабочая +
                      
	

	/*обновление через  эсф*/
	/* update o
    set  o.prise=os.prise,o.priseNds=os.priseNds,o.Nds=os.Nds--,o.order_num=os.order_num
     from  @orders  o                                                 
     INNER JOIN @ordersv os on os.upc=o.upc*/
     	  
    
    	--проверка данных во временной таблице
	--select* from 	@orders
	--select* from  @ordersv

    
         --если сформирован ответ то заказ точно был в слово 
    IF (EXISTS(SELECT * FROM @orders))
                                                                         
		   /*подготовка итогов тест*/
		DECLARE @order_id int
		DECLARE @nom_tek_nakl bigint
		DECLARE @order_id_date date  
		DECLARE @ourfirmname  varchar(200)
		select top 1 @order_id= order_id from @orders where not(order_id is null)
		select top 1 @order_id_date=cast (datedespatchAdvice as date) from @orders where not(order_id is null)
		
		select @nom_tek_nakl =[ОпНаклКод] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date)
		and ОпНакл = @order_id
		
		select @ourfirmname =[КлнНаим] FROM [PR_Euras].[dbo].[LIST_SKL] ls
		inner join [PR_Euras].[dbo].[CLN_DKL] cd on ls.НашаФирма=cd.КлнКод where [ОпНаклКод] =@nom_tek_nakl
		
		--select @ourfirmname,@nom_tek_nakl
		
		/*обновление через накладную в2*/
		update o
		set  o.prise=([ОпЦена]*(1-(НДС/(100+НДС)))),o.priseNds=[ОпЦена],o.Nds=НДС
		from  @orders  o  
		 inner join (
		SELECT s2.ТовАрт,s2.ТовНаим,ОпЦена,НДС
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl) temp on temp.ТовАрт=o.internalSupplierCode

	
	
	 --<!ELEMENT СуммаОпт -- сумма поставки без НДС -->
		declare @sum_opt_nonds decimal(10,2)
		SELECT @sum_opt_nonds=sum(([ОпЦена]*(1-(НДС/(100+НДС))))*ОпКол)
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl
		  
		
		  
		  
		  --<!ELEMENT СуммаОптВклНДС -- сумма поставки с НДС -->
		declare @sum_opt_nds decimal(10,2)
		  SELECT  @sum_opt_nds =Sum([ОпКол]*[ОпЦена])
		  FROM [PR_Euras].[dbo].[HIST_SKL] s1
		  inner join [PR_Euras].[dbo].[KAT_TVR] s2 on  s1.ОпКодТов=s2.ТовКод
		   inner join [PR_Euras].[dbo].[LIST_SKL] s3 on s1.ОпНаклКод=s3.ОпНаклКод
		  where s3.[ОпНаклКод] =@nom_tek_nakl

		--<!ELEMENT СуммаНДС -- сумма НДС поставки -->
		declare @clear_nds decimal(10,2)
		set @clear_nds=@sum_opt_nds-@sum_opt_nonds

--тестирование полученных агрегатов 
		--select @sum_opt_nonds,@sum_opt_nds,@clear_nds
		--select @order_id,@order_id_date,@nom_tek_nakl
	
	 /*подготовка итогов тест конец*/
	
	
	                                                                        
      BEGIN
    
								DECLARE @idoc int
								DECLARE @doc xml
								DECLARE @PartnerIln varchar(15)
								DECLARE @OurFirmIln varchar(15)
								DECLARE @DocType varchar(15)
								DECLARE @originOrder varchar(40)
								DECLARE @originOrderDate varchar(10)
								
								--select 
								select   top 1 @originOrder = cast(order_num as varchar(max) )  from @orders
								WHILE @originOrder LIKE '%[^0-9]%' SET @originOrder=STUFF(@originOrder,PATINDEX('%[^0-9]%',@originOrder),1,'');
								--print @originOrder
								--select '@originOrder ' +@originOrder
								--(select @doc = body,@PartnerIln = null
								--,@OurFirmIln = null
								--,@DocType = [DocumentType]  
								--,@originOrderDate= null
								--,@originOrder= null
								--from edi.[Kontur] km where id = @oedinum);
								
								 	
								EXEC sp_xml_preparedocument @idoc OUTPUT, @doc;
								DECLARE @OrderResponseLines xml;
								DECLARE @desadv xml;
								
								
								
--select @doc,@PartnerIln,@OurFirmIln,@idoc

--select @idoc,@doc,@originOrder


													

								WITH 

							_OrderResponseLines AS
								(
								--order_num,order_id,line,upc,qty,driver,our_description,internalSupplierCode,transport,datedespatchAdvice
									select	
																	eo.upc ean,
																	eo.internalSupplierCode,
																	eo.line orderLineNumber,
																	eo.our_description,
																	LTRIM(STR (ISNULL(eo.qty,0) ,20,3)) despatchedQuantity,
																	eo.prise ,	
																	eo.priseNds ,
																	eo.Nds 	 --,eo.qty,ISNULL(ps.qty,0) t		
															 from @orders eo 
															 where  ISNULL(eo.qty,0)>0

								)
				--select * from _OrderResponseLines				
								
								
								,OrderResponseLines AS
								(select OrderResponseLines = 
								'<ITEMS>'+
											 cast(	
											 --пробую упростить схему

															 (
		
															 select  

															internalSupplierCode  as CODE
															, our_description as NAME
															--,despatchedQuantity  QTTY
															,cast(cast((despatchedQuantity) as numeric(5)) as int) as QTTY
															--,[Line-Item].ean as gtin 
															-- ,orderLineNumber
															 ,cast((prise) as numeric(15,4))   SPRICE --priseNds
															 ,cast((Nds) as numeric(5,2))as  Nds
															 ,cast((priseNds*despatchedQuantity) as numeric(15,4)) as SNDSSUM 
															 ,SUBSTRING(ean,1,12) as VENDORBARCODE  	 --требования по формату аптеки														 
															 from _OrderResponseLines [Line-Item] 
															 where  our_description is not null
															 FOR XML PATH ('ITEM'),TYPE,ELEMENTS
															 													 
											 
											    ) as varchar(max))
								+'</ITEMS>')
			--select cast(OrderResponseLines as xml)from OrderResponseLines					
								
								,desadv AS
								(
								select desadv = 
								
								'
								<PACKET TYPE="12" id="'+isnull((select top 1 [НомНаклНашФ] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date)
		and ОпНакл = @order_id and	[НомНаклНашФ]>0	),'')+'" NAME="Электронная накладная" FROM="'+@ourfirmname+'">
								<SUPPLY>
								  <INVOICE_NUM>'+isnull((select top 1 [НомНаклНашФ] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date)
		and ОпНакл = @order_id and	[НомНаклНашФ]>0	),'')+'</INVOICE_NUM>
								  <INVOICE_DATE>'+ convert(varchar(10),getdate(),104)+'</INVOICE_DATE>
								  <ORDER_ID>'+isnull((select @originOrder),'')+'</ORDER_ID>'+
		--						  <PAYDATE>'+isnull((select top 1  convert(varchar(10),[ОпДатаРасч],104)  FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date)
		--and ОпНакл = @order_id and	[НомНаклНашФ]>0	),'')+'</PAYDATE>'
								+cast((select OrderResponseLines from OrderResponseLines) as varchar(max))+
								'</SUPPLY></PACKET>'
								)
						    --
							    --select * from desadv;
								select @desadv = desadv from desadv; -- XML ГОТОВ ДЛЯ ПЕРЕДАЧИ ПРОВАЙДЕРУ
								 
    --
								--удаление представления документа 
								exec sp_xml_removedocument @idoc;
								
								--проверяю что во временной таблице
								--select @desadv
								
								
								declare @NumberOurDecadv int = null
								select @NumberOurDecadv =[НомНаклНашФ] FROM [PR_Euras].[dbo].[LIST_SKL] where ОпДатаРасч BETWEEN DATEADD(day,-3,@order_id_date) and DATEADD(day,2,@order_id_date) and ОпНакл = @order_id
								--print @NumberOurDecadv
								
							if @clear_nds is not null and @NumberOurDecadv is not null
							begin

								--ОБНОВЛЕНИЕ ТАБЛИЦЫ С СООБЩЕНИЯМИ
								-- допонительно записываю дату обновления ordsp_time
								UPDATE [PR_Euras].edi.[Kontur]
								set 
								Desadv = @desadv,
								desadv_time=cast(getdate() as smalldatetime )
								WHERE [DocumentType] = 'OrdersSvd'
								and [DocumentNumber] = @oedinum
								and Desadv is null
								
							END;	
								    
		END;
    
    
    
    
    
    
FETCH NEXT FROM oedi_cursor 
INTO @oedinum
END 
CLOSE oedi_cursor;
DEALLOCATE oedi_cursor;
GO
/****** Object:  UserDefinedFunction [dbo].[f_Cube_Hist_skl_VG]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_Cube_Hist_skl_VG]
( @BegDate DATE, @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT	ОпКод, 
        ОпКодТов, 
        ОпКол, 
        ОпТип, 
        ОпЦена, 
        ОпКодУпак, 
        ОпСкл, 
        ОпВозвр, 
        ОпНакл, 
        ОпНаклКод, 
        ОпТипКлн, 
        ОпТовНом, 
        ОпТипКлн_INT, 
        ОпСтоим, 
		ПолнАдресДоставки, 
		ОпКлн, 
		ОпДатаРасч, 
		КодАдрДоставки, 
		ОпСотр, 
		ОпТипSKL, 
		НашаФирма, 
		ОпСтоимИтог, 
		ОпКолИтог, 
		dst, 
		КодТКА, 
		ВесБрутто, 
		ВесНетто, 
		СуммаЦенаУчет, 
		КодТТН, 
		АдресДоставки, 
		Отгрузка, 
		SippingGradientID, 
		Объем, 
		ЦенаТранспОтОбъема, 
		ЦенаТранспОтВеса, 
		ТТН_Адрес, 
		ExistTTN, 
		ДоляТранРсхОбъем, 
		ДоляТранРсхВеса, 
		CASE WHEN ДоляТранРсхОбъем <= 0.15 AND ExistTTN = 1 THEN 0 WHEN ДоляТранРсхОбъем > 0.15 AND 
		ExistTTN = 1 THEN 1 ELSE NULL END AS 
		        ГрадацияТранРсхОбъемИд, 
		CASE WHEN ДоляТранРсхВеса <= 0.15 AND 
		ExistTTN = 1 THEN 0 WHEN ДоляТранРсхВеса > 0.15 AND ExistTTN = 1 THEN 1 ELSE NULL END AS 
		        ГрадацияТранРсхВесаИд, 
		ЗаводскаяУпаковка, 
		NULL AS КолДней, 
		NULL AS СуммаОстатков, 
		CASE WHEN ОставшийсяСрокГодности >= 10 THEN 10 ELSE ОставшийсяСрокГодности END AS ОставшийсяСрокГодности,
		РасхНаВет, 
		КолВетТов, 
		CAST(NULL AS float) AS zero, 
		АкцияКод, 
		Бонус_1, 
		Бонус_2, 
		Бонус_3, 
		Возврат_ТР, 
		Возврат_Эксп, 
		Транс_Расх,
		[СуммаПрогноз_Акции_НДС], 
		[СуммаПрогноз_НДС], 
		[СуммаПрогноз_Акции], 
		[СуммаПрогноз], 
		Прогноз_Кол, 
		Прогноз_ЦенаУчет, 
		Прогноз_ЦенаУчет_безНДС
FROM	(SELECT 
			CHS.ОпКод, 
			CHS.ОпКодТов, 
			CHS.ОпКол, 
			CHS.ОпТип, 
			CHS.ОпЦена, 
			CHS.ОпКодУпак, 
			CHS.ОпСкл, 
			CHS.ОпВозвр, 
			CHS.ОпНакл, 
			CHS.ОпНаклКод, 
			CHS.ОпТипКлн, 
			CHS.ОпТовНом, 
			CONVERT(int, CHS.ОпТипКлн) AS ОпТипКлн_INT, 
			CHS.ОпСтоим,
			CAST(CHS.ОпКлн AS bigint) * 1000000 + CAST(CHS.КодАдрДоставки AS bigint) AS ПолнАдресДоставки, 
			CHS.ОпКлн, CHS.ОпДатаРасч, 
			CHS.КодАдрДоставки, 
			CHS.ОпСотр, 
			CHS.ОпТипSKL, 
			CHS.НашаФирма,
			(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN CHS.ОпЦена * CHS.ОпКол
  				      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - CHS.ОпЦена * CHS.ОпКол
					  ELSE NULL END) AS ОпСтоимИтог, 
			(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN CHS.ОпКол
					  WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - CHS.ОпКол
 					  ELSE NULL END) AS ОпКолИтог,
			CONVERT(VARCHAR, CHS.ОпКодТов) + '_' + CONVERT(VARCHAR, CHS.ОпКлн) + '_' + CONVERT(VARCHAR, CHS.КодАдрДоставки) AS КодТКА,
			CHS.dst, 
			CHS.ВесБрутто, 
			CHS.ВесНетто, 
			CHS.КодТТН, 
			CHS.АдресДоставки, 
			CHS.Отгрузка, 
			CHS.SippingGradientID, 
			CHS.Объем, 
			CHS.ЦенаТранспОтОбъема, 
			CHS.ЦенаТранспОтВеса, 
			checksum(ISNULL(CONVERT(varchar(10), CHS.КодТТН), '') + ' ' + ISNULL(CAST(CHS.ОпКлн AS varchar), '') 
			         + ' ' + ISNULL(CAST(CHS.КодАдрДоставки AS varchar), '')) AS ТТН_Адрес,
			CASE WHEN КодТТН IS NULL THEN 0 ELSE 1 END AS ExistTTN, 
			CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтОбъема / ОпСтоим ELSE 0 END AS ДоляТранРсхОбъем, 
			CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтВеса / ОпСтоим ELSE 0 END AS ДоляТранРсхВеса, 
			(CASE WHEN CHS.ОпКол >= u.УпакКоэф THEN 1 ELSE 0 END) AS ЗаводскаяУпаковка,
			(CHS.ОпКол * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчет, 
			CAST(FLOOR((CASE WHEN CHS.ОставшийсяСрокГодности < 0 THEN - 10 ELSE CHS.ОставшийсяСрокГодности END) / 10) AS INT) 
				AS ОставшийсяСрокГодности, 
			CHS.РасхНаВет, 
			CHS.КолВетТов, 
			CHS.АкцияКод, 
			hbs1.БонСумм AS Бонус_1, 
			hbs2.БонСумм  AS Бонус_2, 
			hbs3.БонСумм  AS Бонус_3,
				    /*
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN - Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				  ELSE NULL END as money) AS Бонус_1, 
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN  -  Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_2, 
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN  - Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_3,				    */
				    /* 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				  ELSE NULL END as money) AS Бонус_1, 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN -  Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_2, 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_3, */
			--CHS.Возврат_ТР, 
			tr.[summa_dop]*-1 Возврат_ТР,
			ex.[summa_dop]*-1 Возврат_Эксп, 
			CHS.Транс_Расх, 
			CHS.[СуммаПрогноз_Акции_НДС], 
			CHS.[СуммаПрогноз_НДС], 
			CHS.[СуммаПрогноз_Акции], 
			CHS.[СуммаПрогноз], 
			CHS.Прогноз_Кол, 
			CHS.Прогноз_ЦенаУчет, 
			CHS.Прогноз_ЦенаУчет_безНДС,
			hs.ОпКолВозвр AS Вычерк 
		 FROM	cube.Hist_skl CHS
				LEFT OUTER JOIN dbo.KAT_TVR AS k ON CHS.ОпКодТов = k.ТовКод
				LEFT OUTER JOIN dbo.KAT_UPK AS u ON k.ТовУпак = u.УпакКод
				LEFT OUTER JOIN dbo.hist_bon_sum hbs1 ON CHS.ОпНаклКод=hbs1.ОпНаклКод AND CHS.ОпТовНом = hbs1.ОпТовНом AND hbs1.idBon_type=1
				LEFT OUTER JOIN dbo.hist_bon_sum hbs2 ON CHS.ОпНаклКод=hbs2.ОпНаклКод AND CHS.ОпТовНом = hbs2.ОпТовНом AND hbs2.idBon_type=2
				LEFT OUTER JOIN dbo.hist_bon_sum hbs3 ON CHS.ОпНаклКод=hbs3.ОпНаклКод AND CHS.ОпТовНом = hbs3.ОпТовНом AND hbs3.idBon_type=3
				LEFT OUTER JOIN dbo.[hist_skl_dop] Tr ON CHS.ОпНаклКод=tr.ОпНаклКод AND CHS.ОпТовНом=tr.ОпТовНом AND tr.[id_type_dop] = 1  -- Возврат Требование
				LEFT OUTER JOIN dbo.[hist_skl_dop] Ex ON CHS.ОпНаклКод=Ex.ОпНаклКод AND CHS.ОпТовНом=Ex.ОпТовНом AND Ex.[id_type_dop] = 2  -- Возврат Экспедитор 
				LEFT OUTER JOIN dbo.[hist_skl] HS ON CHS.ОпНаклКод=HS.ОпНаклКод AND CHS.ОпТовНом=HS.ОпТовНом   -- вычерки 
				/*
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 1 GROUP BY [idHist_skl])  Hb1 ON CHS.ОпКод =  Hb1.idHist_skl  
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 2 GROUP BY [idHist_skl])  Hb2 ON CHS.ОпКод =  Hb2.idHist_skl  
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 3 GROUP BY [idHist_skl])  Hb3 ON CHS.ОпКод =  Hb3.idHist_skl 
					  */ 
			/*	left outer join 
					  (SELECT * FROM ( SELECT --DISTINCT 
						  [idHist_skl]
						  ,bt.NM_type
						  ,[Stavka]
					  FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  INNER JOIN [Бонус].dbo.Bon_type Bt ON Bn.idBon_type = Bt.id_type ) fin
					  PIVOT  (
					 min(Stavka)
					  FOR NM_type 
					  in ([Ретро],[Компенсационный],[Дополнительный])) AS pvt) bonPv 
			ON chs.ОпКод = bonPv.idHist_skl */
		 WHERE CHS.ОпДатаРасч BETWEEN @BegDate and @EndDate --	(CHS.ОпДатаРасч >= @BegDate and CHS.ОпДатаРасч < @EndDate)
		) AS t
);
GO
/****** Object:  View [dbo].[LIST_ML_TOTAL]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[LIST_ML_TOTAL] AS
 SELECT Cast(ml.ДатаРасч as date) ДатаРасч,
       hs.ОпНаклКод
     --  ml.АвтокодМЛ
       ,mtt.*
FROM [dbo].[list_mlst] ml
     INNER JOIN 
     (
       SELECT zvk.АвтКодМЛ,
              НомДок
       FROM zvk_dkm
            INNER JOIN list_zvk ZVK on zvk.АвтКодЗвк = zvk_dkm.АвтКодЗвкДост
            --WHERE (ТипДок = 4)
       GROUP BY zvk.АвтКодМЛ,
                НомДок
     ) AS ttndkm ON ttndkm.АвтКодМЛ = ml.АвтокодМЛ
     INNER JOIN 
		 ( SELECT MAX(ДокКод) AS ДокКод,
				  Скл,
				  ФлгОпер,
				  Накл,
				  MAX(ДокКод) AS Зкз
				  --SELECT MAX(CASE WHEN тип = 4 THEN ДокКод END) AS ДокКод, Скл, ФлгОпер, Накл, MAX(CASE WHEN тип = 0 THEN ДокКод END) AS Зкз
				  FROM zkz_nkl AS z
				--WHERE (Тип IN (4))
		   GROUP BY Накл,
					Скл,
					ФлгОпер ) AS zkz_nkl ON zkz_nkl.ДокКод = ttndkm.НомДок
     INNER JOIN LIST_SKL AS hs ON hs.ОпСкл = zkz_nkl.Скл AND hs.ОпТип =zkz_nkl.ФлгОпер AND zkz_nkl.Накл = hs.ОпНакл
     LEFT OUTER JOIN ml_total mtt ON ml.АвтокодМЛ=mtt.АвтокодМЛ AND Cast(ml.ДатаРасч as date) = mtt.Дата
     where ml.АвтокодМЛ <>0
    -- LEFT OUTER JOIN ml_total mtt ON ml.АвтокодМЛ=mtt.АвтокодМЛ AND Cast(ml.ДатаРасч as date) = mtt.Дата
GO
/****** Object:  View [dbo].[v_DolgSaldo]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_DolgSaldo]
AS
SELECT     dbo.v_DolgSaldo2.Клн, dbo.F_DEBET.ДбтСальдо AS Сальдо, dbo.v_DolgSaldo2.Дата
FROM         dbo.F_DEBET INNER JOIN dbo.v_DolgSaldo2
                      ON dbo.F_DEBET.ДбтДата = dbo.v_DolgSaldo2.ДатаКод
                      AND dbo.F_DEBET.ДбтКлнКод=dbo.v_DolgSaldo2.Клн
GO
/****** Object:  View [dbo].[v_DolgSaldoRound]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_DolgSaldoRound]
AS
SELECT     *
FROM         dbo.v_DolgSaldo
WHERE     Сальдо<0 and (ABS(ROUND(Сальдо, 2)) >= 0.01)
GO
/****** Object:  StoredProcedure [cube].[f_Cube_Hist_skl_to_buff_short]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Batch submitted through debugger: SQLQuery3.sql|7|0|C:\Users\VGlukhov\AppData\Local\Temp\4\~vs57E6.sql


-- =============================================
-- Author:		Глухов ВЮ
-- Create date: 18-02-2015
-- Description:	Формируем записи для буферной таблицы для кубов
-- Замечание: 
-- =============================================
CREATE PROCEDURE [cube].[f_Cube_Hist_skl_to_buff_short]
 	@BegDate date = NULL,
	@enddate date = NULL
AS
BEGIN


SELECT hs.ОпКод,
       hs.ОпКодТов,
       k.ТовВид,
       hs.ОпКол,
       hs.ОпТип,
       hs.ОпЦена,
       hs.ОпКодУпак,
       hs.ОпСкл,
       hs.ОпВозвр,
       hs.ОпНакл,
       hs.ОпНаклКод,
       hs.ОпТипКлн,
       hs.ОпТовНом,
       hs.ОпЦена * hs.ОпКол AS ОпСтоим,
       ls.ОпКлн,
       ls.ОпДатаРасч,
-- было до 20141023 VG       ISNULL(dbo.KLN_ADK.КодАдресаДоставки, 0) AS КодАдрДоставки,
       ISNULL(CASE WHEN ls.ОпТип = 1 AND ls.ОпВозврат = 1 THEN ls.КодАдрВозвр ELSE ls.КодАдрДоставки END , 0) AS КодАдрДоставки,
       CONVERT (int,ls.ОпСотр) AS ОпСотр,
       ls.ОпТип AS ОпТипSKL,
       ls.НашаФирма,
       t.ТовВесБрутто * hs.ОпКол AS ВесБрутто,
       t.ТовВесНетто  * hs.ОпКол AS ВесНетто,
       t.Объем        * hs.ОпКол AS Объем,
       zkz_nkl.ДокКод AS КодТТН,
       ''       AS АдресДоставки,
       hsl.PercentLife,
       ws.veterinary_doc,
       hs.АкцияКод,
       hs.ОпКолВозвр AS Вычерк,
       hs.ОпЦена * -1*hs.ОпКолВозвр AS ВычеркСтоим
INTO #sharp_t2_fill_hist
FROM dbo.LIST_SKL ls  with(nolock)
     INNER JOIN dbo.HIST_SKL (nolock) hs ON ls.ОпНаклКод = hs.ОпНаклКод
     LEFT OUTER JOIN dbo.KLN_ADK (nolock) ON dbo.KLN_ADK.КодАдресаДоставки =
    ls.КодАдрДоставки AND dbo.KLN_ADK.КодКлиента =ls.ОпКлн
     LEFT OUTER JOIN dbo.KAT_TVR (nolock) AS k ON hs.ОпКодТов = k.ТовКод
     LEFT OUTER JOIN wms.sku (nolock) AS ws ON ws.host_id = k.ТовКод
     LEFT OUTER JOIN dbo.TVR_DEF (nolock) AS t ON k.ТовКод = t.ТовКод
     LEFT OUTER JOIN cube . sharp_zkz_nkl (nolock) AS zkz_nkl ON ls.ОпСкл =
     zkz_nkl.Скл AND ls.ОпТип = zkz_nkl.ФлгОпер AND zkz_nkl.Накл =
    ls.ОпНакл
     LEFT OUTER JOIN cube . sharp_hsl (nolock) AS hsl ON ls.ОпНакл =
     hsl.INVOICENUMBER AND ls.ОпТип = hsl.INVOICETYPE AND
    ls.ОпСкл = hsl.INVOICESKL AND hs.ОпКодТов = hsl.SKU
    WHERE ls.[ОпДатаРасч] BETWEEN @BegDate and @EndDate

SELECT  *
,SUM(ОпСтоим) OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки) Отгрузка --АдресДоставки
,SUM(Объем)  OVER (PARTITION BY КодТТН) ОбъемОтгрузки
,SUM(ВесБрутто)  OVER (PARTITION BY КодТТН) ВесОтгрузки
,SUM(CAST([veterinary_doc] AS INT)) 
         OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки,НашаФирма, 
         case when ТовВид in (1218,1219,1220,1221,1222,1231,1232,1351,1357) then 1 else 0 end) РасхНаВет
into #sharp_t1_fill_hist
 FROM #sharp_t2_fill_hist t  with(nolock)


SELECT t.ОпКод,
       t.ОпКодТов,
       k.ТовГрп AS ОпКодТовГрп,
       k.ТовВид AS ОпКодТовВид,
       t.ОпКол,
       t.ОпТип,
       t.ОпЦена,
       t.ОпКодУпак,
       t.ОпСкл,
       t.ОпВозвр,
       t.ОпНакл,
       t.ОпНаклКод,
       t.ОпТипКлн,
       t.ОпТовНом,
       t.ОпСтоим,
       t.ОпКлн,
       t.ОпДатаРасч,
       t.КодАдрДоставки,
       t.ОпСотр,
       t.ОпТипSKL,
       t.НашаФирма,
       t.ВесБрутто,
       t.ВесНетто,
       t.КодТТН,
       t.АдресДоставки,
       t.Отгрузка,
       t.Объем,
       mtt.PriceV ЦенаТранспОтОбъема,
       mtt.PriceBrutto ЦенаТранспОтВеса,
       CASE
         WHEN Отгрузка > 0 AND Отгрузка <= 1500 THEN 1
         WHEN Отгрузка > 1500 AND Отгрузка <= 4000 THEN 2
         WHEN Отгрузка > 4000 AND Отгрузка <= 10000 THEN 3
         WHEN Отгрузка > 10000 THEN 4
       END AS SippingGradientID,
       t.PercentLife AS ОставшийсяСрокГодности,
       CASE
         WHEN (РасхНаВет <> 0) AND ([veterinary_doc] = 1) THEN 1.0 / РасхНаВет
         ELSE NULL
       END AS РасхНаВет,
       CASE [veterinary_doc]
         WHEN 0 THEN NULL
         ELSE [veterinary_doc]
       END AS КолВетТов,
       t.АкцияКод,
       kgvt.dst,
       0 AS Бонус_1,
       0 AS Бонус_2,
       0 AS Бонус_3,
       0 AS Возврат_ТР,
       0 AS Возврат_Эксп,
       cast(mtt.PriceBrutto*t.ВесБрутто*-1 as money) AS Транс_расх,
       cast(t.ОпКол *grP.[ЦенаПоГруппеЦен] as money) СуммаПрогноз_Акции_НДС,
  /*     cast(mtt.PriceBrutto*t.ВесБрутто*-1 as money) AS Транс_расх,
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then  (t.ОпКол *(case when (r.ТекЦена > r.ЦенаКатУчет * 10) 
          	AND ( r.ЦенаКатУчет > 0) 
          then r.ЦенаКатУчет else r.ТекЦена end) *(1 + r.НДС / 100)*(1 - isnull(r.ПроцентЦена, 0) / 100))
          else 0
        END СуммаПрогноз_Акции_НДС,     --- 20141218 VG */
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then (t.ОпКол *(
          	case when ( r.ТекЦена > r.ЦенаКатУчет * 10) 
            AND (r.ЦенаКатУчет > 0) 
            then r.ЦенаКатУчет else r.ТекЦена end) *(1 + r.НДС / 100))
          else 0
        END СуммаПрогноз_НДС,
      CASE WHEN t .ОпТип IN (2, 4) AND t .ОпТипКлн = 2 
		THEN (t .ОпКол * r.ТекЦена)*(1 + r.НДС / 100)
		ELSE 0 
	  END AS СуммаПрогнозМлн, 
      CASE WHEN t .ОпТип IN (2, 4) AND t .ОпТипКлн = 2 
		THEN (t .ОпКол * r.ЦенаКатУчет) *(1 + r.НДС / 100)
		ELSE 0 
	  END AS СуммаПрогнозМлн1, 
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then (t.ОпКол *(case
          when (r.ТекЦена > r.ЦенаКатУчет * 10) 
          AND (r.ЦенаКатУчет > 0) 
          then r.ЦенаКатУчет else r.ТекЦена end) *(1 - isnull(r.ПроцентЦена, 0) / 100))
          else 0
        END СуммаПрогноз_Акции,
        CASE WHEN t .ОпТип IN (2, 4) AND t .ОпТипКлн = 2 
			THEN (t .ОпКол * (CASE 
								WHEN (r.ТекЦена > r.ЦенаКатУчет * 10) 
										AND (r.ЦенаКатУчет > 0) 
									THEN r.ЦенаКатУчет 
									ELSE r.ТекЦена END)) 
		    ELSE 0 END AS СуммаПрогноз, 
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then t.ОпКол
          else 0
        END Прогноз_Кол, -- Прогноз_Кол
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then r.ЦенаКатУчет * t.ОпКол
          else 0
        END Прогноз_ЦенаУчет, -- Прогноз_ЦенаУчет
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then r.ЦенаКатУчет_безНДС *
          t.ОпКол
          else 0
        END Прогноз_ЦенаУчет_безНДС, -- Прогноз_ЦенаУчет_безНДС
       t.Вычерк,
       t.ВычеркСтоим,
       mtt.АвтокодМЛ,
       mtt.PriceBrutto,
       mtt.ЗатратыФакт  
INTO #Hist_skl_fill
FROM #sharp_t1_fill_hist AS t  with(nolock)
 LEFT OUTER JOIN dbo.TTN_DKM AS ttn (nolock) ON ttn.КодТТН = t.КодТТН
 LEFT OUTER JOIN dbo.KGVT AS kgvt (nolock) ON t.КодАдрДоставки =kgvt.КодАдресаДоставки 
 						AND t.ОпКлн = kgvt.КлнКод AND t.ОпКодТов = kgvt.ТовКод
 INNER JOIN dbo.KAT_TVR AS k (nolock) ON t.ОпКодТов = k.ТовКод
 LEFT OUTER JOIN dbo.F_PROGNOS_CURR_PRICE AS r (nolock) ON t.ОпКлн = r.КлнКод AND t.ОпКодТов = r.ТовКод
 left outer join dbo.LIST_ML_TOTAL AS mtt (nolock) on t.[ОпНаклКод]=mtt.[ОпНаклКод]
 LEFT OUTER JOIN dbo.M_SKDS_Only_grp grP (nolock) ON t.[ОпКлн]= grP.КлнКод AND t.[ОпКодТов]=grP.[ТовКод] AND ISNULL(grp.ЦенаПоГруппеЦен,0) <>0 AND grp.ЦенаПоГруппеЦен <800000


DROP TABLE [A_Daily_Src_t]

SELECT	ОпКод, 
        ОпКодТов, 
        ОпКол, 
        ОпТип, 
        ОпЦена, 
        ОпКодУпак, 
        ОпСкл, 
        ОпВозвр, 
        ОпНакл, 
        ОпНаклКод, 
        ОпТипКлн, 
        ОпТовНом, 
        ОпТипКлн_INT, 
        ОпСтоим, 
		ПолнАдресДоставки, 
		ОпКлн, 
		ОпДатаРасч, 
		КодАдрДоставки, 
		ОпСотр, 
		ОпТипSKL, 
		НашаФирма, 
		ОпСтоимИтог, 
		ОпКолИтог, 
		dst, 
		КодТКА, 
		ВесБрутто, 
		ВесНетто, 
		СуммаЦенаУчет, 
		КодТТН, 
		АдресДоставки, 
		Отгрузка, 
		SippingGradientID, 
		Объем, 
		ЦенаТранспОтОбъема, 
		ЦенаТранспОтВеса, 
		ТТН_Адрес, 
		ExistTTN, 
		ДоляТранРсхОбъем, 
		ДоляТранРсхВеса, 
		CASE WHEN ДоляТранРсхОбъем <= 0.15 AND ExistTTN = 1 THEN 0 WHEN ДоляТранРсхОбъем > 0.15 AND 
		ExistTTN = 1 THEN 1 ELSE NULL END AS 
		        ГрадацияТранРсхОбъемИд, 
		CASE WHEN ДоляТранРсхВеса <= 0.15 AND 
		ExistTTN = 1 THEN 0 WHEN ДоляТранРсхВеса > 0.15 AND ExistTTN = 1 THEN 1 ELSE NULL END AS 
		        ГрадацияТранРсхВесаИд, 
		ЗаводскаяУпаковка, 
		NULL AS КолДней, 
		NULL AS СуммаОстатков, 
		CASE WHEN ОставшийсяСрокГодности >= 10 THEN 10 ELSE ОставшийсяСрокГодности END AS ОставшийсяСрокГодности,
		РасхНаВет, 
		КолВетТов, 
		CAST(NULL AS float) AS zero, 
		АкцияКод, 
		Бонус_1, 
		Бонус_2, 
		Бонус_3, 
		Возврат_ТР, 
		Возврат_Эксп,  	
		Транс_Расх,
		[СуммаПрогноз_Акции_НДС], 
		[СуммаПрогноз_НДС], 
		[СуммаПрогноз_Акции], 
		[СуммаПрогноз], 
		[СуммаПрогнозМлн], 
		[СуммаПрогнозМлн1], 
		Прогноз_Кол, 
		Прогноз_ЦенаУчет, 
		Прогноз_ЦенаУчет_безНДС,
		Вычерк,
		ВычеркСтоим,
        АвтокодМЛ
	INTO [A_Daily_Src_t]
FROM (
SELECT 
			CHS.ОпКод, 
			CHS.ОпКодТов, 
		--	CHS.ОпКол*case when tr.[summa_dop] is null then 1 else -1 end ОпКол,  -- добавлено 20141209 VG для корректировки возвратов по требованию
		--	case when tr.[summa_dop]is null then CHS.ОпТип else 2 end ОпТип,   -- добавлено 20141209 VG для корректировки возвратов по требованию
			CHS.ОпКол,  -- вернул назад 20150227
			CHS.ОпТип,  -- вернул назад 20150227 
			CHS.ОпЦена, 
			CHS.ОпКодУпак, 
			CHS.ОпСкл, 
			CHS.ОпВозвр, 
			CHS.ОпНакл, 
			CHS.ОпНаклКод, 
			CHS.ОпТипКлн, 
			CHS.ОпТовНом, 
			CONVERT(int, CHS.ОпТипКлн) AS ОпТипКлн_INT, 
			CHS.ОпСтоим,  
			CAST(CHS.ОпКлн AS bigint) * 1000000 + CAST(CHS.КодАдрДоставки AS bigint) AS ПолнАдресДоставки, 
			CHS.ОпКлн, CHS.ОпДатаРасч, 
			CHS.КодАдрДоставки, 
			CHS.ОпСотр, 
			CHS.ОпТипSKL, 
			CHS.НашаФирма,
			(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN CHS.ОпЦена * CHS.ОпКол
  				      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - CHS.ОпЦена * CHS.ОпКол
					  ELSE NULL END)  AS ОпСтоимИтог, 
			(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN CHS.ОпКол
					  WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - CHS.ОпКол
 					  ELSE NULL END) AS ОпКолИтог,
			CONVERT(VARCHAR, CHS.ОпКодТов) + '_' + CONVERT(VARCHAR, CHS.ОпКлн) + '_' + CONVERT(VARCHAR, CHS.КодАдрДоставки) AS КодТКА,
			CHS.dst, 
			CHS.ВесБрутто, -- *case when tr.[summa_dop] is null then 1 else -1 end ВесБрутто,  -- добавлено 20141209 VG для корректировки возвратов по требованию
			CHS.ВесНетто, -- *case when tr.[summa_dop] is null then 1 else -1 end ВесНетто,  -- добавлено 20141209 VG для корректировки возвратов по требованию
			CHS.КодТТН, 
			CHS.АдресДоставки, 
			CHS.Отгрузка, 
			CHS.SippingGradientID, 
			CHS.Объем, 
			CHS.ЦенаТранспОтОбъема, 
			CHS.ЦенаТранспОтВеса, 
			checksum(ISNULL(CONVERT(varchar(10), CHS.КодТТН), '') + ' ' + ISNULL(CAST(CHS.ОпКлн AS varchar), '') 
			         + ' ' + ISNULL(CAST(CHS.КодАдрДоставки AS varchar), '')) AS ТТН_Адрес,
			CASE WHEN КодТТН IS NULL THEN 0 ELSE 1 END AS ExistTTN, 
			CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтОбъема / ОпСтоим ELSE 0 END AS ДоляТранРсхОбъем, 
			CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтВеса / ОпСтоим ELSE 0 END AS ДоляТранРсхВеса, 
			(CASE WHEN CHS.ОпКол >= u.УпакКоэф THEN 1 ELSE 0 END) AS ЗаводскаяУпаковка,
			(CHS.ОпКол * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчет, 
			CAST(FLOOR((CASE WHEN CHS.ОставшийсяСрокГодности < 0 THEN - 10 ELSE CHS.ОставшийсяСрокГодности END) / 10) AS INT) 
				AS ОставшийсяСрокГодности, 
			CHS.РасхНаВет, 
			CHS.КолВетТов, 
			CHS.АкцияКод, 
			hbs1.БонСумм AS Бонус_1, 
			hbs2.БонСумм  AS Бонус_2, 
			hbs3.БонСумм  AS Бонус_3,
				    /*
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN - Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				  ELSE NULL END as money) AS Бонус_1, 
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN  -  Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_2, 
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN  - Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_3,				    */
				    /* 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				  ELSE NULL END as money) AS Бонус_1, 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN -  Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_2, 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_3, */
			--CHS.Возврат_ТР, 
			tr.[summa_dop]*-1 Возврат_ТР,
			ex.[summa_dop]*-1 Возврат_Эксп, 
			CHS.Транс_Расх, 
			CHS.[СуммаПрогноз_Акции_НДС], 
			CHS.[СуммаПрогноз_НДС], 
			CHS.[СуммаПрогнозМлн], 
			CHS.[СуммаПрогнозМлн1], 
			CHS.[СуммаПрогноз_Акции], 
			CHS.[СуммаПрогноз], 
			CHS.Прогноз_Кол, 
			CHS.Прогноз_ЦенаУчет, 
			CHS.Прогноз_ЦенаУчет_безНДС,
			hs.ОпКолВозвр AS Вычерк ,
			hs.ОпКолВозвр* HS.ОпЦена*-1 as ВычеркСтоим,
            CHS.[АвтокодМЛ]
		 FROM	#Hist_skl_fill CHS  with(nolock)
				LEFT OUTER JOIN dbo.KAT_TVR AS k (nolock) ON CHS.ОпКодТов = k.ТовКод
				LEFT OUTER JOIN dbo.KAT_UPK AS u (nolock) ON k.ТовУпак = u.УпакКод
				LEFT OUTER JOIN dbo.hist_bon_sum hbs1 (nolock) ON CHS.ОпНаклКод=hbs1.ОпНаклКод AND CHS.ОпТовНом = hbs1.ОпТовНом AND hbs1.idBon_type=1
				LEFT OUTER JOIN dbo.hist_bon_sum hbs2 (nolock) ON CHS.ОпНаклКод=hbs2.ОпНаклКод AND CHS.ОпТовНом = hbs2.ОпТовНом AND hbs2.idBon_type=2
				LEFT OUTER JOIN dbo.hist_bon_sum hbs3 (nolock) ON CHS.ОпНаклКод=hbs3.ОпНаклКод AND CHS.ОпТовНом = hbs3.ОпТовНом AND hbs3.idBon_type=3
				LEFT OUTER JOIN dbo.[hist_skl_dop_sum] Tr (nolock) ON CHS.ОпНаклКод=tr.ОпНаклКод AND CHS.ОпТовНом=tr.ОпТовНом AND tr.[id_type_dop] = 1  -- Возврат Требование
				LEFT OUTER JOIN dbo.[hist_skl_dop_sum] Ex (nolock) ON CHS.ОпНаклКод=Ex.ОпНаклКод AND CHS.ОпТовНом=Ex.ОпТовНом AND Ex.[id_type_dop] = 2  -- Возврат Экспедитор 
				LEFT OUTER JOIN dbo.[hist_skl] HS (nolock) ON CHS.ОпНаклКод=HS.ОпНаклКод AND CHS.ОпТовНом=HS.ОпТовНом   -- вычерки 
				/*
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 1 GROUP BY [idHist_skl])  Hb1 ON CHS.ОпКод =  Hb1.idHist_skl  
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 2 GROUP BY [idHist_skl])  Hb2 ON CHS.ОпКод =  Hb2.idHist_skl  
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 3 GROUP BY [idHist_skl])  Hb3 ON CHS.ОпКод =  Hb3.idHist_skl 
					  */ 
			/*	left outer join 
					  (SELECT * FROM ( SELECT --DISTINCT 
						  [idHist_skl]
						  ,bt.NM_type
						  ,[Stavka]
					  FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  INNER JOIN [Бонус].dbo.Bon_type Bt ON Bn.idBon_type = Bt.id_type ) fin
					  PIVOT  (
					 min(Stavka)
					  FOR NM_type 
					  in ([Ретро],[Компенсационный],[Дополнительный])) AS pvt) bonPv 
			ON chs.ОпКод = bonPv.idHist_skl */
--		 WHERE CHS.ОпДатаРасч BETWEEN @BegDate and @EndDate --	(CHS.ОпДатаРасч >= @BegDate and CHS.ОпДатаРасч < @EndDate)
		
) T
CREATE NONCLUSTERED INDEX [IX_f_cube_buffer_4] ON [A_Daily_Src_t]
(
	[ОпНаклКод] ASC,
	[ОпТовНом] ASC,
	[ОпКодТов] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]

END
GO
/****** Object:  View [cube].[Hist_skl_fill]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [cube].[Hist_skl_fill]
AS
SELECT t.ОпКод,
       t.ОпКодТов,
       k.ТовГрп AS ОпКодТовГрп,
       k.ТовВид AS ОпКодТовВид,
       t.ОпКол,
       t.ОпТип,
       t.ОпЦена,
       t.ОпКодУпак,
       t.ОпСкл,
       t.ОпВозвр,
       t.ОпНакл,
       t.ОпНаклКод,
       t.ОпТипКлн,
       t.ОпТовНом,
       t.ОпСтоим,
       t.ОпКлн,
       t.ОпДатаРасч,
       t.КодАдрДоставки,
       t.ОпСотр,
       t.ОпТипSKL,
       t.НашаФирма,
       t.ВесБрутто,
       t.ВесНетто,
       t.КодТТН,
       t.АдресДоставки,
       t.Отгрузка,
       t.Объем,
       mtt.PriceV ЦенаТранспОтОбъема,
       mtt.PriceBrutto ЦенаТранспОтВеса,
       CASE
         WHEN Отгрузка > 0 AND Отгрузка <= 1500 THEN 1
         WHEN Отгрузка > 1500 AND Отгрузка <= 4000 THEN 2
         WHEN Отгрузка > 4000 AND Отгрузка <= 10000 THEN 3
         WHEN Отгрузка > 10000 THEN 4
       END AS SippingGradientID,
       t.PercentLife AS ОставшийсяСрокГодности,
       CASE
         WHEN (РасхНаВет <> 0) AND ([veterinary_doc] = 1) THEN 1.0 / РасхНаВет
         ELSE NULL
       END AS РасхНаВет,
       CASE [veterinary_doc]
         WHEN 0 THEN NULL
         ELSE [veterinary_doc]
       END AS КолВетТов,
       t.АкцияКод,
       kgvt.dst,
       0 AS Бонус_1,
       0 AS Бонус_2,
       0 AS Бонус_3,
       0 AS Возврат_ТР,
       0 AS Возврат_Эксп,
       cast(mtt.PriceBrutto*t.ВесБрутто*-1 as money) AS Транс_расх,
       cast(t.ОпКол *grP.[ЦенаПоГруппеЦен] as money) СуммаПрогноз_Акции_НДС,
  /*     cast(mtt.PriceBrutto*t.ВесБрутто*-1 as money) AS Транс_расх,
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then  (t.ОпКол *(case when (r.ТекЦена > r.ЦенаКатУчет * 10) 
          	AND ( r.ЦенаКатУчет > 0) 
          then r.ЦенаКатУчет else r.ТекЦена end) *(1 + r.НДС / 100)*(1 - isnull(r.ПроцентЦена, 0) / 100))
          else 0
        END СуммаПрогноз_Акции_НДС,     --- 20141218 VG */
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then (t.ОпКол *(
          	case when ( r.ТекЦена > r.ЦенаКатУчет * 10) 
            AND (r.ЦенаКатУчет > 0) 
            then r.ЦенаКатУчет else r.ТекЦена end) *(1 + r.НДС / 100))
          else 0
        END СуммаПрогноз_НДС,
      CASE WHEN t .ОпТип IN (2, 4) AND t .ОпТипКлн = 2 
		THEN (t .ОпКол * r.ТекЦена)*(1 + r.НДС / 100)
		ELSE 0 
	  END AS СуммаПрогнозМлн, 
      CASE WHEN t .ОпТип IN (2, 4) AND t .ОпТипКлн = 2 
		THEN (t .ОпКол * r.ЦенаКатУчет) *(1 + r.НДС / 100)
		ELSE 0 
	  END AS СуммаПрогнозМлн1, 
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then (t.ОпКол *(case
          when (r.ТекЦена > r.ЦенаКатУчет * 10) 
          AND (r.ЦенаКатУчет > 0) 
          then r.ЦенаКатУчет else r.ТекЦена end) *(1 - isnull(r.ПроцентЦена, 0) / 100))
          else 0
        END СуммаПрогноз_Акции,
        CASE WHEN t .ОпТип IN (2, 4) AND t .ОпТипКлн = 2 
			THEN (t .ОпКол * (CASE 
								WHEN (r.ТекЦена > r.ЦенаКатУчет * 10) 
										AND (r.ЦенаКатУчет > 0) 
									THEN r.ЦенаКатУчет 
									ELSE r.ТекЦена END)) 
		    ELSE 0 END AS СуммаПрогноз, 
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then t.ОпКол
          else 0
        END Прогноз_Кол, -- Прогноз_Кол
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then r.ЦенаКатУчет * t.ОпКол
          else 0
        END Прогноз_ЦенаУчет, -- Прогноз_ЦенаУчет
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then r.ЦенаКатУчет_безНДС *
          t.ОпКол
          else 0
        END Прогноз_ЦенаУчет_безНДС, -- Прогноз_ЦенаУчет_безНДС
       t.Вычерк,
       t.ВычеркСтоим,
       mtt.АвтокодМЛ,
       mtt.PriceBrutto,
       mtt.ЗатратыФакт       
FROM cube.sharp_t1_fill_hist AS t  with(nolock)
 LEFT OUTER JOIN dbo.TTN_DKM AS ttn ON ttn.КодТТН = t.КодТТН
 LEFT OUTER JOIN dbo.KGVT AS kgvt ON t.КодАдрДоставки =kgvt.КодАдресаДоставки 
 						AND t.ОпКлн = kgvt.КлнКод AND t.ОпКодТов = kgvt.ТовКод
 INNER JOIN dbo.KAT_TVR AS k ON t.ОпКодТов = k.ТовКод
 LEFT OUTER JOIN dbo.F_PROGNOS_CURR_PRICE AS r ON t.ОпКлн = r.КлнКод AND t.ОпКодТов = r.ТовКод
 left outer join dbo.LIST_ML_TOTAL AS mtt on t.[ОпНаклКод]=mtt.[ОпНаклКод]
 LEFT OUTER JOIN dbo.M_SKDS_Only_grp grP ON t.[ОпКлн]= grP.КлнКод AND t.[ОпКодТов]=grP.[ТовКод] AND ISNULL(grp.ЦенаПоГруппеЦен,0) <>0 AND grp.ЦенаПоГруппеЦен <800000
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "t"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 207
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ttn"
            Begin Extent = 
               Top = 6
               Left = 236
               Bottom = 114
               Right = 397
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "kgvt"
            Begin Extent = 
               Top = 6
               Left = 435
               Bottom = 114
               Right = 621
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "k"
            Begin Extent = 
               Top = 6
               Left = 659
               Bottom = 114
               Right = 819
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "r"
            Begin Extent = 
               Top = 6
               Left = 857
               Bottom = 114
               Right = 1052
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'cube', @level1type=N'VIEW',@level1name=N'Hist_skl_fill'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'cube', @level1type=N'VIEW',@level1name=N'Hist_skl_fill'
GO
/****** Object:  View [cube].[Hist_skl_fill_до_20141201]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [cube].[Hist_skl_fill_до_20141201]
AS
SELECT t.ОпКод,
       t.ОпКодТов,
       k.ТовГрп AS ОпКодТовГрп,
       k.ТовВид AS ОпКодТовВид,
       t.ОпКол,
       t.ОпТип,
       t.ОпЦена,
       t.ОпКодУпак,
       t.ОпСкл,
       t.ОпВозвр,
       t.ОпНакл,
       t.ОпНаклКод,
       t.ОпТипКлн,
       t.ОпТовНом,
       t.ОпСтоим,
       t.ОпКлн,
       t.ОпДатаРасч,
       t.КодАдрДоставки,
       t.ОпСотр,
       t.ОпТипSKL,
       t.НашаФирма,
       t.ВесБрутто,
       t.ВесНетто,
       t.КодТТН,
       t.АдресДоставки,
       t.Отгрузка,
       t.Объем,
       CASE
         WHEN ОбъемОтгрузки = 0 THEN 0
         ELSE ttn.СуммЗатр * [Объем] / ОбъемОтгрузки
       END AS ЦенаТранспОтОбъема,
       CASE
         WHEN ВесОтгрузки = 0 THEN 0
         ELSE ttn.СуммЗатр * [ВесБрутто] / ВесОтгрузки
       END AS ЦенаТранспОтВеса,
       CASE
         WHEN Отгрузка > 0 AND Отгрузка <= 1500 THEN 1
         WHEN Отгрузка > 1500 AND Отгрузка <= 4000 THEN 2
         WHEN Отгрузка > 4000 AND Отгрузка <= 10000 THEN 3
         WHEN Отгрузка > 10000 THEN 4
       END AS SippingGradientID,
       t.PercentLife AS ОставшийсяСрокГодности,
       CASE
         WHEN (РасхНаВет <> 0) AND ([veterinary_doc] = 1) THEN 1.0 / РасхНаВет
         ELSE NULL
       END AS РасхНаВет,
       CASE [veterinary_doc]
         WHEN 0 THEN NULL
         ELSE [veterinary_doc]
       END AS КолВетТов,
       t.АкцияКод,
       kgvt.dst,
       0 AS Бонус_1,
       0 AS Бонус_2,
       0 AS Бонус_3,
       0 AS Возврат_ТР,
       0 AS Возврат_Эксп,
       ttn.СуммЗатр AS Транс_расх,
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then  (t.ОпКол *(case when (r.ТекЦена > r.ЦенаКатУчет * 10) 
          	AND ( r.ЦенаКатУчет > 0) 
          then r.ЦенаКатУчет else r.ТекЦена end) *(1 + r.НДС / 100)*(1 - isnull(r.ПроцентЦена, 0) / 100))
          else 0
        END СуммаПрогноз_Акции_НДС,
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then (t.ОпКол *(
          	case when ( r.ТекЦена > r.ЦенаКатУчет * 10) 
            AND (r.ЦенаКатУчет > 0) 
            then r.ЦенаКатУчет else r.ТекЦена end) *(1 + r.НДС / 100))
          else 0
        END СуммаПрогноз_НДС,
      CASE WHEN t .ОпТип IN (2, 4) AND t .ОпТипКлн = 2 
		THEN (t .ОпКол * r.ТекЦена)*(1 + r.НДС / 100)
		ELSE 0 
	  END AS СуммаПрогнозМлн, 
      CASE WHEN t .ОпТип IN (2, 4) AND t .ОпТипКлн = 2 
		THEN (t .ОпКол * r.ЦенаКатУчет) *(1 + r.НДС / 100)
		ELSE 0 
	  END AS СуммаПрогнозМлн1, 
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 
          then (t.ОпКол *(case
          when (r.ТекЦена > r.ЦенаКатУчет * 10) 
          AND (r.ЦенаКатУчет > 0) 
          then r.ЦенаКатУчет else r.ТекЦена end) *(1 - isnull(r.ПроцентЦена, 0) / 100))
          else 0
        END СуммаПрогноз_Акции,
        CASE WHEN t .ОпТип IN (2, 4) AND t .ОпТипКлн = 2 
			THEN (t .ОпКол * (CASE 
								WHEN (r.ТекЦена > r.ЦенаКатУчет * 10) 
										AND (r.ЦенаКатУчет > 0) 
									THEN r.ЦенаКатУчет 
									ELSE r.ТекЦена END)) 
		    ELSE 0 END AS СуммаПрогноз, 
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then t.ОпКол
          else 0
        END Прогноз_Кол, -- Прогноз_Кол
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then r.ЦенаКатУчет * t.ОпКол
          else 0
        END Прогноз_ЦенаУчет, -- Прогноз_ЦенаУчет
        case
          when t.ОпТип in (2, 4) and t.ОпТипКлн = 2 then r.ЦенаКатУчет_безНДС *
          t.ОпКол
          else 0
        END Прогноз_ЦенаУчет_безНДС, -- Прогноз_ЦенаУчет_безНДС
       t.Вычерк,
       t.ВычеркСтоим
FROM cube.sharp_t1_fill_hist AS t  with(nolock)
 LEFT OUTER JOIN dbo.TTN_DKM AS ttn ON ttn.КодТТН = t.КодТТН
 LEFT OUTER JOIN dbo.KGVT AS kgvt ON t.КодАдрДоставки =kgvt.КодАдресаДоставки 
 						AND t.ОпКлн = kgvt.КлнКод AND t.ОпКодТов = kgvt.ТовКод
 INNER JOIN dbo.KAT_TVR AS k ON t.ОпКодТов = k.ТовКод
 LEFT OUTER JOIN dbo.F_PROGNOS_CURR_PRICE AS r ON t.ОпКлн = r.КлнКод AND t.ОпКодТов = r.ТовКод
 --left outer join dbo.LIST_ML_TOTAL AS mtt on t.[ОпНаклКод]=mtt
GO
/****** Object:  StoredProcedure [cube].[Fill_Hist_skl_test]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [cube].[Fill_Hist_skl_test]
AS

 SELECT 
	  [INVOICENUMBER]
	  ,[INVOICETYPE]
	  ,[INVOICESKL]
	  ,[SKU]
	  ,min(PercentLife) PercentLife
   into #hsl   
  FROM [PR_Euras].[wms].[HIST_SKL_SKULife]
  where 
  not ([INVOICENUMBER] is null)
  and not ([INVOICETYPE]is null)
  and not ([INVOICESKL] is null)
  and not ([SKU] is null)
group by [INVOICENUMBER]
	  ,[INVOICETYPE]
	  ,[INVOICESKL]
		,[SKU]
		
--CREATE NONCLUSTERED INDEX ix_hsl on #hsl(INVOICENUMBER,INVOICETYPE,INVOICESKL,SKU) include (PercentLife)

SELECT        max(ДокКод) ДокКод, Скл, ФлгОпер, Накл
   into #zkz_nkl
   FROM            dbo.zkz_nkl AS z
   where  z.Тип = 4
   GROUP BY Скл, ФлгОпер, Накл

--CrEATE NONCLUSTERED INDEX ix_zkz_nkl on #zkz_nkl(Скл,ФлгОпер,Накл) include (ДокКод)
   
SELECT        dbo.HIST_SKL.ОпКод, dbo.HIST_SKL.ОпКодТов, k.ТовВид, dbo.HIST_SKL.ОпКол, dbo.HIST_SKL.ОпТип, dbo.HIST_SKL.ОпЦена, dbo.HIST_SKL.ОпКодУпак, 
                         dbo.HIST_SKL.ОпСкл, dbo.HIST_SKL.ОпВозвр, dbo.HIST_SKL.ОпНакл, dbo.HIST_SKL.ОпНаклКод, dbo.HIST_SKL.ОпТипКлн, 
                         dbo.HIST_SKL.ОпТовНом,                          
                         dbo.HIST_SKL.ОпЦена * dbo.HIST_SKL.ОпКол AS ОпСтоим, 
                         dbo.LIST_SKL.ОпКлн, dbo.LIST_SKL.ОпДатаРасч ,    -- ОпДатаРасч                     
                         ISNULL(KLN_ADK.КодАдресаДоставки, 0) AS КодАдрДоставки, --если адреса не существует, то берем адрес клиента
                         CONVERT(int,dbo.LIST_SKL.ОпСотр) AS ОпСотр, 
                         dbo.LIST_SKL.ОпТип AS ОпТипSKL, dbo.LIST_SKL.НашаФирма,     						 
                         t.ТовВесБрутто * dbo.HIST_SKL.ОпКол AS ВесБрутто, 
                         t.ТовВесНетто * dbo.HIST_SKL.ОпКол AS ВесНетто, 
                         t.Объем * dbo.HIST_SKL.ОпКол AS Объем,                         
                         zkz_nkl.ДокКод AS КодТТН,
                         '' AS АдресДоставки    
                         ,hsl.PercentLife 
                         ,ws.[veterinary_doc]                     
                         ,HIST_SKL.АкцияКод
INTO #t2 
FROM            dbo.LIST_SKL 
INNER JOIN dbo.HIST_SKL ON dbo.LIST_SKL.ОпНаклКод = dbo.HIST_SKL.ОпНаклКод 
LEFT OUTER JOIN  --нужно для проверки правильности адреса клиента
         dbo.KLN_ADK ON dbo.KLN_ADK.КодАдресаДоставки = dbo.LIST_SKL.КодАдрДоставки and KLN_ADK.КодКлиента = LIST_SKL.ОпКлн  
LEFT OUTER JOIN  --dbo.CLN_DKL ON dbo.LIST_SKL.ОпКлн = dbo.CLN_DKL.КлнКод LEFT OUTER JOIN
         dbo.KAT_TVR AS k ON HIST_SKL.ОпКодТов = k.ТовКод 
LEFT OUTER JOIN [wms].[sku] ws ON ws.[host_id] = k.ТовКод 
LEFT JOIN dbo.TVR_DEF AS t ON k.ТовКод = t.ТовКод 
LEFT OUTER JOIN #zkz_nkl zkz_nkl ON (dbo.LIST_SKL.ОпСкл = zkz_nkl.Скл) AND (dbo.LIST_SKL.ОпТип = zkz_nkl.ФлгОпер) AND (zkz_nkl.Накл = dbo.LIST_SKL.ОпНакл)
         LEFT JOIN #hsl hsl on LIST_SKL.ОпНакл = hsl.INVOICENUMBER and LIST_SKL.ОпТип = hsl.INVOICETYPE and  LIST_SKL.ОпСкл = hsl.INVOICESKL and HIST_SKL.ОпКодТов = hsl.SKU
--where dbo.LIST_SKL.ОпДатаРасч>=(case when getdate()-60<'20140601' then '20140601' else getdate()-60 end)
where dbo.LIST_SKL.ОпДатаРасч>='20140601'

--CREATE NONCLUSTERED INDEX ix1_t2 on #t2(КодТТН,ОпКлн,КодАдрДоставки) include (ОпСтоим)
--CREATE NONCLUSTERED INDEX ix2_t2 on #t2(КодТТН) include (Объем,ВесБрутто)
--CREATE NONCLUSTERED INDEX ix3_t2 on #t2(КодТТН,ОпКлн,КодАдрДоставки,НашаФирма,ТовВид) include (veterinary_doc)

SELECT *
,SUM(ОпСтоим) OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки) Отгрузка --АдресДоставки
,SUM(Объем)  OVER (PARTITION BY КодТТН) ОбъемОтгрузки
,SUM(ВесБрутто)  OVER (PARTITION BY КодТТН) ВесОтгрузки
,SUM(CAST([veterinary_doc] AS INT)) OVER (PARTITION BY КодТТН,ОпКлн,КодАдрДоставки,НашаФирма, case when ТовВид in (1218,1219,1220,1221,1222,1231,1232,1351,1357) then 1 else 0 end) РасхНаВет
INTO #t1
 FROM #t2 t

--CREATE CLUSTERED INDEX ix_t1 on #t1(КодТТН,КодАдрДоставки,ОпКлн,ОпКодТов)

TRUNCATE TABLE [cube].[Hist_skl_test]
INSERT INTO [cube].[Hist_skl_test]
([ОпКод],[ОпКодТов],[ОпКодТовГрп],[ОпКодТовВид],[ОпКол],[ОпТип],[ОпЦена],[ОпКодУпак],[ОпСкл],[ОпВозвр],[ОпНакл]
,[ОпНаклКод],[ОпТипКлн],[ОпТовНом],[ОпСтоим],[ОпКлн],[ОпДатаРасч],[КодАдрДоставки],[ОпСотр],[ОпТипSKL],[НашаФирма]
,[ВесБрутто],[ВесНетто],[КодТТН],[АдресДоставки],[Отгрузка],Объем,ЦенаТранспОтОбъема,ЦенаТранспОтВеса,[SippingGradientID]
,ОставшийсяСрокГодности,РасхНаВет,КолВетТов,АкцияКод,dst,Бонус_1,Бонус_2,Бонус_3,Возврат_ТР,Возврат_Эксп,Транс_расх
,СуммаПрогноз_Акции_НДС,СуммаПрогноз_НДС,СуммаПрогноз_Акции,СуммаПрогноз)           
SELECT  
[ОпКод],[ОпКодТов],k.ТовГрп,k.ТовВид,[ОпКол],[ОпТип],[ОпЦена],[ОпКодУпак],[ОпСкл],[ОпВозвр],[ОпНакл],[ОпНаклКод],[ОпТипКлн]
,[ОпТовНом],[ОпСтоим],[ОпКлн],[ОпДатаРасч],[КодАдрДоставки],[ОпСотр],[ОпТипSKL],t.[НашаФирма],[ВесБрутто],[ВесНетто],t.[КодТТН]
,[АдресДоставки],[Отгрузка],[Объем]
,case when ОбъемОтгрузки = 0 then 0 else ttn.СуммЗатр*[Объем]/ОбъемОтгрузки end ЦенаТранспОтОбъема
,case when ВесОтгрузки = 0 then 0 else ttn.СуммЗатр*[ВесБрутто]/ВесОтгрузки end ЦенаТранспОтВеса
,CASE
WHEN Отгрузка > 0 AND Отгрузка <= 1500 THEN 1
WHEN Отгрузка > 1500 AND Отгрузка <= 4000 THEN 2
WHEN Отгрузка > 4000 AND Отгрузка <= 10000 THEN 3
WHEN Отгрузка > 10000 THEN 4
END SippingGradientID
,PercentLife
,CASE WHEN (РасхНаВет <> 0) AND ([veterinary_doc] = 1) THEN 1.0/РасхНаВет ELSE NULL END РасхНаВет
,CASE [veterinary_doc] WHEN 0 THEN NULL ELSE [veterinary_doc] END
,АкцияКод
,kgvt.dst
, dbo.getBonus_byType_test(ОпНаклКод, ОпКодТов, k.ТовГрп, k.ТовВид, ОпКлн, ОпДатаРасч, 1, ОпСтоим) as [Бонус_1]
, dbo.getBonus_byType_test(ОпНаклКод, ОпКодТов, k.ТовГрп, k.ТовВид, ОпКлн, ОпДатаРасч, 2, ОпСтоим) as [Бонус_2]
, dbo.getBonus_byType_test(ОпНаклКод, ОпКодТов, k.ТовГрп, k.ТовВид, ОпКлн, ОпДатаРасч, 3, ОпСтоим) as [Бонус_3]
, dbo.get_VozvratTR(ОпНаклКод,ОпТип,ОпВозвр,ОпКол*ОпЦена)
, dbo.get_VozvratEXP(ОпНаклКод,ОпТип,ОпВозвр,ОпКол*ОпЦена)
, 0
, case when ОпТип in (2,4) then ОпКол*r.Цена_Акции_НДС else 0 end
, case when ОпТип in (2,4) then ОпКол*r.Цена_НДС else 0 end
, case when ОпТип in (2,4) then ОпКол*r.Цена_Акции else 0 end
, case when ОпТип in (2,4) then ОпКол*r.Цена else 0 end
FROM #t1 t
LEFT JOIN ttn_dkm ttn ON ttn.КодТТН = t.КодТТН
LEFT JOIN dbo.KGVT AS kgvt ON t.КодАдрДоставки = kgvt.КодАдресаДоставки AND t.ОпКлн = kgvt.КлнКод AND 
                                                    t.ОпКодТов = kgvt.ТовКод
inner join kat_tvr k ON t.ОпКодТов = k.ТовКод
left outer join M_RealPrice_wo_NDS r on r.КлнКод=t.[ОпКлн] and r.ТовКод=t.[ОпКодТов]
GO
/****** Object:  UserDefinedFunction [dbo].[Vw_KPK_Assortiment_All]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE FUNCTION [dbo].[Vw_KPK_Assortiment_All] ()
RETURNS TABLE AS  return
SELECT ТовКод, ТовНаим, ТовГрпНаим, ТовВидНаим, ТовАрт, ТовЕИ, ТовОтгрЕИ, КоэфЕИ, ТовВесБрутто, ОстатокНаСкладе, СвободныйОстаток, ТоварВпути, БазоваяЦена, КодСклада, НаимСклада, ТовГрп, ТовВид, ПорядокУDDR FROM dbo.Vw_KPK_Assortiment union all SELECT ТовКод, ТовНаим, ТовГрпНаим, ТовВидНаим, ТовАрт, ТовЕИ, ТовОтгрЕИ, КоэфЕИ, ТовВесБрутто, ОстатокНаСкладе, СвободныйОстаток, ТоварВпути, БазоваяЦена, КодСклада, НаимСклада, ТовГрп, ТовВид, ПорядокУDDR FROM dbo.Vw_KPK_Assortiment_SBR
GO
/****** Object:  View [dbo].[Vw_KPK_Address_]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_Address_]
AS
SELECT     dbo.Vw_KPK_Address_2.КодКлн_КодАдрДоставки, dbo.Vw_KPK_Address_2.НазваниеТочки, dbo.Vw_KPK_Address_2.Город, 
                      dbo.Vw_KPK_Address_2.КодГород
FROM         dbo.Tbl_KPK_Address RIGHT OUTER JOIN
                      dbo.Vw_KPK_Address_2 ON dbo.Tbl_KPK_Address.[Код адреса] = dbo.Vw_KPK_Address_2.КодКлн_КодАдрДоставки
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Tbl_KPK_Address"
            Begin Extent = 
               Top = 19
               Left = 38
               Bottom = 97
               Right = 201
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_KPK_Address_2"
            Begin Extent = 
               Top = 5
               Left = 375
               Bottom = 113
               Right = 589
            End
            DisplayFlags = 280
            TopColumn = 2
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Address_'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Address_'
GO
/****** Object:  View [dbo].[Vw_KPK_Address]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_Address]
AS
SELECT     dbo.Vw_KPK_Address_2.КлнКод, dbo.Vw_KPK_Address_2.КлнАдрес, dbo.Vw_KPK_Address_2.КодГород, dbo.Vw_KPK_Address_2.Город, 
                      dbo.Vw_KPK_Address_2.КодКлн_КодАдрДоставки, dbo.Vw_KPK_Address_2.НазваниеТочки, ISNULL(dbo.Tbl_KPK_Address.[ФИО менеджера], 
                      dbo.Vw_KPK_Address_2.Менеджер) AS Менеджер
FROM         dbo.Tbl_KPK_Address RIGHT OUTER JOIN
                      dbo.Vw_KPK_Address_2 ON dbo.Tbl_KPK_Address.[Код адреса] = dbo.Vw_KPK_Address_2.КодКлн_КодАдрДоставки
WHERE     (ISNULL(dbo.Tbl_KPK_Address.[ФИО менеджера], dbo.Vw_KPK_Address_2.Менеджер) IN
                          (SELECT     менеджер
                            FROM          tbl_kpk_manager))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Tbl_KPK_Address"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 84
               Right = 201
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_KPK_Address_2"
            Begin Extent = 
               Top = 5
               Left = 388
               Bottom = 113
               Right = 602
            End
            DisplayFlags = 280
            TopColumn = 3
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 5940
         Alias = 2160
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Address'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_Address'
GO
/****** Object:  View [dbo].[Vw_inc_diff]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_inc_diff]
AS
SELECT     TOP 100 PERCENT CONVERT(varchar, ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпДатаРасч, dbo.Solvo_incomings.INCOMING_CLOSE_DATE), 104) 
                      AS [DATE], dbo.Vw_F_PRIH_last_100_days.НаклНомер AS LOC_NAKL, REPLICATE('0', 
                      7 - LEN(LTRIM(RTRIM(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклНомер, '0'))))) 
                      + LTRIM(RTRIM(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклНомер, '0'))) + '-1-' + REPLICATE('0', 
                      5 - LEN(LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклСклКод, '0')))))) 
                      + LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклСклКод, '0')))) 
                      + '/' + LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпКодТов, '0')))) AS LOC_DETAIL_ID, dbo.KAT_TVR.ТовАрт AS LOC_SKU_KOD, 
                      dbo.KAT_TVR.ТовНаим AS LOC_SKU, SUM(dbo.Vw_F_PRIH_last_100_days.ОпКол) AS LOC_QTY, SUM(CAST(ISNULL(dbo.Solvo_incomings.QTY, N'0') 
                      AS float)) AS SOLVO_QTY, SUM(ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпКол, 0) - CAST(ISNULL(dbo.Solvo_incomings.QTY, 0) AS float)) 
                      AS QTY_DIFF, SUM((ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпКол, 0) - CAST(ISNULL(dbo.Solvo_incomings.QTY, 0) AS float)) 
                      * ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпСтоим, 0) / ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпКол, 1)) AS SUM_DIFF, 
                      dbo.Solvo_incomings.NAME AS SOLVO_SKU, ISNULL(dbo.Solvo_incomings.DOC_NUMBER, N'-') 
                      + N'/' + LTRIM(RTRIM(STR(ISNULL(dbo.Solvo_incomings.SKU_ID, 0)))) AS SOLVO_DETAIL_ID, 
                      CAST(LEFT(ISNULL(dbo.Solvo_incomings.DOC_NUMBER, '0'), ISNULL(CHARINDEX('-', dbo.Solvo_incomings.DOC_NUMBER + '-'), 1) - 1) AS int) 
                      AS SOLVO_NAKL, dbo.Vw_F_PRIH_last_100_days.НаклСклКод AS loc_skl_id, dbo.Vw_F_PRIH_last_100_days.НаклСклНаим AS loc_skl, 
                      dbo.KAT_KLN.КлнКод AS loc_kln_id, dbo.KAT_KLN.КлнНаим AS loc_kln, dbo.Solvo_incomings.CLIENT AS solvo_client, 
                      dbo.Solvo_incomings.CLIENT_ID AS solvo_client_id, dbo.Vw_F_PRIH_last_100_days.ОпДатаРасч AS loc_date, 
                      dbo.Solvo_incomings.INCOMING_CLOSE_DATE AS solvo_date, dbo.Solvo_incomings.UNITS AS solvo_units, 
                      dbo.Solvo_incomings.INCOMING_ID AS solvo_incoming_id, dbo.Vw_F_PRIH_last_100_days.ОпКодТов AS loc_sku_id, 
                      dbo.Solvo_incomings.SOLVO_SKUCODE, MIN(ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпДатаРасч, dbo.Solvo_incomings.INCOMING_CLOSE_DATE)) 
                      AS DATE2
FROM         dbo.Vw_F_PRIH_last_100_days INNER JOIN
                      dbo.KAT_KLN ON dbo.Vw_F_PRIH_last_100_days.ОпКодКлн = dbo.KAT_KLN.КлнКод INNER JOIN
                      dbo.KAT_TVR ON dbo.Vw_F_PRIH_last_100_days.ОпКодТов = dbo.KAT_TVR.ТовКод FULL OUTER JOIN
                      dbo.Solvo_incomings ON REPLICATE('0', 7 - LEN(LTRIM(RTRIM(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклНомер, '0'))))) 
                      + LTRIM(RTRIM(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклНомер, '0'))) + '-1-' + REPLICATE('0', 
                      5 - LEN(LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклСклКод, '0')))))) 
                      + LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклСклКод, '0')))) 
                      + '/' + LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпКодТов, '0')))) = ISNULL(dbo.Solvo_incomings.DOC_NUMBER, N'-') 
                      + N'/' + LTRIM(RTRIM(STR(ISNULL(dbo.Solvo_incomings.SKU_ID, 0))))
WHERE     (dbo.Vw_F_PRIH_last_100_days.ОпВозвр IS NULL OR
                      dbo.Vw_F_PRIH_last_100_days.ОпВозвр <> 1) AND (dbo.Vw_F_PRIH_last_100_days.НаклСклКод = 78 OR
                      dbo.Vw_F_PRIH_last_100_days.НаклСклКод = 79 OR
                      dbo.Vw_F_PRIH_last_100_days.НаклСклКод IS NULL) AND (dbo.Vw_F_PRIH_last_100_days.Основание IS NULL OR
                      NOT (dbo.Vw_F_PRIH_last_100_days.Основание LIKE '%#провер%'))
GROUP BY REPLICATE('0', 7 - LEN(LTRIM(RTRIM(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклНомер, '0'))))) 
                      + LTRIM(RTRIM(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклНомер, '0'))) + '-1-' + REPLICATE('0', 
                      5 - LEN(LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклСклКод, '0')))))) 
                      + LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклСклКод, '0')))) 
                      + '/' + LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпКодТов, '0')))), dbo.Vw_F_PRIH_last_100_days.ОпКодТов, dbo.KAT_TVR.ТовАрт, 
                      dbo.KAT_TVR.ТовНаим, dbo.Vw_F_PRIH_last_100_days.НаклСклНаим, dbo.KAT_KLN.КлнКод, dbo.KAT_KLN.КлнНаим, 
                      dbo.Vw_F_PRIH_last_100_days.ОпДатаРасч, ISNULL(dbo.Solvo_incomings.DOC_NUMBER, N'-') 
                      + N'/' + LTRIM(RTRIM(STR(ISNULL(dbo.Solvo_incomings.SKU_ID, 0)))), CAST(LEFT(ISNULL(dbo.Solvo_incomings.DOC_NUMBER, '0'), 
                      ISNULL(CHARINDEX('-', dbo.Solvo_incomings.DOC_NUMBER + '-'), 1) - 1) AS int), dbo.Solvo_incomings.NAME, dbo.Solvo_incomings.UNITS, 
                      dbo.Solvo_incomings.CLIENT_ID, dbo.Solvo_incomings.CLIENT, dbo.Solvo_incomings.INCOMING_CLOSE_DATE, dbo.Solvo_incomings.INCOMING_ID, 
                      dbo.Vw_F_PRIH_last_100_days.НаклНомер, dbo.Vw_F_PRIH_last_100_days.НаклСклКод, CONVERT(varchar, 
                      ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпДатаРасч, dbo.Solvo_incomings.INCOMING_CLOSE_DATE), 104), 
                      ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпДатаРасч, dbo.Solvo_incomings.INCOMING_CLOSE_DATE), 
                      dbo.Solvo_incomings.SOLVO_SKUCODE
HAVING      (dbo.KAT_KLN.КлнНаим IS NULL OR
                      NOT (dbo.KAT_KLN.КлнНаим LIKE '%Пересортица%')) AND (SUM(ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпКол, 0) 
                      - CAST(ISNULL(dbo.Solvo_incomings.QTY, 0) AS float)) IS NULL OR
                      SUM(ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпКол, 0) - CAST(ISNULL(dbo.Solvo_incomings.QTY, 0) AS float)) > 0.002 OR
                      SUM(ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпКол, 0) - CAST(ISNULL(dbo.Solvo_incomings.QTY, 0) AS float)) < - 0.002) AND 
                      (MIN(ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпДатаРасч, dbo.Solvo_incomings.INCOMING_CLOSE_DATE)) BETWEEN { fn NOW() } - 95 AND 
                      { fn NOW() } - 2)
ORDER BY MIN(ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпДатаРасч, dbo.Solvo_incomings.INCOMING_CLOSE_DATE)), 
                      dbo.Vw_F_PRIH_last_100_days.НаклНомер, CAST(LEFT(ISNULL(dbo.Solvo_incomings.DOC_NUMBER, '0'), ISNULL(CHARINDEX('-', 
                      dbo.Solvo_incomings.DOC_NUMBER + '-'), 1) - 1) AS int), REPLICATE('0', 7 - LEN(LTRIM(RTRIM(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклНомер, 
                      '0'))))) + LTRIM(RTRIM(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклНомер, '0'))) + '-1-' + REPLICATE('0', 
                      5 - LEN(LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклСклКод, '0')))))) 
                      + LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.НаклСклКод, '0')))) 
                      + '/' + LTRIM(RTRIM(STR(ISNULL(dbo.Vw_F_PRIH_last_100_days.ОпКодТов, '0')))), ISNULL(dbo.Solvo_incomings.DOC_NUMBER, N'-') 
                      + N'/' + LTRIM(RTRIM(STR(ISNULL(dbo.Solvo_incomings.SKU_ID, 0)))), dbo.Vw_F_PRIH_last_100_days.ОпДатаРасч, 
                      dbo.Solvo_incomings.INCOMING_CLOSE_DATE
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[32] 4[27] 2[19] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Vw_F_PRIH_last_100_days"
            Begin Extent = 
               Top = 15
               Left = 339
               Bottom = 123
               Right = 506
            End
            DisplayFlags = 280
            TopColumn = 13
         End
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 80
               Left = 78
               Bottom = 160
               Right = 245
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "KAT_TVR"
            Begin Extent = 
               Top = 5
               Left = 79
               Bottom = 78
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Solvo_incomings"
            Begin Extent = 
               Top = 6
               Left = 617
               Bottom = 110
               Right = 784
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 4620
         Alias = 1425
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 3120
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_inc_diff'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_inc_diff'
GO
/****** Object:  UserDefinedFunction [cube].[sharp_t1_fill_hist_f]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [cube].[sharp_t1_fill_hist_f]
( @BegDate DATE , @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT * FROM [cube].[sharp_t1_fill_hist] WHERE ОпДатаРасч BETWEEN @BegDate AND @EndDate
)
GO
/****** Object:  View [dbo].[Vw_SIMPLE_Supp]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_SIMPLE_Supp]
AS
SELECT     dbo.KAT_KLN.КлнКод, dbo.KAT_KLN.КлнНаим
FROM         dbo.Tbl_SIMPLE_Moves INNER JOIN
                      dbo.KAT_KLN ON dbo.Tbl_SIMPLE_Moves.ИДпоставщика = dbo.KAT_KLN.КлнКод
GROUP BY dbo.KAT_KLN.КлнНаим, dbo.KAT_KLN.КлнКод
HAVING      (SUM(dbo.Tbl_SIMPLE_Moves.ОтгрузкаСумма) * 5 < SUM(dbo.Tbl_SIMPLE_Moves.ПоставкаСумма)) AND 
                      (NOT (dbo.KAT_KLN.КлнНаим LIKE '%егаплан%'))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KAT_KLN"
            Begin Extent = 
               Top = 6
               Left = 243
               Bottom = 114
               Right = 410
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Tbl_SIMPLE_Moves"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 54
               Right = 205
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SIMPLE_Supp'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_SIMPLE_Supp'
GO
/****** Object:  View [dbo].[OPT_M_RealPrice]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OPT_M_RealPrice]
AS
SELECT     КлнКод, ТовКод, ТовЦенаРСХ, ГрпЦен, ЦенаПоГруппеЦен, ЦенаПоАльтГруппеЦен, ТоварнаяСкидка, КлнНаТовар, КлнНаВид, КлнНаГруппу, 
                      CASE WHEN ЦенаПоАльтГруппеЦен <> 0 AND ЦенаПоАльтГруппеЦен IS NOT NULL 
                      THEN CASE WHEN КлнНаТовар <> 0 THEN ЦенаПоАльтГруппеЦен * (1 - КлнНаТовар / 100) 
                      WHEN КлнНаВид <> 0 THEN ЦенаПоАльтГруппеЦен * (1 - КлнНаВид / 100) 
                      WHEN КлнНаГруппу <> 0 THEN ЦенаПоАльтГруппеЦен * (1 - КлнНаГруппу / 100) 
                      WHEN ТоварнаяСкидка <> 0 THEN ЦенаПоАльтГруппеЦен * (1 - ТоварнаяСкидка / 100) 
                      ELSE ЦенаПоАльтГруппеЦен END WHEN ЦенаПоГруппеЦен <> 0 AND ЦенаПоГруппеЦен IS NOT NULL 
                      THEN CASE WHEN КлнНаТовар <> 0 THEN ЦенаПоГруппеЦен * (1 - КлнНаТовар / 100) 
                      WHEN КлнНаВид <> 0 THEN ЦенаПоГруппеЦен * (1 - КлнНаВид / 100) WHEN КлнНаГруппу <> 0 THEN ЦенаПоГруппеЦен * (1 - КлнНаГруппу / 100)
                       WHEN ТоварнаяСкидка <> 0 THEN ЦенаПоГруппеЦен * (1 - ТоварнаяСкидка / 100) 
                      ELSE ЦенаПоГруппеЦен END ELSE CASE WHEN КлнНаТовар <> 0 THEN ТовЦенаРСХ * (1 - КлнНаТовар / 100) 
                      WHEN КлнНаВид <> 0 THEN ТовЦенаРСХ * (1 - КлнНаВид / 100) WHEN КлнНаГруппу <> 0 THEN ТовЦенаРСХ * (1 - КлнНаГруппу / 100) 
                      WHEN ТоварнаяСкидка <> 0 THEN ТовЦенаРСХ * (1 - ТоварнаяСкидка / 100) ELSE ТовЦенаРСХ END END AS РеальнаяЦена
FROM         dbo.OPT_M_SKDS
GO
/****** Object:  View [dbo].[OPT_M_RealPriceNDS]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OPT_M_RealPriceNDS]
AS
SELECT     dbo.OPT_M_RealPrice.КлнКод, dbo.OPT_M_RealPrice.ТовКод, dbo.OPT_M_RealPrice.ТовЦенаРСХ, dbo.OPT_M_RealPrice.ГрпЦен, 
                      dbo.OPT_M_RealPrice.ЦенаПоГруппеЦен, dbo.OPT_M_RealPrice.ЦенаПоАльтГруппеЦен, dbo.OPT_M_RealPrice.ТоварнаяСкидка, 
                      dbo.OPT_M_RealPrice.КлнНаТовар, dbo.OPT_M_RealPrice.КлнНаВид, dbo.OPT_M_RealPrice.КлнНаГруппу, dbo.OPT_M_RealPrice.РеальнаяЦена, 
                      dbo.OPT_KAT_TVR_MARS.НДС, dbo.OPT_KAT_TVR_MARS.ТовАрт, dbo.OPT_KAT_TVR_MARS.ТовГрп, 
                      dbo.OPT_M_RealPrice.РеальнаяЦена * (1 + dbo.OPT_KAT_TVR_MARS.НДС / 100) AS ЦенаНДС
FROM         dbo.OPT_M_RealPrice INNER JOIN
                      dbo.OPT_KAT_TVR_MARS ON OPT_KAT_TVR_MARS.товКод = dbo.OPT_M_RealPrice.ТовКод
GO
/****** Object:  StoredProcedure [dbo].[NeoplNakl]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[NeoplNakl] AS
declare @Saldo as cursor 
declare @Cln int,@SaldoDate datetime,@SaldoSum money
declare @IsSaldoFetch int
declare @Nakl as cursor
declare @NaklDate datetime,@NaklCode integer, @NaklNum bigint,@NaklSum money,@UslSum money,@UslCount int
declare @IsNaklFetch int

delete from DOLG

set @Saldo=cursor for SELECT dbo.F_DEBET.ДбтКлнКод, dbo.v_DolgSaldoRound.Дата,f_debet.ДбтСальдо
FROM (dbo.F_DEBET INNER JOIN dbo.D_DATES 
ON dbo.F_DEBET.ДбтДата = dbo.D_DATES.ДатыКод)
join v_DolgSaldoRound on f_debet.ДбтКлнКод=v_DolgSaldoRound.Клн
and d_dates.ДатыРасч=v_DolgSaldoRound.Дата
order by ДбтКлнКод

open @Saldo
fetch next from @Saldo into @Cln,@SaldoDate,@SaldoSum
set @IsSaldoFetch=@@FETCH_STATUS
while @IsSaldoFetch=0
  begin
    if CURSOR_STATUS ('variable','@Nakl')>=0
      begin
        close @Nakl
      end
    set @Nakl=cursor for select D_NAKL.НаклДатаРасч, D_NAKL.НаклКод, D_NAKL.НаклНомер,
    Sum(F_RASH.ОпСтоим),Sum(F_USLRASH.УслКол*F_USLRASH.УслЦена),Count(F_USLRASH.УслКол)
    from (D_NAKL left join F_RASH on F_RASH.ОпНаклКод=D_NAKL.ОпНаклКод)
      left join F_USLRASH on D_NAKL.ОпНаклКод=F_USLRASH.УслНакл
    where D_NAKL.НаклКлн=@Cln and D_NAKL.НаклДатаРасч<=@SaldoDate
    group by D_NAKL.НаклДатаРасч,D_NAKL.НаклКод,  D_NAKL.НаклНомер
    having Sum(F_RASH.ОпСтоим) is not null or Sum(F_USLRASH.УслКол*F_USLRASH.УслЦена) is not null
    order by D_NAKL.НаклДатаРасч desc,D_NAKL.НаклКод desc

--select list_skl.ОпДатаРасч, list_skl.ОпНакл,Sum(f_rash.ОпСтоим) 
--    from list_skl join f_rash on f_rash.ОпНаклКод=list_skl.ОпНаклКод
--    where list_skl.ОпКлн=@Cln and list_skl.ОпДатаРасч<=@SaldoDate
--    group by list_skl.ОпДатаРасч,list_skl.ОпНакл
--    order by list_skl.ОпДатаРасч desc

    open @Nakl
    fetch next from @Nakl into @NaklDate,@NaklCode,@NaklNum,@NaklSum,@UslSum,@UslCount
    set @IsNaklFetch=@@FETCH_STATUS
    while @IsNaklFetch=0 and @SaldoSum<0
      begin
        if (@UslCount is null or @UslCount=0)
          begin
            set @UslSum=0
          end
        else
          begin
            set @UslSum=@UslSum/@UslCount
          end
        if @UslSum is not null
          begin
            set @NaklSum=@NaklSum+@UslSum
          end
        if @NaklSum is null
          begin
            set @NaklSum=@UslSum
          end    
        if (Abs(@SaldoSum)>Abs(@NaklSum))
          begin
            exec InsertDolg @Cln,@NaklCode,@NaklNum,@NaklDate,@SaldoSum,@NaklSum,@NaklSum
            set @SaldoSum=@SaldoSum+@NaklSum
          end
        else
          begin
            exec InsertDolg @Cln,@NaklCode,@NaklNum,@NaklDate,@SaldoSum,@NaklSum,@SaldoSum
            set @SaldoSum=0
          end
        fetch next from @Nakl into @NaklDate,@NaklCode,@NaklNum,@NaklSum,@UslSum,@UslCount
        set @IsNaklFetch=@@FETCH_STATUS
      end       
      fetch next from @Saldo into @Cln,@SaldoDate,@SaldoSum
      set @IsSaldoFetch=@@FETCH_STATUS
  end
  update DOLG set ДолгСрок=DateDiff(dd,ДолгДата,GetDate())
GO
/****** Object:  View [dbo].[Vw_KPK_manager]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Vw_KPK_manager]
AS
SELECT     dbo.Vw_KPK_Address.КлнКод
FROM         dbo.Tbl_KPK_manager INNER JOIN
                      dbo.Vw_KPK_Address ON dbo.Tbl_KPK_manager.Менеджер = dbo.Vw_KPK_Address.Менеджер
WHERE     (dbo.Tbl_KPK_manager.Менеджер = '39')
GROUP BY dbo.Vw_KPK_Address.КлнКод
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Tbl_KPK_manager"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 69
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Vw_KPK_Address"
            Begin Extent = 
               Top = 6
               Left = 282
               Bottom = 158
               Right = 496
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_manager'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Vw_KPK_manager'
GO
/****** Object:  UserDefinedFunction [cube].[Hist_skl_fill_f]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [cube].[Hist_skl_fill_f]
( @BegDate DATE , @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
SELECT * FROM [cube].[Hist_skl_fill] WHERE ОпДатаРасч BETWEEN @BegDate AND @EndDate
)
GO
/****** Object:  StoredProcedure [cube].[f_cube_bufferV1]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Batch submitted through debugger: SQLQuery3.sql|7|0|C:\Users\VGlukhov\AppData\Local\Temp\4\~vs57E6.sql


-- =============================================
-- Author:		Глухов ВЮ
-- Create date: 03-02-2015
-- Description:	Формируем записи для буферной таблицы для кубов
-- Замечание: 
-- =============================================
CREATE PROCEDURE [cube].[f_cube_bufferV1] 
 	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
/*DECLARE 	@startdate date ,
	@enddate date 
	*/
	--SET NOCOUNT ON;

	if(@enddate is NULL)
--		set @enddate = DATEADD(DAY,-48,cast(GETDATE() as date))
		set @enddate = DATEADD(DAY,0,cast(GETDATE() as date))
	
	if(@startdate is NULL)
		set @startdate = DATEADD(DAY,-25,cast(GETDATE() as date))
PRINT @startdate
PRINT @enddate

-- 20150205 должно и так работать		delete FROM cube.f_cube_buffer 
--		 WHERE ОпДатаРасч BETWEEN @startdate and @EndDate;
EXEC	[cube].[f_Cube_Hist_skl_to_buff_short]
		@startdate,
		@enddate 

-- удаляем лишние записи 20150210
DELETE
  FROM [PR_Euras].[cube].[f_cube_buffer]
    --where ОпДатаРасч between '20150123' and '20150212'
    where ОпДатаРасч between @startdate and @enddate
    
  --ОпНаклКод NOT IN (SELECT ОпНаклКод FROM dbo.LIST_SKL)  ;

MERGE cube.f_cube_buffer TRG USING
(SELECT DISTINCT * FROM [A_Daily_Src_t]) SRC
ON TRG.ОпНаклКод = SRC.ОпНаклКод AND TRG.ОпТовНом=SRC.ОпТовНом AND TRG.ОпКодТов=SRC.ОпКодТов
WHEN MATCHED THEN UPDATE SET
            TRG.ОпКод = SRC.ОпКод 
           ,TRG.ОпКодТов = SRC.ОпКодТов
           ,TRG.ОпКол = SRC.ОпКол
           ,TRG.ОпТип = SRC.ОпТип
           ,TRG.ОпЦена = SRC.ОпЦена
           ,TRG.ОпКодУпак = SRC.ОпКодУпак
           ,TRG.ОпСкл = SRC.ОпСкл
           ,TRG.ОпВозвр = SRC.ОпВозвр
           ,TRG.ОпНакл = SRC.ОпНакл
           ,TRG.ОпНаклКод = SRC.ОпНаклКод
           ,TRG.ОпТипКлн = SRC.ОпТипКлн
           ,TRG.ОпТовНом = SRC.ОпТовНом
           ,TRG.ОпТипКлн_INT = SRC.ОпТипКлн_INT
           ,TRG.ОпСтоим = SRC.ОпСтоим
           ,TRG.ПолнАдресДоставки = SRC.ПолнАдресДоставки
           ,TRG.ОпКлн = SRC.ОпКлн
           ,TRG.ОпДатаРасч = SRC.ОпДатаРасч
           ,TRG.КодАдрДоставки = SRC.КодАдрДоставки
           ,TRG.ОпСотр = SRC.ОпСотр
           ,TRG.ОпТипSKL = SRC.ОпТипSKL
           ,TRG.НашаФирма = SRC.НашаФирма
           ,TRG.ОпСтоимИтог = SRC.ОпСтоимИтог
           ,TRG.ОпКолИтог = SRC.ОпКолИтог
           ,TRG.dst = SRC.dst
           ,TRG.КодТКА = SRC.КодТКА
           ,TRG.ВесБрутто = SRC.ВесБрутто
           ,TRG.ВесНетто = SRC.ВесНетто
           ,TRG.СуммаЦенаУчет = SRC.СуммаЦенаУчет
           ,TRG.КодТТН = SRC.КодТТН
           ,TRG.АдресДоставки = SRC.АдресДоставки
           ,TRG.Отгрузка = SRC.Отгрузка
           ,TRG.SippingGradientID = SRC.SippingGradientID
           ,TRG.Объем = SRC.Объем
           ,TRG.ЦенаТранспОтОбъема = SRC.ЦенаТранспОтОбъема
           ,TRG.ЦенаТранспОтВеса = SRC.ЦенаТранспОтВеса
           ,TRG.ТТН_Адрес = SRC.ТТН_Адрес
           ,TRG.ExistTTN = SRC.ExistTTN
           ,TRG.ДоляТранРсхОбъем = SRC.ДоляТранРсхОбъем
           ,TRG.ДоляТранРсхВеса = SRC.ДоляТранРсхВеса
           ,TRG.ГрадацияТранРсхОбъемИд = SRC.ГрадацияТранРсхОбъемИд
           ,TRG.ГрадацияТранРсхВесаИд = SRC.ГрадацияТранРсхВесаИд
           ,TRG.ЗаводскаяУпаковка = SRC.ЗаводскаяУпаковка
           ,TRG.КолДней = SRC.КолДней
           ,TRG.СуммаОстатков = SRC.СуммаОстатков
           ,TRG.ОставшийсяСрокГодности = SRC.ОставшийсяСрокГодности
           ,TRG.РасхНаВет = SRC.РасхНаВет
           ,TRG.КолВетТов = SRC.КолВетТов
           ,TRG.zero = SRC.zero
           ,TRG.АкцияКод = SRC.АкцияКод
           ,TRG.Бонус_1 = SRC.Бонус_1
           ,TRG.Бонус_2 = SRC.Бонус_2
           ,TRG.Бонус_3 = SRC.Бонус_3
           ,TRG.Возврат_ТР = SRC.Возврат_ТР
           ,TRG.Возврат_Эксп = SRC.Возврат_Эксп
           ,TRG.Транс_Расх = SRC.Транс_Расх
           ,TRG.СуммаПрогноз_Акции_НДС = SRC.СуммаПрогноз_Акции_НДС
           ,TRG.СуммаПрогноз_НДС = SRC.СуммаПрогноз_НДС
           ,TRG.СуммаПрогноз_Акции = SRC.СуммаПрогноз_Акции
           ,TRG.СуммаПрогноз = SRC.СуммаПрогноз
           ,TRG.СуммаПрогнозМлн = SRC.СуммаПрогнозМлн
           ,TRG.СуммаПрогнозМлн1 = SRC.СуммаПрогнозМлн1
           ,TRG.Прогноз_Кол = SRC.Прогноз_Кол
           ,TRG.Прогноз_ЦенаУчет = SRC.Прогноз_ЦенаУчет
           ,TRG.Прогноз_ЦенаУчет_безНДС = SRC.Прогноз_ЦенаУчет_безНДС
           ,TRG.Вычерк = SRC.Вычерк
           ,TRG.ВычеркСтоим = SRC.ВычеркСтоим
           ,TRG.АвтокодМЛ = SRC.АвтокодМЛ
WHEN NOT MATCHED THEN 
INSERT ([ОпКод]
           ,[ОпКодТов]
           ,[ОпКол]
           ,[ОпТип]
           ,[ОпЦена]
           ,[ОпКодУпак]
           ,[ОпСкл]
           ,[ОпВозвр]
           ,[ОпНакл]
           ,[ОпНаклКод]
           ,[ОпТипКлн]
           ,[ОпТовНом]
           ,[ОпТипКлн_INT]
           ,[ОпСтоим]
           ,[ПолнАдресДоставки]
           ,[ОпКлн]
           ,[ОпДатаРасч]
           ,[КодАдрДоставки]
           ,[ОпСотр]
           ,[ОпТипSKL]
           ,[НашаФирма]
           ,[ОпСтоимИтог]
           ,[ОпКолИтог]
           ,[dst]
           ,[КодТКА]
           ,[ВесБрутто]
           ,[ВесНетто]
           ,[СуммаЦенаУчет]
           ,[КодТТН]
           ,[АдресДоставки]
           ,[Отгрузка]
           ,[SippingGradientID]
           ,[Объем]
           ,[ЦенаТранспОтОбъема]
           ,[ЦенаТранспОтВеса]
           ,[ТТН_Адрес]
           ,[ExistTTN]
           ,[ДоляТранРсхОбъем]
           ,[ДоляТранРсхВеса]
           ,[ГрадацияТранРсхОбъемИд]
           ,[ГрадацияТранРсхВесаИд]
           ,[ЗаводскаяУпаковка]
           ,[КолДней]
           ,[СуммаОстатков]
           ,[ОставшийсяСрокГодности]
           ,[РасхНаВет]
           ,[КолВетТов]
           ,[zero]
           ,[АкцияКод]
           ,[Бонус_1]
           ,[Бонус_2]
           ,[Бонус_3]
           ,[Возврат_ТР]
           ,[Возврат_Эксп]
           ,[Транс_Расх]
           ,[СуммаПрогноз_Акции_НДС]
           ,[СуммаПрогноз_НДС]
           ,[СуммаПрогноз_Акции]
           ,[СуммаПрогноз]
           ,[СуммаПрогнозМлн]
           ,[СуммаПрогнозМлн1]
           ,[Прогноз_Кол]
           ,[Прогноз_ЦенаУчет]
           ,[Прогноз_ЦенаУчет_безНДС]
           ,[Вычерк]
           ,[ВычеркСтоим]
           ,[АвтокодМЛ])
     VALUES
           (ОпКод 
           ,ОпКодТов
           ,ОпКол
           ,ОпТип
           ,ОпЦена
           ,ОпКодУпак
           ,ОпСкл
           ,ОпВозвр
           ,ОпНакл
           ,ОпНаклКод
           ,ОпТипКлн
           ,ОпТовНом
           ,ОпТипКлн_INT
           ,ОпСтоим
           ,ПолнАдресДоставки
           ,ОпКлн
           ,ОпДатаРасч
           ,КодАдрДоставки
           ,ОпСотр
           ,ОпТипSKL
           ,НашаФирма
           ,ОпСтоимИтог
           ,ОпКолИтог
           ,dst
           ,КодТКА
           ,ВесБрутто
           ,ВесНетто
           ,СуммаЦенаУчет
           ,КодТТН
           ,АдресДоставки
           ,Отгрузка
           ,SippingGradientID
           ,Объем
           ,ЦенаТранспОтОбъема
           ,ЦенаТранспОтВеса
           ,ТТН_Адрес
           ,ExistTTN
           ,ДоляТранРсхОбъем
           ,ДоляТранРсхВеса
           ,ГрадацияТранРсхОбъемИд
           ,ГрадацияТранРсхВесаИд
           ,ЗаводскаяУпаковка
           ,КолДней
           ,СуммаОстатков
           ,ОставшийсяСрокГодности
           ,РасхНаВет
           ,КолВетТов
           ,zero
           ,АкцияКод
           ,Бонус_1
           ,Бонус_2
           ,Бонус_3
           ,Возврат_ТР
           ,Возврат_Эксп
           ,Транс_Расх
           ,СуммаПрогноз_Акции_НДС
           ,СуммаПрогноз_НДС
           ,СуммаПрогноз_Акции
           ,СуммаПрогноз
           ,СуммаПрогнозМлн
           ,СуммаПрогнозМлн1
           ,Прогноз_Кол
           ,Прогноз_ЦенаУчет
           ,Прогноз_ЦенаУчет_безНДС
           ,Вычерк
           ,ВычеркСтоим
           ,АвтокодМЛ);



-- корректируем даты 20150210
/*
UPDATE fb
SET fb.ОпДатаРасч=ls.ОпДатаРасч 
FROM [cube].[f_cube_buffer] fb
INNER JOIN list_skl ls ON fb.ОпНаклКод = ls.ОпНаклКод
WHERE fb.ОпДатаРасч <> ls.ОпДатаРасч


SELECT * 
INTO f_cube_buffer
FROM dbo.f_Cube_Hist_skl('20150101','20150228')

SELECT * FROM dbo.f_cube_buffer WHERE ОпДатаРасч BETWEEN '20150101' AND '20150228'		 
	*/	
	--DROP TABLE #Src_t
END
GO
/****** Object:  UserDefinedFunction [dbo].[f_Cube_Hist_skl_to_buff]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_Cube_Hist_skl_to_buff]
( @BegDate DATE , @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
--with T AS


SELECT	ОпКод, 
        ОпКодТов, 
        ОпКол, 
        ОпТип, 
        ОпЦена, 
        ОпКодУпак, 
        ОпСкл, 
        ОпВозвр, 
        ОпНакл, 
        ОпНаклКод, 
        ОпТипКлн, 
        ОпТовНом, 
        ОпТипКлн_INT, 
        ОпСтоим, 
		ПолнАдресДоставки, 
		ОпКлн, 
		ОпДатаРасч, 
		КодАдрДоставки, 
		ОпСотр, 
		ОпТипSKL, 
		НашаФирма, 
		ОпСтоимИтог, 
		ОпКолИтог, 
		dst, 
		КодТКА, 
		ВесБрутто, 
		ВесНетто, 
		СуммаЦенаУчет, 
		КодТТН, 
		АдресДоставки, 
		Отгрузка, 
		SippingGradientID, 
		Объем, 
		ЦенаТранспОтОбъема, 
		ЦенаТранспОтВеса, 
		ТТН_Адрес, 
		ExistTTN, 
		ДоляТранРсхОбъем, 
		ДоляТранРсхВеса, 
		CASE WHEN ДоляТранРсхОбъем <= 0.15 AND ExistTTN = 1 THEN 0 WHEN ДоляТранРсхОбъем > 0.15 AND 
		ExistTTN = 1 THEN 1 ELSE NULL END AS 
		        ГрадацияТранРсхОбъемИд, 
		CASE WHEN ДоляТранРсхВеса <= 0.15 AND 
		ExistTTN = 1 THEN 0 WHEN ДоляТранРсхВеса > 0.15 AND ExistTTN = 1 THEN 1 ELSE NULL END AS 
		        ГрадацияТранРсхВесаИд, 
		ЗаводскаяУпаковка, 
		NULL AS КолДней, 
		NULL AS СуммаОстатков, 
		CASE WHEN ОставшийсяСрокГодности >= 10 THEN 10 ELSE ОставшийсяСрокГодности END AS ОставшийсяСрокГодности,
		РасхНаВет, 
		КолВетТов, 
		CAST(NULL AS float) AS zero, 
		АкцияКод, 
		Бонус_1, 
		Бонус_2, 
		Бонус_3, 
		Возврат_ТР, 
		Возврат_Эксп,  	
		Транс_Расх,
		[СуммаПрогноз_Акции_НДС], 
		[СуммаПрогноз_НДС], 
		[СуммаПрогноз_Акции], 
		[СуммаПрогноз], 
		[СуммаПрогнозМлн], 
		[СуммаПрогнозМлн1], 
		Прогноз_Кол, 
		Прогноз_ЦенаУчет, 
		Прогноз_ЦенаУчет_безНДС,
		Вычерк,
		ВычеркСтоим,
        АвтокодМЛ
FROM (
SELECT 
			CHS.ОпКод, 
			CHS.ОпКодТов, 
			CHS.ОпКол*case when tr.[summa_dop] is null then 1 else -1 end ОпКол,  -- добавлено 20141209 VG для корректировки возвратов по требованию
			case when tr.[summa_dop]is null then CHS.ОпТип else 2 end ОпТип,   -- добавлено 20141209 VG для корректировки возвратов по требованию
	--		CHS.ОпКол,  
	--		CHS.ОпТип, 
			CHS.ОпЦена, 
			CHS.ОпКодУпак, 
			CHS.ОпСкл, 
			CHS.ОпВозвр, 
			CHS.ОпНакл, 
			CHS.ОпНаклКод, 
			CHS.ОпТипКлн, 
			CHS.ОпТовНом, 
			CONVERT(int, CHS.ОпТипКлн) AS ОпТипКлн_INT, 
			CHS.ОпСтоим,  
			CAST(CHS.ОпКлн AS bigint) * 1000000 + CAST(CHS.КодАдрДоставки AS bigint) AS ПолнАдресДоставки, 
			CHS.ОпКлн, CHS.ОпДатаРасч, 
			CHS.КодАдрДоставки, 
			CHS.ОпСотр, 
			CHS.ОпТипSKL, 
			CHS.НашаФирма,
			(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN CHS.ОпЦена * CHS.ОпКол
  				      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - CHS.ОпЦена * CHS.ОпКол
					  ELSE NULL END)  AS ОпСтоимИтог, 
			(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN CHS.ОпКол
					  WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - CHS.ОпКол
 					  ELSE NULL END) AS ОпКолИтог,
			CONVERT(VARCHAR, CHS.ОпКодТов) + '_' + CONVERT(VARCHAR, CHS.ОпКлн) + '_' + CONVERT(VARCHAR, CHS.КодАдрДоставки) AS КодТКА,
			CHS.dst, 
			CHS.ВесБрутто, -- *case when tr.[summa_dop] is null then 1 else -1 end ВесБрутто,  -- добавлено 20141209 VG для корректировки возвратов по требованию
			CHS.ВесНетто, -- *case when tr.[summa_dop] is null then 1 else -1 end ВесНетто,  -- добавлено 20141209 VG для корректировки возвратов по требованию
			CHS.КодТТН, 
			CHS.АдресДоставки, 
			CHS.Отгрузка, 
			CHS.SippingGradientID, 
			CHS.Объем, 
			CHS.ЦенаТранспОтОбъема, 
			CHS.ЦенаТранспОтВеса, 
			checksum(ISNULL(CONVERT(varchar(10), CHS.КодТТН), '') + ' ' + ISNULL(CAST(CHS.ОпКлн AS varchar), '') 
			         + ' ' + ISNULL(CAST(CHS.КодАдрДоставки AS varchar), '')) AS ТТН_Адрес,
			CASE WHEN КодТТН IS NULL THEN 0 ELSE 1 END AS ExistTTN, 
			CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтОбъема / ОпСтоим ELSE 0 END AS ДоляТранРсхОбъем, 
			CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтВеса / ОпСтоим ELSE 0 END AS ДоляТранРсхВеса, 
			(CASE WHEN CHS.ОпКол >= u.УпакКоэф THEN 1 ELSE 0 END) AS ЗаводскаяУпаковка,
			(CHS.ОпКол * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчет, 
			CAST(FLOOR((CASE WHEN CHS.ОставшийсяСрокГодности < 0 THEN - 10 ELSE CHS.ОставшийсяСрокГодности END) / 10) AS INT) 
				AS ОставшийсяСрокГодности, 
			CHS.РасхНаВет, 
			CHS.КолВетТов, 
			CHS.АкцияКод, 
			hbs1.БонСумм AS Бонус_1, 
			hbs2.БонСумм  AS Бонус_2, 
			hbs3.БонСумм  AS Бонус_3,
				    /*
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN - Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				  ELSE NULL END as money) AS Бонус_1, 
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN  -  Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_2, 
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN  - Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_3,				    */
				    /* 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				  ELSE NULL END as money) AS Бонус_1, 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN -  Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_2, 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_3, */
			--CHS.Возврат_ТР, 
			tr.[summa_dop]*-1 Возврат_ТР,
			ex.[summa_dop]*-1 Возврат_Эксп, 
			CHS.Транс_Расх, 
			CHS.[СуммаПрогноз_Акции_НДС], 
			CHS.[СуммаПрогноз_НДС], 
			CHS.[СуммаПрогнозМлн], 
			CHS.[СуммаПрогнозМлн1], 
			CHS.[СуммаПрогноз_Акции], 
			CHS.[СуммаПрогноз], 
			CHS.Прогноз_Кол, 
			CHS.Прогноз_ЦенаУчет, 
			CHS.Прогноз_ЦенаУчет_безНДС,
			hs.ОпКолВозвр AS Вычерк ,
			hs.ОпКолВозвр* HS.ОпЦена*-1 as ВычеркСтоим,
            CHS.[АвтокодМЛ]
		 FROM	cube.Hist_skl_fill CHS  with(nolock)
				LEFT OUTER JOIN dbo.KAT_TVR AS k ON CHS.ОпКодТов = k.ТовКод
				LEFT OUTER JOIN dbo.KAT_UPK AS u ON k.ТовУпак = u.УпакКод
				LEFT OUTER JOIN dbo.hist_bon_sum hbs1 ON CHS.ОпНаклКод=hbs1.ОпНаклКод AND CHS.ОпТовНом = hbs1.ОпТовНом AND hbs1.idBon_type=1
				LEFT OUTER JOIN dbo.hist_bon_sum hbs2 ON CHS.ОпНаклКод=hbs2.ОпНаклКод AND CHS.ОпТовНом = hbs2.ОпТовНом AND hbs2.idBon_type=2
				LEFT OUTER JOIN dbo.hist_bon_sum hbs3 ON CHS.ОпНаклКод=hbs3.ОпНаклКод AND CHS.ОпТовНом = hbs3.ОпТовНом AND hbs3.idBon_type=3
				LEFT OUTER JOIN dbo.[hist_skl_dop_sum] Tr ON CHS.ОпНаклКод=tr.ОпНаклКод AND CHS.ОпТовНом=tr.ОпТовНом AND tr.[id_type_dop] = 1  -- Возврат Требование
				LEFT OUTER JOIN dbo.[hist_skl_dop_sum] Ex ON CHS.ОпНаклКод=Ex.ОпНаклКод AND CHS.ОпТовНом=Ex.ОпТовНом AND Ex.[id_type_dop] = 2  -- Возврат Экспедитор 
				LEFT OUTER JOIN dbo.[hist_skl] HS ON CHS.ОпНаклКод=HS.ОпНаклКод AND CHS.ОпТовНом=HS.ОпТовНом   -- вычерки 
				/*
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 1 GROUP BY [idHist_skl])  Hb1 ON CHS.ОпКод =  Hb1.idHist_skl  
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 2 GROUP BY [idHist_skl])  Hb2 ON CHS.ОпКод =  Hb2.idHist_skl  
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 3 GROUP BY [idHist_skl])  Hb3 ON CHS.ОпКод =  Hb3.idHist_skl 
					  */ 
			/*	left outer join 
					  (SELECT * FROM ( SELECT --DISTINCT 
						  [idHist_skl]
						  ,bt.NM_type
						  ,[Stavka]
					  FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  INNER JOIN [Бонус].dbo.Bon_type Bt ON Bn.idBon_type = Bt.id_type ) fin
					  PIVOT  (
					 min(Stavka)
					  FOR NM_type 
					  in ([Ретро],[Компенсационный],[Дополнительный])) AS pvt) bonPv 
			ON chs.ОпКод = bonPv.idHist_skl */
		 WHERE CHS.ОпДатаРасч BETWEEN @BegDate and @EndDate --	(CHS.ОпДатаРасч >= @BegDate and CHS.ОпДатаРасч < @EndDate)
		
) T
);
GO
/****** Object:  UserDefinedFunction [dbo].[f_Cube_Hist_skl_to_buff_with]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_Cube_Hist_skl_to_buff_with]
( @BegDate DATE , @EndDate DATE )
RETURNS TABLE AS
RETURN 
(
with T AS
(
SELECT 
			CHS.ОпКод, 
			CHS.ОпКодТов, 
			CHS.ОпКол*case when tr.[summa_dop] is null then 1 else -1 end ОпКол,  -- добавлено 20141209 VG для корректировки возвратов по требованию
			case when tr.[summa_dop]is null then CHS.ОпТип else 2 end ОпТип,   -- добавлено 20141209 VG для корректировки возвратов по требованию
	--		CHS.ОпКол,  
	--		CHS.ОпТип, 
			CHS.ОпЦена, 
			CHS.ОпКодУпак, 
			CHS.ОпСкл, 
			CHS.ОпВозвр, 
			CHS.ОпНакл, 
			CHS.ОпНаклКод, 
			CHS.ОпТипКлн, 
			CHS.ОпТовНом, 
			CONVERT(int, CHS.ОпТипКлн) AS ОпТипКлн_INT, 
			CHS.ОпСтоим,  
			CAST(CHS.ОпКлн AS bigint) * 1000000 + CAST(CHS.КодАдрДоставки AS bigint) AS ПолнАдресДоставки, 
			CHS.ОпКлн, CHS.ОпДатаРасч, 
			CHS.КодАдрДоставки, 
			CHS.ОпСотр, 
			CHS.ОпТипSKL, 
			CHS.НашаФирма,
			(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN CHS.ОпЦена * CHS.ОпКол
  				      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - CHS.ОпЦена * CHS.ОпКол
					  ELSE NULL END)  AS ОпСтоимИтог, 
			(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN CHS.ОпКол
					  WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - CHS.ОпКол
 					  ELSE NULL END) AS ОпКолИтог,
			CONVERT(VARCHAR, CHS.ОпКодТов) + '_' + CONVERT(VARCHAR, CHS.ОпКлн) + '_' + CONVERT(VARCHAR, CHS.КодАдрДоставки) AS КодТКА,
			CHS.dst, 
			CHS.ВесБрутто, -- *case when tr.[summa_dop] is null then 1 else -1 end ВесБрутто,  -- добавлено 20141209 VG для корректировки возвратов по требованию
			CHS.ВесНетто, -- *case when tr.[summa_dop] is null then 1 else -1 end ВесНетто,  -- добавлено 20141209 VG для корректировки возвратов по требованию
			CHS.КодТТН, 
			CHS.АдресДоставки, 
			CHS.Отгрузка, 
			CHS.SippingGradientID, 
			CHS.Объем, 
			CHS.ЦенаТранспОтОбъема, 
			CHS.ЦенаТранспОтВеса, 
			checksum(ISNULL(CONVERT(varchar(10), CHS.КодТТН), '') + ' ' + ISNULL(CAST(CHS.ОпКлн AS varchar), '') 
			         + ' ' + ISNULL(CAST(CHS.КодАдрДоставки AS varchar), '')) AS ТТН_Адрес,
			CASE WHEN КодТТН IS NULL THEN 0 ELSE 1 END AS ExistTTN, 
			CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтОбъема / ОпСтоим ELSE 0 END AS ДоляТранРсхОбъем, 
			CASE WHEN ОпСтоим > 0 THEN ЦенаТранспОтВеса / ОпСтоим ELSE 0 END AS ДоляТранРсхВеса, 
			(CASE WHEN CHS.ОпКол >= u.УпакКоэф THEN 1 ELSE 0 END) AS ЗаводскаяУпаковка,
			(CHS.ОпКол * k.ТовЦенаУчет) * (1 + k.НДС / 100) AS СуммаЦенаУчет, 
			CAST(FLOOR((CASE WHEN CHS.ОставшийсяСрокГодности < 0 THEN - 10 ELSE CHS.ОставшийсяСрокГодности END) / 10) AS INT) 
				AS ОставшийсяСрокГодности, 
			CHS.РасхНаВет, 
			CHS.КолВетТов, 
			CHS.АкцияКод, 
			hbs1.БонСумм AS Бонус_1, 
			hbs2.БонСумм  AS Бонус_2, 
			hbs3.БонСумм  AS Бонус_3,
				    /*
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN - Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				  ELSE NULL END as money) AS Бонус_1, 
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN  -  Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_2, 
			cast(CASE WHEN (CHS.ОпВозвр = 0)THEN Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпВозвр = 1) THEN  - Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_3,				    */
				    /* 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - Hb1.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				  ELSE NULL END as money) AS Бонус_1, 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN -  Hb2.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_2, 
			cast(CASE WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 0) AND (CHS.ОпТип = 2) THEN Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
			      WHEN (CHS.ОпТипКлн = 2) AND (CHS.ОпВозвр = 1) AND (CHS.ОпТип = 1) THEN - Hb3.[Stavka]/100*CHS.ОпЦена * CHS.ОпКол
				    ELSE NULL END as money) AS Бонус_3, */
			--CHS.Возврат_ТР, 
			tr.[summa_dop]*-1 Возврат_ТР,
			ex.[summa_dop]*-1 Возврат_Эксп, 
			CHS.Транс_Расх, 
			CHS.[СуммаПрогноз_Акции_НДС], 
			CHS.[СуммаПрогноз_НДС], 
			CHS.[СуммаПрогнозМлн], 
			CHS.[СуммаПрогнозМлн1], 
			CHS.[СуммаПрогноз_Акции], 
			CHS.[СуммаПрогноз], 
			CHS.Прогноз_Кол, 
			CHS.Прогноз_ЦенаУчет, 
			CHS.Прогноз_ЦенаУчет_безНДС,
			hs.ОпКолВозвр AS Вычерк ,
			hs.ОпКолВозвр* HS.ОпЦена*-1 as ВычеркСтоим,
            CHS.[АвтокодМЛ]
		 FROM	cube.Hist_skl_fill CHS  with(nolock)
				LEFT OUTER JOIN dbo.KAT_TVR AS k ON CHS.ОпКодТов = k.ТовКод
				LEFT OUTER JOIN dbo.KAT_UPK AS u ON k.ТовУпак = u.УпакКод
				LEFT OUTER JOIN dbo.hist_bon_sum hbs1 ON CHS.ОпНаклКод=hbs1.ОпНаклКод AND CHS.ОпТовНом = hbs1.ОпТовНом AND hbs1.idBon_type=1
				LEFT OUTER JOIN dbo.hist_bon_sum hbs2 ON CHS.ОпНаклКод=hbs2.ОпНаклКод AND CHS.ОпТовНом = hbs2.ОпТовНом AND hbs2.idBon_type=2
				LEFT OUTER JOIN dbo.hist_bon_sum hbs3 ON CHS.ОпНаклКод=hbs3.ОпНаклКод AND CHS.ОпТовНом = hbs3.ОпТовНом AND hbs3.idBon_type=3
				LEFT OUTER JOIN dbo.[hist_skl_dop_sum] Tr ON CHS.ОпНаклКод=tr.ОпНаклКод AND CHS.ОпТовНом=tr.ОпТовНом AND tr.[id_type_dop] = 1  -- Возврат Требование
				LEFT OUTER JOIN dbo.[hist_skl_dop_sum] Ex ON CHS.ОпНаклКод=Ex.ОпНаклКод AND CHS.ОпТовНом=Ex.ОпТовНом AND Ex.[id_type_dop] = 2  -- Возврат Экспедитор 
				LEFT OUTER JOIN dbo.[hist_skl] HS ON CHS.ОпНаклКод=HS.ОпНаклКод AND CHS.ОпТовНом=HS.ОпТовНом   -- вычерки 
				/*
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 1 GROUP BY [idHist_skl])  Hb1 ON CHS.ОпКод =  Hb1.idHist_skl  
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 2 GROUP BY [idHist_skl])  Hb2 ON CHS.ОпКод =  Hb2.idHist_skl  
				LEFT OUTER JOIN (SELECT [idHist_skl],SUM([Stavka]) [Stavka] FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  WHERE Bn.idBon_type = 3 GROUP BY [idHist_skl])  Hb3 ON CHS.ОпКод =  Hb3.idHist_skl 
					  */ 
			/*	left outer join 
					  (SELECT * FROM ( SELECT --DISTINCT 
						  [idHist_skl]
						  ,bt.NM_type
						  ,[Stavka]
					  FROM [PR_Euras].[dbo].[Hist_skl_bon] Hb
					  INNER JOIN [Бонус].dbo.Bonus Bn ON Hb.idBon = Bn.idBon
					  INNER JOIN [Бонус].dbo.Bon_type Bt ON Bn.idBon_type = Bt.id_type ) fin
					  PIVOT  (
					 min(Stavka)
					  FOR NM_type 
					  in ([Ретро],[Компенсационный],[Дополнительный])) AS pvt) bonPv 
			ON chs.ОпКод = bonPv.idHist_skl */
		 WHERE CHS.ОпДатаРасч BETWEEN @BegDate and @EndDate --	(CHS.ОпДатаРасч >= @BegDate and CHS.ОпДатаРасч < @EndDate)
		
)

SELECT	ОпКод, 
        ОпКодТов, 
        ОпКол, 
        ОпТип, 
        ОпЦена, 
        ОпКодУпак, 
        ОпСкл, 
        ОпВозвр, 
        ОпНакл, 
        ОпНаклКод, 
        ОпТипКлн, 
        ОпТовНом, 
        ОпТипКлн_INT, 
        ОпСтоим, 
		ПолнАдресДоставки, 
		ОпКлн, 
		ОпДатаРасч, 
		КодАдрДоставки, 
		ОпСотр, 
		ОпТипSKL, 
		НашаФирма, 
		ОпСтоимИтог, 
		ОпКолИтог, 
		dst, 
		КодТКА, 
		ВесБрутто, 
		ВесНетто, 
		СуммаЦенаУчет, 
		КодТТН, 
		АдресДоставки, 
		Отгрузка, 
		SippingGradientID, 
		Объем, 
		ЦенаТранспОтОбъема, 
		ЦенаТранспОтВеса, 
		ТТН_Адрес, 
		ExistTTN, 
		ДоляТранРсхОбъем, 
		ДоляТранРсхВеса, 
		CASE WHEN ДоляТранРсхОбъем <= 0.15 AND ExistTTN = 1 THEN 0 WHEN ДоляТранРсхОбъем > 0.15 AND 
		ExistTTN = 1 THEN 1 ELSE NULL END AS 
		        ГрадацияТранРсхОбъемИд, 
		CASE WHEN ДоляТранРсхВеса <= 0.15 AND 
		ExistTTN = 1 THEN 0 WHEN ДоляТранРсхВеса > 0.15 AND ExistTTN = 1 THEN 1 ELSE NULL END AS 
		        ГрадацияТранРсхВесаИд, 
		ЗаводскаяУпаковка, 
		NULL AS КолДней, 
		NULL AS СуммаОстатков, 
		CASE WHEN ОставшийсяСрокГодности >= 10 THEN 10 ELSE ОставшийсяСрокГодности END AS ОставшийсяСрокГодности,
		РасхНаВет, 
		КолВетТов, 
		CAST(NULL AS float) AS zero, 
		АкцияКод, 
		Бонус_1, 
		Бонус_2, 
		Бонус_3, 
		Возврат_ТР, 
		Возврат_Эксп,  	
		Транс_Расх,
		[СуммаПрогноз_Акции_НДС], 
		[СуммаПрогноз_НДС], 
		[СуммаПрогноз_Акции], 
		[СуммаПрогноз], 
		[СуммаПрогнозМлн], 
		[СуммаПрогнозМлн1], 
		Прогноз_Кол, 
		Прогноз_ЦенаУчет, 
		Прогноз_ЦенаУчет_безНДС,
		Вычерк,
		ВычеркСтоим,
        АвтокодМЛ
FROM T
);
GO
/****** Object:  StoredProcedure [cube].[f_cube_bufferV1_20150218]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Batch submitted through debugger: SQLQuery3.sql|7|0|C:\Users\VGlukhov\AppData\Local\Temp\4\~vs57E6.sql


-- =============================================
-- Author:		Глухов ВЮ
-- Create date: 03-02-2015
-- Description:	Формируем записи для буферной таблицы для кубов
-- Замечание: 
-- =============================================
CREATE PROCEDURE [cube].[f_cube_bufferV1_20150218] 
 	@startdate date = NULL,
	@enddate date = NULL
AS
BEGIN
/*DECLARE 	@startdate date ,
	@enddate date 
	*/
	SET NOCOUNT ON;

	if(@enddate is NULL)
		set @enddate = DATEADD(DAY,0,cast(GETDATE() as date))
	
	if(@startdate is NULL)
		set @startdate = DATEADD(DAY,-25,cast(GETDATE() as date))
PRINT @startdate
PRINT @enddate

-- 20150205 должно и так работать		delete FROM cube.f_cube_buffer 
--		 WHERE ОпДатаРасч BETWEEN @startdate and @EndDate;
DROP TABLE [A_Daily_Src_t]

SELECT * 
INTO [A_Daily_Src_t]
FROM dbo.f_Cube_Hist_skl_to_buff(@startdate,@enddate)
CREATE NONCLUSTERED INDEX [IX_f_cube_buffer_4] ON [A_Daily_Src_t]
(
	[ОпНаклКод] ASC,
	[ОпТовНом] ASC,
	[ОпКодТов] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]

/*
DROP TABLE A_Daily_Src_t
SELECT * INTO A_Daily_Src_t FROM #Src_t
CREATE NONCLUSTERED INDEX [IX_f_cube_buffer_4] ON A_Daily_Src_t
(
	[ОпНаклКод] ASC,
	[ОпТовНом] ASC,
	[ОпКодТов] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
*/
-- удаляем лишние записи 20150210
DELETE
  FROM [PR_Euras].[cube].[f_cube_buffer]
    --where ОпДатаРасч between '20150123' and '20150212'
    where ОпДатаРасч between @startdate and @enddate
    
  --ОпНаклКод NOT IN (SELECT ОпНаклКод FROM dbo.LIST_SKL)  ;

MERGE cube.f_cube_buffer TRG USING
(SELECT DISTINCT * FROM [A_Daily_Src_t]) SRC
ON TRG.ОпНаклКод = SRC.ОпНаклКод AND TRG.ОпТовНом=SRC.ОпТовНом AND TRG.ОпКодТов=SRC.ОпКодТов
WHEN MATCHED THEN UPDATE SET
            TRG.ОпКод = SRC.ОпКод 
           ,TRG.ОпКодТов = SRC.ОпКодТов
           ,TRG.ОпКол = SRC.ОпКол
           ,TRG.ОпТип = SRC.ОпТип
           ,TRG.ОпЦена = SRC.ОпЦена
           ,TRG.ОпКодУпак = SRC.ОпКодУпак
           ,TRG.ОпСкл = SRC.ОпСкл
           ,TRG.ОпВозвр = SRC.ОпВозвр
           ,TRG.ОпНакл = SRC.ОпНакл
           ,TRG.ОпНаклКод = SRC.ОпНаклКод
           ,TRG.ОпТипКлн = SRC.ОпТипКлн
           ,TRG.ОпТовНом = SRC.ОпТовНом
           ,TRG.ОпТипКлн_INT = SRC.ОпТипКлн_INT
           ,TRG.ОпСтоим = SRC.ОпСтоим
           ,TRG.ПолнАдресДоставки = SRC.ПолнАдресДоставки
           ,TRG.ОпКлн = SRC.ОпКлн
           ,TRG.ОпДатаРасч = SRC.ОпДатаРасч
           ,TRG.КодАдрДоставки = SRC.КодАдрДоставки
           ,TRG.ОпСотр = SRC.ОпСотр
           ,TRG.ОпТипSKL = SRC.ОпТипSKL
           ,TRG.НашаФирма = SRC.НашаФирма
           ,TRG.ОпСтоимИтог = SRC.ОпСтоимИтог
           ,TRG.ОпКолИтог = SRC.ОпКолИтог
           ,TRG.dst = SRC.dst
           ,TRG.КодТКА = SRC.КодТКА
           ,TRG.ВесБрутто = SRC.ВесБрутто
           ,TRG.ВесНетто = SRC.ВесНетто
           ,TRG.СуммаЦенаУчет = SRC.СуммаЦенаУчет
           ,TRG.КодТТН = SRC.КодТТН
           ,TRG.АдресДоставки = SRC.АдресДоставки
           ,TRG.Отгрузка = SRC.Отгрузка
           ,TRG.SippingGradientID = SRC.SippingGradientID
           ,TRG.Объем = SRC.Объем
           ,TRG.ЦенаТранспОтОбъема = SRC.ЦенаТранспОтОбъема
           ,TRG.ЦенаТранспОтВеса = SRC.ЦенаТранспОтВеса
           ,TRG.ТТН_Адрес = SRC.ТТН_Адрес
           ,TRG.ExistTTN = SRC.ExistTTN
           ,TRG.ДоляТранРсхОбъем = SRC.ДоляТранРсхОбъем
           ,TRG.ДоляТранРсхВеса = SRC.ДоляТранРсхВеса
           ,TRG.ГрадацияТранРсхОбъемИд = SRC.ГрадацияТранРсхОбъемИд
           ,TRG.ГрадацияТранРсхВесаИд = SRC.ГрадацияТранРсхВесаИд
           ,TRG.ЗаводскаяУпаковка = SRC.ЗаводскаяУпаковка
           ,TRG.КолДней = SRC.КолДней
           ,TRG.СуммаОстатков = SRC.СуммаОстатков
           ,TRG.ОставшийсяСрокГодности = SRC.ОставшийсяСрокГодности
           ,TRG.РасхНаВет = SRC.РасхНаВет
           ,TRG.КолВетТов = SRC.КолВетТов
           ,TRG.zero = SRC.zero
           ,TRG.АкцияКод = SRC.АкцияКод
           ,TRG.Бонус_1 = SRC.Бонус_1
           ,TRG.Бонус_2 = SRC.Бонус_2
           ,TRG.Бонус_3 = SRC.Бонус_3
           ,TRG.Возврат_ТР = SRC.Возврат_ТР
           ,TRG.Возврат_Эксп = SRC.Возврат_Эксп
           ,TRG.Транс_Расх = SRC.Транс_Расх
           ,TRG.СуммаПрогноз_Акции_НДС = SRC.СуммаПрогноз_Акции_НДС
           ,TRG.СуммаПрогноз_НДС = SRC.СуммаПрогноз_НДС
           ,TRG.СуммаПрогноз_Акции = SRC.СуммаПрогноз_Акции
           ,TRG.СуммаПрогноз = SRC.СуммаПрогноз
           ,TRG.СуммаПрогнозМлн = SRC.СуммаПрогнозМлн
           ,TRG.СуммаПрогнозМлн1 = SRC.СуммаПрогнозМлн1
           ,TRG.Прогноз_Кол = SRC.Прогноз_Кол
           ,TRG.Прогноз_ЦенаУчет = SRC.Прогноз_ЦенаУчет
           ,TRG.Прогноз_ЦенаУчет_безНДС = SRC.Прогноз_ЦенаУчет_безНДС
           ,TRG.Вычерк = SRC.Вычерк
           ,TRG.ВычеркСтоим = SRC.ВычеркСтоим
           ,TRG.АвтокодМЛ = SRC.АвтокодМЛ
WHEN NOT MATCHED THEN 
INSERT ([ОпКод]
           ,[ОпКодТов]
           ,[ОпКол]
           ,[ОпТип]
           ,[ОпЦена]
           ,[ОпКодУпак]
           ,[ОпСкл]
           ,[ОпВозвр]
           ,[ОпНакл]
           ,[ОпНаклКод]
           ,[ОпТипКлн]
           ,[ОпТовНом]
           ,[ОпТипКлн_INT]
           ,[ОпСтоим]
           ,[ПолнАдресДоставки]
           ,[ОпКлн]
           ,[ОпДатаРасч]
           ,[КодАдрДоставки]
           ,[ОпСотр]
           ,[ОпТипSKL]
           ,[НашаФирма]
           ,[ОпСтоимИтог]
           ,[ОпКолИтог]
           ,[dst]
           ,[КодТКА]
           ,[ВесБрутто]
           ,[ВесНетто]
           ,[СуммаЦенаУчет]
           ,[КодТТН]
           ,[АдресДоставки]
           ,[Отгрузка]
           ,[SippingGradientID]
           ,[Объем]
           ,[ЦенаТранспОтОбъема]
           ,[ЦенаТранспОтВеса]
           ,[ТТН_Адрес]
           ,[ExistTTN]
           ,[ДоляТранРсхОбъем]
           ,[ДоляТранРсхВеса]
           ,[ГрадацияТранРсхОбъемИд]
           ,[ГрадацияТранРсхВесаИд]
           ,[ЗаводскаяУпаковка]
           ,[КолДней]
           ,[СуммаОстатков]
           ,[ОставшийсяСрокГодности]
           ,[РасхНаВет]
           ,[КолВетТов]
           ,[zero]
           ,[АкцияКод]
           ,[Бонус_1]
           ,[Бонус_2]
           ,[Бонус_3]
           ,[Возврат_ТР]
           ,[Возврат_Эксп]
           ,[Транс_Расх]
           ,[СуммаПрогноз_Акции_НДС]
           ,[СуммаПрогноз_НДС]
           ,[СуммаПрогноз_Акции]
           ,[СуммаПрогноз]
           ,[СуммаПрогнозМлн]
           ,[СуммаПрогнозМлн1]
           ,[Прогноз_Кол]
           ,[Прогноз_ЦенаУчет]
           ,[Прогноз_ЦенаУчет_безНДС]
           ,[Вычерк]
           ,[ВычеркСтоим]
           ,[АвтокодМЛ])
     VALUES
           (ОпКод 
           ,ОпКодТов
           ,ОпКол
           ,ОпТип
           ,ОпЦена
           ,ОпКодУпак
           ,ОпСкл
           ,ОпВозвр
           ,ОпНакл
           ,ОпНаклКод
           ,ОпТипКлн
           ,ОпТовНом
           ,ОпТипКлн_INT
           ,ОпСтоим
           ,ПолнАдресДоставки
           ,ОпКлн
           ,ОпДатаРасч
           ,КодАдрДоставки
           ,ОпСотр
           ,ОпТипSKL
           ,НашаФирма
           ,ОпСтоимИтог
           ,ОпКолИтог
           ,dst
           ,КодТКА
           ,ВесБрутто
           ,ВесНетто
           ,СуммаЦенаУчет
           ,КодТТН
           ,АдресДоставки
           ,Отгрузка
           ,SippingGradientID
           ,Объем
           ,ЦенаТранспОтОбъема
           ,ЦенаТранспОтВеса
           ,ТТН_Адрес
           ,ExistTTN
           ,ДоляТранРсхОбъем
           ,ДоляТранРсхВеса
           ,ГрадацияТранРсхОбъемИд
           ,ГрадацияТранРсхВесаИд
           ,ЗаводскаяУпаковка
           ,КолДней
           ,СуммаОстатков
           ,ОставшийсяСрокГодности
           ,РасхНаВет
           ,КолВетТов
           ,zero
           ,АкцияКод
           ,Бонус_1
           ,Бонус_2
           ,Бонус_3
           ,Возврат_ТР
           ,Возврат_Эксп
           ,Транс_Расх
           ,СуммаПрогноз_Акции_НДС
           ,СуммаПрогноз_НДС
           ,СуммаПрогноз_Акции
           ,СуммаПрогноз
           ,СуммаПрогнозМлн
           ,СуммаПрогнозМлн1
           ,Прогноз_Кол
           ,Прогноз_ЦенаУчет
           ,Прогноз_ЦенаУчет_безНДС
           ,Вычерк
           ,ВычеркСтоим
           ,АвтокодМЛ);



-- корректируем даты 20150210
/*
UPDATE fb
SET fb.ОпДатаРасч=ls.ОпДатаРасч 
FROM [cube].[f_cube_buffer] fb
INNER JOIN list_skl ls ON fb.ОпНаклКод = ls.ОпНаклКод
WHERE fb.ОпДатаРасч <> ls.ОпДатаРасч


SELECT * 
INTO f_cube_buffer
FROM dbo.f_Cube_Hist_skl('20150101','20150228')

SELECT * FROM dbo.f_cube_buffer WHERE ОпДатаРасч BETWEEN '20150101' AND '20150228'		 
	*/	
	--DROP TABLE #Src_t
END
GO
/****** Object:  StoredProcedure [dbo].[Tbl_Price]    Script Date: 08/10/2015 12:56:02 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Tbl_Price] AS
create table Tbl_Price (
[ТовКод] nvarchar (30) not null,
[ГруппаЦен] bigint (8) not null,
[Цена] float (8) not null
)
INSERT INTO Tbl_Price
SELECT     dbo.M_RealPrice1.ТовКод, 
dbo.Vw_KPK_manager.КлнКод AS ГруппаЦен, 
dbo.M_RealPrice1.РеальнаяЦена AS Цена
FROM         dbo.M_RealPrice1 RIGHT OUTER JOIN
                      dbo.Vw_KPK_manager ON dbo.M_RealPrice1.КлнКод = dbo.Vw_KPK_manager.КлнКод
WHERE     (dbo.M_RealPrice1.РеальнаяЦена <> 0) AND (dbo.Vw_KPK_manager.КлнКод IS NOT NULL)
GO
/****** Object:  Default [DF__DUP_KEYS__dup_Da__6F23914B]    Script Date: 08/10/2015 12:55:53 ******/
ALTER TABLE [dbo].[DUP_KEYS] ADD  DEFAULT (getdate()) FOR [dup_Date]
GO
/****** Object:  Default [DF_Kontur_error_data]    Script Date: 08/10/2015 12:55:56 ******/
ALTER TABLE [edi].[Kontur_error] ADD  CONSTRAINT [DF_Kontur_error_data]  DEFAULT (CONVERT([smalldatetime],getdate(),(0))) FOR [data]
GO
/****** Object:  Default [DF_Kontur_stamp]    Script Date: 08/10/2015 12:55:56 ******/
ALTER TABLE [edi].[Kontur] ADD  CONSTRAINT [DF_Kontur_stamp]  DEFAULT (getdate()) FOR [stamp]
GO
/****** Object:  Default [DF_Kontur_desadv_out]    Script Date: 08/10/2015 12:55:56 ******/
ALTER TABLE [edi].[Kontur] ADD  CONSTRAINT [DF_Kontur_desadv_out]  DEFAULT ((0)) FOR [desadv_out]
GO
/****** Object:  Default [DF_Kontur_povt_export]    Script Date: 08/10/2015 12:55:56 ******/
ALTER TABLE [edi].[Kontur] ADD  CONSTRAINT [DF_Kontur_povt_export]  DEFAULT ((0)) FOR [povt_export]
GO
/****** Object:  Default [DF_Kln_GLN_Stamp_]    Script Date: 08/10/2015 12:55:56 ******/
ALTER TABLE [edi].[Kln_GLN] ADD  CONSTRAINT [DF_Kln_GLN_Stamp_]  DEFAULT (getdate()) FOR [Stamp_]
GO
/****** Object:  Default [DF_AutoLoadReportTxtLog_Обработана строка]    Script Date: 08/10/2015 12:55:56 ******/
ALTER TABLE [dbo].[AutoLoadReportTxtLog] ADD  CONSTRAINT [DF_AutoLoadReportTxtLog_Обработана строка]  DEFAULT ((0)) FOR [Обработана строка]
GO
/****** Object:  Default [DF_AutoLoadReportTxtLog_dt]    Script Date: 08/10/2015 12:55:56 ******/
ALTER TABLE [dbo].[AutoLoadReportTxtLog] ADD  CONSTRAINT [DF_AutoLoadReportTxtLog_dt]  DEFAULT (getdate()) FOR [dt]
GO
/****** Object:  Default [DF_ADK_GLN_Stamp_]    Script Date: 08/10/2015 12:55:56 ******/
ALTER TABLE [edi].[ADK_GLN] ADD  CONSTRAINT [DF_ADK_GLN_Stamp_]  DEFAULT (getdate()) FOR [Stamp_]
GO
/****** Object:  Default [DF_CD_DolgEvent_DateTime]    Script Date: 08/10/2015 12:55:56 ******/
ALTER TABLE [dbo].[CD_DolgEvent] ADD  CONSTRAINT [DF_CD_DolgEvent_DateTime]  DEFAULT (getdate()) FOR [DateTime]
GO
/****** Object:  Default [DF_CD_DolgEvent_Login]    Script Date: 08/10/2015 12:55:56 ******/
ALTER TABLE [dbo].[CD_DolgEvent] ADD  CONSTRAINT [DF_CD_DolgEvent_Login]  DEFAULT (suser_sname()) FOR [Login]
GO
/****** Object:  Default [DF_KorusMessages_stamp]    Script Date: 08/10/2015 12:55:57 ******/
ALTER TABLE [edi].[KorusMessages] ADD  CONSTRAINT [DF_KorusMessages_stamp]  DEFAULT (getdate()) FOR [stamp]
GO
/****** Object:  Default [DF_Orders_Дата получения заказа]    Script Date: 08/10/2015 12:55:58 ******/
ALTER TABLE [WBD].[Orders] ADD  CONSTRAINT [DF_Orders_Дата получения заказа]  DEFAULT (getdate()) FOR [Дата получения заказа]
GO
/****** Object:  Default [DF_Orders_ДатаВремяДобавленияЗаписи]    Script Date: 08/10/2015 12:55:58 ******/
ALTER TABLE [WBD].[Orders] ADD  CONSTRAINT [DF_Orders_ДатаВремяДобавленияЗаписи]  DEFAULT (getdate()) FOR [ДатаВремяДобавленияЗаписи]
GO
/****** Object:  ForeignKey [FK_OrderAndReturn_Document]    Script Date: 08/10/2015 12:55:58 ******/
ALTER TABLE [xmt].[OrderAndReturn]  WITH CHECK ADD  CONSTRAINT [FK_OrderAndReturn_Document] FOREIGN KEY([documentId])
REFERENCES [xmt].[Document] ([documentId])
GO
ALTER TABLE [xmt].[OrderAndReturn] CHECK CONSTRAINT [FK_OrderAndReturn_Document]
GO
/****** Object:  ForeignKey [FK_CheckListItem_CheckList]    Script Date: 08/10/2015 12:55:58 ******/
ALTER TABLE [xmt].[CheckListItem]  WITH CHECK ADD  CONSTRAINT [FK_CheckListItem_CheckList] FOREIGN KEY([CheckListId])
REFERENCES [xmt].[CheckList] ([id])
GO
ALTER TABLE [xmt].[CheckListItem] CHECK CONSTRAINT [FK_CheckListItem_CheckList]
GO
/****** Object:  ForeignKey [FK_Channel_SalesAgent]    Script Date: 08/10/2015 12:55:58 ******/
ALTER TABLE [xmt].[Channel]  WITH CHECK ADD  CONSTRAINT [FK_Channel_SalesAgent] FOREIGN KEY([salesAgent])
REFERENCES [xmt].[SalesAgent] ([salesAgentId])
GO
ALTER TABLE [xmt].[Channel] CHECK CONSTRAINT [FK_Channel_SalesAgent]
GO
/****** Object:  ForeignKey [FK_hist_pcn_list_pcn]    Script Date: 08/10/2015 12:56:00 ******/
ALTER TABLE [dbo].[hist_pcn]  WITH CHECK ADD  CONSTRAINT [FK_hist_pcn_list_pcn] FOREIGN KEY([c2_pcn])
REFERENCES [dbo].[list_pcn] ([pc1_pcn])
GO
ALTER TABLE [dbo].[hist_pcn] CHECK CONSTRAINT [FK_hist_pcn_list_pcn]
GO
/****** Object:  ForeignKey [FK_SoftMatrixWare_SoftMatrix]    Script Date: 08/10/2015 12:56:00 ******/
ALTER TABLE [xmt].[SoftMatrixWare]  WITH CHECK ADD  CONSTRAINT [FK_SoftMatrixWare_SoftMatrix] FOREIGN KEY([SoftMatrixId])
REFERENCES [xmt].[SoftMatrix] ([SoftMatrixId])
GO
ALTER TABLE [xmt].[SoftMatrixWare] CHECK CONSTRAINT [FK_SoftMatrixWare_SoftMatrix]
GO
/****** Object:  ForeignKey [FK_SoftMatrixRetail_SoftMatrix]    Script Date: 08/10/2015 12:56:00 ******/
ALTER TABLE [xmt].[SoftMatrixRetail]  WITH CHECK ADD  CONSTRAINT [FK_SoftMatrixRetail_SoftMatrix] FOREIGN KEY([SoftMatrixId])
REFERENCES [xmt].[SoftMatrix] ([SoftMatrixId])
GO
ALTER TABLE [xmt].[SoftMatrixRetail] CHECK CONSTRAINT [FK_SoftMatrixRetail_SoftMatrix]
GO
/****** Object:  ForeignKey [FK_SaleLimitationMatrix_RetailCategory]    Script Date: 08/10/2015 12:56:00 ******/
ALTER TABLE [xmt].[SaleLimitationMatrix]  WITH CHECK ADD  CONSTRAINT [FK_SaleLimitationMatrix_RetailCategory] FOREIGN KEY([retailCategory])
REFERENCES [xmt].[RetailCategory] ([retailCategoryId])
GO
ALTER TABLE [xmt].[SaleLimitationMatrix] CHECK CONSTRAINT [FK_SaleLimitationMatrix_RetailCategory]
GO
/****** Object:  ForeignKey [FK_SaleLimitationMatrix_Ware]    Script Date: 08/10/2015 12:56:00 ******/
ALTER TABLE [xmt].[SaleLimitationMatrix]  WITH CHECK ADD  CONSTRAINT [FK_SaleLimitationMatrix_Ware] FOREIGN KEY([ware])
REFERENCES [xmt].[Ware] ([wareId])
GO
ALTER TABLE [xmt].[SaleLimitationMatrix] CHECK CONSTRAINT [FK_SaleLimitationMatrix_Ware]
GO
/****** Object:  ForeignKey [FK_Retail_RetailCategory]    Script Date: 08/10/2015 12:56:00 ******/
ALTER TABLE [xmt].[Retail]  WITH CHECK ADD  CONSTRAINT [FK_Retail_RetailCategory] FOREIGN KEY([category])
REFERENCES [xmt].[RetailCategory] ([retailCategoryId])
GO
ALTER TABLE [xmt].[Retail] CHECK CONSTRAINT [FK_Retail_RetailCategory]
GO
/****** Object:  ForeignKey [FK_UserReports_M_USER]    Script Date: 08/10/2015 12:56:00 ******/
ALTER TABLE [dbo].[UserReports]  WITH CHECK ADD  CONSTRAINT [FK_UserReports_M_USER] FOREIGN KEY([UserID])
REFERENCES [dbo].[M_USER] ([ПользКод])
GO
ALTER TABLE [dbo].[UserReports] CHECK CONSTRAINT [FK_UserReports_M_USER]
GO
/****** Object:  ForeignKey [FK_UserReports_Reports]    Script Date: 08/10/2015 12:56:00 ******/
ALTER TABLE [dbo].[UserReports]  WITH CHECK ADD  CONSTRAINT [FK_UserReports_Reports] FOREIGN KEY([ReportID])
REFERENCES [dbo].[Reports] ([ReportID])
GO
ALTER TABLE [dbo].[UserReports] CHECK CONSTRAINT [FK_UserReports_Reports]
GO
/****** Object:  ForeignKey [FK_RetailCheckList_CheckList]    Script Date: 08/10/2015 12:56:01 ******/
ALTER TABLE [xmt].[RetailCheckList]  WITH CHECK ADD  CONSTRAINT [FK_RetailCheckList_CheckList] FOREIGN KEY([checkList])
REFERENCES [xmt].[CheckList] ([id])
GO
ALTER TABLE [xmt].[RetailCheckList] CHECK CONSTRAINT [FK_RetailCheckList_CheckList]
GO
/****** Object:  ForeignKey [FK_RetailCheckList_Retail]    Script Date: 08/10/2015 12:56:01 ******/
ALTER TABLE [xmt].[RetailCheckList]  WITH CHECK ADD  CONSTRAINT [FK_RetailCheckList_Retail] FOREIGN KEY([retail])
REFERENCES [xmt].[Retail] ([retailId])
GO
ALTER TABLE [xmt].[RetailCheckList] CHECK CONSTRAINT [FK_RetailCheckList_Retail]
GO
/****** Object:  ForeignKey [FK_SalesAgentPlan_Retail]    Script Date: 08/10/2015 12:56:01 ******/
ALTER TABLE [xmt].[SalesAgentPlan]  WITH CHECK ADD  CONSTRAINT [FK_SalesAgentPlan_Retail] FOREIGN KEY([retail])
REFERENCES [xmt].[Retail] ([retailId])
GO
ALTER TABLE [xmt].[SalesAgentPlan] CHECK CONSTRAINT [FK_SalesAgentPlan_Retail]
GO
/****** Object:  ForeignKey [FK_SalesAgentPlan_SalesAgent]    Script Date: 08/10/2015 12:56:01 ******/
ALTER TABLE [xmt].[SalesAgentPlan]  WITH CHECK ADD  CONSTRAINT [FK_SalesAgentPlan_SalesAgent] FOREIGN KEY([salesAgent])
REFERENCES [xmt].[SalesAgent] ([salesAgentId])
GO
ALTER TABLE [xmt].[SalesAgentPlan] CHECK CONSTRAINT [FK_SalesAgentPlan_SalesAgent]
GO
/****** Object:  ForeignKey [FK_SalesAgentRetail_Retail]    Script Date: 08/10/2015 12:56:01 ******/
ALTER TABLE [xmt].[SalesAgentRetail]  WITH CHECK ADD  CONSTRAINT [FK_SalesAgentRetail_Retail] FOREIGN KEY([retail])
REFERENCES [xmt].[Retail] ([retailId])
GO
ALTER TABLE [xmt].[SalesAgentRetail] CHECK CONSTRAINT [FK_SalesAgentRetail_Retail]
GO
/****** Object:  ForeignKey [FK_SalesAgentRetail_SalesAgent]    Script Date: 08/10/2015 12:56:01 ******/
ALTER TABLE [xmt].[SalesAgentRetail]  WITH CHECK ADD  CONSTRAINT [FK_SalesAgentRetail_SalesAgent] FOREIGN KEY([salesAgent])
REFERENCES [xmt].[SalesAgent] ([salesAgentId])
GO
ALTER TABLE [xmt].[SalesAgentRetail] CHECK CONSTRAINT [FK_SalesAgentRetail_SalesAgent]
GO
/****** Object:  ForeignKey [FK_ChannelItem_Channel]    Script Date: 08/10/2015 12:56:02 ******/
ALTER TABLE [xmt].[ChannelItem]  WITH CHECK ADD  CONSTRAINT [FK_ChannelItem_Channel] FOREIGN KEY([channelId])
REFERENCES [xmt].[Channel] ([id])
GO
ALTER TABLE [xmt].[ChannelItem] CHECK CONSTRAINT [FK_ChannelItem_Channel]
GO
